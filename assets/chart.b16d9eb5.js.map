{"version":3,"file":"chart.b16d9eb5.js","sources":["../../node_modules/chart.js/dist/chunks/helpers.segment.mjs","../../node_modules/chart.js/dist/chart.mjs"],"sourcesContent":["/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst keyResolvers = {\n  '': v => v,\n  x: o => o.x,\n  y: o => o.y\n};\nfunction resolveObjectKey(obj, key) {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\nfunction _getKeyResolver(key) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\nfunction _splitKey(key) {\n  const parts = key.split('.');\n  const keys = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value, last) =>\n  _lookup(table, value, last\n    ? index => table[index][key] <= value\n    : index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\nfunction _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nfunction isPatternOrGradient(value) {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n  return false;\n}\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\nfunction drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(e, canvas) {\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  if ('native' in evt) {\n    return evt;\n  }\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { _isPointInArea as $, _factorize as A, finiteOrDefault as B, callback as C, _addGrace as D, _limitValue as E, toDegrees as F, _measureText as G, HALF_PI as H, _int16Range as I, _alignPixel as J, toPadding as K, clipArea as L, renderText as M, unclipArea as N, toFont as O, PI as P, each as Q, _toLeftRightCenter as R, _alignStartEnd as S, TAU as T, overrides as U, merge as V, _capitalize as W, getRelativePosition as X, _rlookupByKey as Y, _lookupByKey as Z, _arrayUnique as _, resolve as a, toLineHeight as a$, getAngleFromPoint as a0, getMaximumSize as a1, _getParentNode as a2, readUsedSize as a3, throttled as a4, supportsEventListenerOptions as a5, _isDomSupported as a6, descriptors as a7, isFunction as a8, _attachContext as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, noop as aF, distanceBetweenPoints as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, _longestText as aM, _filterBetween as aN, _lookup as aO, isPatternOrGradient as aP, getHoverColor as aQ, clone$1 as aR, _merger as aS, _mergerIf as aT, _deprecated as aU, _splitKey as aV, toFontString as aW, splineCurve as aX, splineCurveMonotone as aY, getStyle as aZ, fontString as a_, _createResolver as aa, _descriptors as ab, mergeIf as ac, uid as ad, debounce as ae, retinaScale as af, clearCanvas as ag, setsEqual as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _readValueToProps as al, _updateBezierControlPoints as am, _computeSegments as an, _boundSegments as ao, _steppedInterpolation as ap, _bezierInterpolation as aq, _pointInLine as ar, _steppedLineTo as as, _bezierCurveTo as at, drawPoint as au, addRoundedRectPath as av, toTRBL as aw, toTRBLCorners as ax, _boundSegment as ay, _normalizeAngle as az, isArray as b, PITAU as b0, INFINITY as b1, RAD_PER_DEG as b2, QUARTER_PI as b3, TWO_THIRDS_PI as b4, _angleDiff as b5, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, createContext as h, isObject as i, defined as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, log10 as z };\n","/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as log10, A as _factorize, B as finiteOrDefault, C as callback, D as _addGrace, E as _limitValue, F as toDegrees, G as _measureText, I as _int16Range, J as _alignPixel, K as toPadding, L as clipArea, M as renderText, N as unclipArea, O as toFont, Q as each, R as _toLeftRightCenter, S as _alignStartEnd, U as overrides, V as merge, W as _capitalize, X as getRelativePosition, Y as _rlookupByKey, Z as _lookupByKey, $ as _isPointInArea, a0 as getAngleFromPoint, a1 as getMaximumSize, a2 as _getParentNode, a3 as readUsedSize, a4 as throttled, a5 as supportsEventListenerOptions, a6 as _isDomSupported, a7 as descriptors, a8 as isFunction, a9 as _attachContext, aa as _createResolver, ab as _descriptors, ac as mergeIf, ad as uid, ae as debounce, af as retinaScale, ag as clearCanvas, ah as setsEqual, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as noop, aG as distanceBetweenPoints, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as _longestText, aN as _filterBetween, aO as _lookup } from './chunks/helpers.segment.mjs';\nexport { d as defaults } from './chunks/helpers.segment.mjs';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndex.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass ScatterController extends DatasetController {\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    if (this.options.showLine) {\n      const {dataset: line, _dataset} = meta;\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n    this.updateElements(points, start, count, mode);\n  }\n  addElements() {\n    const {showLine} = this.options;\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = registry.getElement('line');\n    }\n    super.addElements();\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  init(chartOptions) {}\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n  return {plugins, localIds};\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.9.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  if (circular) {\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    adapter.init(opts);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"names":["noop","uid","id","isNullOrUndef","value","isArray","Array","type","Object","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone$1","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","v","x","o","y","resolveObjectKey","obj","parts","split","tmp","part","push","_splitKey","_getKeyResolver","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","range","roundedRange","round","almostEquals","niceRange","pow","floor","fraction","isNumber","n","isNaN","epsilon","abs","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","e","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","index2","mid","hi","lo","_lookupByKey","last","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set2","Set","add","from","requestAnimFrame","window","callback2","requestAnimationFrame","throttled","updateFn","updateArgs","args2","ticking","rest","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","[object Object]","easeInBounce","easeOutBounce","m","d","easeInOutBounce","lim","l","h","p2b","n2b","b2n","n2p","map$1","0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","c","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","exec","p1","p2","hwb2rgb","hsv2rgb","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","modHSL","ratio","clone","proto","fromObject","input","functionParse","rgbParse","Color","ret","this","_rgb","_valid","valid","hslString","color2","weight","c1","c2","w2","w1","rgb1","rgb2","interpolate","val","deg","rotate","index_esm","isPatternOrGradient","color","getHoverColor","saturate","darken","overrides","descriptors","getScope$1","node","set","root","scope","values","defaults","_descriptors2","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","chart","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","_scriptable","startsWith","_indexable","_fallback","_measureText","data","gc","longest","string","textWidth","measureText","width","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","left","right","top","bottom","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","text","opts","lines","strokeWidth","strokeColor","line","translation","fillStyle","textAlign","textBaseline","setRenderOpts","strokeStyle","lineWidth","strokeText","maxWidth","fillText","decorateText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","override","Proxy","deleteProperty","_keys","get","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","includes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","_descriptors","setContext","receiver","descriptors2","isScriptable","Error","join","delete","_resolveScriptable","isIndexable","arr","filter","resolver","_resolveArray","_resolveWithContext","allKeys","configurable","defaults2","scriptable","indexable","_allKeys","constructor","resolve2","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","current","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","delta","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","loop","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","evt","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","getRtlAdapter","rtl","rectX","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","bounds","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","animator","_request","_charts","_running","_lastDate","anims","date","callbacks","numSteps","duration","initial","currentStep","_update","_refresh","Date","now","remaining","running","draw2","_active","_total","tick","pop","draw","_notify","charts","complete","progress","event","cb","_getAnims","reduce","acc","cur","_duration","cancel","interpolators","boolean","from2","to2","factor","c0","mix","number","Animation","cfg","currentValue","_fn","_easing","easing","_start","delay","_loop","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","res","rej","resolved","method","animationOptions","colors","properties","numbers","active","resize","show","animations","visible","hide","Animations","config","_properties","configure","animatedProps","getOwnPropertyNames","option","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","wait","all","awaitAll","then","_animateOptions","update","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","scales2","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","_stacked","addElements","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","_dataCheck","datasetElementType","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","parsedValue","NaN","canStack","otherScale","_getOtherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","disabled","toClip","defaultClip","getMaxOverflow","elements2","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","names2","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","sharedOptions","_animationsDisabled","firstOpts","previouslySharedOptions","getSharedOptions","includeOptions","updateSharedOptions","_resolveAnimations","_setStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_dataChanges","arguments","_sync","newCount","computeMinSampleSize","_cache","$bar","visibleMetas","concat","getAllParsedValues","sort","getAllScaleValues","curr","_length","updateMinAndPrev","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","super","bars","reset","getBasePixel","isHorizontal","ruler","_getRuler","_getSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","updateElement","grouped","skipNull","_getStacks","pixels","barThickness","_startPixel","_endPixel","stackCount","_getStackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","_getStackIndex","rects","_index_","offset","grid","_value_","beginAtZero","BubbleController","tooltip","title","DoughnutController","innerRadius","outerRadius","getter","i2","circumference","isDatasetVisible","_getRotation","_getCircumference","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","_getRotationExtents","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","stop","border","lastPoint","updateControlPoints","PolarAreaController","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","Element","useFinalPosition","getProps","final","defaultRoutes","formatters","tickValue","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","numeric","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","padding","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","minor","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex2","lineValue","getTickMarkLength","getTitleHeight","titleAlign","position","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_reversePixels","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getMinMax","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","change","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","fullSize","generateTickLabels","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getBaseValue","createTickContext","optionTicks","rot","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","backdrop","tickTextAlign","labelPadding","fillRect","findIndex","_computeGridLineItems","drawLine","setLineDash","lineDashOffset","lastLineWidth","_computeLabelArea","_computeLabelItems","titleX","titleY","titleArgs","drawBackground","drawGrid","drawTitle","drawLabels","tz","z","gz","getSortedVisibleDatasetMetas","axisID","fontSize","TypedRegistry","isPrototypeOf","parentScope","isIChartComponent","register","itemDefaults","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","registry","controllers","_typedRegistries","_each","_get","typedRegistry","arg","reg","_getRegistryForType","isForType","_exec","itemReg","registry2","component","camelMethod","ScatterController","getElement","__proto__","abstract","DateAdapter","chartOptions","timestamp","amount","unit","weekday","members","adapters","_date","binarySearch","metaset","lookupMethod","getRange","evaluateInteractionItems","handler","getIntersectItems","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","inRange2","getCenterPoint","getNearestItems","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts2","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","positions2","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","autoPadding","layouts","_layers","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","handleMaxPadding","BasePlatform","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","PluginService","_init","hook","_createDescriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","plugins2","localIds","getPlugin","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","animationOptions2","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","userConfig","initialCanvas","existingChart","chartOptionScopes","OffscreenCanvas","_detectPlatform","updateConfig","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","listen","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","getScale","init","hasUpdated","addBox","_destroyDatasetMeta","newControllers","_removeUnreferencedMetasets","order","updateIndex","ControllerClass","getController","_updateMetasets","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","removeBox","ensureScalesHaveIDs","buildOrUpdateScales","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","setDatasetVisibility","_updateVisibility","_destroy","remove","_stop","releaseContext","toDataURL","bindUserEvents","bindResponsiveEvents","_add","listener2","_remove","detached","isAttached","activeElements","lastActive","notify","replay","hoverOptions","deactivated","activated","updateHoverStyle","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","getElementsAtEventForMode","invalidatePlugins","clipArc","pixelMargin","angleMargin","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha2","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","outerStartX","outerStartY","outerEndX","outerEndY","inner","lineJoin","fullCircles","drawFullCircleBorders","version","unregister","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","hoverRadius","getBarBounds","bar","half","skipOrLimit","skip2","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","refRect","BarElement","addRectPath","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","__spreadProps","__spreadValues","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","fill2","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","_args","$filler","drawTime","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","generateLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","heightLimit","totalWidth","currentColWidth","currentColHeight","col","rtlHelper","hitbox","_draw","defaultColor","fontColor","halfFontSize","cursor","textDirection","setWidth","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","onLeave","isListened","hoveredItem","_getLegendItemAt","sameItem","plugin_legend","_element","adjustHitBoxes","handleEvent","ci","Title","_padding","textSize","fontOpts","_drawArgs","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","hasValue","tooltipPosition","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","getLabelAndValue","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","drawBody","drawFooter","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","_willRender","labelCount","Decimation","Filler","SubTitle","findOrAddLabel","addedLabels","addIfString","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","validIndex","getDecimalForPixel","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","stepSize","computeTickLimit","getTickLimit","_maxDigits","LinearScale","handleTickRangeOptions","isMajor","tickVal","LogarithmicScale","_zero","exp","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","logarithmic","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","animate","angleLines.color","pointLabels.color","ticks.color","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","round2","isoWeekday","_parseOpts","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","addTick","time","timestamps","ticksFromTimestamps","majorUnit","map2","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","formats","normalized","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"mappings":";;;;;;IAMA,SAAgBA,KAChB,MAAMC,EAAO,WACX,IAAIC,EAAK,EACT,OAAO,WACE,OAAAA,KAHE,GAMb,SAAAC,EAAuBC,GACd,OAAAA,MAAAA,EAET,SAAAC,EAAiBD,GACf,GAAIE,MAAMD,SAAWC,MAAMD,QAAQD,GAC1B,OAAA,EAET,MAAMG,EAAOC,OAAOC,UAAUC,SAASC,KAAKP,GACxC,MAAqB,YAArBG,EAAKK,MAAM,EAAG,IAAuC,WAAnBL,EAAKK,UAK7C,SAAAC,EAAkBT,GAChB,OAAiB,OAAVA,GAA4D,oBAA1CI,OAAOC,UAAUC,SAASC,KAAKP,GAE1D,MAAMU,EAAkBV,IAA4B,iBAAVA,GAAsBA,aAAiBW,SAAWC,UAAUZ,GACtG,SAAAa,EAAyBb,EAAOc,GACvB,OAAAJ,EAAeV,GAASA,EAAQc,EAEzC,SAAAC,EAAwBf,EAAOc,GACtB,YAAiB,IAAVd,EAAwBc,EAAed,EAEvD,MAIMgB,EAAc,CAAChB,EAAOiB,IACT,iBAAVjB,GAAsBA,EAAMkB,SAAS,KAC1CC,WAAWnB,GAAS,IAAMiB,GACvBjB,EACP,SAAkBoB,EAAAC,EAAIC,EAAMC,GAC1B,GAAIF,GAAyB,mBAAZA,EAAGd,KACX,OAAAc,EAAGG,MAAMD,EAASD,GAG7B,SAAcG,EAAAC,EAAUL,EAAIE,EAASI,GACnC,IAAIC,EAAGC,EAAKC,EACZ,GAAI7B,EAAQyB,GAEV,GADAG,EAAMH,EAASK,OACXJ,EACF,IAAKC,EAAIC,EAAM,EAAGD,GAAK,EAAGA,IACrBP,EAAAd,KAAKgB,EAASG,EAASE,GAAIA,QAGhC,IAAKA,EAAI,EAAGA,EAAIC,EAAKD,IAChBP,EAAAd,KAAKgB,EAASG,EAASE,GAAIA,QAAA,GAGzBnB,EAASiB,GAGlB,IAFAI,EAAO1B,OAAO0B,KAAKJ,GACnBG,EAAMC,EAAKC,OACNH,EAAI,EAAGA,EAAIC,EAAKD,IACnBP,EAAGd,KAAKgB,EAASG,EAASI,EAAKF,IAAKE,EAAKF,IAI/C,SAAAI,EAAwBC,EAAIC,GACtB,IAAAN,EAAGO,EAAMC,EAAIC,EACjB,IAAKJ,IAAOC,GAAMD,EAAGF,SAAWG,EAAGH,OAC1B,OAAA,EAEJ,IAAAH,EAAI,EAAGO,EAAOF,EAAGF,OAAQH,EAAIO,IAAQP,EAGxC,GAFAQ,EAAKH,EAAGL,GACRS,EAAKH,EAAGN,GACJQ,EAAGE,eAAiBD,EAAGC,cAAgBF,EAAGG,QAAUF,EAAGE,MAClD,OAAA,EAGJ,OAAA,EAET,SAAAC,EAAiBC,GACf,GAAIxC,EAAQwC,GACV,OAAOA,EAAOC,IAAIF,GAEpB,GAAI/B,EAASgC,GAAS,CACd,MAAAE,EAASvC,OAAOwC,OAAO,MACvBd,EAAO1B,OAAO0B,KAAKW,GACnBI,EAAOf,EAAKC,OAClB,IAAIe,EAAI,EACD,KAAAA,EAAID,IAAQC,EACjBH,EAAOb,EAAKgB,IAAMN,EAAQC,EAAOX,EAAKgB,KAEjC,OAAAH,EAEF,OAAAF,EAET,SAAAM,EAAoBC,GAClB,OAAkE,IAA3D,CAAC,YAAa,YAAa,eAAeC,QAAQD,GAE3D,SAAiBE,EAAAF,EAAKL,EAAQF,EAAQU,GAChC,IAACJ,EAAWC,GACd,OAEF,MAAMI,EAAOT,EAAOK,GACdK,EAAOZ,EAAOO,GAChBvC,EAAS2C,IAAS3C,EAAS4C,GAC7BC,EAAMF,EAAMC,EAAMF,GAElBR,EAAOK,GAAOR,EAAQa,GAG1B,SAAeC,EAAAX,EAAQF,EAAQU,GAC7B,MAAMI,EAAUtD,EAAQwC,GAAUA,EAAS,CAACA,GACtCN,EAAOoB,EAAQxB,OACjB,IAACtB,EAASkC,GACL,OAAAA,EAGH,MAAAa,GADNL,EAAUA,GAAW,IACEK,QAAUN,EACjC,IAAA,IAAStB,EAAI,EAAGA,EAAIO,IAAQP,EAAG,CAEzB,IAACnB,EADLgC,EAASc,EAAQ3B,IAEf,SAEI,MAAAE,EAAO1B,OAAO0B,KAAKW,GAChB,IAAA,IAAAK,EAAI,EAAGD,EAAOf,EAAKC,OAAQe,EAAID,IAAQC,EACvCU,EAAA1B,EAAKgB,GAAIH,EAAQF,EAAQU,GAG7B,OAAAR,EAET,SAAAc,EAAiBd,EAAQF,GACvB,OAAOa,EAAMX,EAAQF,EAAQ,CAACe,OAAQE,IAExC,SAAmBA,EAAAV,EAAKL,EAAQF,GAC1B,IAACM,EAAWC,GACd,OAEF,MAAMI,EAAOT,EAAOK,GACdK,EAAOZ,EAAOO,GAChBvC,EAAS2C,IAAS3C,EAAS4C,GAC7BI,EAAQL,EAAMC,GACJjD,OAAOC,UAAUsD,eAAepD,KAAKoC,EAAQK,KACvDL,EAAOK,GAAOR,EAAQa,IAS1B,MAAMO,EAAe,CACnB,GAASC,GAAAA,EACTC,KAAQC,EAAED,EACVE,KAAQD,EAAEC,GAEZ,SAAAC,EAA0BC,EAAKlB,GAE7B,OADiBY,EAAaZ,KAASY,EAAaZ,GAGtD,SAAyBA,GACvB,MAAMlB,EAWR,SAAmBkB,GACX,MAAAmB,EAAQnB,EAAIoB,MAAM,KAClBtC,EAAO,GACb,IAAIuC,EAAM,GACV,IAAA,MAAWC,KAAQH,EACVE,GAAAC,EACHD,EAAInD,SAAS,MACTmD,EAAAA,EAAI7D,MAAM,GAAS,GAAA,KAEzBsB,EAAKyC,KAAKF,GACJA,EAAA,IAGH,OAAAvC,EAxBM0C,CAAUxB,GACvB,OAAckB,IACZ,IAAA,MAAWpB,KAAKhB,EAAM,CACpB,GAAU,KAANgB,EACF,MAEFoB,EAAMA,GAAOA,EAAIpB,GAEZ,OAAAoB,GAZkDO,CAAgBzB,KAC3DkB,GA6BlB,SAAAQ,EAAqBC,GACnB,OAAOA,EAAIC,OAAO,GAAGC,cAAgBF,EAAInE,MAAM,GAEjD,MAAMsE,EAAW9E,QAA2B,IAAVA,EAC5B+E,EAAc/E,GAA2B,mBAAVA,EAC/BgF,EAAY,CAACC,EAAGC,KAChB,GAAAD,EAAEE,OAASD,EAAEC,KACR,OAAA,EAET,IAAA,MAAWC,KAAQH,EACb,IAACC,EAAEG,IAAID,GACF,OAAA,EAGJ,OAAA,GAMT,MAAME,EAAKC,KAAKD,GACVE,EAAM,EAAIF,EACVG,EAAQD,EAAMF,EACdI,EAAW/E,OAAOgF,kBAClBC,EAAcN,EAAK,IACnBO,EAAUP,EAAK,EACfQ,EAAaR,EAAK,EAClBS,EAAqB,EAALT,EAAS,EACzBU,EAAQT,KAAKS,MACbC,EAAOV,KAAKU,KAClB,SAAAC,EAAiBC,GACT,MAAAC,EAAeb,KAAKc,MAAMF,GAChCA,EAAQG,EAAaH,EAAOC,EAAcD,EAAQ,KAAQC,EAAeD,EACzE,MAAMI,EAAYhB,KAAKiB,IAAI,GAAIjB,KAAKkB,MAAMT,EAAMG,KAC1CO,EAAWP,EAAQI,EAEzB,OADqBG,GAAY,EAAI,EAAIA,GAAY,EAAI,EAAIA,GAAY,EAAI,EAAI,IAC3DH,EAkBxB,SAAAI,EAAkBC,GAChB,OAAQC,MAAM1F,WAAWyF,KAAOhG,SAASgG,GAE3C,SAAsBN,EAAAxC,EAAGE,EAAG8C,GACnB,OAAAvB,KAAKwB,IAAIjD,EAAIE,GAAK8C,EAM3B,SAA4BE,EAAAC,EAAOtE,EAAQuE,GACzC,IAAItF,EAAGO,EAAMnC,EACb,IAAK4B,EAAI,EAAGO,EAAO8E,EAAMlF,OAAQH,EAAIO,EAAMP,IACzC5B,EAAQiH,EAAMrF,GAAGsF,GACZL,MAAM7G,KACT2C,EAAOwE,IAAM5B,KAAK4B,IAAIxE,EAAOwE,IAAKnH,GAClC2C,EAAOyE,IAAM7B,KAAK6B,IAAIzE,EAAOyE,IAAKpH,IAIxC,SAAAqH,EAAmBC,GACjB,OAAOA,GAAgBhC,EAAA,KAEzB,SAAAiC,EAAmBC,GACjB,OAAOA,GAAiB,IAAAlC,GAE1B,SAAAmC,EAAwB3D,GAClB,IAACpD,EAAeoD,GAClB,OAEF,IAAI4D,EAAI,EACJC,EAAI,EACR,KAAOpC,KAAKc,MAAMvC,EAAI4D,GAAKA,IAAM5D,GAC1B4D,GAAA,GACLC,IAEK,OAAAA,EAET,SAAAC,EAA2BC,EAAaC,GAChC,MAAAC,EAAsBD,EAAWhE,EAAI+D,EAAY/D,EACjDkE,EAAsBF,EAAW9D,EAAI6D,EAAY7D,EACjDiE,EAA2B1C,KAAK2C,KAAKH,EAAsBA,EAAsBC,EAAsBA,GACzG,IAAAG,EAAQ5C,KAAK6C,MAAMJ,EAAqBD,GAIrC,OAHHI,MAAgB7C,IACT6C,GAAA3C,GAEJ,CACL2C,MAAAA,EACAE,SAAUJ,GAGd,SAAAK,EAA+BC,EAAKC,GAClC,OAAOjD,KAAK2C,KAAK3C,KAAKiB,IAAIgC,EAAI1E,EAAIyE,EAAIzE,EAAG,GAAKyB,KAAKiB,IAAIgC,EAAIxE,EAAIuE,EAAIvE,EAAG,IAExE,SAAAyE,EAAoBxD,EAAGC,GACb,OAAAD,EAAIC,EAAIO,GAASD,EAAMF,EAEjC,SAAAoD,EAAyBzD,GACf,OAAAA,EAAIO,EAAMA,GAAOA,EAE3B,SAAuBmD,GAAAR,EAAOS,EAAOC,EAAKC,GACxC,MAAM7D,EAAIyD,EAAgBP,GACpBY,EAAIL,EAAgBE,GACpBlB,EAAIgB,EAAgBG,GACpBG,EAAeN,EAAgBK,EAAI9D,GACnCgE,EAAaP,EAAgBhB,EAAIzC,GACjCiE,EAAeR,EAAgBzD,EAAI8D,GACnCI,EAAaT,EAAgBzD,EAAIyC,GAChC,OAAAzC,IAAM8D,GAAK9D,IAAMyC,GAAMoB,GAAyBC,IAAMrB,GACvDsB,EAAeC,GAAcC,EAAeC,EAEpD,SAAqBC,GAAApJ,EAAOmH,EAAKC,GAC/B,OAAO7B,KAAK6B,IAAID,EAAK5B,KAAK4B,IAAIC,EAAKpH,IAKrC,SAAAqJ,GAAoBrJ,EAAO4I,EAAOC,EAAK/B,EAAU,MACxC,OAAA9G,GAASuF,KAAK4B,IAAIyB,EAAOC,GAAO/B,GAAW9G,GAASuF,KAAK6B,IAAIwB,EAAOC,GAAO/B,EAGpF,SAAiBwC,GAAAC,EAAOvJ,EAAOwJ,GAC7BA,EAAMA,GAAQ,CAACC,GAAUF,EAAME,GAASzJ,GACpC,IAEA0J,EAFAC,EAAKJ,EAAMxH,OAAS,EACpB6H,EAAK,EAEF,KAAAD,EAAKC,EAAK,GACfF,EAAOE,EAAKD,GAAO,EACfH,EAAIE,GACDE,EAAAF,EAEAC,EAAAD,EAGT,MAAO,CAACE,GAAAA,EAAID,GAAAA,GAEd,MAAME,GAAe,CAACN,EAAOvG,EAAKhD,EAAO8J,IACvCR,GAAQC,EAAOvJ,EAAO8J,EAClBL,GAASF,EAAME,GAAOzG,IAAQhD,EACrByJ,GAAAF,EAAME,GAAOzG,GAAOhD,GAC7B+J,GAAgB,CAACR,EAAOvG,EAAKhD,IACjCsJ,GAAQC,EAAOvJ,GAAOyJ,GAASF,EAAME,GAAOzG,IAAQhD,IActD,MAAMgK,GAAc,CAAC,OAAQ,MAAO,QAAS,SAAU,WA+BvD,SAAAC,GAA6BhD,EAAOiD,GAClC,MAAMC,EAAOlD,EAAMmD,SACnB,IAAKD,EACH,OAEF,MAAME,EAAYF,EAAKE,UACjBZ,EAAQY,EAAUpH,QAAQiH,IACd,IAAdT,GACFY,EAAUC,OAAOb,EAAO,GAEtBY,EAAUtI,OAAS,IAGXiI,GAAAO,SAASvH,WACZiE,EAAMjE,aAERiE,EAAMmD,UAEf,SAAAI,GAAsBC,GACpB,MAAMC,EAAM,IAAIC,IAChB,IAAI/I,EAAGO,EACF,IAAAP,EAAI,EAAGO,EAAOsI,EAAM1I,OAAQH,EAAIO,IAAQP,EAC3C8I,EAAIE,IAAIH,EAAM7I,IAEZ,OAAA8I,EAAIvF,OAAShD,EACRsI,EAEFvK,MAAM2K,KAAKH,GAMpB,MAAMI,GACkB,oBAAXC,OACF,SAASC,GACP,OAAAA,KAGJD,OAAOE,sBAEhB,SAAmBC,GAAA7J,EAAIE,EAAS4J,GAC9B,MAAMC,EAAaD,GAAa,CAACE,GAASnL,MAAMG,UAAUG,MAAMD,KAAK8K,IACrE,IAAIC,GAAU,EACVhK,EAAO,GACX,OAAO,YAAYiK,GACjBjK,EAAO8J,EAAWG,GACbD,IACOA,GAAA,EACOR,GAAAvK,KAAKwK,QAAQ,KAClBO,GAAA,EACVjK,EAAGG,MAAMD,EAASD,QAiB1B,MAAMkK,GAAsBC,GAAoB,UAAVA,EAAoB,OAAmB,QAAVA,EAAkB,QAAU,SACzFC,GAAiB,CAACD,EAAO7C,EAAOC,IAAkB,UAAV4C,EAAoB7C,EAAkB,QAAV6C,EAAkB5C,GAAOD,EAAQC,GAAO,EAKlH,SAA0C8C,GAAAC,EAAMC,EAAQC,GACtD,MAAMC,EAAaF,EAAO9J,OAC1B,IAAI6G,EAAQ,EACRoD,EAAQD,EACZ,GAAIH,EAAKK,QAAS,CACV,MAAAC,OAACA,UAAQC,GAAWP,EACpBQ,EAAOF,EAAOE,MACdjF,IAACA,EAAAC,IAAKA,EAAKiF,WAAAA,EAAAC,WAAYA,GAAcJ,EAAOK,gBAC9CF,IACFzD,EAAQQ,GAAY7D,KAAK4B,IACvB0C,GAAasC,EAASD,EAAOE,KAAMjF,GAAKyC,GACxCkC,EAAqBC,EAAalC,GAAagC,EAAQO,EAAMF,EAAOM,iBAAiBrF,IAAMyC,IAC7F,EAAGmC,EAAa,IAGRC,EADNM,EACMlD,GAAY7D,KAAK6B,IACvByC,GAAasC,EAASD,EAAOE,KAAMhF,GAAK,GAAMuC,GAAK,EACnDmC,EAAqB,EAAIjC,GAAagC,EAAQO,EAAMF,EAAOM,iBAAiBpF,IAAM,GAAMuC,GAAK,GAC/Ff,EAAOmD,GAAcnD,EAEbmD,EAAanD,EAGzB,MAAO,CAACA,MAAAA,EAAOoD,MAAAA,GAEjB,SAAAS,GAA6Bb,GACrB,MAAAc,OAACA,EAAQC,OAAAA,EAAAC,aAAQA,GAAgBhB,EACjCiB,EAAY,CAChBC,KAAMJ,EAAOvF,IACb4F,KAAML,EAAOtF,IACb4F,KAAML,EAAOxF,IACb8F,KAAMN,EAAOvF,KAEf,IAAKwF,EAEI,OADPhB,EAAKgB,aAAeC,GACb,EAET,MAAMK,EAAUN,EAAaE,OAASJ,EAAOvF,KAC1CyF,EAAaG,OAASL,EAAOtF,KAC7BwF,EAAaI,OAASL,EAAOxF,KAC7ByF,EAAaK,OAASN,EAAOvF,IAEzB,OADPhH,OAAO+M,OAAOP,EAAcC,GACrBK,EAGT,MAAME,GAAUC,GAAY,IAANA,GAAiB,IAANA,EAC3BC,GAAY,CAACD,EAAGtE,EAAGpB,KAAapC,KAAAiB,IAAI,EAAG,OAAW,IAAMjB,KAAKgI,KAAKF,EAAItE,GAAKvD,EAAMmC,GACjF6F,GAAa,CAACH,EAAGtE,EAAGpB,IAAMpC,KAAKiB,IAAI,GAAG,GAAM6G,GAAK9H,KAAKgI,KAASF,EAAAtE,GAAKvD,EAAMmC,GAAK,EAC/E8F,GAAU,CACdC,OAAaL,GAAAA,EACbM,cAAiBN,EAAIA,EACrBO,YAAaP,IAAMA,GAASA,EAAA,GAC5BQ,cAAeR,IAAYA,GAAA,IAAO,EAC9B,GAAMA,EAAIA,GACD,MAAEA,GAAMA,EAAI,GAAK,GAC9BS,YAAkBT,GAAAA,EAAIA,EAAIA,EAC1BU,aAAcV,IAAWA,GAAA,GAAKA,EAAIA,EAAI,EACtCW,eAAgBX,IAAYA,GAAA,IAAO,EAC/B,GAAMA,EAAIA,EAAIA,EACd,KAAaA,GAAA,GAAKA,EAAIA,EAAI,GAC9BY,YAAaZ,GAAKA,EAAIA,EAAIA,EAAIA,EAC9Ba,aAAmBb,SAAQ,GAAKA,EAAIA,EAAIA,EAAI,GAC5Cc,eAAgBd,IAAYA,GAAA,IAAO,EAC/B,GAAMA,EAAIA,EAAIA,EAAIA,GACT,KAAAA,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GACnCe,YAAaf,GAAKA,EAAIA,EAAIA,EAAIA,EAAIA,EAClCgB,aAAoBhB,IAAAA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,EAC9CiB,eAAuBjB,IAAAA,GAAK,IAAO,EAC/B,GAAMA,EAAIA,EAAIA,EAAIA,EAAIA,EACtB,KAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,GACtCkB,WAAiBlB,GAAyB,EAAxB9H,KAAKiJ,IAAInB,EAAIxH,GAC/B4I,YAAapB,GAAK9H,KAAKgI,IAAIF,EAAIxH,GAC/B6I,cAAoBrB,IAAA,IAAa9H,KAAAiJ,IAAIlJ,EAAK+H,GAAK,GAC/CsB,cAAwB,IAANtB,EAAW,EAAI9H,KAAKiB,IAAI,EAAG,IAAU6G,EAAA,IACvDuB,YAAmBvB,GAAM,IAANA,EAAW,EAA4B,EAAvB9H,KAAKiB,IAAI,GAAG,GAAM6G,GACrDwB,iBAAoBzB,GAAOC,GAAKA,EAAIA,EAAI,GACpC,GAAM9H,KAAKiB,IAAI,EAAG,IAAU,EAAA6G,EAAI,IAChC,IAAyC,EAAjC9H,KAAKiB,IAAI,GAAG,IAAW,EAAA6G,EAAI,KACvCyB,WAAkBzB,GAAAA,GAAK,EAAKA,IAAW9H,KAAA2C,KAAK,EAAImF,EAAIA,GAAK,GACzD0B,YAAkB1B,GAAA9H,KAAK2C,KAAK,MAAU,GAAKmF,GAC3C2B,cAAsB3B,IAAAA,GAAK,IAAO,GAC9B,SAAanF,KAAK,EAAImF,EAAIA,GAAK,GAC/B,IAAO9H,KAAK2C,KAAK,GAAKmF,GAAK,GAAKA,GAAK,GACzC4B,cAAoB5B,GAAAD,GAAOC,GAAKA,EAAIC,GAAUD,EAAG,KAAO,IACxD6B,eAAqB7B,GAAAD,GAAOC,GAAKA,EAAIG,GAAWH,EAAG,KAAO,IAC1D8B,iBAAiB9B,GACf,MAAMtE,EAAI,MAEV,OAAOqE,GAAOC,GAAKA,EACjBA,EAAI,GACA,GAAMC,GAAc,EAAJD,EAAOtE,EAHnB,KAIJ,GAAM,GAAMyE,GAAe,EAAJH,EAAQ,EAAGtE,EAJ9B,MAMZoG,WAAW9B,GACT,MAAMtE,EAAI,QACV,OAAOsE,EAAIA,IAAUtE,EAAA,GAAKsE,EAAItE,IAEhCoG,YAAY9B,GACV,MAAMtE,EAAI,QACV,UAAa,GAAKsE,IAAUtE,EAAA,GAAKsE,EAAItE,GAAK,GAE5CoG,cAAc9B,GACZ,IAAItE,EAAI,QACH,OAAAsE,GAAK,IAAO,EACGA,EAAAA,IAAuB,GAAVtE,GAAA,QAAesE,EAAItE,GAA3C,GAEF,QAAa,GAAKsE,IAAuB,MAAV,QAAeA,EAAItE,GAAK,IAEhEqG,aAAc/B,GAAK,EAAII,GAAQ4B,cAAc,EAAIhC,GACjD8B,cAAc9B,GACZ,MAAMiC,EAAI,OACJC,EAAI,KACN,OAAAlC,EAAK,EAAIkC,EACJD,EAAIjC,EAAIA,EAEbA,EAAK,EAAIkC,EACJD,GAAKjC,GAAM,IAAMkC,GAAMlC,EAAI,IAEhCA,EAAK,IAAMkC,EACND,GAAKjC,GAAM,KAAOkC,GAAMlC,EAAI,MAE9BiC,GAAKjC,GAAM,MAAQkC,GAAMlC,EAAI,SAEtCmC,gBAAiBnC,GAAMA,EAAI,GACO,GAA9BI,GAAQ2B,aAAiB,EAAJ/B,GACc,GAAnCI,GAAQ4B,cAAkB,EAAJhC,EAAQ,GAAW;;;;;;;AAS/C,SAAAhH,GAAexC,GACb,OAAOA,EAAI,GAAM,EAEnB,MAAM4L,GAAM,CAAC5L,EAAG6L,EAAGC,IAAMpK,KAAK6B,IAAI7B,KAAK4B,IAAItD,EAAG8L,GAAID,GAClD,SAAAE,GAAa/L,GACX,OAAO4L,GAAIpJ,GAAU,KAAJxC,GAAW,EAAG,KAEjC,SAAAgM,GAAahM,GACX,OAAO4L,GAAIpJ,GAAU,IAAJxC,GAAU,EAAG,KAEhC,SAAAiM,GAAajM,GACX,OAAO4L,GAAIpJ,GAAMxC,EAAI,MAAQ,IAAK,EAAG,GAEvC,SAAAkM,GAAalM,GACX,OAAO4L,GAAIpJ,GAAU,IAAJxC,GAAU,EAAG,KAEhC,MAAMmM,GAAQ,CAACC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAI/L,EAAG,GAAIC,EAAG,GAAI+L,EAAG,GAAI1B,EAAG,GAAI7H,EAAG,GAAIwJ,EAAG,IACrJC,GAAM,IAAI,oBACVC,GAAUlM,GAAAiM,GAAQ,GAAJjM,GACdmM,GAAUnM,GAAAiM,IAAS,QAAS,GAAKA,GAAQ,GAAJjM,GACrCoM,GAAKpM,IAAW,IAAAA,IAAS,IAAY,GAAAA,GAyB3C,SAAAqM,GAAmB1N,GACb,IAAAqN,EAzBU,CAAArN,GAAKyN,GAAGzN,EAAE2N,IAAMF,GAAGzN,EAAE4N,IAAMH,GAAGzN,EAAEqB,IAAMoM,GAAGzN,EAAEoB,GAyBjDyM,CAAQ7N,GAAKuN,GAAKC,GAC1B,OAAOxN,EACH,IAAMqN,EAAErN,EAAE2N,GAAKN,EAAErN,EAAE4N,GAAKP,EAAErN,EAAEqB,GAJpB,EAACD,EAAGiM,IAAMjM,EAAI,IAAMiM,EAAEjM,GAAK,GAIF0M,CAAM9N,EAAEoB,EAAGiM,QAC5C,EAEN,MAAMU,GAAS,+GACf,SAAkBC,GAAAlC,EAAG5G,EAAG2G,GACtB,MAAMzK,EAAI8D,EAAIxD,KAAK4B,IAAIuI,EAAG,EAAIA,GACxBwB,EAAI,CAACtK,EAAG9D,GAAS8D,EAAA+I,EAAI,IAAM,KAAOD,EAAIzK,EAAIM,KAAK6B,IAAI7B,KAAK4B,IAAIrE,EAAI,EAAG,EAAIA,EAAG,IAAI,GACpF,MAAO,CAACoO,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAExB,SAAkBY,GAAAnC,EAAG5G,EAAGlF,GACtB,MAAMqN,EAAI,CAACtK,EAAG9D,GAAS8D,EAAA+I,EAAI,IAAM,IAAM9L,EAAIA,EAAIkF,EAAIxD,KAAK6B,IAAI7B,KAAK4B,IAAIrE,EAAG,EAAIA,EAAG,GAAI,GACnF,MAAO,CAACoO,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAExB,SAAkBa,GAAApC,EAAGqC,EAAG9M,GAChB,MAAA+M,EAAMJ,GAASlC,EAAG,EAAG,IACvB,IAAA/N,EAMJ,IALIoQ,EAAI9M,EAAI,IACVtD,EAAI,GAASoQ,EAAA9M,GACR8M,GAAApQ,EACAsD,GAAAtD,GAEFA,EAAI,EAAGA,EAAI,EAAGA,IACbqQ,EAAArQ,IAAM,EAAIoQ,EAAI9M,EAClB+M,EAAIrQ,IAAMoQ,EAEL,OAAAC,EAWT,SAAAC,GAAiBrO,GACf,MACM2N,EAAI3N,EAAE2N,EADE,IAERC,EAAI5N,EAAE4N,EAFE,IAGRvM,EAAIrB,EAAEqB,EAHE,IAIRkC,EAAM7B,KAAK6B,IAAIoK,EAAGC,EAAGvM,GACrBiC,EAAM5B,KAAK4B,IAAIqK,EAAGC,EAAGvM,GACrBwK,KAAWvI,GAAO,EACxB,IAAIwI,EAAG5G,EAAGwG,EAOV,OANInI,IAAQD,IACVoI,EAAInI,EAAMD,EACV4B,EAAI2G,EAAI,GAAMH,KAASnI,EAAMD,GAAOoI,GAAWnI,EAAAD,GAC/CwI,EArBJ,SAAkB6B,EAAGC,EAAGvM,EAAGqK,EAAGnI,GAC5B,OAAIoK,IAAMpK,GACKqK,EAAAvM,GAAKqK,GAAMkC,EAAIvM,EAAI,EAAI,GAElCuM,IAAMrK,GACAlC,EAAIsM,GAAKjC,EAAI,GAEfiC,EAAIC,GAAKlC,EAAI,EAcf4C,CAASX,EAAGC,EAAGvM,EAAGqK,EAAGnI,GACzBuI,EAAQ,GAAJA,EAAS,IAER,CAAK,EAAJA,EAAO5G,GAAK,EAAG2G,GAEzB,SAAe0C,GAAAlB,EAAGjM,EAAGC,EAAG+L,GACtB,OACQ/Q,MAAAD,QAAQgF,GACViM,EAAEjM,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAChBiM,EAAEjM,EAAGC,EAAG+L,IACZvO,IAAImN,IAER,SAAiBwC,GAAA1C,EAAG5G,EAAG2G,GACd,OAAA0C,GAAMP,GAAUlC,EAAG5G,EAAG2G,GAQ/B,SAAA4C,GAAa3C,GACH,OAAAA,EAAI,IAAM,KAAO,IAE3B,SAAA4C,GAAkB5N,GACV,MAAA2K,EAAIsC,GAAOY,KAAK7N,GACtB,IACId,EADAoB,EAAI,IAER,IAAKqK,EACH,OAEEA,EAAE,KAAOzL,IACPoB,EAAAqK,EAAE,GAAKM,IAAKN,EAAE,IAAMO,IAAKP,EAAE,KAE3B,MAAAK,EAAI2C,IAAKhD,EAAE,IACXmD,GAAMnD,EAAE,GAAK,IACboD,GAAMpD,EAAE,GAAK,IAQZ,OANDzL,EADO,QAATyL,EAAE,GAtBR,SAAiBK,EAAGqC,EAAG9M,GACd,OAAAkN,GAAML,GAAUpC,EAAGqC,EAAG9M,GAsBvByN,CAAQhD,EAAG8C,EAAIC,GACD,QAATpD,EAAE,GArBf,SAAiBK,EAAG5G,EAAGlF,GACd,OAAAuO,GAAMN,GAAUnC,EAAG5G,EAAGlF,GAqBvB+O,CAAQjD,EAAG8C,EAAIC,GAEfL,GAAQ1C,EAAG8C,EAAIC,GAEd,CACLlB,EAAG3N,EAAE,GACL4N,EAAG5N,EAAE,GACLqB,EAAGrB,EAAE,GACLoB,EAAAA,GAuBJ,MAAMvC,GAAM,CACVoB,EAAG,OACH+O,EAAG,QACHC,EAAG,KACHC,EAAG,MACHC,EAAG,KACHC,EAAG,SACHC,EAAG,QACHvC,EAAG,KACHwC,EAAG,KACHC,EAAG,KACHxC,EAAG,KACHC,EAAG,QACHC,EAAG,QACHuC,EAAG,KACHC,EAAG,WACHvC,EAAG,KACHwC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,QACH3C,EAAG,KACH4C,EAAG,KACHC,EAAG,OACHC,EAAG,KACHC,EAAG,QACHC,EAAG,MAECC,GAAU,CACdC,OAAQ,SACRC,YAAa,SACbC,KAAM,OACNC,UAAW,SACXC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,MAAO,IACPC,aAAc,SACdC,GAAI,KACJC,QAAS,SACTC,KAAM,SACNC,UAAW,SACXC,OAAQ,SACRC,SAAU,SACVC,QAAS,SACTC,IAAK,SACLC,YAAa,SACbC,QAAS,SACTC,QAAS,SACTC,KAAM,OACNC,IAAK,KACLC,MAAO,OACPC,QAAS,SACTC,KAAM,SACNC,KAAM,OACNC,KAAM,SACNC,OAAQ,SACRC,QAAS,SACTC,SAAU,SACVC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,IAAK,OACLC,OAAQ,SACRC,OAAQ,SACRC,SAAU,OACVC,OAAQ,SACRC,OAAQ,SACRC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,OAAQ,SACRC,QAAS,SACTC,UAAW,SACXC,IAAK,SACLC,OAAQ,SACRC,IAAK,SACLC,IAAK,OACLC,MAAO,SACPC,IAAK,SACLC,QAAS,SACTC,OAAQ,SACRC,QAAS,SACTC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,UAAW,SACXC,QAAS,SACTC,WAAY,SACZC,IAAK,SACLC,KAAM,SACNC,MAAO,SACPC,UAAW,SACXC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,QAAS,SACTC,IAAK,SACLC,KAAM,OACNC,QAAS,SACTC,IAAK,SACLC,OAAQ,SACRC,MAAO,SACPC,WAAY,SACZC,IAAK,KACLC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,UAAW,OACXC,IAAK,SACLC,SAAU,SACVC,WAAY,SACZC,QAAS,SACTC,SAAU,SACVC,QAAS,SACTC,WAAY,SACZC,KAAM,KACNC,OAAQ,SACRC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,QAAS,SACTC,KAAM,SACNC,UAAW,SACXC,OAAQ,SACRC,MAAO,SACPC,WAAY,SACZC,UAAW,SACXC,QAAS,SACTC,KAAM,SACNC,IAAK,SACLC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,YAAa,SACbC,GAAI,SACJC,SAAU,SACVC,MAAO,SACPC,UAAW,SACXC,MAAO,SACPC,UAAW,SACXC,MAAO,SACPC,QAAS,SACTC,MAAO,SACPC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,SAAU,OACVC,OAAQ,SACRC,IAAK,SACLC,IAAK,OACLC,MAAO,SACPC,OAAQ,SACRC,GAAI,SACJC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,UAAW,SACXC,GAAI,SACJC,MAAO,UAkBT,IAAIC,GACJ,SAAAC,GAAmB5Y,GACZ2Y,KACKA,GAnBZ,WACE,MAAME,EAAW,GACX1b,EAAO1B,OAAO0B,KAAKmS,IACnBwJ,EAAQrd,OAAO0B,KAAKY,IACtB,IAAAd,EAAG8b,EAAG5a,EAAG6a,EAAIC,EACjB,IAAKhc,EAAI,EAAGA,EAAIE,EAAKC,OAAQH,IAAK,CAEhC,IADA+b,EAAKC,EAAK9b,EAAKF,GACV8b,EAAI,EAAGA,EAAID,EAAM1b,OAAQ2b,IAC5B5a,EAAI2a,EAAMC,GACLE,EAAAA,EAAGC,QAAQ/a,EAAGJ,GAAII,IAErBA,EAAAgb,SAAS7J,GAAQ0J,GAAK,IACjBH,EAAAI,GAAM,CAAC9a,GAAK,GAAK,IAAMA,GAAK,EAAI,IAAU,IAAJA,GAE1C,OAAA0a,EAKGO,GACRT,GAAMU,YAAc,CAAC,EAAG,EAAG,EAAG,IAE1B,MAAA/Y,EAAIqY,GAAM3Y,EAAIsZ,eACpB,OAAOhZ,GAAK,CACVuM,EAAGvM,EAAE,GACLwM,EAAGxM,EAAE,GACLC,EAAGD,EAAE,GACLA,EAAgB,IAAbA,EAAElD,OAAekD,EAAE,GAAK,KAG/B,MAAMiZ,GAAS,uGAgCf,MAAMC,GAAUta,GAAAA,GAAK,SAAgB,MAAJA,EAAqC,MAAzB0B,KAAKiB,IAAI3C,EAAG,EAAM,KAAe,KACxEgH,GAAYhH,GAAAA,GAAK,OAAUA,EAAI,MAAQ0B,KAAKiB,KAAS3C,EAAA,MAAS,MAAO,KAY3E,SAAgBua,GAAAva,EAAGjC,EAAGyc,GACpB,GAAIxa,EAAG,CACL,IAAIQ,EAAM6N,GAAQrO,GAClBQ,EAAIzC,GAAK2D,KAAK6B,IAAI,EAAG7B,KAAK4B,IAAI9C,EAAIzC,GAAKyC,EAAIzC,GAAKyc,EAAa,IAANzc,EAAU,IAAM,IACvEyC,EAAMgO,GAAQhO,GACdR,EAAE2N,EAAInN,EAAI,GACVR,EAAE4N,EAAIpN,EAAI,GACVR,EAAEqB,EAAIb,EAAI,IAGd,SAAAia,GAAeza,EAAG0a,GAChB,OAAO1a,EAAIzD,OAAO+M,OAAOoR,GAAS,GAAI1a,GAAKA,EAE7C,SAAA2a,GAAoBC,GACd,IAAA5a,EAAI,CAAC2N,EAAG,EAAGC,EAAG,EAAGvM,EAAG,EAAGD,EAAG,KAYvB,OAXH/E,MAAMD,QAAQwe,GACZA,EAAM1c,QAAU,IACd8B,EAAA,CAAC2N,EAAGiN,EAAM,GAAIhN,EAAGgN,EAAM,GAAIvZ,EAAGuZ,EAAM,GAAIxZ,EAAG,KAC3CwZ,EAAM1c,OAAS,IACf8B,EAAAoB,EAAI4K,GAAI4O,EAAM,OAIhB5a,EAAAya,GAAMG,EAAO,CAACjN,EAAG,EAAGC,EAAG,EAAGvM,EAAG,EAAGD,EAAG,KACrCA,EAAI4K,GAAIhM,EAAEoB,GAEPpB,EAET,SAAA6a,GAAuB/Z,GACjB,MAAkB,MAAlBA,EAAIC,OAAO,GAzEjB,SAAkBD,GACV,MAAA2K,EAAI4O,GAAO1L,KAAK7N,GACtB,IACI6M,EAAGC,EAAGvM,EADND,EAAI,IAER,GAAKqK,EAAL,CAGI,GAAAA,EAAE,KAAOkC,EAAG,CACR,MAAA3N,GAAKyL,EAAE,GACbrK,EAAIqK,EAAE,GAAKM,GAAI/L,GAAK4L,GAAQ,IAAJ5L,EAAS,EAAG,KAQ/B,OANP2N,GAAKlC,EAAE,GACPmC,GAAKnC,EAAE,GACPpK,GAAKoK,EAAE,GACPkC,EAAI,KAASlC,EAAA,GAAKM,GAAI4B,GAAK/B,GAAI+B,EAAG,EAAG,MACrCC,EAAI,KAASnC,EAAA,GAAKM,GAAI6B,GAAKhC,GAAIgC,EAAG,EAAG,MACrCvM,EAAI,KAASoK,EAAA,GAAKM,GAAI1K,GAAKuK,GAAIvK,EAAG,EAAG,MAC9B,CACLsM,EAAAA,EACAC,EAAAA,EACAvM,EAAAA,EACAD,EAAAA,IAqDO0Z,CAASha,GAEX4N,GAAS5N,GAElB,MAAYia,GACVzP,YAAYsP,GACV,GAAIA,aAAiBG,GACZ,OAAAH,EAET,MAAMte,SAAcse,EAChB,IAAA5a,EAvbR,IAAkBc,EAEZka,EADAhd,EAubW,WAAT1B,EACF0D,EAAI2a,GAAWC,GACG,WAATte,IAzbT0B,GADY8C,EA2bC8Z,GA1bH1c,OAEC,MAAX4C,EAAI,KACM,IAAR9C,GAAqB,IAARA,EACTgd,EAAA,CACJrN,EAAG,IAAsB,GAAhBxB,GAAMrL,EAAI,IACnB8M,EAAG,IAAsB,GAAhBzB,GAAMrL,EAAI,IACnBO,EAAG,IAAsB,GAAhB8K,GAAMrL,EAAI,IACnBM,EAAW,IAARpD,EAA4B,GAAhBmO,GAAMrL,EAAI,IAAW,KAErB,IAAR9C,GAAqB,IAARA,IAChBgd,EAAA,CACJrN,EAAGxB,GAAMrL,EAAI,KAAO,EAAIqL,GAAMrL,EAAI,IAClC8M,EAAGzB,GAAMrL,EAAI,KAAO,EAAIqL,GAAMrL,EAAI,IAClCO,EAAG8K,GAAMrL,EAAI,KAAO,EAAIqL,GAAMrL,EAAI,IAClCM,EAAW,IAARpD,EAAamO,GAAMrL,EAAI,KAAO,EAAIqL,GAAMrL,EAAI,IAAO,OA2axDd,EAvaGgb,GAuaoBtB,GAAUkB,IAAUC,GAAcD,IAE3DK,KAAKC,KAAOlb,EACPib,KAAAE,SAAWnb,EAAAob,YAGhB,OAAOH,KAAKE,OAAA/M,UAGR,IAAApO,EAAIya,GAAMQ,KAAKC,MAIZ,OAHHlb,IACAA,EAAAoB,EAAI6K,GAAIjM,EAAEoB,IAEPpB,EAAAoO,QAED/N,GACN4a,KAAKC,KAAOP,GAAWta,GAEzBiL,YACE,OAAO2P,KAAKE,QAnFGnb,EAmFgBib,KAAKC,QAjFlClb,EAAAoB,EAAI,IACF,QAAQpB,EAAE2N,MAAM3N,EAAE4N,MAAM5N,EAAEqB,MAAM4K,GAAIjM,EAAEoB,MACtC,OAAOpB,EAAE2N,MAAM3N,EAAE4N,MAAM5N,EAAEqB,WA+Ee,EAnFhD,IAAmBrB,EAqFjBsL,YACE,OAAO2P,KAAKE,OAASzN,GAAUuN,KAAKC,WAAQ,EAE9C5P,YACE,OAAO2P,KAAKE,OA/UhB,SAAmBnb,GACjB,IAAKA,EACH,OAEF,MAAMoB,EAAIiN,GAAQrO,GACZ8L,EAAI1K,EAAE,GACN8D,EAAIgH,GAAI9K,EAAE,IACVyK,EAAIK,GAAI9K,EAAE,IAChB,OAAOpB,EAAEoB,EAAI,IACT,QAAQ0K,MAAM5G,OAAO2G,OAAOI,GAAIjM,EAAEoB,MAClC,OAAO0K,MAAM5G,OAAO2G,MAqUDwP,CAAUJ,KAAKC,WAAQ,EAE9C5P,IAAIgQ,EAAOC,GACT,GAAID,EAAO,CACT,MAAME,EAAKP,KAAK7M,IACVqN,EAAKH,EAAMlN,IACb,IAAAsN,EACE,MAAA5X,EAAIyX,IAAWG,EAAK,GAAMH,EAC1BpN,EAAI,EAAIrK,EAAI,EACZ1C,EAAIoa,EAAGpa,EAAIqa,EAAGra,EACdua,IAAWxN,EAAA/M,IAAW,EAAA+M,KAAS/M,IAAM,EAAI+M,EAAI/M,IAAM,GAAK,EAC9Dsa,EAAK,EAAIC,EACTH,EAAG7N,EAAI,IAAOgO,EAAKH,EAAG7N,EAAI+N,EAAKD,EAAG9N,EAAI,GACtC6N,EAAG5N,EAAI,IAAO+N,EAAKH,EAAG5N,EAAI8N,EAAKD,EAAG7N,EAAI,GACtC4N,EAAGna,EAAI,IAAOsa,EAAKH,EAAGna,EAAIqa,EAAKD,EAAGpa,EAAI,GACtCma,EAAGpa,EAAI0C,EAAI0X,EAAGpa,GAAK,EAAI0C,GAAK2X,EAAGra,EAC/B6Z,KAAK7M,IAAMoN,EAEN,OAAAP,KAET3P,YAAYgQ,EAAO9R,GAIV,OAHH8R,IACFL,KAAKC,KAtGX,SAAqBU,EAAMC,EAAMrS,GACzB,MAAAmE,EAAI3G,GAAKiF,GAAI2P,EAAKjO,IAClBC,EAAI5G,GAAKiF,GAAI2P,EAAKhO,IAClBvM,EAAI2F,GAAKiF,GAAI2P,EAAKva,IACjB,MAAA,CACLsM,EAAG3B,GAAIsO,GAAG3M,EAAInE,GAAUxC,GAAAiF,GAAI4P,EAAKlO,IAAMA,KACvCC,EAAG5B,GAAIsO,GAAG1M,EAAIpE,GAAUxC,GAAAiF,GAAI4P,EAAKjO,IAAMA,KACvCvM,EAAG2K,GAAIsO,GAAGjZ,EAAImI,GAAUxC,GAAAiF,GAAI4P,EAAKxa,IAAMA,KACvCD,EAAGwa,EAAKxa,EAAIoI,GAAKqS,EAAKza,EAAIwa,EAAKxa,IA8FjB0a,CAAYb,KAAKC,KAAMI,EAAMJ,KAAM1R,IAE1CyR,KAET3P,QACS,OAAA,IAAIyP,GAAME,KAAK7M,KAExB9C,MAAMlK,GAEG,OADF6Z,KAAAC,KAAK9Z,EAAI4K,GAAI5K,GACX6Z,KAET3P,QAAQkP,GAGC,OAFKS,KAAKC,KACb9Z,GAAK,EAAIoZ,EACNS,KAET3P,YACE,MAAM8C,EAAM6M,KAAKC,KACXa,EAAMvZ,GAAc,GAAR4L,EAAIT,EAAkB,IAARS,EAAIR,EAAmB,IAARQ,EAAI/M,GAE5C,OADP+M,EAAIT,EAAIS,EAAIR,EAAIQ,EAAI/M,EAAI0a,EACjBd,KAET3P,QAAQkP,GAGC,OAFKS,KAAKC,KACb9Z,GAAK,EAAIoZ,EACNS,KAET3P,SACE,MAAMtL,EAAIib,KAAKC,KAIR,OAHLlb,EAAA2N,EAAI,IAAM3N,EAAE2N,EACZ3N,EAAA4N,EAAI,IAAM5N,EAAE4N,EACZ5N,EAAAqB,EAAI,IAAMrB,EAAEqB,EACP4Z,KAET3P,QAAQkP,GAEC,OADAD,GAAAU,KAAKC,KAAM,EAAGV,GACdS,KAET3P,OAAOkP,GAEE,OADAD,GAAAU,KAAKC,KAAM,GAAIV,GACfS,KAET3P,SAASkP,GAEA,OADAD,GAAAU,KAAKC,KAAM,EAAGV,GACdS,KAET3P,WAAWkP,GAEF,OADAD,GAAAU,KAAKC,KAAM,GAAIV,GACfS,KAET3P,OAAO0Q,GAEE,OAjaX,SAAgBhc,EAAGgc,GACjB,IAAIlQ,EAAIuC,GAAQrO,GACd8L,EAAA,GAAK2C,GAAI3C,EAAE,GAAKkQ,GAClBlQ,EAAI0C,GAAQ1C,GACZ9L,EAAE2N,EAAI7B,EAAE,GACR9L,EAAE4N,EAAI9B,EAAE,GACR9L,EAAEqB,EAAIyK,EAAE,GA0ZNmQ,CAAOhB,KAAKC,KAAMc,GACXf,MAGX,SAAAiB,GAAmBtB,GACjB,OAAO,IAAIG,GAAMH,GAGnB,SAAAuB,GAA6BhgB,GACvB,GAAAA,GAA0B,iBAAVA,EAAoB,CACtC,MAAMG,EAAOH,EAAMM,WACZ,MAAS,2BAATH,GAA8C,4BAATA,EAEvC,OAAA,EAET,SAAA8f,GAAejgB,GACN,OAAAggB,GAAoBhgB,GAASA,EAAQ+f,GAAU/f,GAExD,SAAAkgB,GAAuBlgB,GACd,OAAAggB,GAAoBhgB,GACvBA,EACA+f,GAAU/f,GAAOmgB,SAAS,IAAKC,OAAO,IAAK7O,YAGjD,MAAM8O,GAAYjgB,OAAOwC,OAAO,MAC1B0d,GAAclgB,OAAOwC,OAAO,MAClC,SAAA2d,GAAoBC,EAAMxd,GACxB,IAAKA,EACI,OAAAwd,EAEH,MAAA1e,EAAOkB,EAAIoB,MAAM,KACd,IAAA,IAAAxC,EAAI,EAAGgF,EAAI9E,EAAKC,OAAQH,EAAIgF,IAAKhF,EAAG,CAC3C,MAAMkB,EAAIhB,EAAKF,GACf4e,EAAOA,EAAK1d,KAAY0d,EAAA1d,GAAK1C,OAAOwC,OAAO,OAEtC,OAAA4d,EAET,SAAaC,GAAAC,EAAMC,EAAOC,GACpB,MAAiB,iBAAVD,EACFrd,EAAMid,GAAWG,EAAMC,GAAQC,GAEjCtd,EAAMid,GAAWG,EAAM,IAAKC,GAqFrC,IAAIE,GAAW,IAnFf,MACE1R,YAAY2R,GACVhC,KAAKiC,eAAY,EACjBjC,KAAKkC,gBAAkB,kBACvBlC,KAAKmC,YAAc,kBACnBnC,KAAKmB,MAAQ,OACbnB,KAAKoC,SAAW,GAChBpC,KAAKqC,iBAAoBC,GAAYA,EAAQC,MAAMC,SAASC,sBAC5DzC,KAAK0C,SAAW,GAChB1C,KAAK2C,OAAS,CACZ,YACA,WACA,QACA,aACA,aAEF3C,KAAK4C,KAAO,CACVC,OAAQ,qDACRxc,KAAM,GACNyc,MAAO,SACPC,WAAY,IACZzC,OAAQ,MAEVN,KAAKgD,MAAQ,GACbhD,KAAKiD,qBAAuB,CAACC,EAAK7e,IAAY+c,GAAc/c,EAAQ6d,iBACpElC,KAAKmD,iBAAmB,CAACD,EAAK7e,IAAY+c,GAAc/c,EAAQ8d,aAChEnC,KAAKoD,WAAa,CAACF,EAAK7e,IAAY+c,GAAc/c,EAAQ8c,OAC1DnB,KAAKqD,UAAY,IACjBrD,KAAKsD,YAAc,CACjBC,KAAM,UACNC,WAAW,EACXC,kBAAkB,GAEpBzD,KAAK0D,qBAAsB,EAC3B1D,KAAK2D,QAAU,KACf3D,KAAK4D,QAAU,KACf5D,KAAK6D,SAAU,EACf7D,KAAK8D,QAAU,GACf9D,KAAK+D,YAAa,EAClB/D,KAAKgE,WAAQ,EACbhE,KAAKiE,OAAS,GACdjE,KAAKkE,UAAW,EAChBlE,KAAKmE,yBAA0B,EAC/BnE,KAAKoE,SAASpC,GAEhB3R,IAAIwR,EAAOC,GACF,OAAAH,GAAI3B,KAAM6B,EAAOC,GAE1BzR,IAAIwR,GACF,OAAOJ,GAAWzB,KAAM6B,GAE1BxR,SAASwR,EAAOC,GACP,OAAAH,GAAIH,GAAaK,EAAOC,GAEjCzR,SAASwR,EAAOC,GACP,OAAAH,GAAIJ,GAAWM,EAAOC,GAE/BzR,MAAMwR,EAAOwC,EAAMC,EAAaC,GACxB,MAAAC,EAAc/C,GAAWzB,KAAM6B,GAC/B4C,EAAoBhD,GAAWzB,KAAMsE,GACrCI,EAAc,IAAML,EAC1B/iB,OAAOqjB,iBAAiBH,EAAa,CAAAnU,CAClCqU,GAAc,CACbxjB,MAAOsjB,EAAYH,GACnBO,UAAU,GAAAvU,CAEXgU,GAAO,CACNQ,YAAY,EACZxU,MACE,MAAMyU,EAAQ9E,KAAK0E,GACb7gB,EAAS4gB,EAAkBF,GACjC,OAAI5iB,EAASmjB,GACJxjB,OAAO+M,OAAO,GAAIxK,EAAQihB,GAE5B7iB,EAAe6iB,EAAOjhB,IAE/BwM,IAAInP,GACF8e,KAAK0E,GAAexjB,QAMF,CAC1B6jB,YAAcV,IAAUA,EAAKW,WAAW,MACxCC,WAAaZ,GAAkB,WAATA,EACtBrB,MAAO,CACLkC,UAAW,eAEb5B,YAAa,CACXyB,aAAa,EACbE,YAAY,KAahB,SAAAE,GAAsBjC,EAAKkC,EAAMC,EAAIC,EAASC,GAC5C,IAAIC,EAAYJ,EAAKG,GAQd,OAPFC,IACHA,EAAYJ,EAAKG,GAAUrC,EAAIuC,YAAYF,GAAQG,MACnDL,EAAG5f,KAAK8f,IAENC,EAAYF,IACJA,EAAAE,GAELF,EAET,SAAsBK,GAAAzC,EAAKN,EAAMgD,EAAeC,GAE9C,IAAIT,GADJS,EAAQA,GAAS,IACAT,KAAOS,EAAMT,MAAQ,GAClCC,EAAKQ,EAAMC,eAAiBD,EAAMC,gBAAkB,GACpDD,EAAMjD,OAASA,IACjBwC,EAAOS,EAAMT,KAAO,GACpBC,EAAKQ,EAAMC,eAAiB,GAC5BD,EAAMjD,KAAOA,GAEXM,EAAA6C,OACJ7C,EAAIN,KAAOA,EACX,IAAI0C,EAAU,EACd,MAAMjiB,EAAOuiB,EAAc3iB,OACvB,IAAAH,EAAG8b,EAAGoH,EAAMC,EAAOC,EACvB,IAAKpjB,EAAI,EAAGA,EAAIO,EAAMP,IAEpB,GADAmjB,EAAQL,EAAc9iB,GAClBmjB,MAAAA,IAA4D,IAAnB9kB,EAAQ8kB,GACnDX,EAAUH,GAAajC,EAAKkC,EAAMC,EAAIC,EAASW,QAAA,GACtC9kB,EAAQ8kB,GACjB,IAAKrH,EAAI,EAAGoH,EAAOC,EAAMhjB,OAAQ2b,EAAIoH,EAAMpH,IACzCsH,EAAcD,EAAMrH,GAChBsH,MAAAA,GAAsD/kB,EAAQ+kB,KAChEZ,EAAUH,GAAajC,EAAKkC,EAAMC,EAAIC,EAASY,IAKnDhD,EAAAiD,UACE,MAAAC,EAAQf,EAAGpiB,OAAS,EACtB,GAAAmjB,EAAQR,EAAc3iB,OAAQ,CAChC,IAAKH,EAAI,EAAGA,EAAIsjB,EAAOtjB,WACdsiB,EAAKC,EAAGviB,IAEjBuiB,EAAG7Z,OAAO,EAAG4a,GAER,OAAAd,EAET,SAAqBe,GAAA9D,EAAO+D,EAAOZ,GACjC,MAAMrD,EAAmBE,EAAMgE,wBACzBC,EAAsB,IAAVd,EAAcjf,KAAK6B,IAAIod,EAAQ,EAAG,IAAO,EAC3D,OAAOjf,KAAKc,OAAe+e,EAAAE,GAAanE,GAAoBA,EAAmBmE,EAEjF,SAAAC,GAAqBC,EAAQxD,IACrBA,EAAAA,GAAOwD,EAAOC,WAAW,OAC3BZ,OACA7C,EAAA0D,iBACJ1D,EAAI2D,UAAU,EAAG,EAAGH,EAAOhB,MAAOgB,EAAOI,QACrC5D,EAAAiD,UAEN,SAAmBY,GAAA7D,EAAK7e,EAASW,EAAGE,GAClB8hB,GAAA9D,EAAK7e,EAASW,EAAGE,EAAG,MAEtC,SAAA8hB,GAAyB9D,EAAK7e,EAASW,EAAGE,EAAGgO,GAC3C,IAAI7R,EAAM4lB,EAASC,EAAS7gB,EAAM8gB,EAAczB,EAChD,MAAM5C,EAAQze,EAAQ+iB,WAChBC,EAAWhjB,EAAQgjB,SACnBC,EAASjjB,EAAQijB,OACnB,IAAAC,MAAmB,GAAKzgB,EACxB,GAAAgc,GAA0B,iBAAVA,IAClBzhB,EAAOyhB,EAAMthB,WACA,8BAATH,GAAiD,+BAATA,GAM1C,OALI6hB,EAAA6C,OACJ7C,EAAIsE,UAAUxiB,EAAGE,GACjBge,EAAIlC,OAAOuG,GACXrE,EAAIuE,UAAU3E,GAAQA,EAAM4C,MAAQ,GAAI5C,EAAMgE,OAAS,EAAGhE,EAAM4C,MAAO5C,EAAMgE,aACzE5D,EAAAiD,UAIJ,KAAApe,MAAMuf,IAAWA,GAAU,GAA3B,CAII,OADJpE,EAAAwE,YACI5E,GAAA,QAEF5P,EACFgQ,EAAIyE,QAAQ3iB,EAAGE,EAAGgO,EAAI,EAAGoU,EAAQ,EAAG,EAAG5gB,GAEvCwc,EAAI0E,IAAI5iB,EAAGE,EAAGoiB,EAAQ,EAAG5gB,GAEvBwc,EAAA2E,YACJ,MACG,IAAA,WACC3E,EAAA4E,OAAO9iB,EAAIyB,KAAKgI,IAAI8Y,GAAOD,EAAQpiB,EAAIuB,KAAKiJ,IAAI6X,GAAOD,GACpDC,GAAAtgB,EACHic,EAAA6E,OAAO/iB,EAAIyB,KAAKgI,IAAI8Y,GAAOD,EAAQpiB,EAAIuB,KAAKiJ,IAAI6X,GAAOD,GACpDC,GAAAtgB,EACHic,EAAA6E,OAAO/iB,EAAIyB,KAAKgI,IAAI8Y,GAAOD,EAAQpiB,EAAIuB,KAAKiJ,IAAI6X,GAAOD,GACvDpE,EAAA2E,YACJ,MACG,IAAA,cACHV,EAAwB,KAATG,EACfjhB,EAAOihB,EAASH,EACNF,EAAAxgB,KAAKiJ,IAAI6X,EAAMvgB,GAAcX,EAC7B6gB,EAAAzgB,KAAKgI,IAAI8Y,EAAMvgB,GAAcX,EACnC6c,EAAA0E,IAAI5iB,EAAIiiB,EAAS/hB,EAAIgiB,EAASC,EAAcI,EAAM/gB,EAAI+gB,EAAMxgB,GAChEmc,EAAI0E,IAAI5iB,EAAIkiB,EAAShiB,EAAI+hB,EAASE,EAAcI,EAAMxgB,EAASwgB,GAC/DrE,EAAI0E,IAAI5iB,EAAIiiB,EAAS/hB,EAAIgiB,EAASC,EAAcI,EAAKA,EAAMxgB,GACvDmc,EAAA0E,IAAI5iB,EAAIkiB,EAAShiB,EAAI+hB,EAASE,EAAcI,EAAMxgB,EAASwgB,EAAM/gB,GACjE0c,EAAA2E,YACJ,MACG,IAAA,OACH,IAAKR,EAAU,CACbhhB,EAAOI,KAAKuhB,QAAUV,EACd5B,EAAAxS,EAAIA,EAAI,EAAI7M,EACpB6c,EAAI+E,KAAKjjB,EAAI0gB,EAAOxgB,EAAImB,EAAM,EAAIqf,EAAO,EAAIrf,GAC7C,MAEKkhB,GAAAvgB,EACJ,IAAA,UACOigB,EAAAxgB,KAAKiJ,IAAI6X,GAAOD,EAChBJ,EAAAzgB,KAAKgI,IAAI8Y,GAAOD,EACtBpE,EAAA4E,OAAO9iB,EAAIiiB,EAAS/hB,EAAIgiB,GACxBhE,EAAA6E,OAAO/iB,EAAIkiB,EAAShiB,EAAI+hB,GACxB/D,EAAA6E,OAAO/iB,EAAIiiB,EAAS/hB,EAAIgiB,GACxBhE,EAAA6E,OAAO/iB,EAAIkiB,EAAShiB,EAAI+hB,GACxB/D,EAAA2E,YACJ,MACG,IAAA,WACIN,GAAAvgB,EACJ,IAAA,QACOigB,EAAAxgB,KAAKiJ,IAAI6X,GAAOD,EAChBJ,EAAAzgB,KAAKgI,IAAI8Y,GAAOD,EACtBpE,EAAA4E,OAAO9iB,EAAIiiB,EAAS/hB,EAAIgiB,GACxBhE,EAAA6E,OAAO/iB,EAAIiiB,EAAS/hB,EAAIgiB,GACxBhE,EAAA4E,OAAO9iB,EAAIkiB,EAAShiB,EAAI+hB,GACxB/D,EAAA6E,OAAO/iB,EAAIkiB,EAAShiB,EAAI+hB,GAC5B,MACG,IAAA,OACOA,EAAAxgB,KAAKiJ,IAAI6X,GAAOD,EAChBJ,EAAAzgB,KAAKgI,IAAI8Y,GAAOD,EACtBpE,EAAA4E,OAAO9iB,EAAIiiB,EAAS/hB,EAAIgiB,GACxBhE,EAAA6E,OAAO/iB,EAAIiiB,EAAS/hB,EAAIgiB,GACxBhE,EAAA4E,OAAO9iB,EAAIkiB,EAAShiB,EAAI+hB,GACxB/D,EAAA6E,OAAO/iB,EAAIkiB,EAAShiB,EAAI+hB,GACrBM,GAAAvgB,EACGigB,EAAAxgB,KAAKiJ,IAAI6X,GAAOD,EAChBJ,EAAAzgB,KAAKgI,IAAI8Y,GAAOD,EACtBpE,EAAA4E,OAAO9iB,EAAIiiB,EAAS/hB,EAAIgiB,GACxBhE,EAAA6E,OAAO/iB,EAAIiiB,EAAS/hB,EAAIgiB,GACxBhE,EAAA4E,OAAO9iB,EAAIkiB,EAAShiB,EAAI+hB,GACxB/D,EAAA6E,OAAO/iB,EAAIkiB,EAAShiB,EAAI+hB,GAC5B,MACG,IAAA,OACHA,EAAU/T,EAAIA,EAAI,EAAIzM,KAAKiJ,IAAI6X,GAAOD,EAC5BJ,EAAAzgB,KAAKgI,IAAI8Y,GAAOD,EACtBpE,EAAA4E,OAAO9iB,EAAIiiB,EAAS/hB,EAAIgiB,GACxBhE,EAAA6E,OAAO/iB,EAAIiiB,EAAS/hB,EAAIgiB,GAC5B,MACG,IAAA,OACHhE,EAAI4E,OAAO9iB,EAAGE,GACVge,EAAA6E,OAAO/iB,EAAIyB,KAAKiJ,IAAI6X,GAAOD,EAAQpiB,EAAIuB,KAAKgI,IAAI8Y,GAAOD,GAGzDpE,EAAAgF,OACA7jB,EAAQ8jB,YAAc,GACpBjF,EAAAkF,UAGR,SAAwBC,GAAAC,EAAOC,EAAMC,GAE5B,OADPA,EAASA,GAAU,IACXD,GAASD,GAASA,EAAMtjB,EAAIujB,EAAKE,KAAOD,GAAUF,EAAMtjB,EAAIujB,EAAKG,MAAQF,GACjFF,EAAMpjB,EAAIqjB,EAAKI,IAAMH,GAAUF,EAAMpjB,EAAIqjB,EAAKK,OAASJ,EAEzD,SAAAK,GAAkB3F,EAAKqF,GACjBrF,EAAA6C,OACA7C,EAAAwE,YACAxE,EAAA+E,KAAKM,EAAKE,KAAMF,EAAKI,IAAKJ,EAAKG,MAAQH,EAAKE,KAAMF,EAAKK,OAASL,EAAKI,KACrEzF,EAAA4F,OAEN,SAAAC,GAAoB7F,GACdA,EAAAiD,UAEN,SAAA6C,GAAwB9F,EAAK+F,EAAUplB,EAAQqlB,EAAM3F,GACnD,IAAK0F,EACH,OAAO/F,EAAI6E,OAAOlkB,EAAOmB,EAAGnB,EAAOqB,GAErC,GAAa,WAATqe,EAAmB,CACrB,MAAM4F,GAAYF,EAASjkB,EAAInB,EAAOmB,GAAK,EACvCke,EAAA6E,OAAOoB,EAAUF,EAAS/jB,GAC1Bge,EAAA6E,OAAOoB,EAAUtlB,EAAOqB,OACV,UAATqe,KAAuB2F,EAC5BhG,EAAA6E,OAAOkB,EAASjkB,EAAGnB,EAAOqB,GAE1Bge,EAAA6E,OAAOlkB,EAAOmB,EAAGikB,EAAS/jB,GAE5Bge,EAAA6E,OAAOlkB,EAAOmB,EAAGnB,EAAOqB,GAE9B,SAAwBkkB,GAAAlG,EAAK+F,EAAUplB,EAAQqlB,GAC7C,IAAKD,EACH,OAAO/F,EAAI6E,OAAOlkB,EAAOmB,EAAGnB,EAAOqB,GAEjCge,EAAAmG,cACFH,EAAOD,EAASK,KAAOL,EAASM,KAChCL,EAAOD,EAASO,KAAOP,EAASQ,KAChCP,EAAOrlB,EAAO0lB,KAAO1lB,EAAOylB,KAC5BJ,EAAOrlB,EAAO4lB,KAAO5lB,EAAO2lB,KAC5B3lB,EAAOmB,EACPnB,EAAOqB,GAEX,SAAAwkB,GAAoBxG,EAAKyG,EAAM3kB,EAAGE,EAAG0d,EAAMgH,EAAO,IAChD,MAAMC,EAAQ1oB,EAAQwoB,GAAQA,EAAO,CAACA,GAChCvB,EAASwB,EAAKE,YAAc,GAA0B,KAArBF,EAAKG,YAC5C,IAAIjnB,EAAGknB,EAIP,IAHI9G,EAAA6C,OACJ7C,EAAIN,KAAOA,EAAK2C,OAmBlB,SAAuBrC,EAAK0G,GACtBA,EAAKK,aACP/G,EAAIsE,UAAUoC,EAAKK,YAAY,GAAIL,EAAKK,YAAY,IAEjDhpB,EAAc2oB,EAAKvC,WACtBnE,EAAIlC,OAAO4I,EAAKvC,UAEduC,EAAKzI,QACP+B,EAAIgH,UAAYN,EAAKzI,OAEnByI,EAAKO,YACPjH,EAAIiH,UAAYP,EAAKO,WAEnBP,EAAKQ,eACPlH,EAAIkH,aAAeR,EAAKQ,cAhC1BC,CAAcnH,EAAK0G,GACd9mB,EAAI,EAAGA,EAAI+mB,EAAM5mB,SAAUH,EAC9BknB,EAAOH,EAAM/mB,GACTslB,IACEwB,EAAKG,cACP7G,EAAIoH,YAAcV,EAAKG,aAEpB9oB,EAAc2oB,EAAKE,eACtB5G,EAAIqH,UAAYX,EAAKE,aAEvB5G,EAAIsH,WAAWR,EAAMhlB,EAAGE,EAAG0kB,EAAKa,WAElCvH,EAAIwH,SAASV,EAAMhlB,EAAGE,EAAG0kB,EAAKa,UACjBE,GAAAzH,EAAKle,EAAGE,EAAG8kB,EAAMJ,GAC9B1kB,GAAK0d,EAAKG,WAERG,EAAAiD,UAmBN,SAAAwE,GAAsBzH,EAAKle,EAAGE,EAAG8kB,EAAMJ,GACjC,GAAAA,EAAKgB,eAAiBhB,EAAKiB,UAAW,CAClC,MAAAC,EAAU5H,EAAIuC,YAAYuE,GAC1BvB,EAAOzjB,EAAI8lB,EAAQC,sBACnBrC,EAAQ1jB,EAAI8lB,EAAQE,uBACpBrC,EAAMzjB,EAAI4lB,EAAQG,wBAClBrC,EAAS1jB,EAAI4lB,EAAQI,yBACrBC,EAAcvB,EAAKgB,eAAiBjC,EAAMC,GAAU,EAAIA,EAC9D1F,EAAIoH,YAAcpH,EAAIgH,UAClBhH,EAAAwE,YACAxE,EAAAqH,UAAYX,EAAKwB,iBAAmB,EACxClI,EAAI4E,OAAOW,EAAM0C,GACjBjI,EAAI6E,OAAOW,EAAOyC,GACdjI,EAAAkF,UAGR,SAAAiD,GAA4BnI,EAAK+E,GAC/B,MAAMjjB,EAACA,EAAAE,EAAGA,EAAGgO,EAAAA,EAAArC,EAAGA,SAAGyW,GAAUW,EACzB/E,EAAA0E,IAAI5iB,EAAIsiB,EAAOgE,QAASpmB,EAAIoiB,EAAOgE,QAAShE,EAAOgE,SAAUvkB,EAASP,GAAI,GAC9E0c,EAAI6E,OAAO/iB,EAAGE,EAAI2L,EAAIyW,EAAOiE,YACzBrI,EAAA0E,IAAI5iB,EAAIsiB,EAAOiE,WAAYrmB,EAAI2L,EAAIyW,EAAOiE,WAAYjE,EAAOiE,WAAY/kB,EAAIO,GAAS,GAC1Fmc,EAAI6E,OAAO/iB,EAAIkO,EAAIoU,EAAOkE,YAAatmB,EAAI2L,GAC3CqS,EAAI0E,IAAI5iB,EAAIkO,EAAIoU,EAAOkE,YAAatmB,EAAI2L,EAAIyW,EAAOkE,YAAalE,EAAOkE,YAAazkB,EAAS,GAAG,GAChGmc,EAAI6E,OAAO/iB,EAAIkO,EAAGhO,EAAIoiB,EAAOmE,UAC7BvI,EAAI0E,IAAI5iB,EAAIkO,EAAIoU,EAAOmE,SAAUvmB,EAAIoiB,EAAOmE,SAAUnE,EAAOmE,SAAU,GAAI1kB,GAAS,GAChFmc,EAAA6E,OAAO/iB,EAAIsiB,EAAOgE,QAASpmB,GAGjC,MAAMwmB,GAAc,IAAIC,OAAO,wCACzBC,GAAa,IAAID,OAAO,yEAC9B,SAAAE,GAAsB3qB,EAAOmF,GACrB,MAAAylB,GAAgB,GAAA5qB,GAAO6qB,MAAML,IACnC,IAAKI,GAA0B,WAAfA,EAAQ,GACtB,OAAc,IAAPzlB,EAGT,OADAnF,GAAS4qB,EAAQ,GACTA,EAAQ,IACX,IAAA,KACI,OAAA5qB,EACJ,IAAA,IACMA,GAAA,IAGX,OAAOmF,EAAOnF,EAGhB,SAAA8qB,GAA2B9qB,EAAO+qB,GAChC,MAAMlM,EAAM,GACNmM,EAAWvqB,EAASsqB,GACpBjpB,EAAOkpB,EAAW5qB,OAAO0B,KAAKipB,GAASA,EACvCE,EAAOxqB,EAAST,GAClBgrB,KACUjqB,EAAef,EAAMkrB,GAAOlrB,EAAM+qB,EAAMG,KACxCA,GAAAlrB,EAAMkrB,GAChB,IAAMlrB,EACV,IAAA,MAAWkrB,KAAQppB,EACb+c,EAAAqM,IAAqBD,EAAKC,IAXF,EAavB,OAAArM,EAET,SAAAsM,GAAgBnrB,GACP,OAAA8qB,GAAkB9qB,EAAO,CAACynB,IAAK,IAAKD,MAAO,IAAKE,OAAQ,IAAKH,KAAM,MAE5E,SAAA6D,GAAuBprB,GACrB,OAAO8qB,GAAkB9qB,EAAO,CAAC,UAAW,WAAY,aAAc,gBAExE,SAAAqrB,GAAmBrrB,GACjB,MAAMkE,EAAMinB,GAAOnrB,GAGZ,OAFHkE,EAAAsgB,MAAQtgB,EAAIqjB,KAAOrjB,EAAIsjB,MACvBtjB,EAAA0hB,OAAS1hB,EAAIujB,IAAMvjB,EAAIwjB,OACpBxjB,EAET,SAAAonB,GAAgBnoB,EAASooB,GACvBpoB,EAAUA,GAAW,GACrBooB,EAAWA,GAAY1K,GAASa,KAChC,IAAIvc,EAAOpE,EAAeoC,EAAQgC,KAAMomB,EAASpmB,MAC7B,iBAATA,IACTA,EAAO2Y,SAAS3Y,EAAM,KAExB,IAAIyc,EAAQ7gB,EAAeoC,EAAQye,MAAO2J,EAAS3J,OAC/CA,KAAgB,GAAAA,GAAOiJ,MAAMH,MACvBc,QAAAC,KAAK,kCAAoC7J,EAAQ,KACjDA,EAAA,IAEV,MAAMF,EAAO,CACXC,OAAQ5gB,EAAeoC,EAAQwe,OAAQ4J,EAAS5J,QAChDE,WAAY8I,GAAa5pB,EAAeoC,EAAQ0e,WAAY0J,EAAS1J,YAAa1c,GAClFA,KAAAA,EACAyc,MAAAA,EACAxC,OAAQre,EAAeoC,EAAQic,OAAQmM,EAASnM,QAChDiF,OAAQ,IAGH,OADP3C,EAAK2C,OAjWP,SAAsB3C,GACpB,OAAKA,GAAQ3hB,EAAc2hB,EAAKvc,OAASpF,EAAc2hB,EAAKC,QACnD,MAEID,EAAAE,MAAQF,EAAKE,MAAQ,IAAM,KACrCF,EAAKtC,OAASsC,EAAKtC,OAAS,IAAM,IACnCsC,EAAKvc,KAAO,MACZuc,EAAKC,OA0VO+J,CAAahK,GACpBA,EAET,SAAiBiK,GAAAC,EAAQxK,EAAS3X,EAAOoiB,GACvC,IACIjqB,EAAGO,EAAMnC,EADT8rB,GAAY,EAEX,IAAAlqB,EAAI,EAAGO,EAAOypB,EAAO7pB,OAAQH,EAAIO,IAAQP,EAE5C,GADA5B,EAAQ4rB,EAAOhqB,QACD,IAAV5B,SAGY,IAAZohB,GAA0C,mBAAVphB,IAClCA,EAAQA,EAAMohB,GACF0K,GAAA,QAEA,IAAVriB,GAAuBxJ,EAAQD,KACzBA,EAAAA,EAAMyJ,EAAQzJ,EAAM+B,QAChB+pB,GAAA,QAEA,IAAV9rB,GAIK,OAHH6rB,IAASC,IACXD,EAAKC,WAAY,GAEZ9rB,EAab,SAAA+rB,GAAuBC,EAAe5K,GACpC,OAAOhhB,OAAO+M,OAAO/M,OAAOwC,OAAOopB,GAAgB5K,GAGrD,SAAyB6K,GAAAC,EAAQC,EAAW,CAAC,IAAKC,EAAaF,EAAQX,EAAUc,EAAY,KAAMH,EAAO,KACnGpnB,EAAQymB,KACXA,EAAWe,GAAS,YAAaJ,IAEnC,MAAMvH,EAAQ,CAAAxV,CACXod,OAAOC,aAAc,SACtBC,YAAY,EACZC,QAASR,EACTS,YAAaP,EACbpI,UAAWuH,EACXqB,WAAYP,EACZQ,SAAWlM,GAAUsL,GAAgB,CAACtL,KAAUuL,GAASC,EAAUC,EAAYb,IAE1E,OAAA,IAAIuB,MAAMnI,EAAO,CACtBoI,eAAA,CAAepqB,EAAQuoB,YACdvoB,EAAOuoB,UACPvoB,EAAOqqB,aACPd,EAAO,GAAGhB,IACV,GAET+B,IAAA,CAAItqB,EAAQuoB,IACHgC,GAAQvqB,EAAQuoB,GACrB,IAuLR,SAA8BA,EAAMiB,EAAUD,EAAQiB,GAChD,IAAAntB,EACJ,IAAA,MAAWotB,KAAUjB,EAEnB,GADQnsB,EAAAssB,GAASe,GAAQD,EAAQlC,GAAOgB,GACpCpnB,EAAQ9E,GACV,OAAOstB,GAAiBpC,EAAMlrB,GAC1ButB,GAAkBrB,EAAQiB,EAAOjC,EAAMlrB,GACvCA,EA9LIwtB,CAAqBtC,EAAMiB,EAAUD,EAAQvpB,KAEvD8qB,yBAAA,CAAyB9qB,EAAQuoB,IACxBwC,QAAQD,yBAAyB9qB,EAAO+pB,QAAQ,GAAIxB,GAE7DyC,eAAiB,IACRD,QAAQC,eAAezB,EAAO,IAEvC7mB,IAAA,CAAI1C,EAAQuoB,IACH0C,GAAqBjrB,GAAQkrB,SAAS3C,GAE/C4C,QAAQnrB,GACCirB,GAAqBjrB,GAE9BwM,IAAIxM,EAAQuoB,EAAMlrB,GAChB,MAAM+tB,EAAUprB,EAAOqrB,WAAarrB,EAAOqrB,SAAW3B,KAG/C,OAFA1pB,EAAAuoB,GAAQ6C,EAAQ7C,GAAQlrB,SACxB2C,EAAOqqB,OACP,KAIb,SAAwBiB,GAAAd,EAAO/L,EAAS8M,EAAUC,GAChD,MAAMxJ,EAAQ,CACZ8H,YAAY,EACZ2B,OAAQjB,EACRkB,SAAUjN,EACVkN,UAAWJ,EACXK,OAAQ,IAAI5jB,IACZ6jB,aAAcA,GAAarB,EAAOgB,GAClCM,WAAazM,GAAQiM,GAAed,EAAOnL,EAAKkM,EAAUC,GAC1DtB,SAAWlM,GAAUsN,GAAed,EAAMN,SAASlM,GAAQS,EAAS8M,EAAUC,IAEzE,OAAA,IAAIrB,MAAMnI,EAAO,CACtBoI,eAAA,CAAepqB,EAAQuoB,YACdvoB,EAAOuoB,UACPiC,EAAMjC,IACN,GAET+B,IAAA,CAAItqB,EAAQuoB,EAAMwD,IACTxB,GAAQvqB,EAAQuoB,GACrB,IA4CR,SAA6BvoB,EAAQuoB,EAAMwD,GACzC,MAAMN,OAACA,EAAAC,SAAQA,EAAUC,UAAAA,EAAWE,aAAcG,GAAehsB,EACjE,IAAI3C,EAAQouB,EAAOlD,GACfnmB,EAAW/E,IAAU2uB,EAAYC,aAAa1D,KACxClrB,EAUZ,SAA4BkrB,EAAMlrB,EAAO2C,EAAQ+rB,GAC/C,MAAMN,OAACA,EAAAC,SAAQA,EAAUC,UAAAA,EAAAC,OAAWA,GAAU5rB,EAC1C,GAAA4rB,EAAOlpB,IAAI6lB,GACP,MAAA,IAAI2D,MAAM,uBAAyB3uB,MAAM2K,KAAK0jB,GAAQO,KAAK,MAAQ,KAAO5D,GAElFqD,EAAO3jB,IAAIsgB,GACHlrB,EAAAA,EAAMquB,EAAUC,GAAaI,GACrCH,EAAOQ,OAAO7D,GACVoC,GAAiBpC,EAAMlrB,KACzBA,EAAQutB,GAAkBa,EAAO1B,QAAS0B,EAAQlD,EAAMlrB,IAEnD,OAAAA,EArBGgvB,CAAmB9D,EAAMlrB,EAAO2C,EAAQ+rB,IAE9CzuB,EAAQD,IAAUA,EAAM+B,SAC1B/B,EAoBJ,SAAuBkrB,EAAMlrB,EAAO2C,EAAQssB,GAC1C,MAAMb,OAACA,EAAAC,SAAQA,EAAUC,UAAAA,EAAWE,aAAcG,GAAehsB,EACjE,GAAImC,EAAQupB,EAAS9rB,QAAU0sB,EAAY/D,GACjClrB,EAAAA,EAAMquB,EAAS9rB,MAAQvC,EAAM+B,aAC5B,GAAAtB,EAAST,EAAM,IAAK,CAC7B,MAAMkvB,EAAMlvB,EACNksB,EAASkC,EAAO1B,QAAQyC,WAAYpmB,IAAMmmB,IACxClvB,EAAA,GACR,IAAA,MAAWoF,KAAQ8pB,EAAK,CACtB,MAAME,EAAW7B,GAAkBrB,EAAQkC,EAAQlD,EAAM9lB,GACzDpF,EAAMuE,KAAK0pB,GAAemB,EAAUf,EAAUC,GAAaA,EAAUpD,GAAOyD,KAGzE,OAAA3uB,EAjCGqvB,CAAcnE,EAAMlrB,EAAO2C,EAAQgsB,EAAYM,cAErD3B,GAAiBpC,EAAMlrB,KACzBA,EAAQiuB,GAAejuB,EAAOquB,EAAUC,GAAaA,EAAUpD,GAAOyD,IAEjE,OAAA3uB,EAxDKsvB,CAAoB3sB,EAAQuoB,EAAMwD,KAE5CjB,yBAAA,CAAyB9qB,EAAQuoB,IACxBvoB,EAAO6rB,aAAae,QACvB7B,QAAQroB,IAAI8nB,EAAOjC,GAAQ,CAACvH,YAAY,EAAM6L,cAAc,QAAQ,EACpE9B,QAAQD,yBAAyBN,EAAOjC,GAE9CyC,eAAiB,IACRD,QAAQC,eAAeR,GAEhC9nB,IAAA,CAAI1C,EAAQuoB,IACHwC,QAAQroB,IAAI8nB,EAAOjC,GAE5B4C,QAAU,IACDJ,QAAQI,QAAQX,GAEzB1M,IAAA,CAAI9d,EAAQuoB,EAAMlrB,KAChBmtB,EAAMjC,GAAQlrB,SACP2C,EAAOuoB,IACP,KAIb,SAAAsD,GAAsBrB,EAAOsC,EAAW,CAACC,YAAY,EAAMC,WAAW,IAC9D,MAAA9L,YAACA,EAAc4L,EAASC,WAAA3L,WAAYA,EAAa0L,EAASE,UAAAC,SAAWA,EAAWH,EAASF,SAAWpC,EACnG,MAAA,CACLoC,QAASK,EACTF,WAAY7L,EACZ8L,UAAW5L,EACX6K,aAAc7pB,EAAW8e,GAAeA,EAAc,IAAMA,EAC5DoL,YAAalqB,EAAWgf,GAAcA,EAAa,IAAMA,GAG7D,MAAMsJ,GAAU,CAACD,EAAQjK,IAASiK,EAASA,EAAS1oB,EAAYye,GAAQA,EAClEmK,GAAmB,CAACpC,EAAMlrB,IAAUS,EAAST,IAAmB,aAATkrB,IACzB,OAA1B9qB,OAAAutB,eAAe3tB,IAAmBA,EAAM6vB,cAAgBzvB,QAClE,SAAiB8sB,GAAAvqB,EAAQuoB,EAAM4E,GAC7B,GAAI1vB,OAAOC,UAAUsD,eAAepD,KAAKoC,EAAQuoB,GAC/C,OAAOvoB,EAAOuoB,GAEhB,MAAMlrB,EAAQ8vB,IAEP,OADPntB,EAAOuoB,GAAQlrB,EACRA,EA4CT,SAAyB+vB,GAAAxE,EAAUL,EAAMlrB,GACvC,OAAO+E,EAAWwmB,GAAYA,EAASL,EAAMlrB,GAASurB,EAExD,MAAMyE,GAAW,CAAChtB,EAAKitB,KAAmB,IAARjtB,EAAeitB,EAC9B,iBAARjtB,EAAmBiB,EAAiBgsB,EAAQjtB,QAAO,EAC9D,SAAAktB,GAAmBxlB,EAAKylB,EAAcntB,EAAKotB,EAAgBpwB,GACzD,IAAA,MAAWiwB,KAAUE,EAAc,CAC3B,MAAAxP,EAAQqP,GAAShtB,EAAKitB,GAC5B,GAAItP,EAAO,CACTjW,EAAIE,IAAI+V,GACR,MAAM4K,EAAWwE,GAAgBpP,EAAMqD,UAAWhhB,EAAKhD,GACvD,GAAI8E,EAAQymB,IAAaA,IAAavoB,GAAOuoB,IAAa6E,EACjD,OAAA7E,OAAA,IAEU,IAAV5K,GAAmB7b,EAAQsrB,IAAmBptB,IAAQotB,EACxD,OAAA,KAGJ,OAAA,EAET,SAA2B7C,GAAA4C,EAAcf,EAAUlE,EAAMlrB,GACvD,MAAMosB,EAAagD,EAASzC,YACtBpB,EAAWwE,GAAgBX,EAASpL,UAAWkH,EAAMlrB,GACrDqwB,EAAY,IAAIF,KAAiB/D,GACjC1hB,EAAM,IAAIC,IAChBD,EAAIE,IAAI5K,GACR,IAAIgD,EAAMstB,GAAiB5lB,EAAK2lB,EAAWnF,EAAMK,GAAYL,EAAMlrB,GACnE,OAAY,OAARgD,MAGA8B,EAAQymB,IAAaA,IAAaL,IACpCloB,EAAMstB,GAAiB5lB,EAAK2lB,EAAW9E,EAAUvoB,EAAKhD,GAC1C,OAARgD,KAICipB,GAAgB/rB,MAAM2K,KAAKH,GAAM,CAAC,IAAK0hB,EAAYb,GACxD,IAQJ,SAAsB6D,EAAUlE,EAAMlrB,GACpC,MAAMiwB,EAASb,EAASxC,kBACVqD,IACZA,EAAO/E,GAAQ,IAEjB,MAAMvoB,EAASstB,EAAO/E,GAClB,GAAAjrB,EAAQ0C,IAAWlC,EAAST,GACvB,OAAAA,EAEF,OAAA2C,EAjBC4tB,CAAanB,EAAUlE,EAAMlrB,MAEvC,SAAAswB,GAA0B5lB,EAAK2lB,EAAWrtB,EAAKuoB,EAAUnmB,GACvD,KAAOpC,GACLA,EAAMktB,GAAUxlB,EAAK2lB,EAAWrtB,EAAKuoB,EAAUnmB,GAE1C,OAAApC,EAwBT,SAAAspB,GAAkBtpB,EAAKkpB,GACrB,IAAA,MAAWvL,KAASuL,EAAQ,CAC1B,IAAKvL,EACH,SAEF,MAAM3gB,EAAQ2gB,EAAM3d,GACpB,GAAI8B,EAAQ9E,GACH,OAAAA,GAIb,SAAA4tB,GAA8BjrB,GAC5B,IAAIb,EAAOa,EAAOqqB,MAIX,OAHFlrB,IACIA,EAAAa,EAAOqqB,MAIlB,SAAkCd,GAChC,MAAMxhB,EAAM,IAAIC,IAChB,IAAA,MAAWgW,KAASuL,EACP,IAAA,MAAAlpB,KAAO5C,OAAO0B,KAAK6e,GAAOwO,QAAYrsB,IAACA,EAAEghB,WAAW,OAC7DpZ,EAAIE,IAAI5H,GAGZ,OAAO9C,MAAM2K,KAAKH,GAXM8lB,CAAyB7tB,EAAO+pB,UAEjD5qB,EAWT,SAAqC2uB,GAAA7kB,EAAMsY,EAAMtb,EAAOoD,GACtD,MAAME,OAACA,GAAUN,GACX5I,IAACA,EAAM,KAAO8b,KAAK4R,SACnBC,EAAS,IAAIzwB,MAAM8L,GACrB,IAAApK,EAAGO,EAAMsH,EAAOrE,EACpB,IAAKxD,EAAI,EAAGO,EAAO6J,EAAOpK,EAAIO,IAAQP,EACpC6H,EAAQ7H,EAAIgH,EACZxD,EAAO8e,EAAKza,GACZknB,EAAO/uB,GAAK,CACV4P,EAAGtF,EAAO0kB,MAAM3sB,EAAiBmB,EAAMpC,GAAMyG,IAG1C,OAAAknB,EAGT,MAAME,GAAUlwB,OAAOkwB,SAAW,MAC5BC,GAAW,CAACjlB,EAAQjK,IAAMA,EAAIiK,EAAO9J,SAAW8J,EAAOjK,GAAGmvB,MAAQllB,EAAOjK,GACzEovB,GAAgB7O,GAA4B,MAAdA,EAAoB,IAAM,IAC9D,SAAqB8O,GAAAC,EAAYC,EAAaC,EAAY/jB,GAClD,MAAA0a,EAAWmJ,EAAWH,KAAOI,EAAcD,EAC3CG,EAAUF,EACVG,EAAOF,EAAWL,KAAOI,EAAcC,EACvCG,EAAMjpB,EAAsB+oB,EAAStJ,GACrCyJ,EAAMlpB,EAAsBgpB,EAAMD,GACpC,IAAAI,EAAMF,GAAaA,EAAAC,GACnBE,EAAMF,GAAaD,EAAAC,GACjBC,EAAA5qB,MAAM4qB,GAAO,EAAIA,EACjBC,EAAA7qB,MAAM6qB,GAAO,EAAIA,EACvB,MAAMC,EAAKtkB,EAAIokB,EACTG,EAAKvkB,EAAIqkB,EACR,MAAA,CACL3J,SAAU,CACRjkB,EAAGutB,EAAQvtB,EAAI6tB,GAAML,EAAKxtB,EAAIikB,EAASjkB,GACvCE,EAAGqtB,EAAQrtB,EAAI2tB,GAAML,EAAKttB,EAAI+jB,EAAS/jB,IAEzCstB,KAAM,CACJxtB,EAAGutB,EAAQvtB,EAAI8tB,GAAMN,EAAKxtB,EAAIikB,EAASjkB,GACvCE,EAAGqtB,EAAQrtB,EAAI4tB,GAAMN,EAAKttB,EAAI+jB,EAAS/jB,KAuD7C,SAA6B6tB,GAAAhmB,EAAQsW,EAAY,KAC/C,MAAM2P,EAAYd,GAAa7O,GACzB4P,EAAYlmB,EAAO9J,OACnBiwB,EAAS9xB,MAAM6xB,GAAW/K,KAAK,GAC/BiL,EAAK/xB,MAAM6xB,GACjB,IAAInwB,EAAGswB,EAAaC,EAChBC,EAAatB,GAASjlB,EAAQ,GAClC,IAAKjK,EAAI,EAAGA,EAAImwB,IAAanwB,EAI3B,GAHcswB,EAAAC,EACCA,EAAAC,EACFA,EAAAtB,GAASjlB,EAAQjK,EAAI,GAC7BuwB,EAAL,CAGA,GAAIC,EAAY,CACR,MAAAC,EAAaD,EAAWjQ,GAAagQ,EAAahQ,GACxD6P,EAAOpwB,GAAoB,IAAfywB,KAA+BP,GAAaK,EAAaL,IAAcO,EAAa,EAE/FJ,EAAArwB,GAAMswB,EACJE,EACAnsB,EAAK+rB,EAAOpwB,EAAI,MAAQqE,EAAK+rB,EAAOpwB,IAAO,GACpCowB,EAAApwB,EAAI,GAAKowB,EAAOpwB,IAAM,EAFhBowB,EAAOpwB,EAAI,GADNowB,EAAOpwB,IArElC,SAAwBiK,EAAQmmB,EAAQC,GACtC,MAAMF,EAAYlmB,EAAO9J,OACrB,IAAAuwB,EAAQC,EAAOC,EAAMC,EAAkBN,EACvCC,EAAatB,GAASjlB,EAAQ,GAClC,IAAA,IAASjK,EAAI,EAAGA,EAAImwB,EAAY,IAAKnwB,EACpBuwB,EAAAC,EACFA,EAAAtB,GAASjlB,EAAQjK,EAAI,GAC7BuwB,GAAiBC,IAGlB9rB,EAAa0rB,EAAOpwB,GAAI,EAAGivB,IAC1BoB,EAAArwB,GAAKqwB,EAAGrwB,EAAI,GAAK,GAGb0wB,EAAAL,EAAGrwB,GAAKowB,EAAOpwB,GAChB2wB,EAAAN,EAAGrwB,EAAI,GAAKowB,EAAOpwB,GAC3B6wB,EAAmBltB,KAAKiB,IAAI8rB,EAAQ,GAAK/sB,KAAKiB,IAAI+rB,EAAO,GACrDE,GAAoB,IAGjBD,EAAA,EAAIjtB,KAAK2C,KAAKuqB,GAClBR,EAAArwB,GAAK0wB,EAASE,EAAOR,EAAOpwB,GAC/BqwB,EAAGrwB,EAAI,GAAK2wB,EAAQC,EAAOR,EAAOpwB,MAoDpC8wB,CAAe7mB,EAAQmmB,EAAQC,GAjDjC,SAAyBpmB,EAAQomB,EAAI9P,EAAY,KAC/C,MAAM2P,EAAYd,GAAa7O,GACzB4P,EAAYlmB,EAAO9J,OACzB,IAAI4wB,EAAOT,EAAaC,EACpBC,EAAatB,GAASjlB,EAAQ,GAClC,IAAA,IAASjK,EAAI,EAAGA,EAAImwB,IAAanwB,EAAG,CAIlC,GAHcswB,EAAAC,EACCA,EAAAC,EACFA,EAAAtB,GAASjlB,EAAQjK,EAAI,IAC7BuwB,EACH,SAEF,MAAMS,EAAST,EAAahQ,GACtB0Q,EAASV,EAAaL,GACxBI,IACOS,GAAAC,EAASV,EAAY/P,IAAc,EAC/BgQ,EAAA,MAAMhQ,KAAeyQ,EAASD,EAC3CR,EAAa,MAAML,KAAee,EAASF,EAAQV,EAAGrwB,IAEpDwwB,IACOO,GAAAP,EAAWjQ,GAAayQ,GAAU,EAC9BT,EAAA,MAAMhQ,KAAeyQ,EAASD,EAC3CR,EAAa,MAAML,KAAee,EAASF,EAAQV,EAAGrwB,KA4B1DkxB,CAAgBjnB,EAAQomB,EAAI9P,GAE9B,SAAyB4Q,GAAAC,EAAI7rB,EAAKC,GAChC,OAAO7B,KAAK6B,IAAI7B,KAAK4B,IAAI6rB,EAAI5rB,GAAMD,GAuBrC,SAAA8rB,GAAoCpnB,EAAQ1I,EAASkkB,EAAM6L,EAAM/Q,GAC3D,IAAAvgB,EAAGO,EAAMilB,EAAO+L,EAIhB,GAHAhwB,EAAQiwB,WACVvnB,EAASA,EAAOsjB,QAAQ6D,IAAQA,EAAGjC,QAEE,aAAnC5tB,EAAQkwB,uBACVxB,GAAoBhmB,EAAQsW,OACvB,CACL,IAAImR,EAAOJ,EAAOrnB,EAAOA,EAAO9J,OAAS,GAAK8J,EAAO,GAChD,IAAAjK,EAAI,EAAGO,EAAO0J,EAAO9J,OAAQH,EAAIO,IAAQP,EAC5CwlB,EAAQvb,EAAOjK,GACfuxB,EAAgBlC,GACdqC,EACAlM,EACAvb,EAAOtG,KAAK4B,IAAIvF,EAAI,EAAGO,GAAQ+wB,EAAO,EAAI,IAAM/wB,GAChDgB,EAAQowB,SAEJnM,EAAAgB,KAAO+K,EAAcpL,SAASjkB,EAC9BsjB,EAAAkB,KAAO6K,EAAcpL,SAAS/jB,EAC9BojB,EAAAiB,KAAO8K,EAAc7B,KAAKxtB,EAC1BsjB,EAAAmB,KAAO4K,EAAc7B,KAAKttB,EACzBsvB,EAAAlM,EAGPjkB,EAAQqwB,iBA7Cd,SAAyB3nB,EAAQwb,GAC3B,IAAAzlB,EAAGO,EAAMilB,EAAOqM,EAAQC,EACxBC,EAAaxM,GAAetb,EAAO,GAAIwb,GACtC,IAAAzlB,EAAI,EAAGO,EAAO0J,EAAO9J,OAAQH,EAAIO,IAAQP,EAC/B8xB,EAAAD,EACJA,EAAAE,EACTA,EAAa/xB,EAAIO,EAAO,GAAKglB,GAAetb,EAAOjK,EAAI,GAAIylB,GACtDoM,IAGLrM,EAAQvb,EAAOjK,GACX8xB,IACFtM,EAAMgB,KAAO2K,GAAgB3L,EAAMgB,KAAMf,EAAKE,KAAMF,EAAKG,OACzDJ,EAAMkB,KAAOyK,GAAgB3L,EAAMkB,KAAMjB,EAAKI,IAAKJ,EAAKK,SAEtDiM,IACFvM,EAAMiB,KAAO0K,GAAgB3L,EAAMiB,KAAMhB,EAAKE,KAAMF,EAAKG,OACzDJ,EAAMmB,KAAOwK,GAAgB3L,EAAMmB,KAAMlB,EAAKI,IAAKJ,EAAKK,UA6B1D8L,CAAgB3nB,EAAQwb,GAI5B,SAA2BuM,KACzB,MAAyB,oBAAX7oB,QAA8C,oBAAb8oB,SAEjD,SAAAC,GAAwBC,GACtB,IAAI9D,EAAS8D,EAAQC,WAId,OAHH/D,GAAgC,wBAAtBA,EAAO3vB,aACnB2vB,EAASA,EAAOgE,MAEXhE,EAET,SAAuBiE,GAAAC,EAAY3T,EAAM4T,GACnC,IAAAC,EASG,MARmB,iBAAfF,GACTE,EAAgBvW,SAASqW,EAAY,KACD,IAAhCA,EAAWlxB,QAAQ,OACLoxB,EAAAA,EAAgB,IAAM7T,EAAKwT,WAAWI,KAGxCC,EAAAF,EAEXE,EAET,MAAMC,GAAoBC,GAAYxpB,OAAOupB,iBAAiBC,EAAS,MAIvE,MAAMC,GAAY,CAAC,MAAO,QAAS,SAAU,QAC7C,SAA4BC,GAAAC,EAAQ9S,EAAO+S,GACzC,MAAMC,EAAS,GACND,EAAAA,EAAS,IAAMA,EAAS,GACjC,IAAA,IAAS/yB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,MAAMizB,EAAML,GAAU5yB,GACtBgzB,EAAOC,GAAO1zB,WAAWuzB,EAAO9S,EAAQ,IAAMiT,EAAMF,KAAY,EAI3D,OAFAC,EAAApQ,MAAQoQ,EAAOrN,KAAOqN,EAAOpN,MAC7BoN,EAAAhP,OAASgP,EAAOnN,IAAMmN,EAAOlN,OAC7BkN,EAoBT,SAAAE,GAA6BC,EAAK1T,GAChC,GAAI,WAAY0T,EACP,OAAAA,EAEH,MAAAvP,OAACA,0BAAQH,GAA2BhE,EACpCO,EAAQ0S,GAAiB9O,GACzBwP,EAAgC,eAApBpT,EAAMqT,UAClBC,EAAWT,GAAmB7S,EAAO,WACrCuT,EAAUV,GAAmB7S,EAAO,SAAU,UAC9C9d,EAACA,EAAAE,EAAGA,EAAGoxB,IAAAA,GA1Bf,SAA2B1tB,EAAG8d,GAC5B,MAAM6P,EAAU3tB,EAAE2tB,QACZ5yB,EAAS4yB,GAAWA,EAAQtzB,OAASszB,EAAQ,GAAK3tB,GAClD4tB,QAACA,UAASC,GAAW9yB,EAC3B,IACIqB,EAAGE,EADHoxB,GAAM,EAEV,GAPmB,EAACtxB,EAAGE,EAAGrB,KAAYmB,EAAI,GAAKE,EAAI,MAAQrB,IAAWA,EAAO6yB,YAOzEC,CAAaH,EAASC,EAAS7tB,EAAE/E,QAC/BmB,EAAAwxB,EACAtxB,EAAAuxB,MACC,CACL,MAAMxO,EAAOvB,EAAOkQ,wBAChB5xB,EAAArB,EAAOkzB,QAAU5O,EAAKQ,KACtBvjB,EAAAvB,EAAOmzB,QAAU7O,EAAKU,IACpB2N,GAAA,EAED,MAAA,CAACtxB,EAAAA,EAAGE,EAAAA,EAAGoxB,IAAAA,GAWMS,CAAkBd,EAAKvP,GACrCO,EAAUmP,EAAS3N,MAAQ6N,GAAOD,EAAQ5N,MAC1CvB,EAAUkP,EAASzN,KAAO2N,GAAOD,EAAQ1N,KAC3C,IAAAjD,MAACA,SAAOoB,GAAUvE,EAKf,OAJH2T,IACOxQ,GAAA0Q,EAAS1Q,MAAQ2Q,EAAQ3Q,MACxBoB,GAAAsP,EAAStP,OAASuP,EAAQvP,QAE/B,CACL9hB,EAAGyB,KAAKc,SAAW0f,GAAWvB,EAAQgB,EAAOhB,MAAQa,GACrDrhB,EAAGuB,KAAKc,SAAW2f,GAAWJ,EAASJ,EAAOI,OAASP,IA4B3D,MAAMyQ,GAASjyB,GAAK0B,KAAKc,MAAU,GAAJxC,GAAU,GACzC,SAAwBkyB,GAAAvQ,EAAQwQ,EAASC,EAAUC,GACjD,MAAMtU,EAAQ0S,GAAiB9O,GACzB2Q,EAAU1B,GAAmB7S,EAAO,UACpC2H,EAAW2K,GAActS,EAAM2H,SAAU/D,EAAQ,gBAAkB9f,EACnE0wB,EAAYlC,GAActS,EAAMwU,UAAW5Q,EAAQ,iBAAmB9f,EACtE2wB,EA/BR,SAA0B7Q,EAAQhB,EAAOoB,GACvC,IAAI2D,EAAU6M,EACV,QAAU,IAAV5R,QAAkC,IAAXoB,EAAsB,CAC/C,MAAM0Q,EAAYxC,GAAetO,GACjC,GAAK8Q,EAGE,CACL,MAAMvP,EAAOuP,EAAUZ,wBACjBa,EAAiBjC,GAAiBgC,GAClCE,EAAkB/B,GAAmB8B,EAAgB,SAAU,SAC/DE,EAAmBhC,GAAmB8B,EAAgB,WAC5D/R,EAAQuC,EAAKvC,MAAQiS,EAAiBjS,MAAQgS,EAAgBhS,MAC9DoB,EAASmB,EAAKnB,OAAS6Q,EAAiB7Q,OAAS4Q,EAAgB5Q,OACtD2D,EAAA2K,GAAcqC,EAAehN,SAAU+M,EAAW,eACjDF,EAAAlC,GAAcqC,EAAeH,UAAWE,EAAW,qBAV/D9R,EAAQgB,EAAOkR,YACf9Q,EAASJ,EAAOmR,aAYb,MAAA,CACLnS,MAAAA,EACAoB,OAAAA,EACA2D,SAAUA,GAAY7jB,EACtB0wB,UAAWA,GAAa1wB,GASJkxB,CAAiBpR,EAAQwQ,EAASC,GACpD,IAAAzR,MAACA,SAAOoB,GAAUyQ,EAClB,GAAoB,gBAApBzU,EAAMqT,UAA6B,CAC/B,MAAAE,EAAUV,GAAmB7S,EAAO,SAAU,SAC9CsT,EAAWT,GAAmB7S,EAAO,WAClC4C,GAAA0Q,EAAS1Q,MAAQ2Q,EAAQ3Q,MACxBoB,GAAAsP,EAAStP,OAASuP,EAAQvP,OAS/B,OAPPpB,EAAQjf,KAAK6B,IAAI,EAAGod,EAAQ2R,EAAQ3R,OAC3BoB,EAAArgB,KAAK6B,IAAI,EAAG8uB,EAAc3wB,KAAKkB,MAAM+d,EAAQ0R,GAAetQ,EAASuQ,EAAQvQ,QACtFpB,EAAQsR,GAAOvwB,KAAK4B,IAAIqd,EAAO+E,EAAU8M,EAAc9M,WACvD3D,EAASkQ,GAAOvwB,KAAK4B,IAAIye,EAAQwQ,EAAWC,EAAcD,YACtD5R,IAAUoB,IACZA,EAASkQ,GAAOtR,EAAQ,IAEnB,CACLA,MAAAA,EACAoB,OAAAA,GAGJ,SAAqBiR,GAAAxV,EAAOyV,EAAYC,GACtC,MAAMC,EAAaF,GAAc,EAC3BG,EAAe1xB,KAAKkB,MAAM4a,EAAMuE,OAASoR,GACzCE,EAAc3xB,KAAKkB,MAAM4a,EAAMmD,MAAQwS,GAC7C3V,EAAMuE,OAASqR,EAAeD,EAC9B3V,EAAMmD,MAAQ0S,EAAcF,EAC5B,MAAMxR,EAASnE,EAAMmE,OAKjB,OAJAA,EAAO5D,QAAUmV,IAAgBvR,EAAO5D,MAAMgE,SAAWJ,EAAO5D,MAAM4C,SACjEgB,EAAA5D,MAAMgE,OAAS,GAAGvE,EAAMuE,WACxBJ,EAAA5D,MAAM4C,MAAQ,GAAGnD,EAAMmD,YAE5BnD,EAAMgE,0BAA4B2R,GAC/BxR,EAAOI,SAAWqR,GAClBzR,EAAOhB,QAAU0S,KACtB7V,EAAMgE,wBAA0B2R,EAChCxR,EAAOI,OAASqR,EAChBzR,EAAOhB,MAAQ0S,EACf7V,EAAMW,IAAImV,aAAaH,EAAY,EAAG,EAAGA,EAAY,EAAG,IACjD,GAIX,MAAMI,GAAgC,WACpC,IAAIC,GAAmB,EACnB,IACF,MAAMl0B,EAAU,CAAAm0B,cAGL,OADYD,GAAA,GACZ,IAGJtsB,OAAAwsB,iBAAiB,OAAQ,KAAMp0B,GAC/B4H,OAAAysB,oBAAoB,OAAQ,KAAMr0B,GAAA,MAClCuE,IAEF,OAAA2vB,EAb6B,GAetC,SAAAI,GAAsBlD,EAASrtB,GACvB,MAAAlH,EAhJR,SAAkB03B,EAAIxwB,GACb,OAAAotB,GAAiBoD,GAAIC,iBAAiBzwB,GA+I/B0wB,CAASrD,EAASrtB,GAC1B0jB,EAAU5qB,GAASA,EAAM6qB,MAAM,qBAC9B,OAAAD,GAAWA,EAAQ,QAAK,EAGjC,SAAsBiN,GAAAplB,EAAIC,EAAIrF,EAAGgV,GACxB,MAAA,CACLve,EAAG2O,EAAG3O,EAAIuJ,GAAKqF,EAAG5O,EAAI2O,EAAG3O,GACzBE,EAAGyO,EAAGzO,EAAIqJ,GAAKqF,EAAG1O,EAAIyO,EAAGzO,IAG7B,SAA+B8zB,GAAArlB,EAAIC,EAAIrF,EAAGgV,GACjC,MAAA,CACLve,EAAG2O,EAAG3O,EAAIuJ,GAAKqF,EAAG5O,EAAI2O,EAAG3O,GACzBE,EAAY,WAATqe,EAAoBhV,EAAI,GAAMoF,EAAGzO,EAAI0O,EAAG1O,EAChC,UAATqe,EAAmBhV,EAAI,EAAIoF,EAAGzO,EAAI0O,EAAG1O,EACrCqJ,EAAI,EAAIqF,EAAG1O,EAAIyO,EAAGzO,GAGxB,SAA8B+zB,GAAAtlB,EAAIC,EAAIrF,EAAGgV,GACvC,MAAM2V,EAAM,CAACl0B,EAAG2O,EAAG4V,KAAMrkB,EAAGyO,EAAG8V,MACzB0P,EAAM,CAACn0B,EAAG4O,EAAG0V,KAAMpkB,EAAG0O,EAAG4V,MACzBrjB,EAAI4yB,GAAaplB,EAAIulB,EAAK3qB,GAC1BnI,EAAI2yB,GAAaG,EAAKC,EAAK5qB,GAC3B4D,EAAI4mB,GAAaI,EAAKvlB,EAAIrF,GAC1BkC,EAAIsoB,GAAa5yB,EAAGC,EAAGmI,GACvB3F,EAAImwB,GAAa3yB,EAAG+L,EAAG5D,GACtB,OAAAwqB,GAAatoB,EAAG7H,EAAG2F,GAG5B,MAAM6qB,GAAY,IAAIC,IAWtB,SAAsBC,GAAAC,EAAKC,EAAQn1B,GAC1B,OAXT,SAAyBm1B,EAAQn1B,GAC/BA,EAAUA,GAAW,GACf,MAAAo1B,EAAWD,EAASE,KAAKC,UAAUt1B,GACrC,IAAAu1B,EAAYR,GAAUjL,IAAIsL,GAKvB,OAJFG,IACSA,EAAA,IAAIC,KAAKC,aAAaN,EAAQn1B,GAC1C+0B,GAAUzX,IAAI8X,EAAUG,IAEnBA,EAGAG,CAAgBP,EAAQn1B,GAAS21B,OAAOT,GA2CjD,SAAuBU,GAAAC,EAAKC,EAAOzU,GAC1B,OAAAwU,EAzCqB,SAASC,EAAOzU,GACrC,MAAA,CACL1gB,EAAEA,GACOm1B,EAAQA,EAAQzU,EAAQ1gB,EAEjCqL,SAAS6C,GACCwS,EAAAxS,GAEViX,UAAUxd,GACM,WAAVA,EACKA,EAEQ,UAAVA,EAAoB,OAAS,QAEtCytB,MAAA,CAAMp1B,EAAG9D,IACA8D,EAAI9D,EAEbm5B,WAAA,CAAWr1B,EAAGs1B,IACLt1B,EAAIs1B,GAuBFC,CAAsBJ,EAAOzU,GAlBnC,CACL1gB,EAAEA,GACOA,EAETqL,SAAS6C,KAETiX,UAAUxd,GACDA,EAETytB,MAAA,CAAMp1B,EAAG9D,IACA8D,EAAI9D,EAEbm5B,WAAA,CAAWr1B,EAAGw1B,IACLx1B,GAOb,SAAAy1B,GAA+BvX,EAAKwX,GAClC,IAAI5X,EAAO6X,EACO,QAAdD,GAAqC,QAAdA,IACzB5X,EAAQI,EAAIwD,OAAO5D,MACR6X,EAAA,CACT7X,EAAM+V,iBAAiB,aACvB/V,EAAM8X,oBAAoB,cAEtB9X,EAAA+X,YAAY,YAAaH,EAAW,aAC1CxX,EAAI4X,kBAAoBH,GAG5B,SAAAI,GAA8B7X,EAAKyX,QAChB,IAAbA,WACKzX,EAAI4X,kBACX5X,EAAIwD,OAAO5D,MAAM+X,YAAY,YAAaF,EAAS,GAAIA,EAAS,KAIpE,SAAAK,GAAoB5yB,GAClB,MAAiB,UAAbA,EACK,CACL6yB,QAASpxB,GACTqxB,QAASvxB,EACTwxB,UAAWvxB,GAGR,CACLqxB,QAAS1wB,GACT2wB,QAAS,CAAC/0B,EAAGC,IAAMD,EAAIC,EACvB+0B,UAAgBn2B,GAAAA,GAGpB,SAAAo2B,IAA0BtxB,MAACA,EAAAC,IAAOA,EAAKmD,MAAAA,EAAAknB,KAAOA,QAAMtR,IAC3C,MAAA,CACLhZ,MAAOA,EAAQoD,EACfnD,IAAKA,EAAMmD,EACXknB,KAAMA,IAAerqB,EAAAD,EAAQ,GAAKoD,GAAU,EAC5C4V,MAAAA,GA2BJ,SAAuBuY,GAAAC,EAASvuB,EAAQwuB,GACtC,IAAKA,EACH,MAAO,CAACD,GAEV,MAAMlzB,SAACA,EAAU0B,MAAO0xB,EAAYzxB,IAAK0xB,GAAYF,EAC/CruB,EAAQH,EAAO9J,QACfi4B,QAACA,EAAAD,QAASA,EAASE,UAAAA,GAAaH,GAAW5yB,IAC3C0B,MAACA,EAAOC,IAAAA,EAAAqqB,KAAKA,QAAMtR,GA/B3B,SAAoBwY,EAASvuB,EAAQwuB,GACnC,MAAMnzB,SAACA,EAAU0B,MAAO0xB,EAAYzxB,IAAK0xB,GAAYF,GAC/CN,QAACA,EAASE,UAAAA,GAAaH,GAAW5yB,GAClC8E,EAAQH,EAAO9J,OACjB,IACAH,EAAGO,GADHyG,MAACA,EAAOC,IAAAA,EAAAqqB,KAAKA,GAAQkH,EAEzB,GAAIlH,EAAM,CAGR,IAFStqB,GAAAoD,EACFnD,GAAAmD,EACFpK,EAAI,EAAGO,EAAO6J,EAAOpK,EAAIO,GACvB43B,EAAQE,EAAUpuB,EAAOjD,EAAQoD,GAAO9E,IAAYozB,EAAYC,KADjC34B,EAIpCgH,IACAC,IAEOD,GAAAoD,EACFnD,GAAAmD,EAKT,OAHInD,EAAMD,IACDC,GAAAmD,GAEF,CAACpD,MAAAA,EAAOC,IAAAA,EAAKqqB,KAAAA,EAAMtR,MAAOwY,EAAQxY,OASP4Y,CAAWJ,EAASvuB,EAAQwuB,GACxDzF,EAAS,GACf,IAEI50B,EAAOonB,EAAOqT,EAFdC,GAAS,EACTC,EAAW,KAET,MAEAC,EAAc,IAAMF,GAFEX,EAAQO,EAAYG,EAAWz6B,IAA6C,IAAnCg6B,EAAQM,EAAYG,GAGnFI,EAAa,KAAOH,GAF6B,IAA7BV,EAAQO,EAAUv6B,IAAgB+5B,EAAQQ,EAAUE,EAAWz6B,GAGzF,IAAA,IAAS4B,EAAIgH,EAAO0qB,EAAO1qB,EAAOhH,GAAKiH,IAAOjH,EAC5CwlB,EAAQvb,EAAOjK,EAAIoK,GACfob,EAAM2J,OAGV/wB,EAAQi6B,EAAU7S,EAAMlgB,IACpBlH,IAAUy6B,IAGLC,EAAAX,EAAQ/5B,EAAOs6B,EAAYC,GACnB,OAAbI,GAAqBC,MACvBD,EAA0C,IAA/BX,EAAQh6B,EAAOs6B,GAAoB14B,EAAI0xB,GAEnC,OAAbqH,GAAqBE,MAChBjG,EAAArwB,KAAK21B,GAAiB,CAACtxB,MAAO+xB,EAAU9xB,IAAKjH,EAAGsxB,KAAAA,EAAMlnB,MAAAA,EAAO4V,MAAAA,KACzD+Y,EAAA,MAENrH,EAAA1xB,EACK64B,EAAAz6B,IAKP,OAHU,OAAb26B,GACF/F,EAAOrwB,KAAK21B,GAAiB,CAACtxB,MAAO+xB,EAAU9xB,IAAAA,EAAKqqB,KAAAA,EAAMlnB,MAAAA,EAAO4V,MAAAA,KAE5DgT,EAET,SAAAkG,GAAwBhS,EAAMuR,GAC5B,MAAMzF,EAAS,GACTmG,EAAWjS,EAAKiS,SACtB,IAAA,IAASn5B,EAAI,EAAGA,EAAIm5B,EAASh5B,OAAQH,IAAK,CACxC,MAAMo5B,EAAMb,GAAcY,EAASn5B,GAAIknB,EAAKjd,OAAQwuB,GAChDW,EAAIj5B,QACN6yB,EAAOrwB,QAAQy2B,GAGZ,OAAApG,EAkET,SAAuBqG,GAAAnS,EAAMiS,EAAUlvB,EAAQqvB,GAC7C,OAAKA,GAAmBA,EAAezM,YAAe5iB,EAKxD,SAAyBid,EAAMiS,EAAUlvB,EAAQqvB,GACzC,MAAAC,EAAerS,EAAKsS,OAAO3V,aAC3B4V,EAAYC,GAAUxS,EAAK3lB,UAC1Bo4B,cAAej5B,EAAca,SAASiwB,SAACA,IAAatK,EACrD9c,EAAQH,EAAO9J,OACf6yB,EAAS,GACf,IAAI4G,EAAYH,EACZzyB,EAAQmyB,EAAS,GAAGnyB,MACpBhH,EAAIgH,EACU,SAAA6yB,EAAA1yB,EAAGrB,EAAGgI,EAAGgsB,GACnB,MAAAC,EAAMvI,GAAgB,EAAA,EAC5B,GAAIrqB,IAAMrB,EAAV,CAIO,IADFqB,GAAAiD,EACEH,EAAO9C,EAAIiD,GAAO+kB,MAClBhoB,GAAA4yB,EAEA,KAAA9vB,EAAOnE,EAAIsE,GAAO+kB,MAClBrpB,GAAAi0B,EAEH5yB,EAAIiD,GAAUtE,EAAIsE,IACb4oB,EAAArwB,KAAK,CAACqE,MAAOG,EAAIiD,EAAOnD,IAAKnB,EAAIsE,EAAOknB,KAAMxjB,EAAGkS,MAAO8Z,IACnDF,EAAAE,EACZ9yB,EAAQlB,EAAIsE,IAGhB,IAAA,MAAWouB,KAAWW,EAAU,CACtBnyB,EAAAwqB,EAAWxqB,EAAQwxB,EAAQxxB,MAC/B,IACAgZ,EADA0R,EAAOznB,EAAOjD,EAAQoD,GAE1B,IAAKpK,EAAIgH,EAAQ,EAAGhH,GAAKw4B,EAAQvxB,IAAKjH,IAAK,CACnC,MAAAoxB,EAAKnnB,EAAOjK,EAAIoK,GACtB4V,EAAQ0Z,GAAUJ,EAAezM,WAAW1C,GAAcoP,EAAc,CACtEh7B,KAAM,UACNy7B,GAAItI,EACJ7gB,GAAIugB,EACJ6I,eAAkB,GAAK7vB,EACvB8vB,YAAal6B,EAAIoK,EACjB1J,aAAAA,MAEEy5B,GAAana,EAAO4Z,IACtBC,EAAS7yB,EAAOhH,EAAI,EAAGw4B,EAAQlH,KAAMsI,GAEhClI,EAAAN,EACKwI,EAAA5Z,EAEVhZ,EAAQhH,EAAI,GACd65B,EAAS7yB,EAAOhH,EAAI,EAAGw4B,EAAQlH,KAAMsI,GAGlC,OAAA5G,EArDAoH,CAAgBlT,EAAMiS,EAAUlvB,EAAQqvB,GAFtCH,EAyDX,SAAAO,GAAmBn4B,GACV,MAAA,CACL6d,gBAAiB7d,EAAQ6d,gBACzBib,eAAgB94B,EAAQ84B,eACxBC,WAAY/4B,EAAQ+4B,WACpBC,iBAAkBh5B,EAAQg5B,iBAC1BC,gBAAiBj5B,EAAQi5B,gBACzBnV,YAAa9jB,EAAQ8jB,YACrBhG,YAAa9d,EAAQ8d,aAGzB,SAAA8a,GAAsBna,EAAO4Z,GAC3B,OAAOA,GAAahD,KAAKC,UAAU7W,KAAW4W,KAAKC,UAAU+C;;;;;;GCv6E/D,IAAIa,GAAW,IAvIf,MACEltB,cACE2P,KAAKwd,SAAW,KAChBxd,KAAKyd,QAAU,IAAIpE,IACnBrZ,KAAK0d,UAAW,EAChB1d,KAAK2d,eAAY,EAEnBttB,QAAQkS,EAAOqb,EAAOC,EAAMx8B,GACpB,MAAAy8B,EAAYF,EAAMryB,UAAUlK,GAC5B08B,EAAWH,EAAMI,SACbF,EAAAryB,YAAclJ,EAAG,CACzBggB,MAAAA,EACA0b,QAASL,EAAMK,QACfF,SAAAA,EACAG,YAAaz3B,KAAK4B,IAAIw1B,EAAOD,EAAM9zB,MAAOi0B,OAG9C1tB,WACM2P,KAAKwd,WAGTxd,KAAK0d,UAAW,EAChB1d,KAAKwd,SAAWxxB,GAAiBvK,KAAKwK,QAAQ,KACvC+T,KAAAme,UACLne,KAAKwd,SAAW,KACZxd,KAAK0d,UACF1d,KAAAoe,eAIX/tB,QAAQwtB,EAAOQ,KAAKC,OAClB,IAAIC,EAAY,EAChBve,KAAKyd,QAAQhyB,SAAQ,CAACmyB,EAAOrb,KAC3B,IAAKqb,EAAMY,UAAYZ,EAAMjyB,MAAM1I,OACjC,OAEF,MAAM0I,EAAQiyB,EAAMjyB,MAChB,IAEArF,EAFAxD,EAAI6I,EAAM1I,OAAS,EACnBw7B,GAAO,EAEJ,KAAA37B,GAAK,IAAKA,EACfwD,EAAOqF,EAAM7I,GACTwD,EAAKo4B,SACHp4B,EAAKq4B,OAASf,EAAMI,WACtBJ,EAAMI,SAAW13B,EAAKq4B,QAExBr4B,EAAKs4B,KAAKf,GACHY,GAAA,IAED9yB,EAAA7I,GAAK6I,EAAMA,EAAM1I,OAAS,GAC1B0I,EAAAkzB,OAGNJ,IACIlc,EAAAuc,OACD9e,KAAA+e,QAAQxc,EAAOqb,EAAOC,EAAM,aAE9BlyB,EAAM1I,SACT26B,EAAMY,SAAU,EACXxe,KAAA+e,QAAQxc,EAAOqb,EAAOC,EAAM,YACjCD,EAAMK,SAAU,GAElBM,GAAa5yB,EAAM1I,UAErB+c,KAAK2d,UAAYE,EACC,IAAdU,IACFve,KAAK0d,UAAW,GAGpBrtB,UAAUkS,GACR,MAAMyc,EAAShf,KAAKyd,QAChB,IAAAG,EAAQoB,EAAO7Q,IAAI5L,GAahB,OAZFqb,IACKA,EAAA,CACNY,SAAS,EACTP,SAAS,EACTtyB,MAAO,GACPJ,UAAW,CACT0zB,SAAU,GACVC,SAAU,KAGdF,EAAOrd,IAAIY,EAAOqb,IAEbA,EAETvtB,OAAOkS,EAAO4c,EAAOC,GACnBpf,KAAKqf,UAAU9c,GAAOhX,UAAU4zB,GAAO15B,KAAK25B,GAE9C/uB,IAAIkS,EAAO5W,GACJA,GAAUA,EAAM1I,QAGrB+c,KAAKqf,UAAU9c,GAAO5W,MAAMlG,QAAQkG,GAEtC0E,IAAIkS,GACF,OAAOvC,KAAKqf,UAAU9c,GAAO5W,MAAM1I,OAAS,EAE9CoN,MAAMkS,GACE,MAAAqb,EAAQ5d,KAAKyd,QAAQtP,IAAI5L,GAC1Bqb,IAGLA,EAAMY,SAAU,EAChBZ,EAAM9zB,MAAQu0B,KAAKC,MACbV,EAAAI,SAAWJ,EAAMjyB,MAAM2zB,QAAO,CAACC,EAAKC,IAAQ/4B,KAAK6B,IAAIi3B,EAAKC,EAAIC,YAAY,GAC3Ezf,KAAAoe,YAEP/tB,QAAQkS,GACF,IAACvC,KAAK0d,SACD,OAAA,EAEH,MAAAE,EAAQ5d,KAAKyd,QAAQtP,IAAI5L,GAC3B,SAACqb,GAAUA,EAAMY,SAAYZ,EAAMjyB,MAAM1I,QAK/CoN,KAAKkS,GACG,MAAAqb,EAAQ5d,KAAKyd,QAAQtP,IAAI5L,GAC/B,IAAKqb,IAAUA,EAAMjyB,MAAM1I,OACzB,OAEF,MAAM0I,EAAQiyB,EAAMjyB,MAChB,IAAA7I,EAAI6I,EAAM1I,OAAS,EAChB,KAAAH,GAAK,IAAKA,EACf6I,EAAM7I,GAAG48B,SAEX9B,EAAMjyB,MAAQ,GACdqU,KAAK+e,QAAQxc,EAAOqb,EAAOS,KAAKC,MAAO,YAEzCjuB,OAAOkS,GACE,OAAAvC,KAAKyd,QAAQxN,OAAO1N,KAK/B,MACMod,GAAgB,CACpBC,QAAA,CAAQC,EAAMC,EAAIC,IACTA,EAAS,GAAMD,EAAKD,EAE7BxvB,MAAMwvB,EAAMC,EAAIC,GACR,MAAAC,EAAK7e,GAAM0e,GAND,eAOVtf,EAAKyf,EAAG7f,OAASgB,GAAM2e,GAPb,eAQhB,OAAOvf,GAAMA,EAAGJ,MACZI,EAAG0f,IAAID,EAAID,GAAQttB,YACnBqtB,GAENI,OAAA,CAAOL,EAAMC,EAAIC,IACRF,KAAaA,GAAQE,GAGhC,MAAgBI,GACd9vB,YAAY+vB,EAAKv8B,EAAQuoB,EAAM0T,GAC7B,MAAMO,EAAex8B,EAAOuoB,GAC5B0T,EAAKjT,GAAQ,CAACuT,EAAI/gB,GAAIygB,EAAIO,EAAcD,EAAIr0B,OAC5C,MAAM8zB,EAAOhT,GAAQ,CAACuT,EAAIr0B,KAAMs0B,EAAcP,IAC9C9f,KAAK0e,SAAU,EACf1e,KAAKsgB,IAAMF,EAAI79B,IAAMo9B,GAAcS,EAAI/+B,aAAew+B,GACtD7f,KAAKugB,QAAU5xB,GAAQyxB,EAAII,SAAW7xB,GAAQC,OAC9CoR,KAAKygB,OAASh6B,KAAKkB,MAAM02B,KAAKC,SAAaoC,OAAS,IACpD1gB,KAAKyf,UAAYzf,KAAK2e,OAASl4B,KAAKkB,MAAMy4B,EAAIpC,UACzChe,KAAA2gB,QAAUP,EAAIhM,KACnBpU,KAAK4gB,QAAU/8B,EACfmc,KAAK6gB,MAAQzU,EACbpM,KAAK8gB,MAAQjB,EACb7f,KAAK+gB,IAAMjB,EACX9f,KAAKghB,eAAY,EAEnB3wB,SACE,OAAO2P,KAAK0e,QAEdruB,OAAO+vB,EAAKN,EAAIjC,GACd,GAAI7d,KAAK0e,QAAS,CAChB1e,KAAK+e,SAAQ,GACP,MAAAsB,EAAergB,KAAK4gB,QAAQ5gB,KAAK6gB,OACjCI,EAAUpD,EAAO7d,KAAKygB,OACtBS,EAASlhB,KAAKyf,UAAYwB,EAChCjhB,KAAKygB,OAAS5C,EACd7d,KAAKyf,UAAYh5B,KAAKkB,MAAMlB,KAAK6B,IAAI44B,EAAQd,EAAIpC,WACjDhe,KAAK2e,QAAUsC,EACVjhB,KAAA2gB,QAAUP,EAAIhM,KACnBpU,KAAK+gB,IAAMlU,GAAQ,CAACuT,EAAI/gB,GAAIygB,EAAIO,EAAcD,EAAIr0B,OAClDiU,KAAK8gB,MAAQjU,GAAQ,CAACuT,EAAIr0B,KAAMs0B,EAAcP,KAGlDzvB,SACM2P,KAAK0e,UACP1e,KAAK4e,KAAKP,KAAKC,OACfte,KAAK0e,SAAU,EACf1e,KAAK+e,SAAQ,IAGjB1uB,KAAKwtB,GACG,MAAAoD,EAAUpD,EAAO7d,KAAKygB,OACtBzC,EAAWhe,KAAKyf,UAChBrT,EAAOpM,KAAK6gB,MACZhB,EAAO7f,KAAK8gB,MACZ1M,EAAOpU,KAAK2gB,MACZb,EAAK9f,KAAK+gB,IACZ,IAAAhB,EAEA,GADJ/f,KAAK0e,QAAUmB,IAASC,IAAO1L,GAAS6M,EAAUjD,IAC7Che,KAAK0e,QAGR,OAFA1e,KAAK4gB,QAAQxU,GAAQ0T,OACrB9f,KAAK+e,SAAQ,GAGXkC,EAAU,EACZjhB,KAAK4gB,QAAQxU,GAAQyT,GAGvBE,EAAUkB,EAAUjD,EAAY,EAChC+B,EAAS3L,GAAQ2L,EAAS,EAAI,EAAIA,EAASA,EAC3CA,EAAS/f,KAAKugB,QAAQ95B,KAAK4B,IAAI,EAAG5B,KAAK6B,IAAI,EAAGy3B,KAC9C/f,KAAK4gB,QAAQxU,GAAQpM,KAAKsgB,IAAIT,EAAMC,EAAIC,IAE1C1vB,OACE,MAAM8wB,EAAWnhB,KAAKghB,YAAchhB,KAAKghB,UAAY,IACrD,OAAO,IAAII,SAAQ,CAACC,EAAKC,KACdH,EAAA17B,KAAK,CAAC47B,IAAAA,EAAKC,IAAAA,OAGxBjxB,QAAQkxB,GACA,MAAAC,EAASD,EAAW,MAAQ,MAC5BJ,EAAWnhB,KAAKghB,WAAa,GACnC,IAAA,IAASl+B,EAAI,EAAGA,EAAIq+B,EAASl+B,OAAQH,IACnCq+B,EAASr+B,GAAG0+B,MAOlBzf,GAASJ,IAAI,YAAa,CACxB+e,WAAO,EACP1C,SAAU,IACVwC,OAAQ,eACRj+B,QAAI,EACJwJ,UAAM,EACNqoB,UAAM,EACN/U,QAAI,EACJhe,UAAM,IAER,MAAMogC,GAAmBngC,OAAO0B,KAAK+e,GAASE,WAC9CF,GAASqC,SAAS,YAAa,CAC7Bc,WAAW,EACXD,YAAY,EACZF,YAAcV,GAAkB,eAATA,GAAkC,eAATA,GAAkC,OAATA,IAE3EtC,GAASJ,IAAI,aAAc,CACzB+f,OAAQ,CACNrgC,KAAM,QACNsgC,WApBW,CAAC,QAAS,cAAe,oBAsBtCC,QAAS,CACPvgC,KAAM,SACNsgC,WAzBY,CAAC,IAAK,IAAK,cAAe,SAAU,cA4BpD5f,GAASqC,SAAS,aAAc,CAC9Bc,UAAW,cAEbnD,GAASJ,IAAI,cAAe,CAC1BkgB,OAAQ,CACN5f,UAAW,CACT+b,SAAU,MAGd8D,OAAQ,CACN7f,UAAW,CACT+b,SAAU,IAGd+D,KAAM,CACJC,WAAY,CACVN,OAAQ,CACN31B,KAAM,eAERk2B,QAAS,CACP5gC,KAAM,UACN28B,SAAU,KAIhBkE,KAAM,CACJF,WAAY,CACVN,OAAQ,CACNriB,GAAI,eAEN4iB,QAAS,CACP5gC,KAAM,UACNm/B,OAAQ,SACRj+B,MAAa,EAAJwC,OAKjB,MAAiBo9B,GACf9xB,YAAYkS,EAAO6f,GACjBpiB,KAAKsc,OAAS/Z,EACdvC,KAAKqiB,YAAc,IAAIhJ,IACvBrZ,KAAKsiB,UAAUF,GAEjB/xB,UAAU+xB,GACJ,IAACzgC,EAASygC,GACZ,OAEF,MAAMG,EAAgBviB,KAAKqiB,YACpB/gC,OAAAkhC,oBAAoBJ,GAAQ32B,SAAevH,IAChD,MAAMk8B,EAAMgC,EAAOl+B,GACf,IAACvC,EAASy+B,GACZ,OAEF,MAAMmB,EAAW,GACjB,IAAA,MAAWkB,KAAUhB,GACnBF,EAASkB,GAAUrC,EAAIqC,IAExBthC,EAAQi/B,EAAIuB,aAAevB,EAAIuB,YAAc,CAACz9B,IAAMuH,SAAS2gB,IACxDA,IAASloB,GAAQq+B,EAAch8B,IAAI6lB,IACrCmW,EAAc5gB,IAAIyK,EAAMmV,SAKhClxB,gBAAgBxM,EAAQie,GACtB,MAAM4gB,EAAa5gB,EAAOzd,QACpBA,EAwEV,SAA8BR,EAAQ6+B,GACpC,IAAKA,EACH,OAEF,IAAIr+B,EAAUR,EAAOQ,QACrB,IAAKA,EAEH,YADAR,EAAOQ,QAAUq+B,GAGfr+B,EAAQs+B,UACH9+B,EAAAQ,QAAUA,EAAU/C,OAAO+M,OAAO,GAAIhK,EAAS,CAACs+B,SAAS,EAAOC,YAAa,MAE/E,OAAAv+B,EApFWw+B,CAAqBh/B,EAAQ6+B,GAC7C,IAAKr+B,EACI,MAAA,GAEH,MAAA29B,EAAahiB,KAAK8iB,kBAAkBz+B,EAASq+B,GAO5C,OANHA,EAAWC,SAwDnB,SAAkBX,EAAYL,GAC5B,MAAMnD,EAAU,GACVx7B,EAAO1B,OAAO0B,KAAK2+B,GACzB,IAAA,IAAS7+B,EAAI,EAAGA,EAAIE,EAAKC,OAAQH,IAAK,CAC9B,MAAAigC,EAAOf,EAAWh/B,EAAKF,IACzBigC,GAAQA,EAAKlB,UACfrD,EAAQ/4B,KAAKs9B,EAAKC,QAGtB,OAAO5B,QAAQ6B,IAAIzE,GAhEf0E,CAASr/B,EAAOQ,QAAQu+B,YAAaF,GAAYS,MAAK,KACpDt/B,EAAOQ,QAAUq+B,KAChB,SAGEV,EAET3xB,kBAAkBxM,EAAQie,GACxB,MAAMygB,EAAgBviB,KAAKqiB,YACrBL,EAAa,GACbxD,EAAU36B,EAAO++B,cAAgB/+B,EAAO++B,YAAc,IACtD3W,EAAQ3qB,OAAO0B,KAAK8e,GACpB+b,EAAOQ,KAAKC,MACd,IAAAx7B,EACJ,IAAKA,EAAImpB,EAAMhpB,OAAS,EAAGH,GAAK,IAAKA,EAAG,CACtC,MAAMspB,EAAOH,EAAMnpB,GACf,GAAmB,MAAnBspB,EAAKtmB,OAAO,GACd,SAEF,GAAa,YAATsmB,EAAoB,CACtB4V,EAAWv8B,QAAQua,KAAKojB,gBAAgBv/B,EAAQie,IAChD,SAEF,MAAM5gB,EAAQ4gB,EAAOsK,GACrB,IAAInK,EAAYuc,EAAQpS,GAClB,MAAAgU,EAAMmC,EAAcpU,IAAI/B,GAC9B,GAAInK,EAAW,CACT,GAAAme,GAAOne,EAAU4f,SAAU,CACnB5f,EAAAohB,OAAOjD,EAAKl/B,EAAO28B,GAC7B,SAEU5b,EAAAyd,SAGTU,GAAQA,EAAIpC,UAIjBQ,EAAQpS,GAAQnK,EAAY,IAAIke,GAAUC,EAAKv8B,EAAQuoB,EAAMlrB,GAC7D8gC,EAAWv8B,KAAKwc,IAJdpe,EAAOuoB,GAAQlrB,EAMZ,OAAA8gC,EAET3xB,OAAOxM,EAAQie,GACT,GAA0B,IAA1B9B,KAAKqiB,YAAYh8B,KAEnB,YADA/E,OAAO+M,OAAOxK,EAAQie,GAGlB,MAAAkgB,EAAahiB,KAAK8iB,kBAAkBj/B,EAAQie,GAClD,OAAIkgB,EAAW/+B,QACJs6B,GAAAzxB,IAAIkU,KAAKsc,OAAQ0F,IACnB,QAFT,GAgCJ,SAAAsB,GAAmBtf,EAAOuf,GAClB,MAAA3Z,EAAO5F,GAASA,EAAM3f,SAAW,GACjCxB,EAAU+mB,EAAK/mB,QACfwF,OAAmB,IAAbuhB,EAAKvhB,IAAoBk7B,EAAkB,EACjDj7B,OAAmB,IAAbshB,EAAKthB,IAAoBi7B,EAAkB,EAChD,MAAA,CACLz5B,MAAOjH,EAAUyF,EAAMD,EACvB0B,IAAKlH,EAAUwF,EAAMC,GAkCzB,SAAAk7B,GAAiCjhB,EAAOkhB,GACtC,MAAMzgC,EAAO,GACP0gC,EAAWnhB,EAAMohB,uBAAuBF,GAC9C,IAAI3gC,EAAGO,EACF,IAAAP,EAAI,EAAGO,EAAOqgC,EAASzgC,OAAQH,EAAIO,IAAQP,EACzCE,EAAAyC,KAAKi+B,EAAS5gC,GAAGW,OAEjB,OAAAT,EAET,SAAA4gC,GAAoBC,EAAO3iC,EAAO4iC,EAASz/B,EAAU,IACnD,MAAMrB,EAAO6gC,EAAM7gC,KACb+gC,EAA8B,WAAjB1/B,EAAQkf,KACvB,IAAAzgB,EAAGO,EAAMG,EAAcwgC,EAC3B,GAAc,OAAV9iC,EAAJ,CAGK,IAAA4B,EAAI,EAAGO,EAAOL,EAAKC,OAAQH,EAAIO,IAAQP,EAAG,CAE7C,GADAU,GAAgBR,EAAKF,GACjBU,IAAiBsgC,EAAS,CAC5B,GAAIz/B,EAAQ4+B,IACV,SAEF,MAEFe,EAAaH,EAAM/hB,OAAOte,GACtB5B,EAAeoiC,KAA+BD,GAAU,IAAV7iC,GAAeiG,EAAKjG,KAAWiG,EAAK68B,MAC3E9iC,GAAA8iC,GAGN,OAAA9iC,GAeT,SAAA+iC,GAAmBjgB,EAAOlX,GAClB,MAAAo3B,EAAUlgB,GAASA,EAAM3f,QAAQ6/B,QACvC,OAAOA,QAAwB,IAAZA,QAAwC,IAAfp3B,EAAK+2B,MAYnD,SAA0BM,GAAAC,EAAQC,EAAUC,GAC1C,MAAMC,EAAWH,EAAOC,KAAcD,EAAOC,GAAY,IAClD,OAAAE,EAASD,KAAgBC,EAASD,GAAc,IAEzD,SAA6BE,GAAAX,EAAOY,EAAQC,EAAUrjC,GACpD,IAAA,MAAWyL,KAAQ23B,EAAOE,wBAAwBtjC,GAAMwB,UAAW,CAC3D,MAAA3B,EAAQ2iC,EAAM/2B,EAAKrJ,OACzB,GAAKihC,GAAYxjC,EAAQ,IAAQwjC,GAAYxjC,EAAQ,EACnD,OAAO4L,EAAKrJ,MAGT,OAAA,KAET,SAAAmhC,GAAsBC,EAAYhT,GAC1B,MAAAtP,MAACA,EAAOuiB,YAAah4B,GAAQ+3B,EAC7BT,EAAS7hB,EAAMwiB,UAAYxiB,EAAMwiB,QAAU,KAC3C33B,OAACA,EAAAq3B,OAAQA,EAAQhhC,MAAOD,GAAgBsJ,EACxCk4B,EAAQ53B,EAAOE,KACf23B,EAAQR,EAAOn3B,KACfpJ,EA7BR,SAAqBghC,EAAYC,EAAYr4B,GAC3C,MAAO,GAAGo4B,EAAWlkC,MAAMmkC,EAAWnkC,MAAM8L,EAAK+2B,OAAS/2B,EAAKzL,OA4BnD+jC,CAAYh4B,EAAQq3B,EAAQ33B,GAClCzJ,EAAOwuB,EAAO5uB,OAChB,IAAA4gC,EACJ,IAAA,IAAS/gC,EAAI,EAAGA,EAAIO,IAAQP,EAAG,CAC7B,MAAMwD,EAAOurB,EAAO/uB,IACZuN,CAAA20B,GAAQr6B,EAAQ0F,CAAA40B,GAAQ/jC,GAASoF,EAEzCu9B,GADmBv9B,EAAKy+B,UAAYz+B,EAAKy+B,QAAU,KAChCE,GAASd,GAAiBC,EAAQlgC,EAAKyG,GAC1Dk5B,EAAMrgC,GAAgBtC,EACtB2iC,EAAMwB,KAAOb,GAAoBX,EAAOY,GAAQ,EAAM33B,EAAKzL,MAC3DwiC,EAAMyB,QAAUd,GAAoBX,EAAOY,GAAQ,EAAO33B,EAAKzL,OAGnE,SAAAkkC,GAAyBhjB,EAAOjV,GAC9B,MAAMk4B,EAASjjB,EAAM0B,OACd,OAAA3iB,OAAO0B,KAAKwiC,GAAQnV,WAAcmV,EAAOthC,GAAKoJ,OAASA,IAAMm4B,QA0BtE,SAAAC,GAAqB54B,EAAMnB,GACnB,MAAAnI,EAAesJ,EAAK+3B,WAAWphC,MAC/B6J,EAAOR,EAAK23B,QAAU33B,EAAK23B,OAAOn3B,KACxC,GAAKA,EAAL,CAGA3B,EAAQA,GAASmB,EAAKO,QACtB,IAAA,MAAWwkB,KAAUlmB,EAAO,CAC1B,MAAMy4B,EAASvS,EAAOkT,QAClB,IAACX,QAA2B,IAAjBA,EAAO92B,SAAsD,IAA/B82B,EAAO92B,GAAM9J,GACxD,cAEK4gC,EAAO92B,GAAM9J,KAGxB,MAAMmiC,GAAsBpiB,GAAkB,UAATA,GAA6B,SAATA,EACnDqiB,GAAmB,CAACC,EAAQC,IAAWA,EAASD,EAASvkC,OAAO+M,OAAO,GAAIw3B,GAGjF,MAAwBE,GACtB11B,YAAYkS,EAAO/e,GACjBwc,KAAKuC,MAAQA,EACbvC,KAAKgmB,KAAOzjB,EAAMW,IAClBlD,KAAKvc,MAAQD,EACbwc,KAAKimB,gBAAkB,GACvBjmB,KAAK8kB,YAAc9kB,KAAKkmB,UACnBlmB,KAAAmmB,MAAQnmB,KAAK8kB,YAAYzjC,KAC9B2e,KAAK3b,aAAU,EACf2b,KAAK4R,UAAW,EAChB5R,KAAKomB,WAAQ,EACbpmB,KAAKqmB,iBAAc,EACnBrmB,KAAKsmB,oBAAiB,EACtBtmB,KAAKumB,gBAAa,EAClBvmB,KAAKwmB,gBAAa,EAClBxmB,KAAKymB,qBAAsB,EAC3BzmB,KAAK0mB,oBAAqB,EAC1B1mB,KAAK2mB,cAAW,EAChB3mB,KAAK4mB,UAAY,GACZ5mB,KAAA6mB,aAEPx2B,aACE,MAAMvD,EAAOkT,KAAK8kB,YACb9kB,KAAAsiB,YACAtiB,KAAA8mB,aACAh6B,EAAAi6B,SAAW9C,GAAUn3B,EAAK23B,OAAQ33B,GAClCkT,KAAAgnB,cAEP32B,YAAY7M,GACNwc,KAAKvc,QAAUD,GACjBkiC,GAAY1lB,KAAK8kB,aAEnB9kB,KAAKvc,MAAQD,EAEf6M,aACE,MAAMkS,EAAQvC,KAAKuC,MACbzV,EAAOkT,KAAK8kB,YACZmC,EAAUjnB,KAAKknB,aACfC,EAAW,CAAC75B,EAAMtI,EAAGE,EAAGwN,IAAe,MAATpF,EAAetI,EAAa,MAATsI,EAAeoF,EAAIxN,EACpEkiC,EAAMt6B,EAAKu6B,QAAUplC,EAAeglC,EAAQI,QAAS9B,GAAgBhjB,EAAO,MAC5E+kB,EAAMx6B,EAAKy6B,QAAUtlC,EAAeglC,EAAQM,QAAShC,GAAgBhjB,EAAO,MAC5EilB,EAAM16B,EAAK26B,QAAUxlC,EAAeglC,EAAQQ,QAASlC,GAAgBhjB,EAAO,MAC5Ec,EAAYvW,EAAKuW,UACjBqkB,EAAM56B,EAAK66B,QAAUR,EAAS9jB,EAAW+jB,EAAKE,EAAKE,GACnDI,EAAM96B,EAAK+6B,QAAUV,EAAS9jB,EAAWikB,EAAKF,EAAKI,GACpD16B,EAAAc,OAASoS,KAAK8nB,cAAcV,GAC5Bt6B,EAAAe,OAASmS,KAAK8nB,cAAcR,GAC5Bx6B,EAAAi7B,OAAS/nB,KAAK8nB,cAAcN,GAC5B16B,EAAAM,OAAS4S,KAAK8nB,cAAcJ,GAC5B56B,EAAA23B,OAASzkB,KAAK8nB,cAAcF,GAEnCv3B,aACE,OAAO2P,KAAKuC,MAAM6C,KAAKhD,SAASpC,KAAKvc,OAEvC4M,UACS,OAAA2P,KAAKuC,MAAMylB,eAAehoB,KAAKvc,OAExC4M,cAAc43B,GACL,OAAAjoB,KAAKuC,MAAM0B,OAAOgkB,GAE3B53B,eAAe2T,GACb,MAAMlX,EAAOkT,KAAK8kB,YAClB,OAAO9gB,IAAUlX,EAAKM,OAClBN,EAAK23B,OACL33B,EAAKM,OAEXiD,QACE2P,KAAKme,QAAQ,SAEf9tB,WACE,MAAMvD,EAAOkT,KAAK8kB,YACd9kB,KAAKomB,OACPj7B,GAAoB6U,KAAKomB,MAAOpmB,MAE9BlT,EAAKi6B,UACKrB,GAAA54B,GAGhBuD,aACE,MAAM42B,EAAUjnB,KAAKknB,aACf9hB,EAAO6hB,EAAQ7hB,OAAS6hB,EAAQ7hB,KAAO,IACvCghB,EAAQpmB,KAAKomB,MACnB,GAAIzkC,EAASyjB,GACXpF,KAAKomB,MA7LX,SAAkChhB,GAC1B,MAAApiB,EAAO1B,OAAO0B,KAAKoiB,GACnB8iB,EAAQ,IAAI9mC,MAAM4B,EAAKC,QAC7B,IAAIH,EAAGO,EAAMa,EACR,IAAApB,EAAI,EAAGO,EAAOL,EAAKC,OAAQH,EAAIO,IAAQP,EAC1CoB,EAAMlB,EAAKF,GACXolC,EAAMplC,GAAK,CACTkC,EAAGd,EACHgB,EAAGkgB,EAAKlhB,IAGL,OAAAgkC,EAkLUC,CAAyB/iB,QAAA,GAC7BghB,IAAUhhB,EAAM,CACzB,GAAIghB,EAAO,CACTj7B,GAAoBi7B,EAAOpmB,MAC3B,MAAMlT,EAAOkT,KAAK8kB,YACNY,GAAA54B,GACZA,EAAKO,QAAU,GAEb+X,GAAQ9jB,OAAO8mC,aAAahjB,KD1UJha,EC2UF4U,MD3UL7X,EC2UDid,GD1Ud9Z,SACFnD,EAAAmD,SAASC,UAAU9F,KAAK2F,IAGzB9J,OAAA+mC,eAAelgC,EAAO,WAAY,CACvCuoB,cAAc,EACd7L,YAAY,EACZ3jB,MAAO,CACLqK,UAAW,CAACH,MAGJF,GAAAO,SAASvH,IACb,MAAAs9B,EAAS,UAAY57B,EAAY1B,GACjCokC,EAAOngC,EAAMjE,GACZ5C,OAAA+mC,eAAelgC,EAAOjE,EAAK,CAChCwsB,cAAc,EACd7L,YAAY,EACZxU,SAAS7N,GACD,MAAA6+B,EAAMiH,EAAK5lC,MAAMsd,KAAMxd,GAMtB,OALP2F,EAAMmD,SAASC,UAAUE,SAAS88B,IACF,mBAAnBA,EAAO/G,IAChB+G,EAAO/G,MAAWh/B,MAGf6+B,UCoTTrhB,KAAK4mB,UAAY,GACjB5mB,KAAKomB,MAAQhhB,ED9UnB,IAA2Bjd,EAAOiD,ECiVhCiF,cACE,MAAMvD,EAAOkT,KAAK8kB,YACb9kB,KAAAwoB,aACDxoB,KAAKyoB,qBACF37B,EAAAm6B,QAAU,IAAIjnB,KAAKyoB,oBAG5Bp4B,sBAAsBq4B,GACpB,MAAM57B,EAAOkT,KAAK8kB,YACZmC,EAAUjnB,KAAKknB,aACrB,IAAIyB,GAAe,EACd3oB,KAAAwoB,aACL,MAAMI,EAAa97B,EAAKi6B,SACnBj6B,EAAAi6B,SAAW9C,GAAUn3B,EAAK23B,OAAQ33B,GACnCA,EAAK+2B,QAAUoD,EAAQpD,QACV8E,GAAA,EACHjD,GAAA54B,GACZA,EAAK+2B,MAAQoD,EAAQpD,OAEvB7jB,KAAK6oB,gBAAgBH,IACjBC,GAAgBC,IAAe97B,EAAKi6B,WACtCnC,GAAa5kB,KAAMlT,EAAKO,SAG5BgD,YACQ,MAAA+xB,EAASpiB,KAAKuC,MAAM6f,OACpB0G,EAAY1G,EAAO2G,iBAAiB/oB,KAAKmmB,OACzC/Y,EAASgV,EAAO4G,gBAAgBhpB,KAAKknB,aAAc4B,GAAW,GACpE9oB,KAAK3b,QAAU+9B,EAAO6G,eAAe7b,EAAQpN,KAAK2G,cAC7C3G,KAAA4R,SAAW5R,KAAK3b,QAAQwf,QAC7B7D,KAAKimB,gBAAkB,GAEzB51B,MAAMvG,EAAOoD,GACX,MAAO43B,YAAah4B,EAAMs5B,MAAOhhB,GAAQpF,MACnC5S,OAACA,WAAQ25B,GAAYj6B,EACrBk4B,EAAQ53B,EAAOE,KACrB,IAEIxK,EAAG08B,EAAK3N,EAFRqX,EAAmB,IAAVp/B,GAAeoD,IAAUkY,EAAKniB,QAAgB6J,EAAKK,QAC5DqnB,EAAO1qB,EAAQ,GAAKgD,EAAKO,QAAQvD,EAAQ,GAEzC,IAAkB,IAAlBkW,KAAK4R,SACP9kB,EAAKO,QAAU+X,EACftY,EAAKK,SAAU,EACN0kB,EAAAzM,MACJ,CAEHyM,EADE1wB,EAAQikB,EAAKtb,IACNkW,KAAKmpB,eAAer8B,EAAMsY,EAAMtb,EAAOoD,GACvCvL,EAASyjB,EAAKtb,IACdkW,KAAKopB,gBAAgBt8B,EAAMsY,EAAMtb,EAAOoD,GAExC8S,KAAKqpB,mBAAmBv8B,EAAMsY,EAAMtb,EAAOoD,GAEhD,MAAAo8B,EAA6B,IAAqB,OAAf9J,EAAIwF,IAAoBxQ,GAAQgL,EAAIwF,GAASxQ,EAAKwQ,GAC3F,IAAKliC,EAAI,EAAGA,EAAIoK,IAASpK,EACvBgK,EAAKO,QAAQvK,EAAIgH,GAAS01B,EAAM3N,EAAO/uB,GACnComC,IACEI,MACOJ,GAAA,GAEJ1U,EAAAgL,GAGX1yB,EAAKK,QAAU+7B,EAEbnC,GACFnC,GAAa5kB,KAAM6R,GAGvBxhB,mBAAmBvD,EAAMsY,EAAMtb,EAAOoD,GAC9B,MAAAE,OAACA,SAAQq3B,GAAU33B,EACnBk4B,EAAQ53B,EAAOE,KACf23B,EAAQR,EAAOn3B,KACfi8B,EAASn8B,EAAOo8B,YAChBC,EAAcr8B,IAAWq3B,EACzB5S,EAAS,IAAIzwB,MAAM8L,GACzB,IAAIpK,EAAGO,EAAMsH,EACb,IAAK7H,EAAI,EAAGO,EAAO6J,EAAOpK,EAAIO,IAAQP,EACpC6H,EAAQ7H,EAAIgH,EACZ+nB,EAAO/uB,GAAK,CAAAuN,CACT20B,GAAQyE,GAAer8B,EAAO0kB,MAAMyX,EAAO5+B,GAAQA,GAAA0F,CACnD40B,GAAQR,EAAO3S,MAAM1M,EAAKza,GAAQA,IAGhC,OAAAknB,EAETxhB,eAAevD,EAAMsY,EAAMtb,EAAOoD,GAC1B,MAAAU,OAACA,SAAQC,GAAUf,EACnB+kB,EAAS,IAAIzwB,MAAM8L,GACrB,IAAApK,EAAGO,EAAMsH,EAAOrE,EACpB,IAAKxD,EAAI,EAAGO,EAAO6J,EAAOpK,EAAIO,IAAQP,EACpC6H,EAAQ7H,EAAIgH,EACZxD,EAAO8e,EAAKza,GACZknB,EAAO/uB,GAAK,CACVkC,EAAG4I,EAAOkkB,MAAMxrB,EAAK,GAAIqE,GACzBzF,EAAG2I,EAAOikB,MAAMxrB,EAAK,GAAIqE,IAGtB,OAAAknB,EAETxhB,gBAAgBvD,EAAMsY,EAAMtb,EAAOoD,GAC3B,MAAAU,OAACA,SAAQC,GAAUf,GACnB48B,SAACA,EAAW,IAAKC,SAAAA,EAAW,KAAO3pB,KAAK4R,SACxCC,EAAS,IAAIzwB,MAAM8L,GACrB,IAAApK,EAAGO,EAAMsH,EAAOrE,EACpB,IAAKxD,EAAI,EAAGO,EAAO6J,EAAOpK,EAAIO,IAAQP,EACpC6H,EAAQ7H,EAAIgH,EACZxD,EAAO8e,EAAKza,GACZknB,EAAO/uB,GAAK,CACVkC,EAAG4I,EAAOkkB,MAAM3sB,EAAiBmB,EAAMojC,GAAW/+B,GAClDzF,EAAG2I,EAAOikB,MAAM3sB,EAAiBmB,EAAMqjC,GAAWh/B,IAG/C,OAAAknB,EAETxhB,UAAU1F,GACD,OAAAqV,KAAK8kB,YAAYz3B,QAAQ1C,GAElC0F,eAAe1F,GACN,OAAAqV,KAAK8kB,YAAY1f,KAAKza,GAE/B0F,WAAW2T,EAAO6N,EAAQtO,GACxB,MAAMhB,EAAQvC,KAAKuC,MACbzV,EAAOkT,KAAK8kB,YACZ5jC,EAAQ2wB,EAAO7N,EAAM1W,MAK3B,OAAOs2B,GAJO,CACZ5gC,KAAMwgC,GAAwBjhB,GAAO,GACrCT,OAAQ+P,EAAOkT,QAAQ/gB,EAAM1W,OAENpM,EAAO4L,EAAKrJ,MAAO,CAAC8f,KAAAA,IAE/ClT,sBAAsBhJ,EAAO2c,EAAO6N,EAAQgS,GACpC,MAAA+F,EAAc/X,EAAO7N,EAAM1W,MAC7B,IAAApM,EAAwB,OAAhB0oC,EAAuBC,IAAMD,EACzC,MAAM9nB,EAAS+hB,GAAShS,EAAOkT,QAAQ/gB,EAAM1W,MACzCu2B,GAAS/hB,IACX+hB,EAAM/hB,OAASA,EACf5gB,EAAQ0iC,GAAWC,EAAO+F,EAAa5pB,KAAK8kB,YAAYrhC,QAE1D4D,EAAMgB,IAAM5B,KAAK4B,IAAIhB,EAAMgB,IAAKnH,GAChCmG,EAAMiB,IAAM7B,KAAK6B,IAAIjB,EAAMiB,IAAKpH,GAElCmP,UAAU2T,EAAO8lB,GACf,MAAMh9B,EAAOkT,KAAK8kB,YACZz3B,EAAUP,EAAKO,QACf67B,EAASp8B,EAAKK,SAAW6W,IAAUlX,EAAKM,OACxC/J,EAAOgK,EAAQpK,OACf8mC,EAAa/pB,KAAKgqB,eAAehmB,GACjC6f,EAtPU,EAACiG,EAAUh9B,EAAMyV,IAAUunB,IAAah9B,EAAKm9B,QAAUn9B,EAAKi6B,UAC3E,CAAC/jC,KAAMwgC,GAAwBjhB,GAAO,GAAOT,OAAQ,MAqPxCooB,CAAYJ,EAAUh9B,EAAMkT,KAAKuC,OACzClb,EAAQ,CAACgB,IAAKxG,OAAOgF,kBAAmByB,IAAKzG,OAAOsoC,oBACnD9hC,IAAK+hC,EAAU9hC,IAAK+hC,GA5U/B,SAAuBrmB,GACrB,MAAM3b,IAACA,EAAAC,IAAKA,EAAKiF,WAAAA,EAAAC,WAAYA,GAAcwW,EAAMvW,gBAC1C,MAAA,CACLpF,IAAKkF,EAAalF,EAAMxG,OAAOsoC,kBAC/B7hC,IAAKkF,EAAalF,EAAMzG,OAAOgF,mBAwUQ4G,CAAcs8B,GACrD,IAAIjnC,EAAG+uB,EACU,SAAAyY,IACfzY,EAASxkB,EAAQvK,GACX,MAAAkhC,EAAanS,EAAOkY,EAAWz8B,MACrC,OAAQ1L,EAAeiwB,EAAO7N,EAAM1W,QAAU88B,EAAWpG,GAAcqG,EAAWrG,EAEpF,IAAKlhC,EAAI,EAAGA,EAAIO,IACVinC,MAGCtqB,KAAAuqB,sBAAsBljC,EAAO2c,EAAO6N,EAAQgS,IAC7CqF,MALkBpmC,GASxB,GAAIomC,EACF,IAAKpmC,EAAIO,EAAO,EAAGP,GAAK,IAAKA,EAC3B,IAAIwnC,IAAJ,CAGKtqB,KAAAuqB,sBAAsBljC,EAAO2c,EAAO6N,EAAQgS,GACjD,MAGG,OAAAx8B,EAETgJ,mBAAmB2T,GACX,MAAA6N,EAAS7R,KAAK8kB,YAAYz3B,QAC1ByU,EAAS,GACf,IAAIhf,EAAGO,EAAMnC,EACR,IAAA4B,EAAI,EAAGO,EAAOwuB,EAAO5uB,OAAQH,EAAIO,IAAQP,EACpC5B,EAAA2wB,EAAO/uB,GAAGkhB,EAAM1W,MACpB1L,EAAeV,IACjB4gB,EAAOrc,KAAKvE,GAGT,OAAA4gB,EAETzR,iBACS,OAAA,EAETA,iBAAiB1F,GACf,MAAMmC,EAAOkT,KAAK8kB,YACZ13B,EAASN,EAAKM,OACdq3B,EAAS33B,EAAK23B,OACd5S,EAAS7R,KAAKwqB,UAAU7/B,GACvB,MAAA,CACL8/B,MAAOr9B,EAAS,GAAKA,EAAOs9B,iBAAiB7Y,EAAOzkB,EAAOE,OAAS,GACpEpM,MAAOujC,EAAS,GAAKA,EAAOiG,iBAAiB7Y,EAAO4S,EAAOn3B,OAAS,IAGxE+C,QAAQkT,GACN,MAAMzW,EAAOkT,KAAK8kB,YAClB9kB,KAAKqjB,OAAO9f,GAAQ,WACfzW,EAAA69B,MAxcT,SAAgBzpC,GACV,IAAAqN,EAAGmE,EAAGtM,EAAGwK,EASN,OARHjP,EAAST,IACXqN,EAAIrN,EAAMynB,IACVjW,EAAIxR,EAAMwnB,MACVtiB,EAAIlF,EAAM0nB,OACVhY,EAAI1P,EAAMunB,MAENla,EAAAmE,EAAItM,EAAIwK,EAAI1P,EAEX,CACLynB,IAAKpa,EACLma,MAAOhW,EACPkW,OAAQxiB,EACRqiB,KAAM7X,EACNg6B,UAAoB,IAAV1pC,GAybG2pC,CAAO5oC,EAAe+d,KAAK3b,QAAQykB,KArdpD,SAAqBlb,EAAQC,EAAQ01B,GACnC,IAAwB,IAApBA,EACK,OAAA,EAEH,MAAAv+B,EAAIs+B,GAAU11B,EAAQ21B,GACtBr+B,EAAIo+B,GAAUz1B,EAAQ01B,GACrB,MAAA,CACL5a,IAAKzjB,EAAE6E,IACP2e,MAAO1jB,EAAE+E,IACT6e,OAAQ1jB,EAAE4E,MACV2e,KAAMzjB,EAAE8E,OA2c8CghC,CAAYh+B,EAAKc,OAAQd,EAAKe,OAAQmS,KAAK+qB,oBAEnG16B,OAAOkT,IACPlT,OACE,MAAM6S,EAAMlD,KAAKgmB,KACXzjB,EAAQvC,KAAKuC,MACbzV,EAAOkT,KAAK8kB,YACZkG,EAAWl+B,EAAKsY,MAAQ,GACxBmD,EAAOhG,EAAM0oB,UACbpJ,EAAS,GACT/3B,EAAQkW,KAAKumB,YAAc,EAC3Br5B,EAAQ8S,KAAKwmB,YAAewE,EAAS/nC,OAAS6G,EAC9Cqa,EAA0BnE,KAAK3b,QAAQ8f,wBACzC,IAAArhB,EAIJ,IAHIgK,EAAKm6B,SACPn6B,EAAKm6B,QAAQnI,KAAK5b,EAAKqF,EAAMze,EAAOoD,GAEjCpK,EAAIgH,EAAOhH,EAAIgH,EAAQoD,IAASpK,EAAG,CACtC,MAAM2yB,EAAUuV,EAASloC,GACrB2yB,EAAQwU,SAGRxU,EAAQoM,QAAU1d,EACpB0d,EAAOp8B,KAAKgwB,GAEZA,EAAQqJ,KAAK5b,EAAKqF,IAGtB,IAAKzlB,EAAI,EAAGA,EAAI++B,EAAO5+B,SAAUH,EACxB++B,EAAA/+B,GAAGg8B,KAAK5b,EAAKqF,GAGxBlY,SAAS1F,EAAOk3B,GACR,MAAAte,EAAOse,EAAS,SAAW,UAC1B,YAAU,IAAVl3B,GAAuBqV,KAAK8kB,YAAYmC,QAC3CjnB,KAAKkrB,6BAA6B3nB,GAClCvD,KAAKmrB,0BAA0BxgC,GAAS,EAAG4Y,GAEjDlT,WAAW1F,EAAOk3B,EAAQte,GACxB,MAAM0jB,EAAUjnB,KAAKknB,aACjB,IAAA5kB,EACJ,GAAI3X,GAAS,GAAKA,EAAQqV,KAAK8kB,YAAY1f,KAAKniB,OAAQ,CAChD,MAAAwyB,EAAUzV,KAAK8kB,YAAY1f,KAAKza,GACtC2X,EAAUmT,EAAQkR,WACflR,EAAQkR,SAxXjB,SAA2BxV,EAAQxmB,EAAO8qB,GACxC,OAAOxI,GAAckE,EAAQ,CAC3B0Q,QAAQ,EACRuJ,UAAWzgC,EACXknB,YAAQ,EACRwZ,SAAK,EACL5V,QAAAA,EACAhyB,MAAAkH,EACA4Y,KAAM,UACNliB,KAAM,SA+WkBiqC,CAAkBtrB,KAAK2G,aAAchc,EAAO8qB,IAC1DnT,EAAAuP,OAAS7R,KAAKwqB,UAAU7/B,GACxB2X,EAAA+oB,IAAMpE,EAAQ7hB,KAAKza,GACnB2X,EAAA7e,MAAQ6e,EAAQ8oB,UAAYzgC,OAE1B2X,EAAAtC,KAAK2mB,WACP3mB,KAAA2mB,SA1Yd,SAA8BxV,EAAQxmB,GACpC,OAAOsiB,GAAckE,EACnB,CACE0Q,QAAQ,EACRoF,aAAS,EACTzjC,aAAcmH,EACdlH,MAAAkH,EACA4Y,KAAM,UACNliB,KAAM,YAkYakqC,CAAqBvrB,KAAKuC,MAAMoE,aAAc3G,KAAKvc,QACtE6e,EAAQ2kB,QAAUA,EACV3kB,EAAA7e,MAAQ6e,EAAQ9e,aAAewc,KAAKvc,MAIvC,OAFC6e,EAAAuf,SAAWA,EACnBvf,EAAQiB,KAAOA,EACRjB,EAETjS,6BAA6BkT,GAC3B,OAAOvD,KAAKwrB,uBAAuBxrB,KAAKyoB,mBAAmBznC,GAAIuiB,GAEjElT,0BAA0B1F,EAAO4Y,GAC/B,OAAOvD,KAAKwrB,uBAAuBxrB,KAAKyrB,gBAAgBzqC,GAAIuiB,EAAM5Y,GAEpE0F,uBAAuBq7B,EAAanoB,EAAO,UAAW5Y,GACpD,MAAMk3B,EAAkB,WAATte,EACTsC,EAAQ7F,KAAKimB,gBACbxM,EAAWiS,EAAc,IAAMnoB,EAC/BsiB,EAAShgB,EAAM4T,GACfkS,EAAU3rB,KAAKymB,qBAAuBzgC,EAAQ2E,GACpD,GAAIk7B,EACF,OAAOD,GAAiBC,EAAQ8F,GAE5B,MAAAvJ,EAASpiB,KAAKuC,MAAM6f,OACpB0G,EAAY1G,EAAOwJ,wBAAwB5rB,KAAKmmB,MAAOuF,GACvDre,EAAWwU,EAAS,CAAC,GAAG6J,SAAoB,QAASA,EAAa,IAAM,CAACA,EAAa,IACtFte,EAASgV,EAAO4G,gBAAgBhpB,KAAKknB,aAAc4B,GACnD+C,EAAQvqC,OAAO0B,KAAK+e,GAASW,SAASgpB,IAEtC5pB,EAASsgB,EAAO0J,oBAAoB1e,EAAQye,GADlC,IAAM7rB,KAAK2G,WAAWhc,EAAOk3B,IACqBxU,GAK3D,OAJHvL,EAAO6gB,UACT7gB,EAAO6gB,QAAUgJ,EACjB9lB,EAAM4T,GAAYn4B,OAAOyqC,OAAOnG,GAAiB9jB,EAAQ6pB,KAEpD7pB,EAETzR,mBAAmB1F,EAAOqhC,EAAYnK,GACpC,MAAMtf,EAAQvC,KAAKuC,MACbsD,EAAQ7F,KAAKimB,gBACbxM,EAAW,aAAauS,IACxBnG,EAAShgB,EAAM4T,GACrB,GAAIoM,EACK,OAAAA,EAEL,IAAAxhC,EACA,IAA4B,IAA5Bke,EAAMle,QAAQ4d,UAAqB,CAC/B,MAAAmgB,EAASpiB,KAAKuC,MAAM6f,OACpB0G,EAAY1G,EAAO6J,0BAA0BjsB,KAAKmmB,MAAO6F,GACzD5e,EAASgV,EAAO4G,gBAAgBhpB,KAAKknB,aAAc4B,GACzDzkC,EAAU+9B,EAAO6G,eAAe7b,EAAQpN,KAAK2G,WAAWhc,EAAOk3B,EAAQmK,IAEzE,MAAMhK,EAAa,IAAIG,GAAW5f,EAAOle,GAAWA,EAAQ29B,YAIrD,OAHH39B,GAAWA,EAAQspB,aACf9H,EAAA4T,GAAYn4B,OAAOyqC,OAAO/J,IAE3BA,EAET3xB,iBAAiBhM,GACX,GAACA,EAAQs+B,QAGb,OAAO3iB,KAAKsmB,iBAAmBtmB,KAAKsmB,eAAiBhlC,OAAO+M,OAAO,GAAIhK,IAEzEgM,eAAekT,EAAM2oB,GACnB,OAAQA,GAAiBvG,GAAmBpiB,IAASvD,KAAKuC,MAAM4pB,oBAElE97B,kBAAkBvG,EAAOyZ,GACjB,MAAA6oB,EAAYpsB,KAAKmrB,0BAA0BrhC,EAAOyZ,GAClD8oB,EAA0BrsB,KAAKsmB,eAC/B4F,EAAgBlsB,KAAKssB,iBAAiBF,GACtCG,EAAiBvsB,KAAKusB,eAAehpB,EAAM2oB,IAAmBA,IAAkBG,EAEtF,OADKrsB,KAAAwsB,oBAAoBN,EAAe3oB,EAAM6oB,GACvC,CAACF,cAAAA,EAAeK,eAAAA,GAEzBl8B,cAAcolB,EAAS9qB,EAAOg3B,EAAYpe,GACpCoiB,GAAmBpiB,GACrBjiB,OAAO+M,OAAOonB,EAASkM,GAEvB3hB,KAAKysB,mBAAmB9hC,EAAO4Y,GAAM8f,OAAO5N,EAASkM,GAGzDtxB,oBAAoB67B,EAAe3oB,EAAMmf,GACnCwJ,IAAkBvG,GAAmBpiB,IACvCvD,KAAKysB,wBAAmB,EAAWlpB,GAAM8f,OAAO6I,EAAexJ,GAGnEryB,UAAUolB,EAAS9qB,EAAO4Y,EAAMse,GAC9BpM,EAAQoM,OAASA,EACX,MAAAx9B,EAAU2b,KAAK8Y,SAASnuB,EAAOk3B,GACrC7hB,KAAKysB,mBAAmB9hC,EAAO4Y,EAAMse,GAAQwB,OAAO5N,EAAS,CAC3DpxB,SAAWw9B,GAAU7hB,KAAKssB,iBAAiBjoC,IAAaA,IAG5DgM,iBAAiBolB,EAASjyB,EAAcmH,GACjCqV,KAAA0sB,UAAUjX,EAAS9qB,EAAO,UAAU,GAE3C0F,cAAcolB,EAASjyB,EAAcmH,GAC9BqV,KAAA0sB,UAAUjX,EAAS9qB,EAAO,UAAU,GAE3C0F,2BACQ,MAAAolB,EAAUzV,KAAK8kB,YAAYmC,QAC7BxR,GACGzV,KAAA0sB,UAAUjX,OAAS,EAAW,UAAU,GAGjDplB,wBACQ,MAAAolB,EAAUzV,KAAK8kB,YAAYmC,QAC7BxR,GACGzV,KAAA0sB,UAAUjX,OAAS,EAAW,UAAU,GAGjDplB,gBAAgBq4B,GACd,MAAMtjB,EAAOpF,KAAKomB,MACZ4E,EAAWhrB,KAAK8kB,YAAY1f,KAClC,IAAA,MAAYoc,EAAQmL,EAAMC,KAAS5sB,KAAK4mB,UACtC5mB,KAAKwhB,GAAQmL,EAAMC,GAErB5sB,KAAK4mB,UAAY,GACjB,MAAMiG,EAAU7B,EAAS/nC,OACnB6pC,EAAU1nB,EAAKniB,OACfiK,EAAQzG,KAAK4B,IAAIykC,EAASD,GAC5B3/B,GACF8S,KAAK8R,MAAM,EAAG5kB,GAEZ4/B,EAAUD,EACP7sB,KAAA+sB,gBAAgBF,EAASC,EAAUD,EAASnE,GACxCoE,EAAUD,GACd7sB,KAAAgtB,gBAAgBF,EAASD,EAAUC,GAG5Cz8B,gBAAgBvG,EAAOoD,EAAOw7B,GAAmB,GAC/C,MAAM57B,EAAOkT,KAAK8kB,YACZ1f,EAAOtY,EAAKsY,KACZrb,EAAMD,EAAQoD,EAChB,IAAApK,EACE,MAAAmqC,EAAQ7c,IAEZ,IADAA,EAAIntB,QAAUiK,EACTpK,EAAIstB,EAAIntB,OAAS,EAAGH,GAAKiH,EAAKjH,IAC7BstB,EAAAttB,GAAKstB,EAAIttB,EAAIoK,IAIrB,IADK+/B,EAAA7nB,GACAtiB,EAAIgH,EAAOhH,EAAIiH,IAAOjH,EACpBsiB,EAAAtiB,GAAK,IAAIkd,KAAKyrB,gBAEjBzrB,KAAK4R,UACPqb,EAAKngC,EAAKO,SAEZ2S,KAAK8R,MAAMhoB,EAAOoD,GACdw7B,GACG1oB,KAAAktB,eAAe9nB,EAAMtb,EAAOoD,EAAO,SAG5CmD,eAAeolB,EAAS3rB,EAAOoD,EAAOqW,IACtClT,gBAAgBvG,EAAOoD,GACrB,MAAMJ,EAAOkT,KAAK8kB,YAClB,GAAI9kB,KAAK4R,SAAU,CACjB,MAAMub,EAAUrgC,EAAKO,QAAQ7B,OAAO1B,EAAOoD,GACvCJ,EAAKi6B,UACPrB,GAAY54B,EAAMqgC,GAGjBrgC,EAAAsY,KAAK5Z,OAAO1B,EAAOoD,GAE1BmD,MAAM7N,GACJ,GAAIwd,KAAK4R,SACP5R,KAAK4mB,UAAUnhC,KAAKjD,OACf,CACC,MAACg/B,EAAQmL,EAAMC,GAAQpqC,EAC7Bwd,KAAKwhB,GAAQmL,EAAMC,GAErB5sB,KAAKuC,MAAM6qB,aAAa3nC,KAAK,CAACua,KAAKvc,SAAUjB,IAE/C6N,cACE,MAAMnD,EAAQmgC,UAAUpqC,OACxB+c,KAAKstB,MAAM,CAAC,kBAAmBttB,KAAKknB,aAAa9hB,KAAKniB,OAASiK,EAAOA,IAExEmD,aACE2P,KAAKstB,MAAM,CAAC,kBAAmBttB,KAAK8kB,YAAY1f,KAAKniB,OAAS,EAAG,IAEnEoN,eACO2P,KAAAstB,MAAM,CAAC,kBAAmB,EAAG,IAEpCj9B,cAAcvG,EAAOoD,GACfA,GACG8S,KAAAstB,MAAM,CAAC,kBAAmBxjC,EAAOoD,IAElC,MAAAqgC,EAAWF,UAAUpqC,OAAS,EAChCsqC,GACGvtB,KAAAstB,MAAM,CAAC,kBAAmBxjC,EAAOyjC,IAG1Cl9B,iBACE2P,KAAKstB,MAAM,CAAC,kBAAmB,EAAGD,UAAUpqC,UAkBhD,SAAAuqC,GAA8B1gC,GAC5B,MAAMkX,EAAQlX,EAAKM,OACb0U,EAbR,SAA2BkC,EAAO3iB,GAC5B,IAAC2iB,EAAMypB,OAAOC,KAAM,CAChB,MAAAC,EAAe3pB,EAAM2gB,wBAAwBtjC,GACnD,IAAIygB,EAAS,GACb,IAAA,IAAShf,EAAI,EAAGO,EAAOsqC,EAAa1qC,OAAQH,EAAIO,EAAMP,IACpDgf,EAASA,EAAO8rB,OAAOD,EAAa7qC,GAAG+hC,WAAWgJ,mBAAmB7pB,IAEjEA,EAAAypB,OAAOC,KAAOhiC,GAAaoW,EAAOgsB,MAAK,CAAC3nC,EAAGC,IAAMD,EAAIC,KAE7D,OAAO4d,EAAMypB,OAAOC,KAILK,CAAkB/pB,EAAOlX,EAAKzL,MAC7C,IACIyB,EAAGO,EAAM2qC,EAAMxZ,EADfnsB,EAAM2b,EAAMiqB,QAEhB,MAAMC,EAAmB,KACV,QAATF,IAAmC,QAAjBA,IAGlBhoC,EAAQwuB,KACVnsB,EAAM5B,KAAK4B,IAAIA,EAAK5B,KAAKwB,IAAI+lC,EAAOxZ,IAASnsB,IAExCmsB,EAAAwZ,IAEJ,IAAAlrC,EAAI,EAAGO,EAAOye,EAAO7e,OAAQH,EAAIO,IAAQP,EACrCkrC,EAAAhqB,EAAMtW,iBAAiBoU,EAAOhf,IACrCorC,IAGG,IADE1Z,OAAA,EACF1xB,EAAI,EAAGO,EAAO2gB,EAAMmqB,MAAMlrC,OAAQH,EAAIO,IAAQP,EACjDkrC,EAAOhqB,EAAMoqB,gBAAgBtrC,GAC7BorC,IAEK,OAAA7lC,EA2DT,SAAoBgmC,GAAAC,EAAOhoC,EAAMm+B,EAAQ3hC,GAMhC,OALH3B,EAAQmtC,GAtBd,SAAuBA,EAAOhoC,EAAMm+B,EAAQ3hC,GAC1C,MAAMyrC,EAAa9J,EAAO3S,MAAMwc,EAAM,GAAIxrC,GACpC0rC,EAAW/J,EAAO3S,MAAMwc,EAAM,GAAIxrC,GAClCuF,EAAM5B,KAAK4B,IAAIkmC,EAAYC,GAC3BlmC,EAAM7B,KAAK6B,IAAIimC,EAAYC,GACjC,IAAIC,EAAWpmC,EACXqmC,EAASpmC,EACT7B,KAAKwB,IAAII,GAAO5B,KAAKwB,IAAIK,KAChBmmC,EAAAnmC,EACFomC,EAAArmC,GAEX/B,EAAKm+B,EAAOn3B,MAAQohC,EACpBpoC,EAAKqoC,QAAU,CACbF,SAAAA,EACAC,OAAAA,EACA5kC,MAAOykC,EACPxkC,IAAKykC,EACLnmC,IAAAA,EACAC,IAAAA,GAKcsmC,CAAAN,EAAOhoC,EAAMm+B,EAAQ3hC,GAEnCwD,EAAKm+B,EAAOn3B,MAAQm3B,EAAO3S,MAAMwc,EAAOxrC,GAEnCwD,EAET,SAA+BuoC,GAAA/hC,EAAMsY,EAAMtb,EAAOoD,GAChD,MAAME,EAASN,EAAKM,OACdq3B,EAAS33B,EAAK23B,OACd8E,EAASn8B,EAAOo8B,YAChBC,EAAcr8B,IAAWq3B,EACzB5S,EAAS,GACX,IAAA/uB,EAAGO,EAAMiD,EAAMgoC,EACd,IAAAxrC,EAAIgH,EAAOzG,EAAOyG,EAAQoD,EAAOpK,EAAIO,IAAQP,EAChDwrC,EAAQlpB,EAAKtiB,GACNwD,EAAA,GACPA,EAAK8G,EAAOE,MAAQm8B,GAAer8B,EAAO0kB,MAAMyX,EAAOzmC,GAAIA,GAC3D+uB,EAAOpsB,KAAK4oC,GAAWC,EAAOhoC,EAAMm+B,EAAQ3hC,IAEvC,OAAA+uB,EAET,SAAAid,GAAoBC,GAClB,OAAOA,QAA8B,IAApBA,EAAON,eAA4C,IAAlBM,EAAOL,OA4B3D,SAA0BM,GAAArN,EAAYt9B,EAASw/B,EAAOl5B,GACpD,IAAIskC,EAAO5qC,EAAQ6qC,cACnB,MAAM7N,EAAM,GACZ,IAAK4N,EAEH,YADAtN,EAAWuN,cAAgB7N,GAG7B,IAAa,IAAT4N,EAEF,YADWtN,EAAAuN,cAAgB,CAACvmB,KAAK,EAAMD,OAAO,EAAME,QAAQ,EAAMH,MAAM,IAG1E,MAAM3e,MAACA,EAAOC,IAAAA,EAAAlH,QAAKA,EAAS8lB,IAAAA,EAAAC,OAAKA,GA/BnC,SAAqB+Y,GACf,IAAA9+B,EAASiH,EAAOC,EAAK4e,EAAKC,EAiB9B,OAhBI+Y,EAAWwN,YACHtsC,EAAA8+B,EAAW2G,KAAO3G,EAAW38B,EAC/B8E,EAAA,OACFC,EAAA,UAEIlH,EAAA8+B,EAAW2G,KAAO3G,EAAWz8B,EAC/B4E,EAAA,SACFC,EAAA,OAEJlH,GACI8lB,EAAA,MACGC,EAAA,UAEHD,EAAA,QACGC,EAAA,OAEJ,CAAC9e,MAAAA,EAAOC,IAAAA,EAAKlH,QAAAA,EAAS8lB,IAAAA,EAAKC,OAAAA,GAaSwmB,CAAYzN,GAC1C,WAATsN,GAAqBpL,IACvBlC,EAAW0N,oBAAqB,GAC3BxL,EAAMwB,MAAQ,KAAO16B,EACjBskC,EAAAtmB,GACGkb,EAAMyB,SAAW,KAAO36B,EAC3BskC,EAAArmB,GAEPyY,EAAIiO,GAAU1mB,EAAQ9e,EAAOC,EAAKlH,KAAY,EACvCosC,EAAAtmB,IAGX0Y,EAAIiO,GAAUL,EAAMnlC,EAAOC,EAAKlH,KAAY,EAC5C8+B,EAAWuN,cAAgB7N,EAE7B,SAAmBiO,GAAAL,EAAM9oC,EAAGC,EAAGvD,GAS/B,IAAc0sC,EAAMhsC,EAAIisC,EAFf,OANH3sC,GAQkB2sC,EAPCppC,EACd6oC,EAAAQ,GADAR,GAOGM,EAPEN,MAOI1rC,EAPE4C,GAQCqpC,EAAKD,IAASC,EAAKjsC,EAAKgsC,EAPrBnpC,EAAGD,IAElB8oC,EAAAQ,GAASR,EAAM9oC,EAAGC,GAEpB6oC,EAKT,SAAkBQ,GAAA1qC,EAAG+E,EAAOC,GAC1B,MAAa,UAANhF,EAAgB+E,EAAc,QAAN/E,EAAcgF,EAAMhF,EAErD,SAA0B2qC,GAAA/N,GAAYgO,cAACA,GAAgBpwB,GACrDoiB,EAAWgO,cAAkC,SAAlBA,EACb,IAAVpwB,EAAc,IAAO,EACrBowB,EAjMN5J,GAAkBhkB,SAAW,GAC7BgkB,GAAkBxkC,UAAUknC,mBAAqB,KACjD1C,GAAkBxkC,UAAUkqC,gBAAkB,KAiM9C,MAAAmE,WAA4B7J,GAC1B11B,mBAAmBvD,EAAMsY,EAAMtb,EAAOoD,GAC7B,OAAA2hC,GAAsB/hC,EAAMsY,EAAMtb,EAAOoD,GAElDmD,eAAevD,EAAMsY,EAAMtb,EAAOoD,GACzB,OAAA2hC,GAAsB/hC,EAAMsY,EAAMtb,EAAOoD,GAElDmD,gBAAgBvD,EAAMsY,EAAMtb,EAAOoD,GAC3B,MAAAE,OAACA,SAAQq3B,GAAU33B,GACnB48B,SAACA,EAAW,IAAKC,SAAAA,EAAW,KAAO3pB,KAAK4R,SACxCie,EAA2B,MAAhBziC,EAAOE,KAAeo8B,EAAWC,EAC5CmG,EAA2B,MAAhBrL,EAAOn3B,KAAeo8B,EAAWC,EAC5C9X,EAAS,GACX,IAAA/uB,EAAGO,EAAMiD,EAAMlB,EACd,IAAAtC,EAAIgH,EAAOzG,EAAOyG,EAAQoD,EAAOpK,EAAIO,IAAQP,EAChDsC,EAAMggB,EAAKtiB,GACJwD,EAAA,GACPA,EAAK8G,EAAOE,MAAQF,EAAO0kB,MAAM3sB,EAAiBC,EAAKyqC,GAAW/sC,GAClE+uB,EAAOpsB,KAAK4oC,GAAWlpC,EAAiBC,EAAK0qC,GAAWxpC,EAAMm+B,EAAQ3hC,IAEjE,OAAA+uB,EAETxhB,sBAAsBhJ,EAAO2c,EAAO6N,EAAQgS,GACpCkM,MAAAxF,sBAAsBljC,EAAO2c,EAAO6N,EAAQgS,GAClD,MAAMkL,EAASld,EAAO8c,QAClBI,GAAU/qB,IAAUhE,KAAK8kB,YAAYL,SACvCp9B,EAAMgB,IAAM5B,KAAK4B,IAAIhB,EAAMgB,IAAK0mC,EAAO1mC,KACvChB,EAAMiB,IAAM7B,KAAK6B,IAAIjB,EAAMiB,IAAKymC,EAAOzmC,MAG3C+H,iBACS,OAAA,EAETA,iBAAiB1F,GACf,MAAMmC,EAAOkT,KAAK8kB,aACZ13B,OAACA,SAAQq3B,GAAU33B,EACnB+kB,EAAS7R,KAAKwqB,UAAU7/B,GACxBokC,EAASld,EAAO8c,QAChBztC,EAAQ4tC,GAAWC,GACrB,IAAMA,EAAOjlC,MAAQ,KAAOilC,EAAOhlC,IAAM,IACzC,GAAK06B,EAAOiG,iBAAiB7Y,EAAO4S,EAAOn3B,OACxC,MAAA,CACLm9B,MAAO,GAAKr9B,EAAOs9B,iBAAiB7Y,EAAOzkB,EAAOE,OAClDpM,MAAAA,GAGJmP,aACE2P,KAAKymB,qBAAsB,EACrBsJ,MAAAlJ,aACO7mB,KAAK8kB,YACbjB,MAAQ7jB,KAAKknB,aAAarD,MAEjCxzB,OAAOkT,GACL,MAAMzW,EAAOkT,KAAK8kB,YAClB9kB,KAAKktB,eAAepgC,EAAKsY,KAAM,EAAGtY,EAAKsY,KAAKniB,OAAQsgB,GAEtDlT,eAAe2/B,EAAMlmC,EAAOoD,EAAOqW,GACjC,MAAM0sB,EAAiB,UAAT1sB,GACP9f,MAAAkH,EAAOm6B,aAAaL,OAACA,IAAWzkB,KACjCsoB,EAAO7D,EAAOyL,eACdf,EAAa1K,EAAO0L,eACpBC,EAAQpwB,KAAKqwB,aACbnE,cAACA,EAAAK,eAAeA,GAAkBvsB,KAAKswB,kBAAkBxmC,EAAOyZ,GACtE,IAAA,IAASzgB,EAAIgH,EAAOhH,EAAIgH,EAAQoD,EAAOpK,IAAK,CACpC,MAAA+uB,EAAS7R,KAAKwqB,UAAU1nC,GACxBytC,EAAUN,GAAShvC,EAAc4wB,EAAO4S,EAAOn3B,OAAS,CAACg7B,KAAAA,EAAMkI,KAAMlI,GAAQtoB,KAAKywB,yBAAyB3tC,GAC3G4tC,EAAU1wB,KAAK2wB,yBAAyB7tC,EAAGstC,GAC3CvM,GAAShS,EAAOkT,SAAW,IAAIN,EAAOn3B,MACtCq0B,EAAa,CACjBwN,WAAAA,EACA7G,KAAMiI,EAAQjI,KACd+G,oBAAqBxL,GAASiL,GAAWjd,EAAO8c,UAAuBhkC,IAAAk5B,EAAMwB,MAAQ16B,IAAUk5B,EAAMyB,QACrGtgC,EAAGmqC,EAAaoB,EAAQC,KAAOE,EAAQE,OACvC1rC,EAAGiqC,EAAauB,EAAQE,OAASL,EAAQC,KACzC1pB,OAAQqoB,EAAauB,EAAQrqC,KAAOI,KAAKwB,IAAIsoC,EAAQlqC,MACrDqf,MAAOypB,EAAa1oC,KAAKwB,IAAIsoC,EAAQlqC,MAAQqqC,EAAQrqC,MAEnDkmC,IACS5K,EAAAt9B,QAAU6nC,GAAiBlsB,KAAKmrB,0BAA0BroC,EAAGktC,EAAKltC,GAAG++B,OAAS,SAAWte,IAEtG,MAAMlf,EAAUs9B,EAAWt9B,SAAW2rC,EAAKltC,GAAGuB,QAC7B2qC,GAAArN,EAAYt9B,EAASw/B,EAAOl5B,GAC5B+kC,GAAA/N,EAAYt9B,EAAS+rC,EAAM7wB,OAC5CS,KAAK6wB,cAAcb,EAAKltC,GAAIA,EAAG6+B,EAAYpe,IAG/ClT,WAAWrF,EAAMogC,GACT,MAAAh+B,OAACA,GAAU4S,KAAK8kB,YAChBpB,EAAWt2B,EAAOu3B,wBAAwB3kB,KAAKmmB,OAClD9V,QAAOvjB,GAAQA,EAAK+3B,WAAWxgC,QAAQysC,UACpC5M,EAAU92B,EAAO/I,QAAQ6/B,QACzBE,EAAS,GACT2M,EAAYjkC,IACV,MAAA+kB,EAAS/kB,EAAK+3B,WAAW2F,UAAUY,GACnCtqB,EAAM+Q,GAAUA,EAAO/kB,EAAK23B,OAAOn3B,MACrC,GAAArM,EAAc6f,IAAQ/Y,MAAM+Y,GACvB,OAAA,GAGX,IAAA,MAAWhU,KAAQ42B,EACb,SAAc,IAAd0H,IAA2B2F,EAASjkC,QAGxB,IAAZo3B,IAAoD,IAA/BE,EAAOjgC,QAAQ2I,EAAK+2B,aAClC,IAAZK,QAAwC,IAAfp3B,EAAK+2B,QAC3BO,EAAO3+B,KAAKqH,EAAK+2B,OAEf/2B,EAAKrJ,QAAUuH,GACjB,MAMG,OAHFo5B,EAAOnhC,QACVmhC,EAAO3+B,UAAK,GAEP2+B,EAET/zB,eAAe1F,GACN,OAAAqV,KAAKgxB,gBAAW,EAAWrmC,GAAO1H,OAE3CoN,eAAe7M,EAAc6gB,EAAM+mB,GAC3B,MAAAhH,EAASpkB,KAAKgxB,WAAWxtC,EAAc4nC,GACvCzgC,OAAkB,IAAT0Z,EACX+f,EAAOjgC,QAAQkgB,IACf,EACJ,OAAkB,IAAV1Z,EACJy5B,EAAOnhC,OAAS,EAChB0H,EAEN0F,YACE,MAAMuZ,EAAO5J,KAAK3b,QACZyI,EAAOkT,KAAK8kB,YACZ13B,EAASN,EAAKM,OACd6jC,EAAS,GACf,IAAInuC,EAAGO,EACF,IAAAP,EAAI,EAAGO,EAAOyJ,EAAKsY,KAAKniB,OAAQH,EAAIO,IAAQP,EAC/CmuC,EAAOxrC,KAAK2H,EAAOM,iBAAiBsS,KAAKwqB,UAAU1nC,GAAGsK,EAAOE,MAAOxK,IAEtE,MAAMouC,EAAetnB,EAAKsnB,aAEnB,MAAA,CACL7oC,IAFU6oC,GAAgB1D,GAAqB1gC,GAG/CmkC,OAAAA,EACAnnC,MAAOsD,EAAO+jC,YACdpnC,IAAKqD,EAAOgkC,UACZC,WAAYrxB,KAAKsxB,iBACjBttB,MAAO5W,EACP0jC,QAASlnB,EAAKknB,QACdvxB,MAAO2xB,EAAe,EAAItnB,EAAK2nB,mBAAqB3nB,EAAK4nB,eAG7DnhC,yBAAyB1F,GACjB,MAACm6B,aAAaL,OAACA,EAAAsC,SAAQA,GAAW1iC,SAAUikC,KAAMmJ,EAAAC,aAAWA,IAAiB1xB,KAC9E2xB,EAAaF,GAAa,EAC1B5f,EAAS7R,KAAKwqB,UAAU7/B,GACxBokC,EAASld,EAAO8c,QAChBiD,EAAW9C,GAAWC,GACxB,IAGAyB,EAAMnqC,EAHNnF,EAAQ2wB,EAAO4S,EAAOn3B,MACtBxD,EAAQ,EACR7G,EAAS8jC,EAAW/mB,KAAK4jB,WAAWa,EAAQ5S,EAAQkV,GAAY7lC,EAEhE+B,IAAW/B,IACb4I,EAAQ7G,EAAS/B,EACR+B,EAAA/B,GAEP0wC,IACF1wC,EAAQ6tC,EAAON,SACNxrC,EAAA8rC,EAAOL,OAASK,EAAON,SAClB,IAAVvtC,GAAeiG,EAAKjG,KAAWiG,EAAK4nC,EAAOL,UACrC5kC,EAAA,GAEDA,GAAA5I,GAEX,MAAMqtC,EAActtC,EAAcwwC,IAAeG,EAAuB9nC,EAAZ2nC,EACxD,IAAAnJ,EAAO7D,EAAO/2B,iBAAiB6gC,GAO/B,GALKiC,EADLxwB,KAAKuC,MAAMsvB,kBAAkBlnC,GACxB85B,EAAO/2B,iBAAiB5D,EAAQ7G,GAEhCqlC,EAETjiC,EAAOmqC,EAAOlI,EACV7hC,KAAKwB,IAAI5B,GAAQqrC,EAAc,CAC1BrrC,EA7Pb,SAAiBA,EAAMo+B,EAAQkN,GAC7B,OAAa,IAATtrC,EACKc,EAAKd,MAEC8pC,eAAiB,OAAkB1L,EAAAp8B,KAAOspC,EAAa,GAAI,GAyP/DG,CAAQzrC,EAAMo+B,EAAQkN,GAAcD,EACvCxwC,IAAUywC,IACZrJ,GAAQjiC,EAAO,GAEX,MAAA0rC,EAAatN,EAAOuN,mBAAmB,GACvCC,EAAWxN,EAAOuN,mBAAmB,GACrC3pC,EAAM5B,KAAK4B,IAAI0pC,EAAYE,GAC3B3pC,EAAM7B,KAAK6B,IAAIypC,EAAYE,GACjC3J,EAAO7hC,KAAK6B,IAAI7B,KAAK4B,IAAIigC,EAAMhgC,GAAMD,GACrCmoC,EAAOlI,EAAOjiC,EAEZ,GAAAiiC,IAAS7D,EAAO/2B,iBAAiBikC,GAAa,CAChD,MAAMO,EAAW/qC,EAAKd,GAAQo+B,EAAO0N,qBAAqBR,GAAc,EAChErJ,GAAA4J,EACA7rC,GAAA6rC,EAEH,MAAA,CACL7rC,KAAAA,EACAiiC,KAAAA,EACAkI,KAAAA,EACAI,OAAQJ,EAAOnqC,EAAO,GAG1BgK,yBAAyB1F,EAAOylC,GAC9B,MAAMpsB,EAAQosB,EAAMpsB,MACd3f,EAAU2b,KAAK3b,QACf0sC,EAAW1sC,EAAQ0sC,SACnBqB,EAAkBnwC,EAAeoC,EAAQ+tC,gBAAiBC,EAAAA,GAChE,IAAIzB,EAAQvqC,EACZ,GAAI+pC,EAAMU,QAAS,CACjB,MAAMO,EAAaN,EAAW/wB,KAAKsxB,eAAe3mC,GAASylC,EAAMiB,WAC3DhqC,EAAiC,SAAzBhD,EAAQ6sC,aA/V5B,SAAmCvmC,EAAOylC,EAAO/rC,EAASgtC,GACxD,MAAMJ,EAASb,EAAMa,OACfjD,EAAOiD,EAAOtmC,GACpB,IAAI6pB,EAAO7pB,EAAQ,EAAIsmC,EAAOtmC,EAAQ,GAAK,KACvC6nB,EAAO7nB,EAAQsmC,EAAOhuC,OAAS,EAAIguC,EAAOtmC,EAAQ,GAAK,KAC3D,MAAM2nC,EAAUjuC,EAAQktC,mBACX,OAAT/c,IACFA,EAAOwZ,GAAiB,OAAAxb,EAAO4d,EAAMrmC,IAAMqmC,EAAMtmC,MAAQ0oB,EAAOwb,IAErD,OAATxb,IACFA,EAAOwb,EAAOA,EAAOxZ,GAEvB,MAAM1qB,EAAQkkC,GAAQA,EAAOvnC,KAAK4B,IAAImsB,EAAMhC,IAAS,EAAI8f,EAElD,MAAA,CACLC,MAFW9rC,KAAKwB,IAAIuqB,EAAOgC,GAAQ,EAAI8d,EAEzBjB,EACd9xB,MAAOlb,EAAQmtC,cACf1nC,MAAAA,GA+UM0oC,CAA0B7nC,EAAOylC,EAAO/rC,EAASgtC,GAhX3D,SAAkC1mC,EAAOylC,EAAO/rC,EAASgtC,GACvD,MAAMoB,EAAYpuC,EAAQ6sC,aAC1B,IAAI7qC,EAAMkZ,EAQH,OAPHte,EAAcwxC,IACTpsC,EAAA+pC,EAAM/nC,IAAMhE,EAAQktC,mBAC3BhyB,EAAQlb,EAAQmtC,gBAEhBnrC,EAAOosC,EAAYpB,EACX9xB,EAAA,GAEH,CACLgzB,MAAOlsC,EAAOgrC,EACd9xB,MAAAA,EACAzV,MAAOsmC,EAAMa,OAAOtmC,GAAUtE,EAAO,GAoW/BqsC,CAAyB/nC,EAAOylC,EAAO/rC,EAASgtC,GAC9CsB,EAAa3yB,KAAK4yB,eAAe5yB,KAAKvc,MAAOuc,KAAK8kB,YAAYjB,MAAOkN,EAAWpmC,OAAQ,GAC9FimC,EAASvpC,EAAMyC,MAASzC,EAAMkrC,MAAQI,EAAetrC,EAAMkrC,MAAQ,EACnElsC,EAAOI,KAAK4B,IAAI+pC,EAAiB/qC,EAAMkrC,MAAQlrC,EAAMkY,YAErDqxB,EAAS5sB,EAAMtW,iBAAiBsS,KAAKwqB,UAAU7/B,GAAOqZ,EAAM1W,MAAO3C,GACnEtE,EAAOI,KAAK4B,IAAI+pC,EAAiBhC,EAAM/nC,IAAM+nC,EAAM7wB,OAE9C,MAAA,CACL+oB,KAAMsI,EAASvqC,EAAO,EACtBmqC,KAAMI,EAASvqC,EAAO,EACtBuqC,OAAAA,EACAvqC,KAAAA,GAGJgK,OACE,MAAMvD,EAAOkT,KAAK8kB,YACZL,EAAS33B,EAAK23B,OACdoO,EAAQ/lC,EAAKsY,KACb/hB,EAAOwvC,EAAM5vC,OACnB,IAAIH,EAAI,EACD,KAAAA,EAAIO,IAAQP,EACsB,OAAnCkd,KAAKwqB,UAAU1nC,GAAG2hC,EAAOn3B,OACrBulC,EAAA/vC,GAAGg8B,KAAK9e,KAAKgmB,OAK3B4J,GAAc5uC,GAAK,MACnB4uC,GAAc7tB,SAAW,CACvB0mB,oBAAoB,EACpBgD,gBAAiB,MACjB8F,mBAAoB,GACpBC,cAAe,GACfV,SAAS,EACT9O,WAAY,CACVJ,QAAS,CACPvgC,KAAM,SACNsgC,WAAY,CAAC,IAAK,IAAK,OAAQ,QAAS,aAI9CiO,GAAcruB,UAAY,CACxB0C,OAAQ,CACN6uB,QAAS,CACPzxC,KAAM,WACN0xC,QAAQ,EACRC,KAAM,CACJD,QAAQ,IAGZE,QAAS,CACP5xC,KAAM,SACN6xC,aAAa,KAKnB,MAAAC,WAA+BpN,GAC7B11B,aACE2P,KAAKymB,qBAAsB,EACrBsJ,MAAAlJ,aAERx2B,mBAAmBvD,EAAMsY,EAAMtb,EAAOoD,GACpC,MAAM2kB,EAASke,MAAM1G,mBAAmBv8B,EAAMsY,EAAMtb,EAAOoD,GAC3D,IAAA,IAASpK,EAAI,EAAGA,EAAI+uB,EAAO5uB,OAAQH,IACjC+uB,EAAO/uB,GAAG6rC,QAAU3uB,KAAKmrB,0BAA0BroC,EAAIgH,GAAOwd,OAEzD,OAAAuK,EAETxhB,eAAevD,EAAMsY,EAAMtb,EAAOoD,GAChC,MAAM2kB,EAASke,MAAM5G,eAAer8B,EAAMsY,EAAMtb,EAAOoD,GACvD,IAAA,IAASpK,EAAI,EAAGA,EAAI+uB,EAAO5uB,OAAQH,IAAK,CAChC,MAAAwD,EAAO8e,EAAKtb,EAAQhH,GACnB+uB,EAAA/uB,GAAG6rC,QAAU1sC,EAAeqE,EAAK,GAAI0Z,KAAKmrB,0BAA0BroC,EAAIgH,GAAOwd,QAEjF,OAAAuK,EAETxhB,gBAAgBvD,EAAMsY,EAAMtb,EAAOoD,GACjC,MAAM2kB,EAASke,MAAM3G,gBAAgBt8B,EAAMsY,EAAMtb,EAAOoD,GACxD,IAAA,IAASpK,EAAI,EAAGA,EAAI+uB,EAAO5uB,OAAQH,IAAK,CAChC,MAAAwD,EAAO8e,EAAKtb,EAAQhH,GAC1B+uB,EAAO/uB,GAAG6rC,QAAU1sC,EAAeqE,GAAQA,EAAKoM,IAAMpM,EAAKoM,EAAGsN,KAAKmrB,0BAA0BroC,EAAIgH,GAAOwd,QAEnG,OAAAuK,EAETxhB,iBACQ,MAAA+U,EAAOpF,KAAK8kB,YAAY1f,KAC9B,IAAI9c,EAAM,EACV,IAAA,IAASxF,EAAIsiB,EAAKniB,OAAS,EAAGH,GAAK,IAAKA,EAChCwF,EAAA7B,KAAK6B,IAAIA,EAAK8c,EAAKtiB,GAAGuD,KAAK2Z,KAAKmrB,0BAA0BroC,IAAM,GAExE,OAAOwF,EAAM,GAAKA,EAEpB+H,iBAAiB1F,GACf,MAAMmC,EAAOkT,KAAK8kB,aACZl3B,OAACA,SAAQC,GAAUf,EACnB+kB,EAAS7R,KAAKwqB,UAAU7/B,GACxB3F,EAAI4I,EAAO88B,iBAAiB7Y,EAAO7sB,GACnCE,EAAI2I,EAAO68B,iBAAiB7Y,EAAO3sB,GACnCwN,EAAImf,EAAO8c,QACV,MAAA,CACLlE,MAAO39B,EAAK29B,MACZvpC,MAAO,IAAM8D,EAAI,KAAOE,GAASwN,EAAA,KAAOA,EAAI,IAAM,KAGtDrC,OAAOkT,GACC,MAAAxW,EAASiT,KAAK8kB,YAAY1f,KAChCpF,KAAKktB,eAAengC,EAAQ,EAAGA,EAAO9J,OAAQsgB,GAEhDlT,eAAetD,EAAQjD,EAAOoD,EAAOqW,GACnC,MAAM0sB,EAAiB,UAAT1sB,GACRnW,OAACA,EAAQq3B,OAAAA,GAAUzkB,KAAK8kB,aACxBoH,cAACA,EAAAK,eAAeA,GAAkBvsB,KAAKswB,kBAAkBxmC,EAAOyZ,GAChEyhB,EAAQ53B,EAAOE,KACf23B,EAAQR,EAAOn3B,KACrB,IAAA,IAASxK,EAAIgH,EAAOhH,EAAIgH,EAAQoD,EAAOpK,IAAK,CAC1C,MAAMwlB,EAAQvb,EAAOjK,GACf+uB,GAAUoe,GAASjwB,KAAKwqB,UAAU1nC,GAClC6+B,EAAa,GACb7N,EAAS6N,EAAWqD,GAASiL,EAAQ7iC,EAAO4kC,mBAAmB,IAAO5kC,EAAOM,iBAAiBmkB,EAAOmT,IACrGjR,EAAS4N,EAAWsD,GAASgL,EAAQxL,EAAOyL,eAAiBzL,EAAO/2B,iBAAiBmkB,EAAOoT,IACvFtD,EAAA1P,KAAOlqB,MAAM+rB,IAAW/rB,MAAMgsB,GACrCwY,IACF5K,EAAWt9B,QAAU6nC,GAAiBlsB,KAAKmrB,0BAA0BroC,EAAGwlB,EAAMuZ,OAAS,SAAWte,GAC9F0sB,IACFtO,EAAWt9B,QAAQijB,OAAS,IAG3BtH,KAAA6wB,cAAcvoB,EAAOxlB,EAAG6+B,EAAYpe,IAG7ClT,0BAA0B1F,EAAO4Y,GACzB,MAAAsO,EAAS7R,KAAKwqB,UAAU7/B,GAC1B,IAAAmX,EAASiuB,MAAM5E,0BAA0BxgC,EAAO4Y,GAChDzB,EAAO6gB,UACT7gB,EAASxgB,OAAO+M,OAAO,GAAIyT,EAAQ,CAAC6gB,SAAS,KAE/C,MAAMrb,EAASxF,EAAOwF,OAKf,MAJM,WAAT/D,IACFzB,EAAOwF,OAAS,GAElBxF,EAAOwF,QAAUrlB,EAAe4vB,GAAUA,EAAO8c,QAASrnB,GACnDxF,GAGXqxB,GAAiBnyC,GAAK,SACtBmyC,GAAiBpxB,SAAW,CAC1B0mB,oBAAoB,EACpBgD,gBAAiB,QACjBzJ,WAAY,CACVJ,QAAS,CACPvgC,KAAM,SACNsgC,WAAY,CAAC,IAAK,IAAK,cAAe,aAI5CwR,GAAiB5xB,UAAY,CAC3B0C,OAAQ,CACNjf,EAAG,CACD3D,KAAM,UAER6D,EAAG,CACD7D,KAAM,WAGVyiB,QAAS,CACPsvB,QAAS,CACPtV,UAAW,CACTuV,MAAQ,IACC,OAgCjB,MAAAC,WAAiCvN,GAC/B11B,YAAYkS,EAAO/e,GACjBusC,MAAMxtB,EAAO/e,GACbwc,KAAKymB,qBAAsB,EAC3BzmB,KAAKuzB,iBAAc,EACnBvzB,KAAKwzB,iBAAc,EACnBxzB,KAAKwW,aAAU,EACfxW,KAAKyW,aAAU,EAEjBpmB,cACAA,MAAMvG,EAAOoD,GACL,MAAAkY,EAAOpF,KAAKknB,aAAa9hB,KACzBtY,EAAOkT,KAAK8kB,YACd,IAAkB,IAAlB9kB,KAAK4R,SACP9kB,EAAKO,QAAU+X,MACV,CACL,IAKItiB,EAAGO,EALHowC,EAAUC,IAAOtuB,EAAKsuB,GACtB,GAAA/xC,EAASyjB,EAAKtb,IAAS,CACnB,MAAA5F,IAACA,EAAM,SAAW8b,KAAK4R,SAC7B6hB,EAAUC,IAAOvuC,EAAiBigB,EAAKsuB,GAAIxvC,GAGxC,IAAApB,EAAIgH,EAAOzG,EAAOyG,EAAQoD,EAAOpK,EAAIO,IAAQP,EAC3CgK,EAAAO,QAAQvK,GAAK2wC,EAAO3wC,IAI/BuN,eACS,OAAA9H,EAAUyX,KAAK3b,QAAQgjB,SAAW,IAE3ChX,oBACS,OAAA9H,EAAUyX,KAAK3b,QAAQsvC,eAEhCtjC,sBACE,IAAIhI,EAAM3B,EACN4B,GAAO5B,EACF,IAAA,IAAA5D,EAAI,EAAGA,EAAIkd,KAAKuC,MAAM6C,KAAKhD,SAASnf,SAAUH,EACjD,GAAAkd,KAAKuC,MAAMqxB,iBAAiB9wC,GAAI,CAClC,MAAM+hC,EAAa7kB,KAAKuC,MAAMylB,eAAellC,GAAG+hC,WAC1Cxd,EAAWwd,EAAWgP,eACtBF,EAAgB9O,EAAWiP,oBAC3BzrC,EAAA5B,KAAK4B,IAAIA,EAAKgf,GACd/e,EAAA7B,KAAK6B,IAAIA,EAAK+e,EAAWssB,GAG5B,MAAA,CACLtsB,SAAUhf,EACVsrC,cAAerrC,EAAMD,GAGzBgI,OAAOkT,GACL,MAAMhB,EAAQvC,KAAKuC,OACb0oB,UAACA,GAAa1oB,EACdzV,EAAOkT,KAAK8kB,YACZiP,EAAOjnC,EAAKsY,KACZ4uB,EAAUh0B,KAAKi0B,oBAAsBj0B,KAAKk0B,aAAaH,GAAQ/zB,KAAK3b,QAAQ2vC,QAC5EG,EAAU1tC,KAAK6B,KAAU7B,KAAA4B,IAAI4iC,EAAUvlB,MAAOulB,EAAUnkB,QAAUktB,GAAW,EAAG,GAChFI,EAAS3tC,KAAK4B,KDpvDFnH,ECovDmB8e,KAAK3b,QAAQ+vC,ODpvDzBjyC,ECovDiCgyC,EDnvD3C,iBAAVjzC,GAAsBA,EAAMkB,SAAS,KAC1CC,WAAWnB,GAAS,IAClBA,EAAQiB,GCivD0D,GDpvDnD,IAACjB,EAAOiB,ECqvDnB,MAAAkyC,EAAcr0B,KAAKs0B,eAAet0B,KAAKvc,QACvCkwC,cAACA,EAAetsB,SAAAA,GAAYrH,KAAKu0B,uBACjCC,OAACA,EAAQC,OAAAA,EAAAje,QAAQA,UAASC,GArFpC,SAA2BpP,EAAUssB,EAAeS,GAClD,IAAII,EAAS,EACTC,EAAS,EACTje,EAAU,EACVC,EAAU,EACd,GAAIkd,EAAgBjtC,EAAK,CACvB,MAAMguC,EAAartB,EACbstB,EAAWD,EAAaf,EACxBiB,EAASnuC,KAAKiJ,IAAIglC,GAClBG,EAASpuC,KAAKgI,IAAIimC,GAClBI,EAAOruC,KAAKiJ,IAAIilC,GAChBI,EAAOtuC,KAAKgI,IAAIkmC,GAChBK,EAAU,CAAC3rC,EAAOlD,EAAGC,IAAMyD,GAAcR,EAAOqrC,EAAYC,GAAU,GAAQ,EAAIluC,KAAK6B,IAAInC,EAAGA,EAAIiuC,EAAQhuC,EAAGA,EAAIguC,GACjHa,EAAU,CAAC5rC,EAAOlD,EAAGC,IAAMyD,GAAcR,EAAOqrC,EAAYC,GAAU,MAAaluC,KAAK4B,IAAIlC,EAAGA,EAAIiuC,EAAQhuC,EAAGA,EAAIguC,GAClHc,EAAOF,EAAQ,EAAGJ,EAAQE,GAC1BK,EAAOH,EAAQjuC,EAAS8tC,EAAQE,GAChCK,EAAOH,EAAQzuC,EAAIouC,EAAQE,GAC3BO,EAAOJ,EAAQzuC,EAAKO,EAAS8tC,EAAQE,GAC3CP,KAAiBY,GAAQ,EACzBX,KAAiBY,GAAQ,EACf7e,MAAS4e,GAAQ,EACjB3e,MAAS4e,GAAQ,EAEtB,MAAA,CAACb,OAAAA,EAAQC,OAAAA,EAAQje,QAAAA,EAASC,QAAAA,GA8DY6e,CAAkBjuB,EAAUssB,EAAeS,GAChF3pB,GAAsBwgB,EAAAvlB,MAAQsuB,GAAWQ,EACzCld,GAAuB2T,EAAAnkB,OAASktB,GAAWS,EAC3Cc,EAAY9uC,KAAK6B,IAAI7B,KAAK4B,IAAIoiB,EAAU6M,GAAa,EAAG,GACxDkc,EAActxC,EAAY8d,KAAK3b,QAAQijB,OAAQiuB,GAE/CC,GAA8BhC,EADhB/sC,KAAK6B,IAAIkrC,EAAcY,EAAQ,IACAp0B,KAAKy1B,gCACxDz1B,KAAKwW,QAAUA,EAAUgd,EACzBxzB,KAAKyW,QAAUA,EAAU+c,EACzB1mC,EAAK4oC,MAAQ11B,KAAK21B,iBAClB31B,KAAKwzB,YAAcA,EAAcgC,EAAex1B,KAAK41B,qBAAqB51B,KAAKvc,OAC/Euc,KAAKuzB,YAAc9sC,KAAK6B,IAAI0X,KAAKwzB,YAAcgC,EAAenB,EAAa,GAC3Er0B,KAAKktB,eAAe6G,EAAM,EAAGA,EAAK9wC,OAAQsgB,GAE5ClT,eAAevN,EAAGmtC,GAChB,MAAMrmB,EAAO5J,KAAK3b,QACZyI,EAAOkT,KAAK8kB,YACZ6O,EAAgB3zB,KAAK8zB,oBAC3B,OAAK7D,GAASrmB,EAAK3H,UAAU4zB,gBAAmB71B,KAAKuC,MAAMsvB,kBAAkB/uC,IAA0B,OAApBgK,EAAKO,QAAQvK,IAAegK,EAAKsY,KAAKtiB,GAAGmnC,OACnH,EAEFjqB,KAAK81B,uBAAuBhpC,EAAKO,QAAQvK,GAAK6wC,EAAgBjtC,GAEvE2J,eAAe0jC,EAAMjqC,EAAOoD,EAAOqW,GACjC,MAAM0sB,EAAiB,UAAT1sB,EACRhB,EAAQvC,KAAKuC,MACb0oB,EAAY1oB,EAAM0oB,UAElB8K,EADOxzB,EAAMle,QACQ4d,UACrB+zB,GAAW/K,EAAUxiB,KAAOwiB,EAAUviB,OAAS,EAC/CutB,GAAWhL,EAAUtiB,IAAMsiB,EAAUriB,QAAU,EAC/CstB,EAAejG,GAAS8F,EAAcG,aACtC3C,EAAc2C,EAAe,EAAIl2B,KAAKuzB,YACtCC,EAAc0C,EAAe,EAAIl2B,KAAKwzB,aACtCtH,cAACA,EAAAK,eAAeA,GAAkBvsB,KAAKswB,kBAAkBxmC,EAAOyZ,GACtE,IACIzgB,EADA4xC,EAAa10B,KAAK6zB,eAEtB,IAAK/wC,EAAI,EAAGA,EAAIgH,IAAShH,EACT4xC,GAAA10B,KAAKm2B,eAAerzC,EAAGmtC,GAEvC,IAAKntC,EAAIgH,EAAOhH,EAAIgH,EAAQoD,IAASpK,EAAG,CAChC,MAAA6wC,EAAgB3zB,KAAKm2B,eAAerzC,EAAGmtC,GACvCroB,EAAMmsB,EAAKjxC,GACX6+B,EAAa,CACjB38B,EAAGgxC,EAAUh2B,KAAKwW,QAClBtxB,EAAG+wC,EAAUj2B,KAAKyW,QAClBie,WAAAA,EACAC,SAAUD,EAAaf,EACvBA,cAAAA,EACAH,YAAAA,EACAD,YAAAA,GAEEhH,IACF5K,EAAWt9B,QAAU6nC,GAAiBlsB,KAAKmrB,0BAA0BroC,EAAG8kB,EAAIia,OAAS,SAAWte,IAEpFmxB,GAAAf,EACT3zB,KAAA6wB,cAAcjpB,EAAK9kB,EAAG6+B,EAAYpe,IAG3ClT,iBACE,MAAMvD,EAAOkT,KAAK8kB,YACZsR,EAAWtpC,EAAKsY,KACtB,IACItiB,EADA4yC,EAAQ,EAEZ,IAAK5yC,EAAI,EAAGA,EAAIszC,EAASnzC,OAAQH,IAAK,CAC9B,MAAA5B,EAAQ4L,EAAKO,QAAQvK,GACb,OAAV5B,GAAmB6G,MAAM7G,KAAU8e,KAAKuC,MAAMsvB,kBAAkB/uC,IAAOszC,EAAStzC,GAAGmnC,SACrFyL,GAASjvC,KAAKwB,IAAI/G,IAGf,OAAAw0C,EAETrlC,uBAAuBnP,GACf,MAAAw0C,EAAQ11B,KAAK8kB,YAAY4Q,MAC/B,OAAIA,EAAQ,IAAM3tC,MAAM7G,GACfwF,GAAYD,KAAAwB,IAAI/G,GAASw0C,GAE3B,EAETrlC,iBAAiB1F,GACf,MAAMmC,EAAOkT,KAAK8kB,YACZviB,EAAQvC,KAAKuC,MACbgnB,EAAShnB,EAAM6C,KAAKmkB,QAAU,GAC9BroC,EAAQo4B,GAAaxsB,EAAKO,QAAQ1C,GAAQ4X,EAAMle,QAAQm1B,QACvD,MAAA,CACLiR,MAAOlB,EAAO5+B,IAAU,GACxBzJ,MAAAA,GAGJmP,kBAAkB0jC,GAChB,IAAIzrC,EAAM,EACV,MAAMia,EAAQvC,KAAKuC,MACf,IAAAzf,EAAGO,EAAMyJ,EAAM+3B,EAAYxgC,EAC/B,IAAK0vC,EACE,IAAAjxC,EAAI,EAAGO,EAAOkf,EAAM6C,KAAKhD,SAASnf,OAAQH,EAAIO,IAAQP,EACrD,GAAAyf,EAAMqxB,iBAAiB9wC,GAAI,CAC7BgK,EAAOyV,EAAMylB,eAAellC,GAC5BixC,EAAOjnC,EAAKsY,KACZyf,EAAa/3B,EAAK+3B,WAClB,MAIN,IAAKkP,EACI,OAAA,EAEJ,IAAAjxC,EAAI,EAAGO,EAAO0wC,EAAK9wC,OAAQH,EAAIO,IAAQP,EAC1CuB,EAAUwgC,EAAWsG,0BAA0BroC,GACnB,UAAxBuB,EAAQgyC,cACV/tC,EAAM7B,KAAK6B,IAAIA,EAAKjE,EAAQ8jB,aAAe,EAAG9jB,EAAQiyC,kBAAoB,IAGvE,OAAAhuC,EAET+H,aAAa0jC,GACX,IAAIzrC,EAAM,EACD,IAAA,IAAAxF,EAAI,EAAGO,EAAO0wC,EAAK9wC,OAAQH,EAAIO,IAAQP,EAAG,CAC3C,MAAAuB,EAAU2b,KAAKmrB,0BAA0BroC,GAC/CwF,EAAM7B,KAAK6B,IAAIA,EAAKjE,EAAQ0uC,QAAU,EAAG1uC,EAAQkyC,aAAe,GAE3D,OAAAjuC,EAET+H,qBAAqB7M,GACnB,IAAIgzC,EAAmB,EACvB,IAAA,IAAS1zC,EAAI,EAAGA,EAAIU,IAAgBV,EAC9Bkd,KAAKuC,MAAMqxB,iBAAiB9wC,KAC9B0zC,GAAoBx2B,KAAKs0B,eAAexxC,IAGrC,OAAA0zC,EAETnmC,eAAe7M,GACN,OAAAiD,KAAK6B,IAAIrG,EAAe+d,KAAKuC,MAAM6C,KAAKhD,SAAS5e,GAAc8c,OAAQ,GAAI,GAEpFjQ,gCACE,OAAO2P,KAAK41B,qBAAqB51B,KAAKuC,MAAM6C,KAAKhD,SAASnf,SAAW,GAGzEqwC,GAAmBtyC,GAAK,WACxBsyC,GAAmBvxB,SAAW,CAC5B0mB,oBAAoB,EACpBgD,gBAAiB,MACjBxpB,UAAW,CACT4zB,eAAe,EACfK,cAAc,GAEhBlU,WAAY,CACVJ,QAAS,CACPvgC,KAAM,SACNsgC,WAAY,CAAC,gBAAiB,WAAY,cAAe,cAAe,aAAc,IAAK,IAAK,SAAU,cAAe,aAG7HyS,OAAQ,MACR/sB,SAAU,EACVssB,cAAe,IACfrsB,OAAQ,OACR0sB,QAAS,EACT3wB,UAAW,KAEbiwB,GAAmB9xB,YAAc,CAC/BuD,YAAcV,GAAkB,YAATA,EACvBY,WAAaZ,GAAkB,YAATA,GAExBivB,GAAmB/xB,UAAY,CAC7B6V,YAAa,EACbtT,QAAS,CACP2yB,OAAQ,CACNlN,OAAQ,CACNl5B,eAAekS,GACb,MAAM6C,EAAO7C,EAAM6C,KACnB,GAAIA,EAAKmkB,OAAOtmC,QAAUmiB,EAAKhD,SAASnf,OAAQ,CAC9C,MAAOsmC,QAAQniB,WAACA,IAAe7E,EAAMk0B,OAAOpyC,QAC5C,OAAO+gB,EAAKmkB,OAAO3lC,KAAI,CAAC6mC,EAAO3nC,KACvB,MACAggB,EADOP,EAAMylB,eAAe,GACfnD,WAAW/L,SAASh2B,GAChC,MAAA,CACL6mB,KAAM8gB,EACNvgB,UAAWpH,EAAMZ,gBACjBoI,YAAaxH,EAAMX,YACnBoI,UAAWzH,EAAMqF,YACjBf,WAAAA,EACA6iB,QAAS1nB,EAAMsvB,kBAAkB/uC,GACjCW,MAAOX,MAIN,MAAA,KAGXuN,QAAQzH,EAAG8tC,EAAYD,GACdA,EAAAl0B,MAAMo0B,qBAAqBD,EAAWjzC,OAC7CgzC,EAAOl0B,MAAM8gB,WAGjB+P,QAAS,CACPtV,UAAW,CACTuV,MAAQ,IACC,GAEThjC,MAAMumC,GACJ,IAAIC,EAAYD,EAAYnM,MACtB,MAAAvpC,EAAQ,KAAO01C,EAAYE,eAO1B,OANH31C,EAAQ01C,IACVA,EAAYA,EAAUn1C,QACtBm1C,EAAU,IAAM31C,GAEH21C,GAAA31C,EAER21C,OAOjB,MAAAE,WAA6BhR,GAC3B11B,aACE2P,KAAKymB,qBAAsB,EAC3BzmB,KAAK0mB,oBAAqB,EACpBqJ,MAAAlJ,aAERx2B,OAAOkT,GACL,MAAMzW,EAAOkT,KAAK8kB,aACXmC,QAASjd,EAAM5E,KAAMrY,EAAS,YAAIiqC,GAAYlqC,EAC/CE,EAAqBgT,KAAKuC,MAAM4pB,oBACtC,IAAIriC,MAACA,EAAAoD,MAAOA,GAASL,GAAiCC,EAAMC,EAAQC,GACpEgT,KAAKumB,WAAaz8B,EAClBkW,KAAKwmB,WAAat5B,EACdS,GAAoBb,KACdhD,EAAA,EACRoD,EAAQH,EAAO9J,QAEjB+mB,EAAKsS,OAAStc,KAAKuC,MACnByH,EAAKyS,cAAgBzc,KAAKvc,MACrBumB,EAAAitB,aAAeD,EAASC,WAC7BjtB,EAAKjd,OAASA,EACR,MAAA1I,EAAU2b,KAAKkrB,6BAA6B3nB,GAC7CvD,KAAK3b,QAAQ6f,WAChB7f,EAAQ8jB,YAAc,GAEhB9jB,EAAAi3B,QAAUtb,KAAK3b,QAAQi3B,QAC1Btb,KAAA6wB,cAAc7mB,OAAM,EAAW,CAClCktB,UAAWlqC,EACX3I,QAAAA,GACCkf,GACEvD,KAAAktB,eAAengC,EAAQjD,EAAOoD,EAAOqW,GAE5ClT,eAAetD,EAAQjD,EAAOoD,EAAOqW,GACnC,MAAM0sB,EAAiB,UAAT1sB,GACRnW,OAACA,EAAAq3B,OAAQA,EAAQsC,SAAAA,EAAAiQ,SAAUA,GAAYh3B,KAAK8kB,aAC5CoH,cAACA,EAAAK,eAAeA,GAAkBvsB,KAAKswB,kBAAkBxmC,EAAOyZ,GAChEyhB,EAAQ53B,EAAOE,KACf23B,EAAQR,EAAOn3B,MACfgnB,SAACA,EAAUgH,QAAAA,GAAWtb,KAAK3b,QAC3B8yC,EAAetvC,EAASysB,GAAYA,EAAWzyB,OAAOgF,kBACtDuwC,EAAep3B,KAAKuC,MAAM4pB,qBAAuB8D,GAAkB,SAAT1sB,EAChE,IAAI8zB,EAAavtC,EAAQ,GAAKkW,KAAKwqB,UAAU1gC,EAAQ,GACrD,IAAA,IAAShH,EAAIgH,EAAOhH,EAAIgH,EAAQoD,IAASpK,EAAG,CAC1C,MAAMwlB,EAAQvb,EAAOjK,GACf+uB,EAAS7R,KAAKwqB,UAAU1nC,GACxB6+B,EAAayV,EAAe9uB,EAAQ,GACpCgvB,EAAWr2C,EAAc4wB,EAAOoT,IAChCnR,EAAS6N,EAAWqD,GAAS53B,EAAOM,iBAAiBmkB,EAAOmT,GAAQliC,GACpEixB,EAAS4N,EAAWsD,GAASgL,GAASqH,EAAW7S,EAAOyL,eAAiBzL,EAAO/2B,iBAAiBq5B,EAAW/mB,KAAK4jB,WAAWa,EAAQ5S,EAAQkV,GAAYlV,EAAOoT,GAAQniC,GAC7K6+B,EAAW1P,KAAOlqB,MAAM+rB,IAAW/rB,MAAMgsB,IAAWujB,EACzC3V,EAAA4V,KAAOz0C,EAAI,GAAM2D,KAAKwB,IAAI4pB,EAAOmT,GAASqS,EAAWrS,IAAWmS,EACvE7b,IACFqG,EAAW9P,OAASA,EACT8P,EAAA0J,IAAM2L,EAAS5xB,KAAKtiB,IAE7BypC,IACF5K,EAAWt9B,QAAU6nC,GAAiBlsB,KAAKmrB,0BAA0BroC,EAAGwlB,EAAMuZ,OAAS,SAAWte,IAE/F6zB,GACEp3B,KAAA6wB,cAAcvoB,EAAOxlB,EAAG6+B,EAAYpe,GAE9B8zB,EAAAxlB,GAGjBxhB,iBACE,MAAMvD,EAAOkT,KAAK8kB,YACZmC,EAAUn6B,EAAKm6B,QACfuQ,EAASvQ,EAAQ5iC,SAAW4iC,EAAQ5iC,QAAQ8jB,aAAe,EAC3D/C,EAAOtY,EAAKsY,MAAQ,GACtB,IAACA,EAAKniB,OACD,OAAAu0C,EAET,MAAMplB,EAAahN,EAAK,GAAG/e,KAAK2Z,KAAKmrB,0BAA0B,IACzDsM,EAAYryB,EAAKA,EAAKniB,OAAS,GAAGoD,KAAK2Z,KAAKmrB,0BAA0B/lB,EAAKniB,OAAS,IAC1F,OAAOwD,KAAK6B,IAAIkvC,EAAQplB,EAAYqlB,GAAa,EAEnDpnC,OACE,MAAMvD,EAAOkT,KAAK8kB,YAClBh4B,EAAKm6B,QAAQyQ,oBAAoB13B,KAAKuC,MAAM0oB,UAAWn+B,EAAKM,OAAOE,MAC7DyiC,MAAAjR,QAGViY,GAAe/1C,GAAK,OACpB+1C,GAAeh1B,SAAW,CACxB0mB,mBAAoB,OACpBgD,gBAAiB,QACjBvnB,UAAU,EACVoQ,UAAU,GAEZyiB,GAAex1B,UAAY,CACzB0C,OAAQ,CACN6uB,QAAS,CACPzxC,KAAM,YAER4xC,QAAS,CACP5xC,KAAM,YAKZ,MAAAs2C,WAAkC5R,GAChC11B,YAAYkS,EAAO/e,GACjBusC,MAAMxtB,EAAO/e,GACbwc,KAAKuzB,iBAAc,EACnBvzB,KAAKwzB,iBAAc,EAErBnjC,iBAAiB1F,GACf,MAAMmC,EAAOkT,KAAK8kB,YACZviB,EAAQvC,KAAKuC,MACbgnB,EAAShnB,EAAM6C,KAAKmkB,QAAU,GAC9BroC,EAAQo4B,GAAaxsB,EAAKO,QAAQ1C,GAAO+H,EAAG6P,EAAMle,QAAQm1B,QACzD,MAAA,CACLiR,MAAOlB,EAAO5+B,IAAU,GACxBzJ,MAAAA,GAGJmP,gBAAgBvD,EAAMsY,EAAMtb,EAAOoD,GACjC,OAAOykB,GAA4BimB,KAAK53B,KAAjC2R,CAAuC7kB,EAAMsY,EAAMtb,EAAOoD,GAEnEmD,OAAOkT,GACC,MAAAwwB,EAAO/zB,KAAK8kB,YAAY1f,KACzBpF,KAAA63B,gBACL73B,KAAKktB,eAAe6G,EAAM,EAAGA,EAAK9wC,OAAQsgB,GAE5ClT,YACE,MAAMvD,EAAOkT,KAAK8kB,YACZz9B,EAAQ,CAACgB,IAAKxG,OAAOgF,kBAAmByB,IAAKzG,OAAOsoC,mBAYnD,OAXPr9B,EAAKsY,KAAK3Z,SAAQ,CAACgqB,EAAS9qB,KACpB,MAAAknB,EAAS7R,KAAKwqB,UAAU7/B,GAAO+H,GAChC3K,MAAM8pB,IAAW7R,KAAKuC,MAAMsvB,kBAAkBlnC,KAC7CknB,EAASxqB,EAAMgB,MACjBhB,EAAMgB,IAAMwpB,GAEVA,EAASxqB,EAAMiB,MACjBjB,EAAMiB,IAAMupB,OAIXxqB,EAETgJ,gBACE,MAAMkS,EAAQvC,KAAKuC,MACb0oB,EAAY1oB,EAAM0oB,UAClBrhB,EAAOrH,EAAMle,QACbyzC,EAAUrxC,KAAK4B,IAAI4iC,EAAUviB,MAAQuiB,EAAUxiB,KAAMwiB,EAAUriB,OAASqiB,EAAUtiB,KAClF6qB,EAAc/sC,KAAK6B,IAAIwvC,EAAU,EAAG,GAEpCtC,GAA8BhC,EADhB/sC,KAAK6B,IAAIshB,EAAKmuB,iBAAoBvE,EAAc,IAAQ5pB,EAAKmuB,iBAAoB,EAAG,IACrDx1B,EAAMy1B,yBACpDh4B,KAAAwzB,YAAcA,EAAegC,EAAex1B,KAAKvc,MACjDuc,KAAAuzB,YAAcvzB,KAAKwzB,YAAcgC,EAExCnlC,eAAe0jC,EAAMjqC,EAAOoD,EAAOqW,GACjC,MAAM0sB,EAAiB,UAAT1sB,EACRhB,EAAQvC,KAAKuC,MAEbwzB,EADOxzB,EAAMle,QACQ4d,UACrB+B,EAAQhE,KAAK8kB,YAAYiD,OACzBiO,EAAUhyB,EAAMi0B,QAChBhC,EAAUjyB,EAAMk0B,QAChBC,EAAoBn0B,EAAMo0B,cAAc,GAAK,GAAM5xC,EACzD,IACI1D,EADAuG,EAAQ8uC,EAEN,MAAAE,EAAe,IAAMr4B,KAAKs4B,uBAChC,IAAKx1C,EAAI,EAAGA,EAAIgH,IAAShH,EACduG,GAAA2W,KAAKu4B,cAAcz1C,EAAGygB,EAAM80B,GAEvC,IAAKv1C,EAAIgH,EAAOhH,EAAIgH,EAAQoD,EAAOpK,IAAK,CACtC,MAAM8kB,EAAMmsB,EAAKjxC,GACjB,IAAI4xC,EAAarrC,EACbsrC,EAAWtrC,EAAQ2W,KAAKu4B,cAAcz1C,EAAGygB,EAAM80B,GAC/C7E,EAAcjxB,EAAMsvB,kBAAkB/uC,GAAKkhB,EAAMw0B,8BAA8Bx4B,KAAKwqB,UAAU1nC,GAAG4P,GAAK,EAClGrJ,EAAAsrC,EACJ1E,IACE8F,EAAcG,eACF1C,EAAA,GAEZuC,EAAcF,gBAChBnB,EAAaC,EAAWwD,IAG5B,MAAMxW,EAAa,CACjB38B,EAAGgxC,EACH9wC,EAAG+wC,EACH1C,YAAa,EACbC,YAAAA,EACAkB,WAAAA,EACAC,SAAAA,EACAtwC,QAAS2b,KAAKmrB,0BAA0BroC,EAAG8kB,EAAIia,OAAS,SAAWte,IAEhEvD,KAAA6wB,cAAcjpB,EAAK9kB,EAAG6+B,EAAYpe,IAG3ClT,uBACE,MAAMvD,EAAOkT,KAAK8kB,YAClB,IAAI53B,EAAQ,EAML,OALPJ,EAAKsY,KAAK3Z,SAAQ,CAACgqB,EAAS9qB,MACrB5C,MAAMiY,KAAKwqB,UAAU7/B,GAAO+H,IAAMsN,KAAKuC,MAAMsvB,kBAAkBlnC,IAClEuC,OAGGA,EAETmD,cAAc1F,EAAO4Y,EAAM80B,GAClB,OAAAr4B,KAAKuC,MAAMsvB,kBAAkBlnC,GAChCpC,EAAUyX,KAAKmrB,0BAA0BxgC,EAAO4Y,GAAMla,OAASgvC,GAC/D,GAGRV,GAAoB32C,GAAK,YACzB22C,GAAoB51B,SAAW,CAC7B0pB,gBAAiB,MACjBxpB,UAAW,CACT4zB,eAAe,EACfK,cAAc,GAEhBlU,WAAY,CACVJ,QAAS,CACPvgC,KAAM,SACNsgC,WAAY,CAAC,IAAK,IAAK,aAAc,WAAY,cAAe,iBAGpEte,UAAW,IACXqxB,WAAY,GAEdiD,GAAoBp2B,UAAY,CAC9B6V,YAAa,EACbtT,QAAS,CACP2yB,OAAQ,CACNlN,OAAQ,CACNl5B,eAAekS,GACb,MAAM6C,EAAO7C,EAAM6C,KACnB,GAAIA,EAAKmkB,OAAOtmC,QAAUmiB,EAAKhD,SAASnf,OAAQ,CAC9C,MAAOsmC,QAAQniB,WAACA,IAAe7E,EAAMk0B,OAAOpyC,QAC5C,OAAO+gB,EAAKmkB,OAAO3lC,KAAI,CAAC6mC,EAAO3nC,KACvB,MACAggB,EADOP,EAAMylB,eAAe,GACfnD,WAAW/L,SAASh2B,GAChC,MAAA,CACL6mB,KAAM8gB,EACNvgB,UAAWpH,EAAMZ,gBACjBoI,YAAaxH,EAAMX,YACnBoI,UAAWzH,EAAMqF,YACjBf,WAAAA,EACA6iB,QAAS1nB,EAAMsvB,kBAAkB/uC,GACjCW,MAAOX,MAIN,MAAA,KAGXuN,QAAQzH,EAAG8tC,EAAYD,GACdA,EAAAl0B,MAAMo0B,qBAAqBD,EAAWjzC,OAC7CgzC,EAAOl0B,MAAM8gB,WAGjB+P,QAAS,CACPtV,UAAW,CACTuV,MAAQ,IACC,GAET5I,MAAMnoB,GACGA,EAAQC,MAAM6C,KAAKmkB,OAAOjnB,EAAQ8oB,WAAa,KAAO9oB,EAAQw0B,kBAK7E7yB,OAAQ,CACNvR,EAAG,CACDrR,KAAM,eACNo3C,WAAY,CACVC,SAAS,GAEXxF,aAAa,EACbF,KAAM,CACJ2F,UAAU,GAEZC,YAAa,CACXF,SAAS,GAEXhE,WAAY,KAKlB,MAAAmE,WAA4BvF,IAE5BuF,GAAc73C,GAAK,MACnB63C,GAAc92B,SAAW,CACvBqyB,OAAQ,EACR/sB,SAAU,EACVssB,cAAe,IACfrsB,OAAQ,QAGV,MAAAwxB,WAA8B/S,GAC5B11B,iBAAiB1F,GACT,MAAA85B,EAASzkB,KAAK8kB,YAAYL,OAC1B5S,EAAS7R,KAAKwqB,UAAU7/B,GACvB,MAAA,CACL8/B,MAAOhG,EAAO+E,YAAY7+B,GAC1BzJ,MAAO,GAAKujC,EAAOiG,iBAAiB7Y,EAAO4S,EAAOn3B,QAGtD+C,gBAAgBvD,EAAMsY,EAAMtb,EAAOoD,GACjC,OAAOykB,GAA4BimB,KAAK53B,KAAjC2R,CAAuC7kB,EAAMsY,EAAMtb,EAAOoD,GAEnEmD,OAAOkT,GACL,MAAMzW,EAAOkT,KAAK8kB,YACZ9a,EAAOld,EAAKm6B,QACZl6B,EAASD,EAAKsY,MAAQ,GACtBmkB,EAASz8B,EAAKM,OAAOo8B,YAE3B,GADAxf,EAAKjd,OAASA,EACD,WAATwW,EAAmB,CACf,MAAAlf,EAAU2b,KAAKkrB,6BAA6B3nB,GAC7CvD,KAAK3b,QAAQ6f,WAChB7f,EAAQ8jB,YAAc,GAExB,MAAMwZ,EAAa,CACjBhB,OAAO,EACPoY,UAAWxP,EAAOtmC,SAAW8J,EAAO9J,OACpCoB,QAAAA,GAEG2b,KAAA6wB,cAAc7mB,OAAM,EAAW2X,EAAYpe,GAElDvD,KAAKktB,eAAengC,EAAQ,EAAGA,EAAO9J,OAAQsgB,GAEhDlT,eAAetD,EAAQjD,EAAOoD,EAAOqW,GAC7B,MAAAS,EAAQhE,KAAK8kB,YAAYiD,OACzBkI,EAAiB,UAAT1sB,EACd,IAAA,IAASzgB,EAAIgH,EAAOhH,EAAIgH,EAAQoD,EAAOpK,IAAK,CAC1C,MAAMwlB,EAAQvb,EAAOjK,GACfuB,EAAU2b,KAAKmrB,0BAA0BroC,EAAGwlB,EAAMuZ,OAAS,SAAWte,GACtEy1B,EAAgBh1B,EAAMi1B,yBAAyBn2C,EAAGkd,KAAKwqB,UAAU1nC,GAAG4P,GACpE1N,EAAIirC,EAAQjsB,EAAMi0B,QAAUe,EAAch0C,EAC1CE,EAAI+qC,EAAQjsB,EAAMk0B,QAAUc,EAAc9zC,EAC1Cy8B,EAAa,CACjB38B,EAAAA,EACAE,EAAAA,EACAmE,MAAO2vC,EAAc3vC,MACrB4oB,KAAMlqB,MAAM/C,IAAM+C,MAAM7C,GACxBb,QAAAA,GAEG2b,KAAA6wB,cAAcvoB,EAAOxlB,EAAG6+B,EAAYpe,KAI/Cu1B,GAAgB93C,GAAK,QACrB83C,GAAgB/2B,SAAW,CACzB0mB,mBAAoB,OACpBgD,gBAAiB,QACjBpoB,UAAW,IACXa,UAAU,EACVxB,SAAU,CACRsH,KAAM,CACJ9B,KAAM,WAIZ4wB,GAAgBv3B,UAAY,CAC1B6V,YAAa,EACbnT,OAAQ,CACNvR,EAAG,CACDrR,KAAM,kBAKZ,MAAc63C,GACZ7oC,cACE2P,KAAKhb,OAAI,EACTgb,KAAK9a,OAAI,EACT8a,KAAK6hB,QAAS,EACd7hB,KAAK3b,aAAU,EACf2b,KAAK4iB,iBAAc,EAErBvyB,gBAAgB8oC,GACd,MAAMn0C,EAACA,EAAGE,EAAAA,GAAK8a,KAAKo5B,SAAS,CAAC,IAAK,KAAMD,GACzC,MAAO,CAACn0C,EAAAA,EAAGE,EAAAA,GAEbmL,WACE,OAAOxI,EAASmY,KAAKhb,IAAM6C,EAASmY,KAAK9a,GAE3CmL,SAAS4b,EAAOotB,GACd,MAAMzb,EAAQ5d,KAAK4iB,YACf,IAACyW,IAAUzb,EACN,OAAA5d,KAET,MAAMD,EAAM,GAIL,OAHPkM,EAAMxgB,SAAgB2gB,IAChBrM,EAAAqM,GAAQwR,EAAMxR,IAASwR,EAAMxR,GAAMyV,SAAWjE,EAAMxR,GAAM2U,IAAM/gB,KAAKoM,MAEpErM,GAGXm5B,GAAQn3B,SAAW,GACnBm3B,GAAQI,mBAAgB,EAExB,MAAMC,GAAa,CACjBz3B,OAAO5gB,GACEC,EAAQD,GAASA,EAAQ,GAAKA,EAEvCmP,QAAQmpC,EAAW7uC,EAAOwjC,GACxB,GAAkB,IAAdqL,EACK,MAAA,IAEH,MAAAhgB,EAASxZ,KAAKuC,MAAMle,QAAQm1B,OAC9B,IAAAigB,EACA5lB,EAAQ2lB,EACR,GAAArL,EAAMlrC,OAAS,EAAG,CACpB,MAAMy2C,EAAUjzC,KAAK6B,IAAI7B,KAAKwB,IAAIkmC,EAAM,GAAGjtC,OAAQuF,KAAKwB,IAAIkmC,EAAMA,EAAMlrC,OAAS,GAAG/B,SAChFw4C,EAAU,MAAQA,EAAU,QACnBD,EAAA,cAEb5lB,EAmBN,SAAwB2lB,EAAWrL,GACjC,IAAIta,EAAQsa,EAAMlrC,OAAS,EAAIkrC,EAAM,GAAGjtC,MAAQitC,EAAM,GAAGjtC,MAAQitC,EAAM,GAAGjtC,MAAQitC,EAAM,GAAGjtC,MACvFuF,KAAKwB,IAAI4rB,IAAU,GAAK2lB,IAAc/yC,KAAKkB,MAAM6xC,KAC3C3lB,EAAA2lB,EAAY/yC,KAAKkB,MAAM6xC,IAE1B,OAAA3lB,EAxBK8lB,CAAeH,EAAWrL,GAE9B,MAAAyL,EAAW1yC,EAAMT,KAAKwB,IAAI4rB,IAC1BgmB,EAAapzC,KAAK6B,IAAI7B,KAAK4B,KAAS,EAAA5B,KAAKkB,MAAMiyC,GAAW,IAAK,GAC/Dv1C,EAAU,CAACo1C,SAAAA,EAAUK,sBAAuBD,EAAYE,sBAAuBF,GAE9E,OADPv4C,OAAO+M,OAAOhK,EAAS2b,KAAK3b,QAAQ8pC,MAAMnU,QACnCV,GAAakgB,EAAWhgB,EAAQn1B,IAEzCgM,YAAYmpC,EAAW7uC,EAAOwjC,GAC5B,GAAkB,IAAdqL,EACK,MAAA,IAET,MAAMtY,EAASsY,EAAa/yC,KAAKiB,IAAI,GAAIjB,KAAKkB,MAAMT,EAAMsyC,KAC1D,OAAe,IAAXtY,GAA2B,IAAXA,GAA2B,IAAXA,EAC3BqY,GAAWS,QAAQv4C,KAAKue,KAAMw5B,EAAW7uC,EAAOwjC,GAElD,KAUX,IAAI8L,GAAQ,CAACV,WAAAA,IAqEb,SAAAW,GAAkBl2B,EAAOmqB,GACjB,MAAAgM,EAAWn2B,EAAM3f,QAAQ8pC,MACzBiM,EAAaD,EAASE,eAwB9B,SAA2Br2B,GACnB,MAAA+uB,EAAS/uB,EAAM3f,QAAQ0uC,OACvBuH,EAAat2B,EAAMu2B,YACnBC,EAAWx2B,EAAMiqB,QAAUqM,KAAuB,EAAI,GACtDG,EAAWz2B,EAAM02B,WAAaJ,EACpC,OAAO7zC,KAAKkB,MAAMlB,KAAK4B,IAAImyC,EAAUC,IA7BQE,CAAkB32B,GACzD42B,EAAeT,EAASU,MAAMC,QA6CtC,SAAyB3M,GACvB,MAAMrY,EAAS,GACf,IAAIhzB,EAAGO,EACP,IAAKP,EAAI,EAAGO,EAAO8qC,EAAMlrC,OAAQH,EAAIO,EAAMP,IACrCqrC,EAAMrrC,GAAG+3C,OACX/kB,EAAOrwB,KAAK3C,GAGT,OAAAgzB,EArDuCilB,CAAgB5M,GAAS,GACjE6M,EAAkBJ,EAAa33C,OAC/Bg4C,EAAQL,EAAa,GACrB5vC,EAAO4vC,EAAaI,EAAkB,GACtCE,EAAW,GACjB,GAAIF,EAAkBZ,EAEb,OAgDX,SAAoBjM,EAAO+M,EAAUN,EAAc5G,GACjD,IAEIlxC,EAFAoK,EAAQ,EACRslB,EAAOooB,EAAa,GAGxB,IADA5G,EAAUvtC,KAAK00C,KAAKnH,GACflxC,EAAI,EAAGA,EAAIqrC,EAAMlrC,OAAQH,IACxBA,IAAM0vB,IACR0oB,EAASz1C,KAAK0oC,EAAMrrC,IACpBoK,IACAslB,EAAOooB,EAAa1tC,EAAQ8mC,IA1DnBoH,CAAAjN,EAAO+M,EAAUN,EAAcI,EAAkBZ,GACrDc,EAEH,MAAAlH,EAqBR,SAA0B4G,EAAczM,EAAOiM,GAC7C,MAAMiB,EA4DR,SAAwBjrB,GACtB,MAAMrtB,EAAMqtB,EAAIntB,OAChB,IAAIH,EAAGw4C,EACP,GAAIv4C,EAAM,EACD,OAAA,EAEJ,IAAAu4C,EAAOlrB,EAAI,GAAIttB,EAAI,EAAGA,EAAIC,IAAOD,EACpC,GAAIstB,EAAIttB,GAAKstB,EAAIttB,EAAI,KAAOw4C,EACnB,OAAA,EAGJ,OAAAA,EAvEkBC,CAAeX,GAClC5G,EAAU7F,EAAMlrC,OAASm3C,EAC/B,IAAKiB,EACI,OAAA50C,KAAK6B,IAAI0rC,EAAS,GAE3B,MAAMwH,ED/yER,SAAoBt6C,GAClB,MAAM40B,EAAS,GACT1sB,EAAO3C,KAAK2C,KAAKlI,GACnB,IAAA4B,EACJ,IAAKA,EAAI,EAAGA,EAAIsG,EAAMtG,IAChB5B,EAAQ4B,GAAM,IAChBgzB,EAAOrwB,KAAK3C,GACZgzB,EAAOrwB,KAAKvE,EAAQ4B,IAOjB,OAJHsG,KAAiB,MACnB0sB,EAAOrwB,KAAK2D,GAEd0sB,EAAOgY,MAAK,CAAC3nC,EAAGC,IAAMD,EAAIC,IAAGy4B,MACtB/I,ECiyES2lB,CAAWJ,GAClB,IAAA,IAAAv4C,EAAI,EAAGO,EAAOm4C,EAAQv4C,OAAS,EAAGH,EAAIO,EAAMP,IAAK,CACxD,MAAMi9B,EAASyb,EAAQ14C,GACvB,GAAIi9B,EAASiU,EACJ,OAAAjU,EAGJ,OAAAt5B,KAAK6B,IAAI0rC,EAAS,GAlCT0H,CAAiBd,EAAczM,EAAOiM,GACtD,GAAIY,EAAkB,EAAG,CACvB,IAAIl4C,EAAGO,EACD,MAAAs4C,EAAkBX,EAAkB,EAAIv0C,KAAKc,OAAcyD,EAAAiwC,MAA4B,IAAM,KAEnG,IADAhpB,GAAKkc,EAAO+M,EAAUlH,EAAS/yC,EAAc06C,GAAmB,EAAIV,EAAQU,EAAiBV,GACxFn4C,EAAI,EAAGO,EAAO23C,EAAkB,EAAGl4C,EAAIO,EAAMP,IAChDmvB,GAAKkc,EAAO+M,EAAUlH,EAAS4G,EAAa93C,GAAI83C,EAAa93C,EAAI,IAG5D,OADFmvB,GAAAkc,EAAO+M,EAAUlH,EAAShpC,EAAM/J,EAAc06C,GAAmBxN,EAAMlrC,OAAS+H,EAAO2wC,GACrFT,EAGF,OADPjpB,GAAKkc,EAAO+M,EAAUlH,GACfkH,EA+CT,SAAAjpB,GAAckc,EAAO+M,EAAUlH,EAAS4H,EAAYC,GAC5C,MAAA/xC,EAAQ7H,EAAe25C,EAAY,GACnC7xC,EAAMtD,KAAK4B,IAAIpG,EAAe45C,EAAU1N,EAAMlrC,QAASkrC,EAAMlrC,QACnE,IACIA,EAAQH,EAAG0vB,EADXtlB,EAAQ,EAQZ,IANA8mC,EAAUvtC,KAAK00C,KAAKnH,GAChB6H,IACF54C,EAAS44C,EAAWD,EACV5H,EAAA/wC,EAASwD,KAAKkB,MAAM1E,EAAS+wC,IAElCxhB,EAAA1oB,EACA0oB,EAAO,GACZtlB,IACOslB,EAAA/rB,KAAKc,MAAMuC,EAAQoD,EAAQ8mC,GAEpC,IAAKlxC,EAAI2D,KAAK6B,IAAIwB,EAAO,GAAIhH,EAAIiH,EAAKjH,IAChCA,IAAM0vB,IACR0oB,EAASz1C,KAAK0oC,EAAMrrC,IACpBoK,IACOslB,EAAA/rB,KAAKc,MAAMuC,EAAQoD,EAAQ8mC,IA7JxCjyB,GAASJ,IAAI,QAAS,CACpB+2B,SAAS,EACT3F,QAAQ,EACRlwC,SAAS,EACTqwC,aAAa,EACb3X,OAAQ,QACRugB,MAAO,EACP9I,KAAM,CACJ0F,SAAS,EACTnuB,UAAW,EACXwxB,YAAY,EACZC,iBAAiB,EACjBC,WAAW,EACX3B,WAAY,EACZ4B,UAAW,CAAClW,EAAM3hC,IAAYA,EAAQkmB,UACtC4xB,UAAW,CAACnW,EAAM3hC,IAAYA,EAAQ8c,MACtC4xB,QAAQ,EACR3V,WAAY,GACZC,iBAAkB,EAClBlV,YAAa,GAEfkrB,MAAO,CACLqF,SAAS,EACT/uB,KAAM,GACNyyB,QAAS,CACPzzB,IAAK,EACLC,OAAQ,IAGZulB,MAAO,CACLkO,YAAa,EACbC,YAAa,GACbC,QAAQ,EACRC,gBAAiB,EACjBC,gBAAiB,GACjBL,QAAS,EACT1D,SAAS,EACTwB,UAAU,EACVwC,gBAAiB,EACjBC,YAAa,EACbr6C,SAAU23C,GAAMV,WAAWz3B,OAC3B86B,MAAO,GACP/B,MAAO,GACPluC,MAAO,SACPkwC,WAAY,OACZC,mBAAmB,EACnBC,cAAe,4BACfC,gBAAiB,KAGrBj7B,GAASk7B,MAAM,cAAe,QAAS,GAAI,SAC3Cl7B,GAASk7B,MAAM,aAAc,QAAS,GAAI,eAC1Cl7B,GAASk7B,MAAM,aAAc,cAAe,GAAI,eAChDl7B,GAASk7B,MAAM,cAAe,QAAS,GAAI,SAC3Cl7B,GAASqC,SAAS,QAAS,CACzBc,WAAW,EACXH,YAAcV,IAAUA,EAAKW,WAAW,YAAcX,EAAKW,WAAW,UAAqB,aAATX,GAAgC,WAATA,EACzGY,WAAaZ,GAAkB,eAATA,GAAkC,mBAATA,IAEjDtC,GAASqC,SAAS,SAAU,CAC1Bc,UAAW,UAEbnD,GAASqC,SAAS,cAAe,CAC/BW,YAAcV,GAAkB,oBAATA,GAAuC,aAATA,EACrDY,WAAaZ,GAAkB,oBAATA,IA+GxB,MACM64B,GAAiB,CAACl5B,EAAOirB,EAAM8D,IAAoB,QAAT9D,GAA2B,SAATA,EAAkBjrB,EAAMirB,GAAQ8D,EAAS/uB,EAAMirB,GAAQ8D,EACzH,SAAAoK,GAAgB/sB,EAAKgtB,GACnB,MAAMtnB,EAAS,GACTunB,EAAYjtB,EAAIntB,OAASm6C,EACzBr6C,EAAMqtB,EAAIntB,OAChB,IAAIH,EAAI,EACD,KAAAA,EAAIC,EAAKD,GAAKu6C,EACZvnB,EAAArwB,KAAK2qB,EAAI3pB,KAAKkB,MAAM7E,KAEtB,OAAAgzB,EAET,SAA6BwnB,GAAAt5B,EAAOrZ,EAAO4yC,GACnC,MAAAt6C,EAAS+gB,EAAMmqB,MAAMlrC,OACrBu6C,EAAa/2C,KAAK4B,IAAIsC,EAAO1H,EAAS,GACtC6G,EAAQka,EAAMmtB,YACdpnC,EAAMia,EAAMotB,UACZppC,EAAU,KACZ,IACA+qC,EADA0K,EAAYz5B,EAAMoqB,gBAAgBoP,GAEtC,KAAID,IAEAxK,EADa,IAAX9vC,EACOwD,KAAK6B,IAAIm1C,EAAY3zC,EAAOC,EAAM0zC,GACxB,IAAV9yC,GACCqZ,EAAMoqB,gBAAgB,GAAKqP,GAAa,GAE5BA,EAAAz5B,EAAMoqB,gBAAgBoP,EAAa,IAAM,EAEpDC,GAAAD,EAAa7yC,EAAQooC,GAAUA,EACxC0K,EAAY3zC,EAAQ9B,GAAWy1C,EAAY1zC,EAAM/B,IAIhD,OAAAy1C,EAeT,SAAAC,GAA2Br5C,GAClB,OAAAA,EAAQ43C,UAAY53C,EAAQi2C,WAAa,EAElD,SAAAqD,GAAwBt5C,EAASooB,GAC3B,IAACpoB,EAAQq0C,QACJ,OAAA,EAEH,MAAA91B,EAAO4J,GAAOnoB,EAAQue,KAAM6J,GAC5B2vB,EAAU7vB,GAAUloB,EAAQ+3C,SAE1B,OADMj7C,EAAQkD,EAAQslB,MAAQtlB,EAAQslB,KAAK1mB,OAAS,GAC5C2f,EAAKG,WAAcq5B,EAAQt1B,OAe7C,SAAoB82B,GAAAjxC,EAAOkxC,EAAUh7C,GACnC,IAAIkd,EAAMrT,GAAmBC,GAItB,OAHF9J,GAAwB,UAAbg7C,IAA2Bh7C,GAAwB,UAAbg7C,KACpD99B,EA5EiB,CAACpT,GAAoB,SAAVA,EAAmB,QAAoB,UAAVA,EAAoB,OAASA,EA4EhFmxC,CAAa/9B,IAEdA,EAoCT,MAAAg+B,WAAoB7E,GAClB7oC,YAAY+vB,GACV2P,QACA/vB,KAAKhf,GAAKo/B,EAAIp/B,GACdgf,KAAK3e,KAAO++B,EAAI/+B,KAChB2e,KAAK3b,aAAU,EACf2b,KAAKkD,IAAMkd,EAAIld,IACflD,KAAKuC,MAAQ6d,EAAI7d,MACjBvC,KAAK2I,SAAM,EACX3I,KAAK4I,YAAS,EACd5I,KAAKyI,UAAO,EACZzI,KAAK0I,WAAQ,EACb1I,KAAK0F,WAAQ,EACb1F,KAAK8G,YAAS,EACd9G,KAAKg+B,SAAW,CACdv1B,KAAM,EACNC,MAAO,EACPC,IAAK,EACLC,OAAQ,GAEV5I,KAAKyK,cAAW,EAChBzK,KAAKsX,eAAY,EACjBtX,KAAKi+B,gBAAa,EAClBj+B,KAAKk+B,mBAAgB,EACrBl+B,KAAKm+B,iBAAc,EACnBn+B,KAAKo+B,kBAAe,EACpBp+B,KAAK1S,UAAO,EACZ0S,KAAKq+B,mBAAgB,EACrBr+B,KAAK3X,SAAM,EACX2X,KAAK1X,SAAM,EACX0X,KAAKs+B,YAAS,EACdt+B,KAAKmuB,MAAQ,GACbnuB,KAAKu+B,eAAiB,KACtBv+B,KAAKw+B,YAAc,KACnBx+B,KAAKy+B,YAAc,KACnBz+B,KAAKiuB,QAAU,EACfjuB,KAAK06B,WAAa,EAClB16B,KAAK0+B,kBAAoB,GACzB1+B,KAAKmxB,iBAAc,EACnBnxB,KAAKoxB,eAAY,EACjBpxB,KAAK2+B,gBAAiB,EACtB3+B,KAAK4+B,cAAW,EAChB5+B,KAAK6+B,cAAW,EAChB7+B,KAAK8+B,mBAAgB,EACrB9+B,KAAK++B,mBAAgB,EACrB/+B,KAAKg/B,aAAe,EACpBh/B,KAAKi/B,aAAe,EACpBj/B,KAAKytB,OAAS,GACdztB,KAAKk/B,mBAAoB,EACzBl/B,KAAK2mB,cAAW,EAElBt2B,KAAKhM,GACE2b,KAAA3b,QAAUA,EAAQsrB,WAAW3P,KAAK2G,cACvC3G,KAAK1S,KAAOjJ,EAAQiJ,KACf0S,KAAA6+B,SAAW7+B,KAAK8R,MAAMztB,EAAQgE,KAC9B2X,KAAA4+B,SAAW5+B,KAAK8R,MAAMztB,EAAQiE,KAC9B0X,KAAA++B,cAAgB/+B,KAAK8R,MAAMztB,EAAQ86C,cACnCn/B,KAAA8+B,cAAgB9+B,KAAK8R,MAAMztB,EAAQ+6C,cAE1C/uC,MAAMg7B,EAAK1gC,GACF,OAAA0gC,EAETh7B,gBACE,IAAIwuC,SAACA,EAAAD,SAAUA,EAAUG,cAAAA,EAAAD,cAAeA,GAAiB9+B,KAKlD,OAJI6+B,EAAA98C,EAAgB88C,EAAUh9C,OAAOgF,mBACjC+3C,EAAA78C,EAAgB68C,EAAU/8C,OAAOsoC,mBAC5B4U,EAAAh9C,EAAgBg9C,EAAel9C,OAAOgF,mBACtCi4C,EAAA/8C,EAAgB+8C,EAAej9C,OAAOsoC,mBAC/C,CACL9hC,IAAKtG,EAAgB88C,EAAUE,GAC/Bz2C,IAAKvG,EAAgB68C,EAAUE,GAC/BvxC,WAAY3L,EAAei9C,GAC3BrxC,WAAY5L,EAAeg9C,IAG/BvuC,UAAUy5B,GACR,IACIziC,GADAgB,IAACA,EAAAC,IAAKA,EAAKiF,WAAAA,EAAAC,WAAYA,GAAcwS,KAAKvS,gBAE9C,GAAIF,GAAcC,EAChB,MAAO,CAACnF,IAAAA,EAAKC,IAAAA,GAEf,MAAM+2C,EAAQr/B,KAAK2kB,0BACV,IAAA,IAAA7hC,EAAI,EAAGO,EAAOg8C,EAAMp8C,OAAQH,EAAIO,IAAQP,EAC/CuE,EAAQg4C,EAAMv8C,GAAG+hC,WAAWya,UAAUt/B,KAAM8pB,GACvCv8B,IACGlF,EAAA5B,KAAK4B,IAAIA,EAAKhB,EAAMgB,MAEvBmF,IACGlF,EAAA7B,KAAK6B,IAAIA,EAAKjB,EAAMiB,MAKvB,OAFDD,EAAAmF,GAAcnF,EAAMC,EAAMA,EAAMD,EAChCC,EAAAiF,GAAclF,EAAMC,EAAMD,EAAMC,EAC/B,CACLD,IAAKtG,EAAgBsG,EAAKtG,EAAgBuG,EAAKD,IAC/CC,IAAKvG,EAAgBuG,EAAKvG,EAAgBsG,EAAKC,KAGnD+H,aACS,MAAA,CACLoY,KAAMzI,KAAKm+B,aAAe,EAC1Bx1B,IAAK3I,KAAKi+B,YAAc,EACxBv1B,MAAO1I,KAAKo+B,cAAgB,EAC5Bx1B,OAAQ5I,KAAKk+B,eAAiB,GAGlC7tC,WACE,OAAO2P,KAAKmuB,MAEd99B,YACQ,MAAA+U,EAAOpF,KAAKuC,MAAM6C,KACjB,OAAApF,KAAK3b,QAAQklC,SAAgBvpB,KAAAmwB,eAAiB/qB,EAAKm6B,QAAUn6B,EAAKo6B,UAAYp6B,EAAKmkB,QAAU,GAEtGl5B,eACE2P,KAAKytB,OAAS,GACdztB,KAAKk/B,mBAAoB,EAE3B7uC,eACW/N,EAAA0d,KAAK3b,QAAQo7C,aAAc,CAACz/B,OAEvC3P,OAAOoa,EAAU6M,EAAWD,GAC1B,MAAM6b,YAACA,EAAA4I,MAAaA,EAAO3N,MAAOgM,GAAYn6B,KAAK3b,QAC7Cq7C,EAAavF,EAASuF,WACvB1/B,KAAAy/B,eACLz/B,KAAKyK,SAAWA,EAChBzK,KAAKsX,UAAYA,EACZtX,KAAAg+B,SAAW3mB,EAAU/1B,OAAO+M,OAAO,CACtCoa,KAAM,EACNC,MAAO,EACPC,IAAK,EACLC,OAAQ,GACPyO,GACHrX,KAAKmuB,MAAQ,KACbnuB,KAAKy+B,YAAc,KACnBz+B,KAAKu+B,eAAiB,KACtBv+B,KAAKw+B,YAAc,KACdx+B,KAAA2/B,sBACA3/B,KAAA4/B,gBACA5/B,KAAA6/B,qBACL7/B,KAAK06B,WAAa16B,KAAKmwB,eACnBnwB,KAAK0F,MAAQ2R,EAAQ5O,KAAO4O,EAAQ3O,MACpC1I,KAAK8G,OAASuQ,EAAQ1O,IAAM0O,EAAQzO,OACnC5I,KAAKk/B,oBACHl/B,KAAA8/B,mBACA9/B,KAAA+/B,sBACA//B,KAAAggC,kBACAhgC,KAAAs+B,OD7sCX,SAAmB2B,EAAQnE,EAAO5I,GAC1B,MAAA7qC,IAACA,MAAKC,GAAO23C,EACbC,EAASh+C,EAAY45C,GAAQxzC,EAAMD,GAAO,GAC1C83C,EAAW,CAACj/C,EAAO4K,IAAQonC,GAAyB,IAAVhyC,EAAc,EAAIA,EAAQ4K,EACnE,MAAA,CACLzD,IAAK83C,EAAS93C,GAAM5B,KAAKwB,IAAIi4C,IAC7B53C,IAAK63C,EAAS73C,EAAK43C,ICusCHE,CAAUpgC,KAAM87B,EAAO5I,GACrClzB,KAAKk/B,mBAAoB,GAEtBl/B,KAAAqgC,mBACArgC,KAAAmuB,MAAQnuB,KAAKsgC,cAAgB,GAC7BtgC,KAAAugC,kBACC,MAAAC,EAAkBd,EAAa1/B,KAAKmuB,MAAMlrC,OAChD+c,KAAKygC,sBAAsBD,EAAkBrD,GAAOn9B,KAAKmuB,MAAOuR,GAAc1/B,KAAKmuB,OAC9EnuB,KAAAsiB,YACAtiB,KAAA0gC,+BACA1gC,KAAA2gC,yBACA3gC,KAAA4gC,8BACDzG,EAASzB,UAAYyB,EAASD,UAAgC,SAApBC,EAASx2C,UAChDqc,KAAAmuB,MAAQ+L,GAASl6B,KAAMA,KAAKmuB,OACjCnuB,KAAKy+B,YAAc,KACdz+B,KAAA6gC,iBAEHL,GACFxgC,KAAKygC,sBAAsBzgC,KAAKmuB,OAE7BnuB,KAAA8gC,YACA9gC,KAAA+gC,MACA/gC,KAAAghC,WACAhhC,KAAAihC,cAEP5wC,YACM,IACA0hC,EAAYE,EADZiP,EAAgBlhC,KAAK3b,QAAQxB,QAE7Bmd,KAAKmwB,gBACP4B,EAAa/xB,KAAKyI,KAClBwpB,EAAWjyB,KAAK0I,QAEhBqpB,EAAa/xB,KAAK2I,IAClBspB,EAAWjyB,KAAK4I,OAChBs4B,GAAiBA,GAEnBlhC,KAAKmxB,YAAcY,EACnB/xB,KAAKoxB,UAAYa,EACjBjyB,KAAK2+B,eAAiBuC,EACtBlhC,KAAKiuB,QAAUgE,EAAWF,EACrB/xB,KAAAmhC,eAAiBnhC,KAAK3b,QAAQ+8C,cAErC/wC,cACW/N,EAAA0d,KAAK3b,QAAQ48C,YAAa,CAACjhC,OAEtC3P,sBACW/N,EAAA0d,KAAK3b,QAAQs7C,oBAAqB,CAAC3/B,OAE9C3P,gBACM2P,KAAKmwB,gBACPnwB,KAAK0F,MAAQ1F,KAAKyK,SAClBzK,KAAKyI,KAAO,EACZzI,KAAK0I,MAAQ1I,KAAK0F,QAElB1F,KAAK8G,OAAS9G,KAAKsX,UACnBtX,KAAK2I,IAAM,EACX3I,KAAK4I,OAAS5I,KAAK8G,QAErB9G,KAAKm+B,YAAc,EACnBn+B,KAAKi+B,WAAa,EAClBj+B,KAAKo+B,aAAe,EACpBp+B,KAAKk+B,cAAgB,EAEvB7tC,qBACW/N,EAAA0d,KAAK3b,QAAQw7C,mBAAoB,CAAC7/B,OAE7C3P,WAAWgU,GACJrE,KAAAuC,MAAM8+B,cAAch9B,EAAMrE,KAAK2G,cAC3BrkB,EAAA0d,KAAK3b,QAAQggB,GAAO,CAACrE,OAEhC3P,mBACE2P,KAAKshC,WAAW,oBAElBjxC,uBACAA,kBACE2P,KAAKshC,WAAW,mBAElBjxC,mBACE2P,KAAKshC,WAAW,oBAElBjxC,aACS,MAAA,GAETA,kBACE2P,KAAKshC,WAAW,mBAElBjxC,8BACW/N,EAAA0d,KAAK3b,QAAQk9C,4BAA6B,CAACvhC,OAEtD3P,mBAAmB89B,GACX,MAAAgM,EAAWn6B,KAAK3b,QAAQ8pC,MAC9B,IAAIrrC,EAAGO,EAAMu7B,EACb,IAAK97B,EAAI,EAAGO,EAAO8qC,EAAMlrC,OAAQH,EAAIO,EAAMP,IACzC87B,EAAOuP,EAAMrrC,GACR87B,EAAA6L,MAAQnoC,EAAS63C,EAAS73C,SAAU,CAACs8B,EAAK19B,MAAO4B,EAAGqrC,GAAQnuB,MAGrE3P,6BACW/N,EAAA0d,KAAK3b,QAAQm9C,2BAA4B,CAACxhC,OAErD3P,+BACW/N,EAAA0d,KAAK3b,QAAQq8C,6BAA8B,CAAC1gC,OAEvD3P,yBACE,MAAMhM,EAAU2b,KAAK3b,QACf81C,EAAW91C,EAAQ8pC,MACnBsT,EAAWzhC,KAAKmuB,MAAMlrC,OACtBo5C,EAAclC,EAASkC,aAAe,EACtCC,EAAcnC,EAASmC,YAC7B,IACIJ,EAAW5kB,EAAWoqB,EADtBrD,EAAgBhC,EAEpB,IAAKr8B,KAAK2hC,eAAiBxH,EAASzB,SAAW2D,GAAeC,GAAemF,GAAY,IAAMzhC,KAAKmwB,eAElG,YADAnwB,KAAKq+B,cAAgBhC,GAGvB,MAAMuF,EAAa5hC,KAAK6hC,iBAClBC,EAAgBF,EAAWG,OAAOr8B,MAClCs8B,EAAiBJ,EAAWK,QAAQn7B,OACpC2D,EAAWngB,GAAY0V,KAAKuC,MAAMmD,MAAQo8B,EAAe,EAAG9hC,KAAKyK,UACvEyxB,EAAY73C,EAAQ0uC,OAAS/yB,KAAKyK,SAAWg3B,EAAWh3B,GAAuBg3B,EAAA,GAC3EK,EAAgB,EAAI5F,IACtBA,EAAYzxB,GAAYg3B,GAAoBp9C,EAAA0uC,OAAS,GAAM,IAC3Dzb,EAAYtX,KAAKsX,UAAYomB,GAAkBr5C,EAAQ2uC,MACvDmH,EAASiC,QAAUuB,GAAet5C,EAAQgvC,MAAOrzB,KAAKuC,MAAMle,QAAQue,MACpE8+B,EAAmBj7C,KAAK2C,KAAK04C,EAAgBA,EAAgBE,EAAiBA,GAC9D3D,EAAA51C,EAAUhC,KAAK4B,IAC7B5B,KAAKy7C,KAAK53C,IAAwBs3C,EAAAK,QAAQn7B,OAAS,GAAKo1B,GAAW,EAAI,IACvEz1C,KAAKy7C,KAAK53C,GAAYgtB,EAAYoqB,GAAkB,EAAI,IAAMj7C,KAAKy7C,KAAK53C,GAAY03C,EAAiBN,GAAsB,EAAA,MAE7HrD,EAAgB53C,KAAK6B,IAAI+zC,EAAa51C,KAAK4B,IAAIi0C,EAAa+B,KAE9Dr+B,KAAKq+B,cAAgBA,EAEvBhuC,8BACW/N,EAAA0d,KAAK3b,QAAQu8C,4BAA6B,CAAC5gC,OAEtD3P,iBACAA,YACW/N,EAAA0d,KAAK3b,QAAQy8C,UAAW,CAAC9gC,OAEpC3P,MACE,MAAMynC,EAAU,CACdpyB,MAAO,EACPoB,OAAQ,IAEJvE,MAACA,EAAOle,SAAU8pC,MAAOgM,EAAU9G,MAAO8O,EAAWnP,KAAMoP,IAAapiC,KACxE04B,EAAU14B,KAAK2hC,aACfxR,EAAenwB,KAAKmwB,eAC1B,GAAIuI,EAAS,CACX,MAAM2J,EAAc1E,GAAewE,EAAW5/B,EAAMle,QAAQue,MAQ5D,GAPIutB,GACF2H,EAAQpyB,MAAQ1F,KAAKyK,SACbqtB,EAAAhxB,OAAS42B,GAAkB0E,GAAYC,IAE/CvK,EAAQhxB,OAAS9G,KAAKsX,UACdwgB,EAAApyB,MAAQg4B,GAAkB0E,GAAYC,GAE5ClI,EAASzB,SAAW14B,KAAKmuB,MAAMlrC,OAAQ,CACzC,MAAMg4C,MAACA,EAAAjwC,KAAOA,EAAM+2C,OAAAA,EAAAE,QAAQA,GAAWjiC,KAAK6hC,iBACtCS,EAAiC,EAAnBnI,EAASiC,QACvBmG,EAAeh6C,EAAUyX,KAAKq+B,eAC9B3uC,EAAMjJ,KAAKiJ,IAAI6yC,GACf9zC,EAAMhI,KAAKgI,IAAI8zC,GACrB,GAAIpS,EAAc,CACV,MAAAqS,EAAcrI,EAASoC,OAAS,EAAI9tC,EAAMszC,EAAOr8B,MAAQhW,EAAMuyC,EAAQn7B,OAC7EgxB,EAAQhxB,OAASrgB,KAAK4B,IAAI2X,KAAKsX,UAAWwgB,EAAQhxB,OAAS07B,EAAcF,OACpE,CACC,MAAAG,EAAatI,EAASoC,OAAS,EAAI7sC,EAAMqyC,EAAOr8B,MAAQjX,EAAMwzC,EAAQn7B,OAC5EgxB,EAAQpyB,MAAQjf,KAAK4B,IAAI2X,KAAKyK,SAAUqtB,EAAQpyB,MAAQ+8B,EAAaH,GAElEtiC,KAAA0iC,kBAAkBzH,EAAOjwC,EAAMyD,EAAKiB,IAGxCsQ,KAAA2iC,iBACDxS,GACGnwB,KAAA0F,MAAQ1F,KAAKiuB,QAAU1rB,EAAMmD,MAAQ1F,KAAKg+B,SAASv1B,KAAOzI,KAAKg+B,SAASt1B,MAC7E1I,KAAK8G,OAASgxB,EAAQhxB,SAEtB9G,KAAK0F,MAAQoyB,EAAQpyB,MAChB1F,KAAA8G,OAAS9G,KAAKiuB,QAAU1rB,EAAMuE,OAAS9G,KAAKg+B,SAASr1B,IAAM3I,KAAKg+B,SAASp1B,QAGlFvY,kBAAkB4qC,EAAOjwC,EAAMyD,EAAKiB,GAClC,MAAOy+B,OAAOxhC,MAACA,EAAOyvC,QAAAA,GAAAyB,SAAUA,GAAY79B,KAAK3b,QAC3Cu+C,EAAmC,IAAvB5iC,KAAKq+B,cACjBwE,EAAgC,QAAbhF,GAAoC,MAAd79B,KAAK1S,KACpD,GAAI0S,KAAKmwB,eAAgB,CACvB,MAAM2S,EAAa9iC,KAAKouB,gBAAgB,GAAKpuB,KAAKyI,KAC5Cs6B,EAAc/iC,KAAK0I,MAAQ1I,KAAKouB,gBAAgBpuB,KAAKmuB,MAAMlrC,OAAS,GAC1E,IAAIk7C,EAAc,EACdC,EAAe,EACfwE,EACEC,GACF1E,EAAczuC,EAAMurC,EAAMv1B,MAC1B04B,EAAe3vC,EAAMzD,EAAK8b,SAE1Bq3B,EAAc1vC,EAAMwsC,EAAMn0B,OAC1Bs3B,EAAe1uC,EAAM1E,EAAK0a,OAET,UAAV/Y,EACTyxC,EAAepzC,EAAK0a,MACD,QAAV/Y,EACTwxC,EAAclD,EAAMv1B,MACD,UAAV/Y,IACTwxC,EAAclD,EAAMv1B,MAAQ,EAC5B04B,EAAepzC,EAAK0a,MAAQ,GAEzB1F,KAAAm+B,YAAc13C,KAAK6B,KAAmB61C,EAAA2E,EAAa1G,GAAWp8B,KAAK0F,OAAc1F,KAAA0F,MAAQo9B,GAAa,GACtG9iC,KAAAo+B,aAAe33C,KAAK6B,KAAoB81C,EAAA2E,EAAc3G,GAAWp8B,KAAK0F,OAAc1F,KAAA0F,MAAQq9B,GAAc,OAC1G,CACD,IAAA9E,EAAajzC,EAAK8b,OAAS,EAC3Bo3B,EAAgBjD,EAAMn0B,OAAS,EACrB,UAAVna,GACWsxC,EAAA,EACbC,EAAgBjD,EAAMn0B,QACH,QAAVna,IACTsxC,EAAajzC,EAAK8b,OACFo3B,EAAA,GAElBl+B,KAAKi+B,WAAaA,EAAa7B,EAC/Bp8B,KAAKk+B,cAAgBA,EAAgB9B,GAGzC/rC,iBACM2P,KAAKg+B,WACPh+B,KAAKg+B,SAASv1B,KAAOhiB,KAAK6B,IAAI0X,KAAKm+B,YAAan+B,KAAKg+B,SAASv1B,MAC9DzI,KAAKg+B,SAASr1B,IAAMliB,KAAK6B,IAAI0X,KAAKi+B,WAAYj+B,KAAKg+B,SAASr1B,KAC5D3I,KAAKg+B,SAASt1B,MAAQjiB,KAAK6B,IAAI0X,KAAKo+B,aAAcp+B,KAAKg+B,SAASt1B,OAChE1I,KAAKg+B,SAASp1B,OAASniB,KAAK6B,IAAI0X,KAAKk+B,cAAel+B,KAAKg+B,SAASp1B,SAGtEvY,WACW/N,EAAA0d,KAAK3b,QAAQ28C,SAAU,CAAChhC,OAEnC3P,eACQ,MAAA/C,KAACA,EAAMuwC,SAAAA,GAAY79B,KAAK3b,QAC9B,MAAoB,QAAbw5C,GAAmC,WAAbA,GAAkC,MAATvwC,EAExD+C,aACE,OAAO2P,KAAK3b,QAAQ2+C,SAEtB3yC,sBAAsB89B,GAGpB,IAAIrrC,EAAGO,EACP,IAHK2c,KAAAuhC,8BACLvhC,KAAKijC,mBAAmB9U,GAEnBrrC,EAAI,EAAGO,EAAO8qC,EAAMlrC,OAAQH,EAAIO,EAAMP,IACrC7B,EAAcktC,EAAMrrC,GAAG2nC,SACzB0D,EAAM3iC,OAAO1I,EAAG,GAChBO,IACAP,KAGCkd,KAAAwhC,6BAEPnxC,iBACE,IAAIuxC,EAAa5hC,KAAKy+B,YACtB,IAAKmD,EAAY,CACT,MAAAlC,EAAa1/B,KAAK3b,QAAQ8pC,MAAMuR,WACtC,IAAIvR,EAAQnuB,KAAKmuB,MACbuR,EAAavR,EAAMlrC,SACrBkrC,EAAQgP,GAAOhP,EAAOuR,IAExB1/B,KAAKy+B,YAAcmD,EAAa5hC,KAAKkjC,mBAAmB/U,EAAOA,EAAMlrC,QAEhE,OAAA2+C,EAETvxC,mBAAmB89B,EAAOlrC,GAClB,MAAAigB,IAACA,EAAKw7B,kBAAmByE,GAAUnjC,KACnCojC,EAAS,GACTC,EAAU,GAChB,IAEIvgD,EAAG8b,EAAGoH,EAAMykB,EAAO6Y,EAAUC,EAAY19B,EAAO9C,EAAY2C,EAAOoB,EAAQ08B,EAF3EC,EAAkB,EAClBC,EAAmB,EAEvB,IAAK5gD,EAAI,EAAGA,EAAIG,IAAUH,EAAG,CAO3B,GANA2nC,EAAQ0D,EAAMrrC,GAAG2nC,MACjB6Y,EAAWtjC,KAAK2jC,wBAAwB7gD,GACpCogB,EAAAN,KAAO2gC,EAAaD,EAAS/9B,OACjCM,EAAQs9B,EAAOI,GAAcJ,EAAOI,IAAe,CAACn+B,KAAM,GAAIC,GAAI,IAClEtC,EAAaugC,EAASvgC,WACtB2C,EAAQoB,EAAS,EACZ7lB,EAAcwpC,IAAWtpC,EAAQspC,IAE3B,GACAtpC,EAAQspC,GACZ,IAAA7rB,EAAI,EAAGoH,EAAOykB,EAAMxnC,OAAQ2b,EAAIoH,IAAQpH,EAC3C4kC,EAAc/Y,EAAM7rB,GACf3d,EAAcuiD,IAAiBriD,EAAQqiD,KAC1C99B,EAAQP,GAAajC,EAAK2C,EAAMT,KAAMS,EAAMR,GAAIK,EAAO89B,GAC7C18B,GAAA/D,QAPd2C,EAAQP,GAAajC,EAAK2C,EAAMT,KAAMS,EAAMR,GAAIK,EAAO+kB,GAC9C3jB,EAAA/D,EAUXqgC,EAAO39C,KAAKigB,GACZ29B,EAAQ59C,KAAKqhB,GACK28B,EAAAh9C,KAAK6B,IAAIod,EAAO+9B,GACfC,EAAAj9C,KAAK6B,IAAIwe,EAAQ48B,IAxgB1C,SAAwBP,EAAQlgD,GACzBN,EAAAwgD,GAASt9B,IACZ,MAAMR,EAAKQ,EAAMR,GACXe,EAAQf,EAAGpiB,OAAS,EACtB,IAAAH,EACJ,GAAIsjB,EAAQnjB,EAAQ,CAClB,IAAKH,EAAI,EAAGA,EAAIsjB,IAAStjB,SAChB+iB,EAAMT,KAAKC,EAAGviB,IAEvBuiB,EAAG7Z,OAAO,EAAG4a,OAigBfN,CAAeq9B,EAAQlgD,GACjB,MAAA8+C,EAASqB,EAAOj/C,QAAQs/C,GACxBxB,EAAUoB,EAAQl/C,QAAQu/C,GAC1BE,EAAWC,IAAS,CAACn+B,MAAO09B,EAAOS,IAAQ,EAAG/8B,OAAQu8B,EAAQQ,IAAQ,IACrE,MAAA,CACL5I,MAAO2I,EAAQ,GACf54C,KAAM44C,EAAQ3gD,EAAS,GACvB8+C,OAAQ6B,EAAQ7B,GAChBE,QAAS2B,EAAQ3B,GACjBmB,OAAAA,EACAC,QAAAA,GAGJhzC,iBAAiBnP,GACR,OAAAA,EAETmP,iBAAiBnP,EAAOyJ,GACf,OAAAk/B,IAETx5B,iBAAiBiW,IACjBjW,gBAAgB1F,GACd,MAAMwjC,EAAQnuB,KAAKmuB,MACnB,OAAIxjC,EAAQ,GAAKA,EAAQwjC,EAAMlrC,OAAS,EAC/B,KAEF+c,KAAKtS,iBAAiBygC,EAAMxjC,GAAOzJ,OAE5CmP,mBAAmByzC,GACb9jC,KAAK2+B,iBACPmF,EAAU,EAAIA,GAEhB,MAAMx9B,EAAQtG,KAAKmxB,YAAc2S,EAAU9jC,KAAKiuB,QAChD,ODt2FK3jC,GCs2Fc0V,KAAKmhC,eAAiB96B,GAAYrG,KAAKuC,MAAO+D,EAAO,GAAKA,GDt2F7C,MAAA,OCw2FlCjW,mBAAmBiW,GACjB,MAAMw9B,GAAWx9B,EAAQtG,KAAKmxB,aAAenxB,KAAKiuB,QAC3C,OAAAjuB,KAAK2+B,eAAiB,EAAImF,EAAUA,EAE7CzzC,eACS,OAAA2P,KAAKtS,iBAAiBsS,KAAK+jC,gBAEpC1zC,eACQ,MAAAhI,IAACA,MAAKC,GAAO0X,KACZ,OAAA3X,EAAM,GAAKC,EAAM,EAAIA,EAC1BD,EAAM,GAAKC,EAAM,EAAID,EACrB,EAEJgI,WAAW1F,GACH,MAAAwjC,EAAQnuB,KAAKmuB,OAAS,GAC5B,GAAIxjC,GAAS,GAAKA,EAAQwjC,EAAMlrC,OAAQ,CACtC,MAAM27B,EAAOuP,EAAMxjC,GACnB,OAAOi0B,EAAK+H,WACb/H,EAAK+H,SA/hBV,SAA2BxV,EAAQxmB,EAAOi0B,GACxC,OAAO3R,GAAckE,EAAQ,CAC3ByN,KAAAA,EACAn7B,MAAAkH,EACAtJ,KAAM,SA2hBW2iD,CAAkBhkC,KAAK2G,aAAchc,EAAOi0B,IAE7D,OAAO5e,KAAK2mB,WACZ3mB,KAAK2mB,SAviBA1Z,GAuiB8BjN,KAAKuC,MAAMoE,aAviBnB,CAC3B3C,MAsiB4DhE,KAriB5D3e,KAAM,WAuiBRgP,YACQ,MAAA4zC,EAAcjkC,KAAK3b,QAAQ8pC,MAC3B+V,EAAM37C,EAAUyX,KAAKq+B,eACrB3uC,EAAMjJ,KAAKwB,IAAIxB,KAAKiJ,IAAIw0C,IACxBz1C,EAAMhI,KAAKwB,IAAIxB,KAAKgI,IAAIy1C,IACxBtC,EAAa5hC,KAAK6hC,iBAClBzF,EAAU6H,EAAYvH,iBAAmB,EACzCxpC,EAAI0uC,EAAaA,EAAWG,OAAOr8B,MAAQ02B,EAAU,EACrDvrC,EAAI+wC,EAAaA,EAAWK,QAAQn7B,OAASs1B,EAAU,EAC7D,OAAOp8B,KAAKmwB,eACRt/B,EAAInB,EAAMwD,EAAIzE,EAAMyE,EAAIxD,EAAMmB,EAAIpC,EAClCoC,EAAIpC,EAAMyE,EAAIxD,EAAMmB,EAAInB,EAAMwD,EAAIzE,EAExC4B,aACQ,MAAAqoC,EAAU14B,KAAK3b,QAAQq0C,QAC7B,MAAgB,SAAZA,IACOA,EAEJ14B,KAAK2kB,0BAA0B1hC,OAAS,EAEjDoN,sBAAsB46B,GACpB,MAAM39B,EAAO0S,KAAK1S,KACZiV,EAAQvC,KAAKuC,MACble,EAAU2b,KAAK3b,SACf2uC,KAACA,WAAM6K,GAAYx5C,EACnB0uC,EAASC,EAAKD,OACd5C,EAAenwB,KAAKmwB,eAEpBgU,EADQnkC,KAAKmuB,MACOlrC,QAAU8vC,EAAS,EAAI,GAC3CqR,EAAK1G,GAAkB1K,GACvBrnC,EAAQ,GACR04C,EAAarR,EAAKrjB,WAAW3P,KAAK2G,cAClC29B,EAAYD,EAAWtI,WAAasI,EAAWl8B,YAAc,EAC7Do8B,EAAgBD,EAAY,EAC5BE,EAAmB,SAASl+B,GACzB,OAAAD,GAAY9D,EAAO+D,EAAOg+B,IAE/B,IAAAG,EAAa3hD,EAAG26C,EAAWiH,EAC3BC,EAAKC,EAAKC,EAAKC,EAAKC,EAAIC,EAAIC,EAAIC,EACpC,GAAiB,QAAbrH,EACF4G,EAAcD,EAAiBxkC,KAAK4I,QACpCg8B,EAAM5kC,KAAK4I,OAASw7B,EACpBU,EAAML,EAAcF,EACfS,EAAAR,EAAiBvZ,EAAUtiB,KAAO47B,EACvCW,EAAKja,EAAUriB,YAAA,GACO,WAAbi1B,EACT4G,EAAcD,EAAiBxkC,KAAK2I,KACpCq8B,EAAK/Z,EAAUtiB,IACVu8B,EAAAV,EAAiBvZ,EAAUriB,QAAU27B,EAC1CK,EAAMH,EAAcF,EACpBO,EAAM9kC,KAAK2I,IAAMy7B,OAAA,GACK,SAAbvG,EACT4G,EAAcD,EAAiBxkC,KAAK0I,OACpCi8B,EAAM3kC,KAAK0I,MAAQ07B,EACnBS,EAAMJ,EAAcF,EACfQ,EAAAP,EAAiBvZ,EAAUxiB,MAAQ87B,EACxCU,EAAKha,EAAUviB,WAAA,GACO,UAAbm1B,EACT4G,EAAcD,EAAiBxkC,KAAKyI,MACpCs8B,EAAK9Z,EAAUxiB,KACVw8B,EAAAT,EAAiBvZ,EAAUviB,OAAS67B,EACzCI,EAAMF,EAAcF,EACpBM,EAAM7kC,KAAKyI,KAAO27B,OAAA,GACA,MAAT92C,EAAc,CACvB,GAAiB,WAAbuwC,EACF4G,EAAcD,GAAkBvZ,EAAUtiB,IAAMsiB,EAAUriB,QAAU,EAAI,SAAA,GAC/DjnB,EAASk8C,GAAW,CACvB,MAAAsH,EAAiB7jD,OAAO0B,KAAK66C,GAAU,GACvC38C,EAAQ28C,EAASsH,GACvBV,EAAcD,EAAiBxkC,KAAKuC,MAAM0B,OAAOkhC,GAAgBz3C,iBAAiBxM,IAEpF8jD,EAAK/Z,EAAUtiB,IACfu8B,EAAKja,EAAUriB,OACfg8B,EAAMH,EAAcF,EACpBO,EAAMF,EAAMR,OAAA,GACM,MAAT92C,EAAc,CACvB,GAAiB,WAAbuwC,EACF4G,EAAcD,GAAkBvZ,EAAUxiB,KAAOwiB,EAAUviB,OAAS,QAAA,GAC3D/mB,EAASk8C,GAAW,CACvB,MAAAsH,EAAiB7jD,OAAO0B,KAAK66C,GAAU,GACvC38C,EAAQ28C,EAASsH,GACvBV,EAAcD,EAAiBxkC,KAAKuC,MAAM0B,OAAOkhC,GAAgBz3C,iBAAiBxM,IAEpFyjD,EAAMF,EAAcF,EACpBM,EAAMF,EAAMP,EACZW,EAAK9Z,EAAUxiB,KACfw8B,EAAKha,EAAUviB,MAEjB,MAAM08B,EAAQnjD,EAAeoC,EAAQ8pC,MAAMkM,cAAe8J,GACpDkB,EAAO5+C,KAAK6B,IAAI,EAAG7B,KAAK00C,KAAKgJ,EAAciB,IACjD,IAAKtiD,EAAI,EAAGA,EAAIqhD,EAAarhD,GAAKuiD,EAAM,CACtC,MAAMC,EAActS,EAAKrjB,WAAW3P,KAAK2G,WAAW7jB,IAC9CynB,EAAY+6B,EAAY/6B,UACxBg7B,EAAYD,EAAYnkC,MACxBic,EAAakoB,EAAYloB,YAAc,GACvCC,EAAmBioB,EAAYjoB,iBAC/B6e,EAAYoJ,EAAYpJ,UACxBC,EAAYmJ,EAAYnJ,UACxBqJ,EAAiBF,EAAYE,gBAAkB,GAC/CC,EAAuBH,EAAYG,qBAC7BhI,EAAAH,GAAoBt9B,KAAMld,EAAGiwC,QACvB,IAAd0K,IAGeiH,EAAAr+B,GAAY9D,EAAOk7B,EAAWlzB,GAC7C4lB,EACIwU,EAAAE,EAAME,EAAKE,EAAKP,EAEhBE,EAAAE,EAAME,EAAKE,EAAKR,EAExB/4C,EAAMlG,KAAK,CACTk/C,IAAAA,EACAC,IAAAA,EACAC,IAAAA,EACAC,IAAAA,EACAC,GAAAA,EACAC,GAAAA,EACAC,GAAAA,EACAC,GAAAA,EACAx/B,MAAO6E,EACPpJ,MAAOokC,EACPnoB,WAAAA,EACAC,iBAAAA,EACA6e,UAAAA,EACAC,UAAAA,EACAqJ,eAAAA,EACAC,qBAAAA,KAKG,OAFPzlC,KAAKg/B,aAAemF,EACpBnkC,KAAKi/B,aAAewF,EACb94C,EAET0E,mBAAmB46B,GACjB,MAAM39B,EAAO0S,KAAK1S,KACZjJ,EAAU2b,KAAK3b,SACfw5C,SAACA,EAAU1P,MAAO8V,GAAe5/C,EACjC8rC,EAAenwB,KAAKmwB,eACpBhC,EAAQnuB,KAAKmuB,OACbxhC,MAACA,EAAAkwC,WAAOA,EAAYT,QAAAA,EAAAG,OAASA,GAAU0H,EACvCG,EAAK1G,GAAkBr5C,EAAQ2uC,MAC/B0S,EAAiBtB,EAAKhI,EACtBuJ,EAAkBpJ,GAAUH,EAAUsJ,EACtCr+B,GAAY9e,EAAUyX,KAAKq+B,eAC3B1yC,EAAQ,GACV,IAAA7I,EAAGO,EAAMu7B,EAAM6L,EAAOzlC,EAAGE,EAAGilB,EAAW7D,EAAO1D,EAAMG,EAAY6iC,EAAWC,EAC3Ez7B,EAAe,SACnB,GAAiB,QAAbyzB,EACF34C,EAAI8a,KAAK4I,OAAS+8B,EAClBx7B,EAAYnK,KAAK8lC,+BAAA,GACK,WAAbjI,EACT34C,EAAI8a,KAAK2I,IAAMg9B,EACfx7B,EAAYnK,KAAK8lC,+BAAA,GACK,SAAbjI,EAAqB,CACxB,MAAA99B,EAAMC,KAAK+lC,wBAAwB3B,GACzCj6B,EAAYpK,EAAIoK,UAChBnlB,EAAI+a,EAAI/a,OAAA,GACc,UAAb64C,EAAsB,CACzB,MAAA99B,EAAMC,KAAK+lC,wBAAwB3B,GACzCj6B,EAAYpK,EAAIoK,UAChBnlB,EAAI+a,EAAI/a,OAAA,GACU,MAATsI,EAAc,CACvB,GAAiB,WAAbuwC,EACF34C,GAAgB+lC,EAAAtiB,IAAMsiB,EAAUriB,QAAU,EAAK88B,OAAA,GACtC/jD,EAASk8C,GAAW,CACvB,MAAAsH,EAAiB7jD,OAAO0B,KAAK66C,GAAU,GACvC38C,EAAQ28C,EAASsH,GACvBjgD,EAAI8a,KAAKuC,MAAM0B,OAAOkhC,GAAgBz3C,iBAAiBxM,GAASwkD,EAElEv7B,EAAYnK,KAAK8lC,+BAAA,GACC,MAATx4C,EAAc,CACvB,GAAiB,WAAbuwC,EACF74C,GAAgBimC,EAAAxiB,KAAOwiB,EAAUviB,OAAS,EAAKg9B,OAAA,GACtC/jD,EAASk8C,GAAW,CACvB,MAAAsH,EAAiB7jD,OAAO0B,KAAK66C,GAAU,GACvC38C,EAAQ28C,EAASsH,GACvBngD,EAAIgb,KAAKuC,MAAM0B,OAAOkhC,GAAgBz3C,iBAAiBxM,GAE7CipB,EAAAnK,KAAK+lC,wBAAwB3B,GAAIj6B,UAElC,MAAT7c,IACY,UAAVX,EACayd,EAAA,MACI,QAAVzd,IACMyd,EAAA,WAGnB,MAAMw3B,EAAa5hC,KAAK6hC,iBACnB,IAAA/+C,EAAI,EAAGO,EAAO8qC,EAAMlrC,OAAQH,EAAIO,IAAQP,EAAG,CAC9C87B,EAAOuP,EAAMrrC,GACb2nC,EAAQ7L,EAAK6L,MACb,MAAM6a,EAAcrB,EAAYt0B,WAAW3P,KAAK2G,WAAW7jB,IACnDwjB,EAAAtG,KAAKouB,gBAAgBtrC,GAAKmhD,EAAYtH,YAC9C/5B,EAAO5C,KAAK2jC,wBAAwB7gD,GACpCigB,EAAaH,EAAKG,WACN6iC,EAAAzkD,EAAQspC,GAASA,EAAMxnC,OAAS,EAC5C,MAAM+iD,EAAYJ,EAAY,EACxBvlC,EAAQilC,EAAYnkC,MACpB4I,EAAcu7B,EAAY7I,gBAC1B3yB,EAAcw7B,EAAY9I,gBAChC,IAoCIyJ,EApCAC,EAAgB/7B,EAqCpB,GApCIgmB,GACEnrC,EAAAshB,EACc,UAAd6D,IAEA+7B,EADEpjD,IAAMO,EAAO,EACE2c,KAAK3b,QAAQxB,QAAoB,OAAV,QACzB,IAANC,EACQkd,KAAK3b,QAAQxB,QAAmB,QAAT,OAExB,UAKHgjD,EAFA,QAAbhI,EACiB,SAAfhB,GAAsC,IAAbx1B,GACbu+B,EAAY7iC,EAAaA,EAAa,EAC5B,WAAf85B,GACK+E,EAAWK,QAAQn7B,OAAS,EAAIk/B,EAAYjjC,EAAaA,GAEzD6+B,EAAWK,QAAQn7B,OAAS/D,EAAa,EAGtC,SAAf85B,GAAsC,IAAbx1B,EACdtE,EAAa,EACF,WAAf85B,EACI+E,EAAWK,QAAQn7B,OAAS,EAAIk/B,EAAYjjC,EAE5C6+B,EAAWK,QAAQn7B,OAAS8+B,EAAY7iC,EAGrDw5B,IACYsJ,IAAA,KAGZ3gD,EAAAohB,EACUu/B,GAAA,EAAID,GAAa7iC,EAAa,GAG1CuiC,EAAYxI,kBAAmB,CAC3B,MAAAqJ,EAAe55B,GAAU+4B,EAAYtI,iBACrCl2B,EAAS86B,EAAWyB,QAAQvgD,GAC5B4iB,EAAQk8B,EAAWwB,OAAOtgD,GAC5B,IAAA6lB,EAAMzjB,EAAI2gD,EAAaM,EAAax9B,IACpCF,EAAOzjB,EAAImhD,EAAa19B,KACpB,OAAA2B,GACH,IAAA,SACHzB,GAAO7B,EAAS,EAChB,MACG,IAAA,SACI6B,GAAA7B,EAGD,OAAAqD,GACH,IAAA,SACH1B,GAAQ/C,EAAQ,EAChB,MACG,IAAA,QACK+C,GAAA/C,EAGCugC,EAAA,CACTx9B,KAAAA,EACAE,IAAAA,EACAjD,MAAOA,EAAQygC,EAAazgC,MAC5BoB,OAAQA,EAASq/B,EAAar/B,OAC9B3F,MAAOmkC,EAAYvI,eAGvBpxC,EAAMlG,KAAK,CACT4hB,SAAAA,EACAojB,MAAAA,EACA7nB,KAAAA,EACAzB,MAAAd,EACA0J,YAAAA,EACAD,YAAAA,EACA+7B,WAAAA,EACA17B,UAAW+7B,EACX97B,aAAAA,EACAH,YAAa,CAACjlB,EAAGE,GACjB+gD,SAAAA,IAGG,OAAAt6C,EAET0E,0BACQ,MAAAwtC,SAACA,EAAU1P,MAAAA,GAASnuB,KAAK3b,QAE/B,IADkBkE,EAAUyX,KAAKq+B,eAExB,MAAa,QAAbR,EAAqB,OAAS,QAEvC,IAAIlxC,EAAQ,SAQL,MAPa,UAAhBwhC,EAAMxhC,MACAA,EAAA,OACiB,QAAhBwhC,EAAMxhC,MACPA,EAAA,QACiB,UAAhBwhC,EAAMxhC,QACPA,EAAA,SAEHA,EAET0D,wBAAwB+zC,GACtB,MAAMvG,SAACA,EAAU1P,OAAO0O,WAACA,EAAYN,OAAAA,EAAAH,QAAQA,IAAYp8B,KAAK3b,QAExDqhD,EAAiBtB,EAAKhI,EACtB2F,EAFa/hC,KAAK6hC,iBAEEE,OAAOr8B,MAC7B,IAAAyE,EACAnlB,EAoDJ,MAnDiB,SAAb64C,EACEtB,GACFv3C,EAAIgb,KAAK0I,MAAQ0zB,EACE,SAAfS,EACU1yB,EAAA,OACY,WAAf0yB,GACG1yB,EAAA,SACZnlB,GAAM+8C,EAAS,IAEH53B,EAAA,QACPnlB,GAAA+8C,KAGP/8C,EAAIgb,KAAK0I,MAAQg9B,EACE,SAAf7I,EACU1yB,EAAA,QACY,WAAf0yB,GACG1yB,EAAA,SACZnlB,GAAM+8C,EAAS,IAEH53B,EAAA,OACZnlB,EAAIgb,KAAKyI,OAGS,UAAbo1B,EACLtB,GACFv3C,EAAIgb,KAAKyI,KAAO2zB,EACG,SAAfS,EACU1yB,EAAA,QACY,WAAf0yB,GACG1yB,EAAA,SACZnlB,GAAM+8C,EAAS,IAEH53B,EAAA,OACPnlB,GAAA+8C,KAGP/8C,EAAIgb,KAAKyI,KAAOi9B,EACG,SAAf7I,EACU1yB,EAAA,OACY,WAAf0yB,GACG1yB,EAAA,SACZnlB,GAAK+8C,EAAS,IAEF53B,EAAA,QACZnlB,EAAIgb,KAAK0I,QAIDyB,EAAA,QAEP,CAACA,UAAAA,EAAWnlB,EAAAA,GAErBqL,oBACM,GAAA2P,KAAK3b,QAAQ8pC,MAAMoO,OACrB,OAEF,MAAMh6B,EAAQvC,KAAKuC,MACbs7B,EAAW79B,KAAK3b,QAAQw5C,SAC1B,MAAa,SAAbA,GAAoC,UAAbA,EAClB,CAACl1B,IAAK,EAAGF,KAAMzI,KAAKyI,KAAMG,OAAQrG,EAAMuE,OAAQ4B,MAAO1I,KAAK0I,OAClD,QAAbm1B,GAAmC,WAAbA,EACnB,CAACl1B,IAAK3I,KAAK2I,IAAKF,KAAM,EAAGG,OAAQ5I,KAAK4I,OAAQF,MAAOnG,EAAMmD,YAD9D,EAIRrV,iBACQ,MAAA6S,IAACA,EAAK7e,SAAS6d,gBAACA,QAAkBuG,EAAME,IAAAA,EAAAjD,MAAKA,SAAOoB,GAAU9G,KAChEkC,IACEgB,EAAA6C,OACJ7C,EAAIgH,UAAYhI,EACZgB,EAAAkjC,SAAS39B,EAAME,EAAKjD,EAAOoB,GAC3B5D,EAAAiD,WAGR9V,qBAAqBnP,GACb,MAAA8xC,EAAOhzB,KAAK3b,QAAQ2uC,KAC1B,IAAKhzB,KAAK2hC,eAAiB3O,EAAK0F,QACvB,OAAA,EAET,MACM/tC,EADQqV,KAAKmuB,MACCkY,WAAU93C,GAAKA,EAAErN,QAAUA,IAC/C,GAAIyJ,GAAS,EAAG,CAEd,OADaqoC,EAAKrjB,WAAW3P,KAAK2G,WAAWhc,IACjC4f,UAEP,OAAA,EAETla,SAAS46B,GACD,MAAA+H,EAAOhzB,KAAK3b,QAAQ2uC,KACpB9vB,EAAMlD,KAAKkD,IACXvX,EAAQqU,KAAKu+B,iBAAwBv+B,KAAAu+B,eAAiBv+B,KAAKsmC,sBAAsBrb,IACvF,IAAInoC,EAAGO,EACP,MAAMkjD,EAAW,CAAC5yC,EAAIC,EAAIkP,KACnBA,EAAM4C,OAAU5C,EAAM3B,QAGvB+B,EAAA6C,OACJ7C,EAAIqH,UAAYzH,EAAM4C,MACtBxC,EAAIoH,YAAcxH,EAAM3B,MACpB+B,EAAAsjC,YAAY1jC,EAAMsa,YAAc,IACpCla,EAAIujC,eAAiB3jC,EAAMua,iBACvBna,EAAAwE,YACAxE,EAAA4E,OAAOnU,EAAG3O,EAAG2O,EAAGzO,GAChBge,EAAA6E,OAAOnU,EAAG5O,EAAG4O,EAAG1O,GAChBge,EAAAkF,SACAlF,EAAAiD,YAEN,GAAI6sB,EAAK0F,QACF,IAAA51C,EAAI,EAAGO,EAAOsI,EAAM1I,OAAQH,EAAIO,IAAQP,EAAG,CAC9C,MAAMwD,EAAOqF,EAAM7I,GACfkwC,EAAKgJ,iBACPuK,EACE,CAACvhD,EAAGsB,EAAKy+C,GAAI7/C,EAAGoB,EAAK0+C,IACrB,CAAChgD,EAAGsB,EAAK2+C,GAAI//C,EAAGoB,EAAK4+C,IACrB5+C,GAGA0sC,EAAKiJ,WACPsK,EACE,CAACvhD,EAAGsB,EAAKq+C,IAAKz/C,EAAGoB,EAAKs+C,KACtB,CAAC5/C,EAAGsB,EAAKu+C,IAAK3/C,EAAGoB,EAAKw+C,KACtB,CACE3jC,MAAO7a,EAAK61C,UACZz2B,MAAOpf,EAAK41C,UACZ9e,WAAY92B,EAAKk/C,eACjBnoB,iBAAkB/2B,EAAKm/C,wBAOnCp1C,aACE,MAAMkS,MAACA,EAAAW,IAAOA,EAAK7e,SAAS2uC,KAACA,IAAShzB,KAChCqkC,EAAarR,EAAKrjB,WAAW3P,KAAK2G,cAClC29B,EAAYtR,EAAK+I,WAAasI,EAAWl8B,YAAc,EAC7D,IAAKm8B,EACH,OAEF,MAAMoC,EAAgB1T,EAAKrjB,WAAW3P,KAAK2G,WAAW,IAAI4D,UACpDk6B,EAAczkC,KAAKi/B,aACrB,IAAA8F,EAAIE,EAAID,EAAIE,EACZllC,KAAKmwB,gBACP4U,EAAK1+B,GAAY9D,EAAOvC,KAAKyI,KAAM67B,GAAaA,EAAY,EAC5DW,EAAK5+B,GAAY9D,EAAOvC,KAAK0I,MAAOg+B,GAAiBA,EAAgB,EACrE1B,EAAKE,EAAKT,IAEVO,EAAK3+B,GAAY9D,EAAOvC,KAAK2I,IAAK27B,GAAaA,EAAY,EAC3DY,EAAK7+B,GAAY9D,EAAOvC,KAAK4I,OAAQ89B,GAAiBA,EAAgB,EACtE3B,EAAKE,EAAKR,GAERvhC,EAAA6C,OACJ7C,EAAIqH,UAAY85B,EAAWl8B,YAC3BjF,EAAIoH,YAAc+5B,EAAWliC,YACzBe,EAAAwE,YACJxE,EAAI4E,OAAOi9B,EAAIC,GACf9hC,EAAI6E,OAAOk9B,EAAIC,GACXhiC,EAAAkF,SACAlF,EAAAiD,UAEN9V,WAAW46B,GAEL,IADgBjrB,KAAK3b,QAAQ8pC,MAChBuK,QACf,OAEF,MAAMx1B,EAAMlD,KAAKkD,IACXqF,EAAOvI,KAAK2mC,oBACdp+B,GACFM,GAAS3F,EAAKqF,GAEhB,MAAM5c,EAAQqU,KAAKw+B,cAAqBx+B,KAAAw+B,YAAcx+B,KAAK4mC,mBAAmB3b,IAC9E,IAAInoC,EAAGO,EACF,IAAAP,EAAI,EAAGO,EAAOsI,EAAM1I,OAAQH,EAAIO,IAAQP,EAAG,CAC9C,MAAMwD,EAAOqF,EAAM7I,GACbwgD,EAAWh9C,EAAKsc,KAChB6nB,EAAQnkC,EAAKmkC,MACfnkC,EAAK2/C,WACH/iC,EAAAgH,UAAY5jB,EAAK2/C,SAAS9kC,MAC1B+B,EAAAkjC,SAAS9/C,EAAK2/C,SAASx9B,KAAMniB,EAAK2/C,SAASt9B,IAAKriB,EAAK2/C,SAASvgC,MAAOpf,EAAK2/C,SAASn/B,SAGzF4C,GAAWxG,EAAKunB,EAAO,EADfnkC,EAAKu/C,WACgBvC,EAAUh9C,GAErCiiB,GACSQ,GAAA7F,GAGf7S,YACE,MAAM6S,IAACA,EAAK7e,SAASw5C,SAACA,EAAAxK,MAAUA,UAAOxwC,IAAYmd,KAC/C,IAACqzB,EAAMqF,QACT,OAEI,MAAA91B,EAAO4J,GAAO6mB,EAAMzwB,MACpBw5B,EAAU7vB,GAAU8mB,EAAM+I,SAC1BzvC,EAAQ0mC,EAAM1mC,MAChB,IAAAomC,EAASnwB,EAAKG,WAAa,EACd,WAAb86B,GAAsC,WAAbA,GAAyBl8C,EAASk8C,IAC7D9K,GAAUqJ,EAAQxzB,OACdznB,EAAQkyC,EAAM1pB,QAChBopB,GAAUnwB,EAAKG,YAAoBswB,EAAA1pB,KAAK1mB,OAAS,KAGnD8vC,GAAUqJ,EAAQzzB,IAEd,MAAAk+B,OAACA,SAAQC,EAAQr8B,SAAAA,EAAApD,SAAUA,GAphCrC,SAAmBrD,EAAO+uB,EAAQ8K,EAAUlxC,GAC1C,MAAMgc,IAACA,EAAAF,KAAKA,EAAMG,OAAAA,EAAAF,MAAQA,QAAOnG,GAASyB,GACpCinB,UAACA,EAAWhnB,OAAUuhB,GAAAjjB,EAC5B,IACIkI,EAAUo8B,EAAQC,EADlBz/B,EAAW,EAEf,MAAMP,EAAS8B,EAASD,EAClBjD,EAAQgD,EAAQD,EACtB,GAAIzE,EAAMmsB,eAAgB,CAExB,GADS0W,EAAAj6C,GAAeD,EAAO8b,EAAMC,GACjC/mB,EAASk8C,GAAW,CAChB,MAAAsH,EAAiB7jD,OAAO0B,KAAK66C,GAAU,GACvC38C,EAAQ28C,EAASsH,GACvB2B,EAASthB,EAAO2f,GAAgBz3C,iBAAiBxM,GAAS4lB,EAASisB,OAEnE+T,EADsB,WAAbjJ,GACW5S,EAAAriB,OAASqiB,EAAUtiB,KAAO,EAAI7B,EAASisB,EAElDmK,GAAel5B,EAAO65B,EAAU9K,GAE3CtoB,EAAW/B,EAAQD,MACd,CACL,GAAI9mB,EAASk8C,GAAW,CAChB,MAAAsH,EAAiB7jD,OAAO0B,KAAK66C,GAAU,GACvC38C,EAAQ28C,EAASsH,GACvB0B,EAASrhB,EAAO2f,GAAgBz3C,iBAAiBxM,GAASwkB,EAAQqtB,OAElE8T,EADsB,WAAbhJ,GACW5S,EAAAxiB,KAAOwiB,EAAUviB,OAAS,EAAIhD,EAAQqtB,EAEjDmK,GAAel5B,EAAO65B,EAAU9K,GAElC+T,EAAAl6C,GAAeD,EAAOic,EAAQD,GAC5BtB,EAAa,SAAbw2B,GAAuB92C,EAAUA,EAEvC,MAAA,CAAC8/C,OAAAA,EAAQC,OAAAA,EAAQr8B,SAAAA,EAAUpD,SAAAA,GAo/Ba0/B,CAAU/mC,KAAM+yB,EAAQ8K,EAAUlxC,GAC/E+c,GAAWxG,EAAKmwB,EAAM1pB,KAAM,EAAG,EAAG/G,EAAM,CACtCzB,MAAOkyB,EAAMlyB,MACbsJ,SAAAA,EACApD,SAAAA,EACA8C,UAAWyzB,GAAWjxC,EAAOkxC,EAAUh7C,GACvCunB,aAAc,SACdH,YAAa,CAAC48B,EAAQC,KAG1Bz2C,KAAK46B,GACEjrB,KAAK2hC,eAGL3hC,KAAAgnC,iBACLhnC,KAAKinC,SAAShc,GACTjrB,KAAA+7B,aACA/7B,KAAAknC,YACLlnC,KAAKmnC,WAAWlc,IAElB56B,UACE,MAAMuZ,EAAO5J,KAAK3b,QACZ+iD,EAAKx9B,EAAKukB,OAASvkB,EAAKukB,MAAMkZ,GAAK,EACnCC,EAAKrlD,EAAe2nB,EAAKopB,MAAQppB,EAAKopB,KAAKqU,GAAG,GACpD,OAAKrnC,KAAK2hC,cAAgB3hC,KAAK8e,OAASif,GAAMx8C,UAAUu9B,KAQjD,CAAC,CACNuoB,EAAGC,EACHxoB,KAAOmM,IACAjrB,KAAAgnC,iBACLhnC,KAAKinC,SAAShc,GACTjrB,KAAAknC,cAEN,CACDG,EAAGC,EAAK,EACRxoB,KAAM,KACC9e,KAAA+7B,eAEN,CACDsL,EAAGD,EACHtoB,KAAOmM,IACLjrB,KAAKmnC,WAAWlc,MAtBX,CAAC,CACNoc,EAAGD,EACHtoB,KAAOmM,IACLjrB,KAAK8e,KAAKmM,MAuBlB56B,wBAAwBhP,GAChB,MAAAg+C,EAAQr/B,KAAKuC,MAAMglC,+BACnBC,EAASxnC,KAAK1S,KAAO,SACrBwoB,EAAS,GACf,IAAIhzB,EAAGO,EACF,IAAAP,EAAI,EAAGO,EAAOg8C,EAAMp8C,OAAQH,EAAIO,IAAQP,EAAG,CAC9C,MAAMgK,EAAOuyC,EAAMv8C,GACfgK,EAAK06C,KAAYxnC,KAAKhf,IAAQK,GAAQyL,EAAKzL,OAASA,GACtDy0B,EAAOrwB,KAAKqH,GAGT,OAAAgpB,EAETzlB,wBAAwB1F,GAEtB,OAAO6hB,GADMxM,KAAK3b,QAAQ8pC,MAAMxe,WAAW3P,KAAK2G,WAAWhc,IACxCiY,MAErBvS,aACQ,MAAAo3C,EAAWznC,KAAK2jC,wBAAwB,GAAG5gC,WACjD,OAAa/C,KAAAmwB,eAAiBnwB,KAAK0F,MAAQ1F,KAAK8G,QAAU2gC,GAI9D,MAAoBC,GAClBr3C,YAAYhP,EAAMwgB,EAAOkM,GACvB/N,KAAK3e,KAAOA,EACZ2e,KAAK6B,MAAQA,EACb7B,KAAK+N,SAAWA,EACX/N,KAAArU,MAAQrK,OAAOwC,OAAO,MAE7BuM,UAAUhP,GACR,OAAOC,OAAOC,UAAUomD,cAAclmD,KAAKue,KAAK3e,KAAKE,UAAWF,EAAKE,WAEvE8O,SAAS/J,GACD,MAAAmZ,EAAQne,OAAOutB,eAAevoB,GAChC,IAAAshD,GA+DR,SAA2BnoC,GAClB,MAAA,OAAQA,GAAS,aAAcA,GA/DhCooC,CAAkBpoC,KACpBmoC,EAAc5nC,KAAK8nC,SAASroC,IAE9B,MAAM9T,EAAQqU,KAAKrU,MACb3K,EAAKsF,EAAKtF,GACV6gB,EAAQ7B,KAAK6B,MAAQ,IAAM7gB,EACjC,IAAKA,EACG,MAAA,IAAI+uB,MAAM,2BAA6BzpB,GAE/C,OAAItF,KAAM2K,IAGVA,EAAM3K,GAAMsF,EAyBhB,SAA0BA,EAAMub,EAAO+lC,GACrC,MAAMG,EAAevjD,EAAMlD,OAAOwC,OAAO,MAAO,CAC9C8jD,EAAc7lC,GAASoM,IAAIy5B,GAAe,GAC1C7lC,GAASoM,IAAItM,GACbvb,EAAKyb,WAEPA,GAASJ,IAAIE,EAAOkmC,GAChBzhD,EAAKgzC,eAOX,SAAuBz3B,EAAOmmC,GACrB1mD,OAAA0B,KAAKglD,GAAQv8C,SAAoBrD,IAChC,MAAA6/C,EAAgB7/C,EAAS9C,MAAM,KAC/B4iD,EAAaD,EAAcppB,MAC3BspB,EAAc,CAACtmC,GAAO+rB,OAAOqa,GAAej4B,KAAK,KACjD3qB,EAAQ2iD,EAAO5/C,GAAU9C,MAAM,KAC/Bif,EAAalf,EAAMw5B,MACnBva,EAAcjf,EAAM2qB,KAAK,KACtBjO,GAAAk7B,MAAMkL,EAAaD,EAAY5jC,EAAaC,MAdrD6jC,CAAcvmC,EAAOvb,EAAKgzC,eAExBhzC,EAAKkb,aACEO,GAAAqC,SAASvC,EAAOvb,EAAKkb,aAnC9B6mC,CAAiB/hD,EAAMub,EAAO+lC,GAC1B5nC,KAAK+N,UACEhM,GAAAgM,SAASznB,EAAKtF,GAAIsF,EAAKib,YALzBM,EASXxR,IAAIrP,GACF,OAAOgf,KAAKrU,MAAM3K,GAEpBqP,WAAW/J,GACT,MAAMqF,EAAQqU,KAAKrU,MACb3K,EAAKsF,EAAKtF,GACV6gB,EAAQ7B,KAAK6B,MACf7gB,KAAM2K,UACDA,EAAM3K,GAEX6gB,GAAS7gB,KAAM+gB,GAASF,YACnBE,GAASF,GAAO7gB,GACnBgf,KAAK+N,iBACAxM,GAAUvgB,KAwHzB,IAAIsnD,GAAW,IAtFf,MACEj4C,cACE2P,KAAKuoC,YAAc,IAAIb,GAAc3hB,GAAmB,YAAY,GAC/D/lB,KAAA0C,SAAW,IAAIglC,GAAcxO,GAAS,YACtCl5B,KAAA8D,QAAU,IAAI4jC,GAAcpmD,OAAQ,WACpC0e,KAAAiE,OAAS,IAAIyjC,GAAc3J,GAAO,UACvC/9B,KAAKwoC,iBAAmB,CAACxoC,KAAKuoC,YAAavoC,KAAKiE,OAAQjE,KAAK0C,UAE/DrS,OAAO7N,GACLwd,KAAKyoC,MAAM,WAAYjmD,GAEzB6N,UAAU7N,GACRwd,KAAKyoC,MAAM,aAAcjmD,GAE3B6N,kBAAkB7N,GACXwd,KAAAyoC,MAAM,WAAYjmD,EAAMwd,KAAKuoC,aAEpCl4C,eAAe7N,GACRwd,KAAAyoC,MAAM,WAAYjmD,EAAMwd,KAAK0C,UAEpCrS,cAAc7N,GACPwd,KAAAyoC,MAAM,WAAYjmD,EAAMwd,KAAK8D,SAEpCzT,aAAa7N,GACNwd,KAAAyoC,MAAM,WAAYjmD,EAAMwd,KAAKiE,QAEpC5T,cAAcrP,GACZ,OAAOgf,KAAK0oC,KAAK1nD,EAAIgf,KAAKuoC,YAAa,cAEzCl4C,WAAWrP,GACT,OAAOgf,KAAK0oC,KAAK1nD,EAAIgf,KAAK0C,SAAU,WAEtCrS,UAAUrP,GACR,OAAOgf,KAAK0oC,KAAK1nD,EAAIgf,KAAK8D,QAAS,UAErCzT,SAASrP,GACP,OAAOgf,KAAK0oC,KAAK1nD,EAAIgf,KAAKiE,OAAQ,SAEpC5T,qBAAqB7N,GACdwd,KAAAyoC,MAAM,aAAcjmD,EAAMwd,KAAKuoC,aAEtCl4C,kBAAkB7N,GACXwd,KAAAyoC,MAAM,aAAcjmD,EAAMwd,KAAK0C,UAEtCrS,iBAAiB7N,GACVwd,KAAAyoC,MAAM,aAAcjmD,EAAMwd,KAAK8D,SAEtCzT,gBAAgB7N,GACTwd,KAAAyoC,MAAM,aAAcjmD,EAAMwd,KAAKiE,QAEtC5T,MAAMmxB,EAAQh/B,EAAMmmD,GACjB,IAAGnmD,GAAMiJ,SAAem9C,IACjB,MAAAC,EAAMF,GAAiB3oC,KAAK8oC,oBAAoBF,GAClDD,GAAiBE,EAAIE,UAAUH,IAASC,IAAQ7oC,KAAK8D,SAAW8kC,EAAI5nD,GACjEgf,KAAAgpC,MAAMxnB,EAAQqnB,EAAKD,GAExBjmD,EAAKimD,GAAatiD,IACV,MAAA2iD,EAAUN,GAAiB3oC,KAAK8oC,oBAAoBxiD,GACrD0Z,KAAAgpC,MAAMxnB,EAAQynB,EAAS3iD,SAKpC+J,MAAMmxB,EAAQ0nB,EAAUC,GACtB,MAAMC,EAAcxjD,EAAY47B,GACvBl/B,EAAA6mD,EAAU,SAAWC,GAAc,GAAID,GAChDD,EAAS1nB,GAAQ2nB,GACR7mD,EAAA6mD,EAAU,QAAUC,GAAc,GAAID,GAEjD94C,oBAAoBhP,GAClB,IAAA,IAASyB,EAAI,EAAGA,EAAIkd,KAAKwoC,iBAAiBvlD,OAAQH,IAAK,CAC/C,MAAA+lD,EAAM7oC,KAAKwoC,iBAAiB1lD,GAC9B,GAAA+lD,EAAIE,UAAU1nD,GACT,OAAAwnD,EAGX,OAAO7oC,KAAK8D,QAEdzT,KAAKrP,EAAI2nD,EAAetnD,GAChB,MAAAiF,EAAOqiD,EAAcx6B,IAAIntB,GAC/B,QAAa,IAATsF,EACF,MAAM,IAAIypB,MAAM,IAAM/uB,EAAK,yBAA2BK,EAAO,KAExD,OAAAiF,IAKX,MAAA+iD,WAAgCtjB,GAC9B11B,OAAOkT,GACL,MAAMzW,EAAOkT,KAAK8kB,aACX1f,KAAMrY,EAAS,IAAMD,EACtBE,EAAqBgT,KAAKuC,MAAM4pB,oBACtC,IAAIriC,MAACA,EAAAoD,MAAOA,GAASL,GAAiCC,EAAMC,EAAQC,GAOhE,GANJgT,KAAKumB,WAAaz8B,EAClBkW,KAAKwmB,WAAat5B,EACdS,GAAoBb,KACdhD,EAAA,EACRoD,EAAQH,EAAO9J,QAEb+c,KAAK3b,QAAQ6f,SAAU,CACnB,MAAC+iB,QAASjd,EAAAgtB,SAAMA,GAAYlqC,EAClCkd,EAAKsS,OAAStc,KAAKuC,MACnByH,EAAKyS,cAAgBzc,KAAKvc,MACrBumB,EAAAitB,aAAeD,EAASC,WAC7BjtB,EAAKjd,OAASA,EACR,MAAA1I,EAAU2b,KAAKkrB,6BAA6B3nB,GAC1Clf,EAAAi3B,QAAUtb,KAAK3b,QAAQi3B,QAC1Btb,KAAA6wB,cAAc7mB,OAAM,EAAW,CAClCktB,UAAWlqC,EACX3I,QAAAA,GACCkf,GAEAvD,KAAAktB,eAAengC,EAAQjD,EAAOoD,EAAOqW,GAE5ClT,cACQ,MAAA6T,SAACA,GAAYlE,KAAK3b,SACnB2b,KAAKyoB,oBAAsBvkB,IACzBlE,KAAAyoB,mBAAqB6f,GAASgB,WAAW,SAE1CvZ,MAAA/I,cAER32B,eAAetD,EAAQjD,EAAOoD,EAAOqW,GACnC,MAAM0sB,EAAiB,UAAT1sB,GACRnW,OAACA,EAAAq3B,OAAQA,EAAQsC,SAAAA,EAAAiQ,SAAUA,GAAYh3B,KAAK8kB,YAC5CsH,EAAYpsB,KAAKmrB,0BAA0BrhC,EAAOyZ,GAClD2oB,EAAgBlsB,KAAKssB,iBAAiBF,GACtCG,EAAiBvsB,KAAKusB,eAAehpB,EAAM2oB,GAC3ClH,EAAQ53B,EAAOE,KACf23B,EAAQR,EAAOn3B,MACfgnB,SAACA,EAAUgH,QAAAA,GAAWtb,KAAK3b,QAC3B8yC,EAAetvC,EAASysB,GAAYA,EAAWzyB,OAAOgF,kBACtDuwC,EAAep3B,KAAKuC,MAAM4pB,qBAAuB8D,GAAkB,SAAT1sB,EAChE,IAAI8zB,EAAavtC,EAAQ,GAAKkW,KAAKwqB,UAAU1gC,EAAQ,GACrD,IAAA,IAAShH,EAAIgH,EAAOhH,EAAIgH,EAAQoD,IAASpK,EAAG,CAC1C,MAAMwlB,EAAQvb,EAAOjK,GACf+uB,EAAS7R,KAAKwqB,UAAU1nC,GACxB6+B,EAAayV,EAAe9uB,EAAQ,GACpCgvB,EAAWr2C,EAAc4wB,EAAOoT,IAChCnR,EAAS6N,EAAWqD,GAAS53B,EAAOM,iBAAiBmkB,EAAOmT,GAAQliC,GACpEixB,EAAS4N,EAAWsD,GAASgL,GAASqH,EAAW7S,EAAOyL,eAAiBzL,EAAO/2B,iBAAiBq5B,EAAW/mB,KAAK4jB,WAAWa,EAAQ5S,EAAQkV,GAAYlV,EAAOoT,GAAQniC,GAC7K6+B,EAAW1P,KAAOlqB,MAAM+rB,IAAW/rB,MAAMgsB,IAAWujB,EACzC3V,EAAA4V,KAAOz0C,EAAI,GAAM2D,KAAKwB,IAAI4pB,EAAOmT,GAASqS,EAAWrS,IAAWmS,EACvE7b,IACFqG,EAAW9P,OAASA,EACT8P,EAAA0J,IAAM2L,EAAS5xB,KAAKtiB,IAE7BypC,IACF5K,EAAWt9B,QAAU6nC,GAAiBlsB,KAAKmrB,0BAA0BroC,EAAGwlB,EAAMuZ,OAAS,SAAWte,IAE/F6zB,GACEp3B,KAAA6wB,cAAcvoB,EAAOxlB,EAAG6+B,EAAYpe,GAE9B8zB,EAAAxlB,EAEV7R,KAAAwsB,oBAAoBN,EAAe3oB,EAAM6oB,GAEhD/7B,iBACE,MAAMvD,EAAOkT,KAAK8kB,YACZ1f,EAAOtY,EAAKsY,MAAQ,GACtB,IAACpF,KAAK3b,QAAQ6f,SAAU,CAC1B,IAAI5b,EAAM,EACV,IAAA,IAASxF,EAAIsiB,EAAKniB,OAAS,EAAGH,GAAK,IAAKA,EAChCwF,EAAA7B,KAAK6B,IAAIA,EAAK8c,EAAKtiB,GAAGuD,KAAK2Z,KAAKmrB,0BAA0BroC,IAAM,GAExE,OAAOwF,EAAM,GAAKA,EAEpB,MAAM2+B,EAAUn6B,EAAKm6B,QACfuQ,EAASvQ,EAAQ5iC,SAAW4iC,EAAQ5iC,QAAQ8jB,aAAe,EAC7D,IAAC/C,EAAKniB,OACD,OAAAu0C,EAET,MAAMplB,EAAahN,EAAK,GAAG/e,KAAK2Z,KAAKmrB,0BAA0B,IACzDsM,EAAYryB,EAAKA,EAAKniB,OAAS,GAAGoD,KAAK2Z,KAAKmrB,0BAA0B/lB,EAAKniB,OAAS,IAC1F,OAAOwD,KAAK6B,IAAIkvC,EAAQplB,EAAYqlB,GAAa,GAGrD4R,GAAkBroD,GAAK,UACvBqoD,GAAkBtnC,SAAW,CAC3B0mB,oBAAoB,EACpBgD,gBAAiB,QACjBvnB,UAAU,EACVgE,MAAM,GAERmhC,GAAkB9nC,UAAY,CAC5B+B,YAAa,CACXC,KAAM,SAERO,QAAS,CACPsvB,QAAS,CACPtV,UAAW,CACTuV,MAAQ,IACC,GAET5I,MAAMnkC,GACG,IAAMA,EAAKmkC,MAAQ,KAAOnkC,EAAKwwC,eAAiB,OAK/D7yB,OAAQ,CACNjf,EAAG,CACD3D,KAAM,UAER6D,EAAG,CACD7D,KAAM,YAKZ,IAAIknD,UAAkCxc,OAAO,CAC7Cwd,UAAW,KACX3Z,cAAAA,GACAuD,iBAAAA,GACAG,mBAAAA,GACAyD,eAAAA,GACAY,oBAAAA,GACAkB,cAAAA,GACAC,gBAAAA,GACAuQ,kBAAAA,KAGA,SAAoBG,KAClB,MAAM,IAAIz5B,MAAM,mFAElB,MAAkB05B,GAChBp5C,YAAYhM,GACV2b,KAAK3b,QAAUA,GAAW,GAE5BgM,KAAKq5C,IACLr5C,UACS,OAAAm5C,KAETn5C,MAAMnP,EAAO84B,GACJ,OAAAwvB,KAETn5C,OAAOs5C,EAAW3vB,GACT,OAAAwvB,KAETn5C,IAAIs5C,EAAWC,EAAQC,GACd,OAAAL,KAETn5C,KAAKlK,EAAGC,EAAGyjD,GACF,OAAAL,KAETn5C,QAAQs5C,EAAWE,EAAMC,GAChB,OAAAN,KAETn5C,MAAMs5C,EAAWE,GACR,OAAAL,MAGXC,GAAY17B,SAAW,SAASg8B,GACvBzoD,OAAA+M,OAAOo7C,GAAYloD,UAAWwoD,IAEvC,IAAIC,GAAW,CACbC,MAAOR,IAGT,SAAsBS,GAAAC,EAAS78C,EAAMpM,EAAOsiB,GACpC,MAAAqhB,WAACA,EAAYzf,KAAAA,EAAAjY,QAAMA,GAAWg9C,EAC9B/8C,EAASy3B,EAAWC,YAAY13B,OAClC,GAAAA,GAAUE,IAASF,EAAOE,MAAiB,MAATA,GAAgBH,GAAWiY,EAAKniB,OAAQ,CACtE,MAAAmnD,EAAeh9C,EAAOuxC,eAAiB1zC,GAAgBF,GAC7D,IAAKyY,EACI,OAAA4mC,EAAahlC,EAAM9X,EAAMpM,GAAA,GACvB2jC,EAAWyB,eAAgB,CACpC,MAAM1N,EAAKxT,EAAK,GACV/d,EAA+B,mBAAhBuxB,EAAGyxB,UAA2BzxB,EAAGyxB,SAAS/8C,GAC/D,GAAIjG,EAAO,CACT,MAAMyC,EAAQsgD,EAAahlC,EAAM9X,EAAMpM,EAAQmG,GACzC0C,EAAMqgD,EAAahlC,EAAM9X,EAAMpM,EAAQmG,GAC7C,MAAO,CAACyD,GAAIhB,EAAMgB,GAAID,GAAId,EAAIc,MAIpC,MAAO,CAACC,GAAI,EAAGD,GAAIua,EAAKniB,OAAS,GAEnC,SAAAqnD,GAAkC/nC,EAAOjV,EAAMuwC,EAAU0M,EAAS/mC,GAChE,MAAMkgB,EAAWnhB,EAAMglC,+BACjBrmD,EAAQ28C,EAASvwC,GACd,IAAA,IAAAxK,EAAI,EAAGO,EAAOqgC,EAASzgC,OAAQH,EAAIO,IAAQP,EAAG,CAC/C,MAACW,MAAOkH,EAAAya,KAAAA,GAAQse,EAAS5gC,IACzBgI,GAACA,EAAID,GAAAA,GAAMq/C,GAAaxmB,EAAS5gC,GAAIwK,EAAMpM,EAAOsiB,GACxD,IAAA,IAAS5E,EAAI9T,EAAI8T,GAAK/T,IAAM+T,EAAG,CAC7B,MAAM6W,EAAUrQ,EAAKxG,GAChB6W,EAAQxD,MACXs4B,EAAQ90B,EAAS9qB,EAAOiU,KAchC,SAAA4rC,GAA2BjoC,EAAOs7B,EAAUvwC,EAAM6rC,EAAkB11B,GAClE,MAAM9X,EAAQ,GACd,IAAK8X,IAAqBlB,EAAMkoC,cAAc5M,GACrC,OAAAlyC,EAWF,OADkB2+C,GAAA/nC,EAAOjV,EAAMuwC,GARf,SAASpoB,EAASjyB,EAAcmH,IAChD8Y,GAAqB4E,GAAeoN,EAASlT,EAAM0oB,UAAW,KAG/DxV,EAAQi1B,QAAQ7M,EAAS74C,EAAG64C,EAAS34C,EAAGi0C,IACpCxtC,EAAAlG,KAAK,CAACgwB,QAAAA,EAASjyB,aAAAA,EAAcC,MAAAkH,OAGyB,GACzDgB,EAcT,SAAAg/C,GAAkCpoC,EAAOs7B,EAAUvwC,EAAMkW,EAAW21B,EAAkB11B,GACpF,IAAI9X,EAAQ,GACZ,MAAMi/C,EAvCR,SAAkCt9C,GAC1B,MAAAu9C,GAA6B,IAAtBv9C,EAAKnJ,QAAQ,KACpB2mD,GAA6B,IAAtBx9C,EAAKnJ,QAAQ,KACnB,OAAA,SAASsF,EAAKC,GACnB,MAAMqhD,EAASF,EAAOpkD,KAAKwB,IAAIwB,EAAIzE,EAAI0E,EAAI1E,GAAK,EAC1CgmD,EAASF,EAAOrkD,KAAKwB,IAAIwB,EAAIvE,EAAIwE,EAAIxE,GAAK,EACzC,OAAAuB,KAAK2C,KAAK3C,KAAKiB,IAAIqjD,EAAQ,GAAKtkD,KAAKiB,IAAIsjD,EAAQ,KAiCnCC,CAAyB39C,GAChD,IAAI49C,EAAcrpD,OAAOgF,kBAoBlB,OADkByjD,GAAA/nC,EAAOjV,EAAMuwC,GAlBd,SAAApoB,EAASjyB,EAAcmH,GAC7C,MAAMwgD,EAAU11B,EAAQi1B,QAAQ7M,EAAS74C,EAAG64C,EAAS34C,EAAGi0C,GACpD,GAAA31B,IAAc2nC,EAChB,OAEI,MAAAva,EAASnb,EAAQ21B,eAAejS,GAElC,OADkB11B,GAAoBlB,EAAMkoC,cAAc7Z,MACzCua,EACnB,OAEI,MAAA5hD,EAAWqhD,EAAe/M,EAAUjN,GACtCrnC,EAAW2hD,GACLv/C,EAAA,CAAC,CAAC8pB,QAAAA,EAASjyB,aAAAA,EAAcC,MAAAkH,IACnBugD,EAAA3hD,GACLA,IAAa2hD,GAChBv/C,EAAAlG,KAAK,CAACgwB,QAAAA,EAASjyB,aAAAA,EAAcC,MAAAkH,OAIhCgB,EAET,SAAA0/C,GAAyB9oC,EAAOs7B,EAAUvwC,EAAMkW,EAAW21B,EAAkB11B,GAC3E,OAAKA,GAAqBlB,EAAMkoC,cAAc5M,GAG9B,MAATvwC,GAAiBkW,EAEpBmnC,GAAyBpoC,EAAOs7B,EAAUvwC,EAAMkW,EAAW21B,EAAkB11B,GA3CnF,SAA+BlB,EAAOs7B,EAAUvwC,EAAM6rC,GACpD,IAAIxtC,EAAQ,GASL,OADkB2+C,GAAA/nC,EAAOjV,EAAMuwC,GAPd,SAAApoB,EAASjyB,EAAcmH,GAC7C,MAAM+pC,WAACA,EAAYC,SAAAA,GAAYlf,EAAQ2jB,SAAS,CAAC,aAAc,YAAaD,IACtE9vC,MAACA,GAASP,EAAkB2sB,EAAS,CAACzwB,EAAG64C,EAAS74C,EAAGE,EAAG24C,EAAS34C,IACnE2E,GAAcR,EAAOqrC,EAAYC,IAC7BhpC,EAAAlG,KAAK,CAACgwB,QAAAA,EAASjyB,aAAAA,EAAcC,MAAAkH,OAIhCgB,EAgCH2/C,CAAsB/oC,EAAOs7B,EAAUvwC,EAAM6rC,GAHxC,GAMX,SAAAoS,GAAsBhpC,EAAOs7B,EAAUvwC,EAAMkW,EAAW21B,GACtD,MAAMxtC,EAAQ,GACR6/C,EAAuB,MAATl+C,EAAe,WAAa,WAChD,IAAIm+C,GAAiB,EAOjB,OANJnB,GAAyB/nC,EAAOjV,EAAMuwC,GAAU,CAACpoB,EAASjyB,EAAcmH,KAClE8qB,EAAQ+1B,GAAa3N,EAASvwC,GAAO6rC,KACjCxtC,EAAAlG,KAAK,CAACgwB,QAAAA,EAASjyB,aAAAA,EAAcC,MAAAkH,IACnC8gD,EAAiBA,GAAkBh2B,EAAQi1B,QAAQ7M,EAAS74C,EAAG64C,EAAS34C,EAAGi0C,OAG3E31B,IAAcioC,EACT,GAEF9/C,EAET,IAAI+/C,GAAc,CAChBpB,yBAAAA,GACAqB,MAAO,CACLt7C,MAAMkS,EAAO3Z,EAAGvE,EAAS80C,GACjB,MAAA0E,EAAW7nB,GAAoBptB,EAAG2Z,GAClCjV,EAAOjJ,EAAQiJ,MAAQ,IACvBmW,EAAmBpf,EAAQof,mBAAoB,EAC/C9X,EAAQtH,EAAQmf,UAClBgnC,GAAkBjoC,EAAOs7B,EAAUvwC,EAAM6rC,EAAkB11B,GAC3D4nC,GAAgB9oC,EAAOs7B,EAAUvwC,GAAM,EAAO6rC,EAAkB11B,GAC9DunB,EAAW,GACb,OAACr/B,EAAM1I,QAGLsf,EAAAglC,+BAA+B97C,SAASqB,IACtC,MAAAnC,EAAQgB,EAAM,GAAGlI,MACjBgyB,EAAU3oB,EAAKsY,KAAKza,GACtB8qB,IAAYA,EAAQxD,MACtB+Y,EAASvlC,KAAK,CAACgwB,QAAAA,EAASjyB,aAAcsJ,EAAKrJ,MAAOA,MAAAkH,OAG/CqgC,GATE,IAWX36B,QAAQkS,EAAO3Z,EAAGvE,EAAS80C,GACnB,MAAA0E,EAAW7nB,GAAoBptB,EAAG2Z,GAClCjV,EAAOjJ,EAAQiJ,MAAQ,KACvBmW,EAAmBpf,EAAQof,mBAAoB,EACrD,IAAI9X,EAAQtH,EAAQmf,UAChBgnC,GAAkBjoC,EAAOs7B,EAAUvwC,EAAM6rC,EAAkB11B,GAC7D4nC,GAAgB9oC,EAAOs7B,EAAUvwC,GAAM,EAAO6rC,EAAkB11B,GAC9D,GAAA9X,EAAM1I,OAAS,EAAG,CACd,MAAAO,EAAemI,EAAM,GAAGnI,aACxB4hB,EAAO7C,EAAMylB,eAAexkC,GAAc4hB,KACxCzZ,EAAA,GACR,IAAA,IAAS7I,EAAI,EAAGA,EAAIsiB,EAAKniB,SAAUH,EACjC6I,EAAMlG,KAAK,CAACgwB,QAASrQ,EAAKtiB,GAAIU,aAAAA,EAAcC,MAAOX,IAGhD,OAAA6I,GAET2c,MAAM,CAAA/F,EAAO3Z,EAAGvE,EAAS80C,IAIhBqR,GAAkBjoC,EAHRyT,GAAoBptB,EAAG2Z,GAC3Ble,EAAQiJ,MAAQ,KAEmB6rC,EADvB90C,EAAQof,mBAAoB,GAGvDpT,QAAQkS,EAAO3Z,EAAGvE,EAAS80C,GACnB,MAAA0E,EAAW7nB,GAAoBptB,EAAG2Z,GAClCjV,EAAOjJ,EAAQiJ,MAAQ,KACvBmW,EAAmBpf,EAAQof,mBAAoB,EACrD,OAAO4nC,GAAgB9oC,EAAOs7B,EAAUvwC,EAAMjJ,EAAQmf,UAAW21B,EAAkB11B,IAErFze,EAAE,CAAAud,EAAO3Z,EAAGvE,EAAS80C,IAEZoS,GAAahpC,EADHyT,GAAoBptB,EAAG2Z,GACH,IAAKle,EAAQmf,UAAW21B,GAE/Dj0C,EAAE,CAAAqd,EAAO3Z,EAAGvE,EAAS80C,IAEZoS,GAAahpC,EADHyT,GAAoBptB,EAAG2Z,GACH,IAAKle,EAAQmf,UAAW21B,KAKnE,MAAMyS,GAAmB,CAAC,OAAQ,MAAO,QAAS,UAClD,SAAAC,GAA0B1jD,EAAO01C,GAC/B,OAAO11C,EAAMkoB,QAAYtrB,GAAAA,EAAEgxB,MAAQ8nB,IAErC,SAAAiO,GAAqC3jD,EAAOmF,GACnC,OAAAnF,EAAMkoB,QAAOtrB,IAAyC,IAApC6mD,GAAiBznD,QAAQY,EAAEgxB,MAAehxB,EAAEuxB,IAAIhpB,OAASA,IAEpF,SAAAy+C,GAAsB5jD,EAAOtF,GAC3B,OAAOsF,EAAM2lC,MAAK,CAAC3nC,EAAGC,KACd,MAAA9C,EAAKT,EAAUuD,EAAID,EACnB5C,EAAKV,EAAUsD,EAAIC,EAClB,OAAA9C,EAAGgd,SAAW/c,EAAG+c,OACtBhd,EAAGG,MAAQF,EAAGE,MACdH,EAAGgd,OAAS/c,EAAG+c,UAkCrB,SAAA0rC,GAAuBC,EAASC,GAC9B,MAAM9nB,EAdR,SAAqB6nB,GACnB,MAAM7nB,EAAS,GACf,IAAA,MAAW+nB,KAAQF,EAAS,CACpB,MAAApoB,MAACA,EAAO9N,IAAAA,EAAAq2B,YAAKA,GAAeD,EAClC,IAAKtoB,IAAU+nB,GAAiB78B,SAASgH,GACvC,SAEF,MAAMtG,EAAS2U,EAAOP,KAAWO,EAAOP,GAAS,CAAC32B,MAAO,EAAGm/C,OAAQ,EAAG/rC,OAAQ,EAAGja,KAAM,IACjFopB,EAAAviB,QACPuiB,EAAOnP,QAAU8rC,EAEZ,OAAAhoB,EAGQkoB,CAAYL,IACrBM,aAACA,gBAAcC,GAAiBN,EACtC,IAAIppD,EAAGO,EAAMopD,EACR,IAAA3pD,EAAI,EAAGO,EAAO4oD,EAAQhpD,OAAQH,EAAIO,IAAQP,EAAG,CAChD2pD,EAASR,EAAQnpD,GACX,MAAAkgD,SAACA,GAAYyJ,EAAOn2B,IACpBuN,EAAQO,EAAOqoB,EAAO5oB,OACtB9D,EAAS8D,GAAS4oB,EAAOL,YAAcvoB,EAAMvjB,OAC/CmsC,EAAOtd,YACTsd,EAAO/mC,MAAQqa,EAASA,EAASwsB,EAAevJ,GAAYkJ,EAAOQ,eACnED,EAAO3lC,OAAS0lC,IAEhBC,EAAO/mC,MAAQ6mC,EACfE,EAAO3lC,OAASiZ,EAASA,EAASysB,EAAgBxJ,GAAYkJ,EAAOS,iBAGlE,OAAAvoB,EAoBT,SAAwBwoB,GAAAC,EAAY5hB,EAAW9kC,EAAGC,GACzC,OAAAK,KAAK6B,IAAIukD,EAAW1mD,GAAI8kC,EAAU9kC,IAAMM,KAAK6B,IAAIukD,EAAWzmD,GAAI6kC,EAAU7kC,IAEnF,SAAA0mD,GAA0BD,EAAYE,GACpCF,EAAWlkC,IAAMliB,KAAK6B,IAAIukD,EAAWlkC,IAAKokC,EAAWpkC,KACrDkkC,EAAWpkC,KAAOhiB,KAAK6B,IAAIukD,EAAWpkC,KAAMskC,EAAWtkC,MACvDokC,EAAWjkC,OAASniB,KAAK6B,IAAIukD,EAAWjkC,OAAQmkC,EAAWnkC,QAC3DikC,EAAWnkC,MAAQjiB,KAAK6B,IAAIukD,EAAWnkC,MAAOqkC,EAAWrkC,OAE3D,SAAoBskC,GAAA/hB,EAAWihB,EAAQO,EAAQroB,GACvC,MAAArO,IAACA,MAAKO,GAAOm2B,EACbI,EAAa5hB,EAAU4hB,WACzB,IAAClrD,EAASo0B,GAAM,CACd02B,EAAOpmD,OACT4kC,EAAUlV,IAAQ02B,EAAOpmD,MAE3B,MAAMw9B,EAAQO,EAAOqoB,EAAO5oB,QAAU,CAACx9B,KAAM,EAAG6G,MAAO,GACjD22B,EAAAx9B,KAAOI,KAAK6B,IAAIu7B,EAAMx9B,KAAMomD,EAAOtd,WAAa7Y,EAAIxP,OAASwP,EAAI5Q,OAChE+mC,EAAApmD,KAAOw9B,EAAMx9B,KAAOw9B,EAAM32B,MACjC+9B,EAAUlV,IAAQ02B,EAAOpmD,KAEvBiwB,EAAI22B,YACNH,GAAiBD,EAAYv2B,EAAI22B,cAE7B,MAAAC,EAAWzmD,KAAK6B,IAAI,EAAG4jD,EAAOiB,WAAaP,GAAeC,EAAY5hB,EAAW,OAAQ,UACzFmiB,EAAY3mD,KAAK6B,IAAI,EAAG4jD,EAAOmB,YAAcT,GAAeC,EAAY5hB,EAAW,MAAO,WAC1FqiB,EAAeJ,IAAajiB,EAAU/3B,EACtCq6C,EAAgBH,IAAcniB,EAAUp6B,EAGvC,OAFPo6B,EAAU/3B,EAAIg6C,EACdjiB,EAAUp6B,EAAIu8C,EACPX,EAAOtd,WACV,CAACqe,KAAMF,EAAcG,MAAOF,GAC5B,CAACC,KAAMD,EAAeE,MAAOH,GAcnC,SAAAI,GAAoBve,EAAYlE,GAC9B,MAAM4hB,EAAa5hB,EAAU4hB,WAC7B,SAAAc,EAA4BC,GACpB,MAAAplC,EAAS,CAACC,KAAM,EAAGE,IAAK,EAAGD,MAAO,EAAGE,OAAQ,GAI5C,OAHGglC,EAAAniD,SAASsqB,IACjBvN,EAAOuN,GAAOtvB,KAAK6B,IAAI2iC,EAAUlV,GAAM82B,EAAW92B,OAE7CvN,EAET,OACImlC,EADGxe,EACgB,CAAC,OAAQ,SACT,CAAC,MAAO,WAEjC,SAAkB0e,GAAAC,EAAO7iB,EAAWihB,EAAQ9nB,GAC1C,MAAM2pB,EAAa,GACnB,IAAIjrD,EAAGO,EAAMopD,EAAQn2B,EAAK03B,EAAO5/C,EAC5B,IAAAtL,EAAI,EAAGO,EAAOyqD,EAAM7qD,OAAQ+qD,EAAQ,EAAGlrD,EAAIO,IAAQP,EAAG,CACzD2pD,EAASqB,EAAMhrD,GACfwzB,EAAMm2B,EAAOn2B,IACTA,EAAA+M,OACFopB,EAAO/mC,OAASulB,EAAU/3B,EAC1Bu5C,EAAO3lC,QAAUmkB,EAAUp6B,EAC3B68C,GAAWjB,EAAOtd,WAAYlE,IAEhC,MAAMuiB,KAACA,EAAMC,MAAAA,GAAST,GAAW/hB,EAAWihB,EAAQO,EAAQroB,GAC5D4pB,GAASR,GAAQO,EAAW9qD,OAC5BmL,EAAUA,GAAWq/C,EAChBn3B,EAAI0sB,UACP+K,EAAWtoD,KAAKgnD,GAGpB,OAAOuB,GAASH,GAASE,EAAY9iB,EAAWihB,EAAQ9nB,IAAWh2B,EAErE,SAAA6/C,GAAoB33B,EAAK7N,EAAME,EAAKjD,EAAOoB,GACzCwP,EAAI3N,IAAMA,EACV2N,EAAI7N,KAAOA,EACX6N,EAAI5N,MAAQD,EAAO/C,EACnB4Q,EAAI1N,OAASD,EAAM7B,EACnBwP,EAAI5Q,MAAQA,EACZ4Q,EAAIxP,OAASA,EAEf,SAAoBonC,GAAAJ,EAAO7iB,EAAWihB,EAAQ9nB,GAC5C,MAAM+pB,EAAcjC,EAAO9P,QACvB,IAAAp3C,EAACA,IAAGE,GAAK+lC,EACb,IAAA,MAAWwhB,KAAUqB,EAAO,CAC1B,MAAMx3B,EAAMm2B,EAAOn2B,IACbuN,EAAQO,EAAOqoB,EAAO5oB,QAAU,CAAC32B,MAAO,EAAGm/C,OAAQ,EAAG/rC,OAAQ,GAC9DA,EAAUmsC,EAAOL,YAAcvoB,EAAMvjB,QAAW,EACtD,GAAImsC,EAAOtd,WAAY,CACf,MAAAzpB,EAAQulB,EAAU/3B,EAAIoN,EACtBwG,EAAS+c,EAAMx9B,MAAQiwB,EAAIxP,OAC7B9gB,EAAQ69B,EAAM/5B,SAChB5E,EAAI2+B,EAAM/5B,OAERwsB,EAAI0sB,SACKiL,GAAA33B,EAAK63B,EAAY1lC,KAAMvjB,EAAGgnD,EAAOiB,WAAagB,EAAYzlC,MAAQylC,EAAY1lC,KAAM3B,GAE/FmnC,GAAW33B,EAAK2U,EAAUxiB,KAAOob,EAAMwoB,OAAQnnD,EAAGwgB,EAAOoB,GAE3D+c,EAAM/5B,MAAQ5E,EACd2+B,EAAMwoB,QAAU3mC,EAChBxgB,EAAIoxB,EAAI1N,WACH,CACC,MAAA9B,EAASmkB,EAAUp6B,EAAIyP,EACvBoF,EAAQme,EAAMx9B,MAAQiwB,EAAI5Q,MAC5B1f,EAAQ69B,EAAM/5B,SAChB9E,EAAI6+B,EAAM/5B,OAERwsB,EAAI0sB,SACKiL,GAAA33B,EAAKtxB,EAAGmpD,EAAYxlC,IAAKjD,EAAOwmC,EAAOmB,YAAcc,EAAYvlC,OAASulC,EAAYxlC,KAEjGslC,GAAW33B,EAAKtxB,EAAGimC,EAAUtiB,IAAMkb,EAAMwoB,OAAQ3mC,EAAOoB,GAE1D+c,EAAM/5B,MAAQ9E,EACd6+B,EAAMwoB,QAAUvlC,EAChB9hB,EAAIsxB,EAAI5N,OAGZuiB,EAAUjmC,EAAIA,EACdimC,EAAU/lC,EAAIA,EAEhB6c,GAASJ,IAAI,SAAU,CACrBysC,aAAa,EACbhS,QAAS,CACPzzB,IAAK,EACLD,MAAO,EACPE,OAAQ,EACRH,KAAM,KAGV,IAAI4lC,GAAU,CACZh+C,OAAOkS,EAAOjc,GACPic,EAAMurC,QACTvrC,EAAMurC,MAAQ,IAEXxnD,EAAA08C,SAAW18C,EAAK08C,WAAY,EAC5B18C,EAAAu3C,SAAWv3C,EAAKu3C,UAAY,MAC5Bv3C,EAAAga,OAASha,EAAKga,QAAU,EACxBha,EAAAgoD,QAAUhoD,EAAKgoD,SAAW,WAC7B,MAAO,CAAC,CACNjH,EAAG,EACHh3C,KAAK46B,GACH3kC,EAAKw4B,KAAKmM,OAIhB1oB,EAAMurC,MAAMroD,KAAKa,IAEnB+J,UAAUkS,EAAOgsC,GACf,MAAM5jD,EAAQ4X,EAAMurC,MAAQvrC,EAAMurC,MAAM3pD,QAAQoqD,IAAc,GAC5C,IAAd5jD,GACI4X,EAAAurC,MAAMtiD,OAAOb,EAAO,IAG9B0F,UAAUkS,EAAOjc,EAAMjC,GACrBiC,EAAK08C,SAAW3+C,EAAQ2+C,SACxB18C,EAAKu3C,SAAWx5C,EAAQw5C,SACxBv3C,EAAKga,OAASjc,EAAQic,QAExBjQ,OAAOkS,EAAOmD,EAAOoB,EAAQ0nC,GAC3B,IAAKjsC,EACH,OAEF,MAAM65B,EAAU7vB,GAAUhK,EAAMle,QAAQooD,OAAOrQ,SACzCsQ,EAAiBjmD,KAAK6B,IAAIod,EAAQ02B,EAAQ12B,MAAO,GACjDinC,EAAkBlmD,KAAK6B,IAAIwe,EAASs1B,EAAQt1B,OAAQ,GACpDgnC,EA9LV,SAA0BA,GACxB,MAAMW,EAnDR,SAAmBX,GACjB,MAAMW,EAAc,GACpB,IAAI3rD,EAAGO,EAAMizB,EAAKP,EAAK8N,EAAOuoB,EACzB,IAAAtpD,EAAI,EAAGO,GAAQyqD,GAAS,IAAI7qD,OAAQH,EAAIO,IAAQP,EACnDwzB,EAAMw3B,EAAMhrD,KACV+6C,SAAU9nB,EAAK1xB,SAAUw/B,MAAAA,EAAOuoB,YAAAA,EAAc,IAAM91B,GACtDm4B,EAAYhpD,KAAK,CACfhC,MAAOX,EACPwzB,IAAAA,EACAP,IAAAA,EACAoZ,WAAY7Y,EAAI6Z,eAChB7vB,OAAQgW,EAAIhW,OACZujB,MAAOA,GAAU9N,EAAM8N,EACvBuoB,YAAAA,IAGG,OAAAqC,EAmCaC,CAAUZ,GACxB9K,EAAW+I,GAAa0C,EAAYp+B,QAAe87B,GAAAA,EAAK71B,IAAI0sB,YAAW,GACvEv6B,EAAOsjC,GAAaF,GAAiB4C,EAAa,SAAS,GAC3D/lC,EAAQqjC,GAAaF,GAAiB4C,EAAa,UACnD9lC,EAAMojC,GAAaF,GAAiB4C,EAAa,QAAQ,GACzD7lC,EAASmjC,GAAaF,GAAiB4C,EAAa,WACpDE,EAAmB7C,GAA4B2C,EAAa,KAC5DG,EAAiB9C,GAA4B2C,EAAa,KACzD,MAAA,CACLzL,SAAAA,EACA6L,WAAYpmC,EAAKmlB,OAAOjlB,GACxBmmC,eAAgBpmC,EAAMklB,OAAOghB,GAAgBhhB,OAAOhlB,GAAQglB,OAAO+gB,GACnE1jB,UAAW4gB,GAAiB4C,EAAa,aACzCM,SAAUtmC,EAAKmlB,OAAOllB,GAAOklB,OAAOghB,GACpCzf,WAAYxmB,EAAIilB,OAAOhlB,GAAQglB,OAAO+gB,IA+KxBK,CAAiBzsC,EAAMurC,OAC/BmB,EAAgBnB,EAAMiB,SACtBG,EAAkBpB,EAAM3e,WACzBxsC,EAAA4f,EAAMurC,OAAcx3B,IACS,mBAArBA,EAAI64B,cACT74B,EAAA64B,kBAGR,MAAMC,EAA0BH,EAAc3vB,QAAO,CAACoW,EAAOyW,IAC3DA,EAAK71B,IAAIjyB,UAAwC,IAA7B8nD,EAAK71B,IAAIjyB,QAAQq0C,QAAoBhD,EAAQA,EAAQ,GAAG,IAAM,EAC9EwW,EAAS5qD,OAAOyqC,OAAO,CAC3BohB,WAAYznC,EACZ2nC,YAAavmC,EACbs1B,QAAAA,EACAsQ,eAAAA,EACAC,gBAAAA,EACAJ,aAAcG,EAAiB,EAAI0C,EACnC5C,cAAeG,EAAkB,IAE7BE,EAAavrD,OAAO+M,OAAO,GAAI+tC,GACrC0Q,GAAiBD,EAAYtgC,GAAUiiC,IACjC,MAAAvjB,EAAY3pC,OAAO+M,OAAO,CAC9Bw+C,WAAAA,EACA35C,EAAGw5C,EACH77C,EAAG87C,EACH3nD,EAAGo3C,EAAQ3zB,KACXvjB,EAAGk3C,EAAQzzB,KACVyzB,GACGhY,EAAS4nB,GAAciD,EAAcrhB,OAAOshB,GAAkBhD,GAC3D2B,GAAAC,EAAM9K,SAAU/X,EAAWihB,EAAQ9nB,GACnCypB,GAAAoB,EAAehkB,EAAWihB,EAAQ9nB,GACvCypB,GAASqB,EAAiBjkB,EAAWihB,EAAQ9nB,IACtCypB,GAAAoB,EAAehkB,EAAWihB,EAAQ9nB,GA1KjD,SAA0B6G,GACxB,MAAM4hB,EAAa5hB,EAAU4hB,WAC7B,SAAAwC,EAAmBt5B,GACjB,MAAMmqB,EAASz5C,KAAK6B,IAAIukD,EAAW92B,GAAOkV,EAAUlV,GAAM,GAEnD,OADPkV,EAAUlV,IAAQmqB,EACXA,EAETjV,EAAU/lC,GAAKmqD,EAAU,OACzBpkB,EAAUjmC,GAAKqqD,EAAU,QACfA,EAAA,SACAA,EAAA,UAkKSC,CAAArkB,GACNijB,GAAAJ,EAAMe,WAAY5jB,EAAWihB,EAAQ9nB,GAChD6G,EAAUjmC,GAAKimC,EAAU/3B,EACzB+3B,EAAU/lC,GAAK+lC,EAAUp6B,EACdq9C,GAAAJ,EAAMgB,eAAgB7jB,EAAWihB,EAAQ9nB,GACpD7hB,EAAM0oB,UAAY,CAChBxiB,KAAMwiB,EAAUxiB,KAChBE,IAAKsiB,EAAUtiB,IACfD,MAAOuiB,EAAUxiB,KAAOwiB,EAAU/3B,EAClC0V,OAAQqiB,EAAUtiB,IAAMsiB,EAAUp6B,EAClCiW,OAAQmkB,EAAUp6B,EAClB6U,MAAOulB,EAAU/3B,GAEdvQ,EAAAmrD,EAAM7iB,WAAYwhB,IACrB,MAAMn2B,EAAMm2B,EAAOn2B,IACZh1B,OAAA+M,OAAOioB,EAAK/T,EAAM0oB,WACzB3U,EAAI+M,OAAO4H,EAAU/3B,EAAG+3B,EAAUp6B,EAAG,CAAC4X,KAAM,EAAGE,IAAK,EAAGD,MAAO,EAAGE,OAAQ,SAK/E,MAAmB2mC,GACjBl/C,eAAeqW,EAAQ0Q,IACvB/mB,eAAeiS,GACN,OAAA,EAETjS,iBAAiBkS,EAAOlhB,EAAM+J,IAC9BiF,oBAAoBkS,EAAOlhB,EAAM+J,IACjCiF,sBACS,OAAA,EAETA,eAAeolB,EAAS/P,EAAOoB,EAAQsQ,GAG9B,OAFP1R,EAAQjf,KAAK6B,IAAI,EAAGod,GAAS+P,EAAQ/P,OACrCoB,EAASA,GAAU2O,EAAQ3O,OACpB,CACLpB,MAAAA,EACAoB,OAAQrgB,KAAK6B,IAAI,EAAG8uB,EAAc3wB,KAAKkB,MAAM+d,EAAQ0R,GAAetQ,IAGxEzW,WAAWqW,GACF,OAAA,EAETrW,aAAa+xB,KAIf,MAAAotB,WAA4BD,GAC1Bl/C,eAAe/J,GACb,OAAOA,GAAQA,EAAKqgB,YAAcrgB,EAAKqgB,WAAW,OAAS,KAE7DtW,aAAa+xB,GACXA,EAAO/9B,QAAQ4d,WAAY,GAI/B,MACMwtC,GAAc,CAClBC,WAAY,YACZC,UAAW,YACXC,SAAU,UACVC,aAAc,aACdC,YAAa,YACbC,YAAa,YACbC,UAAW,UACXC,aAAc,WACdC,WAAY,YAERC,GAAgBjvD,GAAmB,OAAVA,GAA4B,KAAVA,EAoCjD,MAAMkvD,KAAuB93B,IAA+B,CAACE,SAAS,GAItE,SAAwB63B,GAAA9tC,EAAOlhB,EAAM+J,GAC7BmX,EAAAmE,OAAOgS,oBAAoBr3B,EAAM+J,EAAUglD,IAanD,SAAAE,GAA0BC,EAAU7pC,GAClC,IAAA,MAAWhF,KAAQ6uC,EACjB,GAAI7uC,IAASgF,GAAUhF,EAAK8uC,SAAS9pC,GAC5B,OAAA,EAIb,SAA8B+pC,GAAAluC,EAAOlhB,EAAM+J,GACzC,MAAMsb,EAASnE,EAAMmE,OACfgqC,EAAW,IAAIC,kBAA4BC,IAC/C,IAAIC,GAAU,EACd,IAAA,MAAWviB,KAASsiB,EACRC,EAAAA,GAAWP,GAAiBhiB,EAAMwiB,WAAYpqC,GACxDmqC,EAAUA,IAAYP,GAAiBhiB,EAAMyiB,aAAcrqC,GAEzDmqC,GACFzlD,OAIG,OADPslD,EAASM,QAAQj8B,SAAU,CAACk8B,WAAW,EAAMC,SAAS,IAC/CR,EAET,SAA8BS,GAAA5uC,EAAOlhB,EAAM+J,GACzC,MAAMsb,EAASnE,EAAMmE,OACfgqC,EAAW,IAAIC,kBAA4BC,IAC/C,IAAIC,GAAU,EACd,IAAA,MAAWviB,KAASsiB,EACRC,EAAAA,GAAWP,GAAiBhiB,EAAMyiB,aAAcrqC,GAC1DmqC,EAAUA,IAAYP,GAAiBhiB,EAAMwiB,WAAYpqC,GAEvDmqC,GACFzlD,OAIG,OADPslD,EAASM,QAAQj8B,SAAU,CAACk8B,WAAW,EAAMC,SAAS,IAC/CR,EAET,MAAMU,GAAqB,IAAI/3B,IAC/B,IAAIg4B,GAAsB,EAC1B,SAA0BC,KACxB,MAAMC,EAAMtlD,OAAOoW,iBACfkvC,IAAQF,KAGUA,GAAAE,EACHH,GAAA3lD,SAAQ,CAACq2B,EAAQvf,KAC9BA,EAAMgE,0BAA4BgrC,GACpCzvB,QAgBN,SAA8B0vB,GAAAjvC,EAAOlhB,EAAM+J,GACzC,MAAMsb,EAASnE,EAAMmE,OACf8Q,EAAY9Q,GAAUsO,GAAetO,GAC3C,IAAK8Q,EACH,OAEF,MAAMsK,EAAS11B,IAAU,CAACsZ,EAAOoB,KAC/B,MAAM5T,EAAIskB,EAAUI,YACpBxsB,EAASsa,EAAOoB,GACZ5T,EAAIskB,EAAUI,aAChBxsB,MAEDa,QACGykD,EAAW,IAAIe,gBAA0Bb,IAC7C,MAAMtiB,EAAQsiB,EAAQ,GAChBlrC,EAAQ4oB,EAAMojB,YAAYhsC,MAC1BoB,EAASwnB,EAAMojB,YAAY5qC,OACnB,IAAVpB,GAA0B,IAAXoB,GAGnBgb,EAAOpc,EAAOoB,MAIT,OAFP4pC,EAASM,QAAQx5B,GAlCnB,SAAuCjV,EAAOuf,GACvCsvB,GAAmB/qD,MACtB4F,OAAOwsB,iBAAiB,SAAU64B,IAEpCF,GAAmBzvC,IAAIY,EAAOuf,GA+B9B6vB,CAA8BpvC,EAAOuf,GAC9B4uB,EAET,SAAyBkB,GAAArvC,EAAOlhB,EAAMqvD,GAChCA,GACOA,EAAAmB,aAEE,WAATxwD,GApCN,SAAyCkhB,GACvC6uC,GAAmBnhC,OAAO1N,GACrB6uC,GAAmB/qD,MACtB4F,OAAOysB,oBAAoB,SAAU44B,IAkCLQ,CAAAvvC,GAGpC,SAA8BwvC,GAAAxvC,EAAOlhB,EAAM+J,GACzC,MAAMsb,EAASnE,EAAMmE,OACf2H,EAAQjiB,IAAW+yB,IACL,OAAd5c,EAAMW,KACR9X,EAhHN,SAAyB+zB,EAAO5c,GAC9B,MAAMlhB,EAAOouD,GAAYtwB,EAAM99B,OAAS89B,EAAM99B,MACxC2D,EAACA,EAAAE,EAAGA,GAAK8wB,GAAoBmJ,EAAO5c,GACnC,MAAA,CACLlhB,KAAAA,EACAkhB,MAAAA,EACAyvC,OAAQ7yB,EACRn6B,OAAS,IAANA,EAAkBA,EAAI,KACzBE,OAAS,IAANA,EAAkBA,EAAI,MAwGd+sD,CAAgB9yB,EAAO5c,MAEjCA,GAAQ/f,IACT,MAAM28B,EAAQ38B,EAAK,GACnB,MAAO,CAAC28B,EAAOA,EAAM3I,QAAS2I,EAAM1I,YAG/B,OA7HT,SAAqB/U,EAAMrgB,EAAM+J,GAC1BsW,EAAA+W,iBAAiBp3B,EAAM+J,EAAUglD,IA2HtC8B,CAAYxrC,EAAQrlB,EAAMgtB,GACnBA,EAET,MAAA8jC,WAA0B5C,GACxBl/C,eAAeqW,EAAQ0Q,GACrB,MAAM9U,EAAUoE,GAAUA,EAAOC,YAAcD,EAAOC,WAAW,MAC7D,OAAArE,GAAWA,EAAQoE,SAAWA,GAtKtC,SAAoBA,EAAQ0Q,GAC1B,MAAMtU,EAAQ4D,EAAO5D,MACfsvC,EAAe1rC,EAAO2rC,aAAa,UACnCC,EAAc5rC,EAAO2rC,aAAa,SAcxC,GAbA3rC,EAAsB,SAAA,CACpBuX,QAAS,CACPnX,OAAQsrC,EACR1sC,MAAO4sC,EACPxvC,MAAO,CACL41B,QAAS51B,EAAM41B,QACf5xB,OAAQhE,EAAMgE,OACdpB,MAAO5C,EAAM4C,SAIb5C,EAAA41B,QAAU51B,EAAM41B,SAAW,QAC3B51B,EAAAqT,UAAYrT,EAAMqT,WAAa,aACjCg6B,GAAcmC,GAAc,CACxB,MAAAC,EAAe55B,GAAajS,EAAQ,cACrB,IAAjB6rC,IACF7rC,EAAOhB,MAAQ6sC,GAGnB,GAAIpC,GAAciC,GACZ,GAAwB,KAAxB1rC,EAAO5D,MAAMgE,OACRJ,EAAAI,OAASJ,EAAOhB,OAAwB0R,GAAA,OAC1C,CACC,MAAAo7B,EAAgB75B,GAAajS,EAAQ,eACrB,IAAlB8rC,IACF9rC,EAAOI,OAAS0rC,IA0IlBC,CAAW/rC,EAAQ0Q,GACZ9U,GAEF,KAETjS,eAAeiS,GACb,MAAMoE,EAASpE,EAAQoE,OACnB,IAACA,EAAqB,SACjB,OAAA,EAEH,MAAAuX,EAAUvX,EAAoB,SAAAuX,QACpC,CAAC,SAAU,SAASxyB,SAAS2gB,IAC3B,MAAMlrB,EAAQ+8B,EAAQ7R,GAClBnrB,EAAcC,GAChBwlB,EAAOgsC,gBAAgBtmC,GAEvB1F,EAAOisC,aAAavmC,EAAMlrB,MAGxB,MAAA4hB,EAAQmb,EAAQnb,OAAS,GAMxB,OALPxhB,OAAO0B,KAAK8f,GAAOrX,SAASvH,IACnBwiB,EAAA5D,MAAM5e,GAAO4e,EAAM5e,MAE5BwiB,EAAOhB,MAAQgB,EAAOhB,aACfgB,EAAO,UACP,EAETrW,iBAAiBkS,EAAOlhB,EAAM+J,GAC5B4U,KAAK0Y,oBAAoBnW,EAAOlhB,GAChC,MAAMuxD,EAAUrwC,EAAMswC,WAAatwC,EAAMswC,SAAW,IAM9CtI,EALW,CACfuI,OAAQrC,GACRsC,OAAQ5B,GACRrvB,OAAQ0vB,IAEenwD,IAAS0wD,GAC1Ba,EAAAvxD,GAAQkpD,EAAQhoC,EAAOlhB,EAAM+J,GAEvCiF,oBAAoBkS,EAAOlhB,GACzB,MAAMuxD,EAAUrwC,EAAMswC,WAAatwC,EAAMswC,SAAW,IAC9CxkC,EAAQukC,EAAQvxD,GACtB,IAAKgtB,EACH,QAEe,CACfykC,OAAQlB,GACRmB,OAAQnB,GACR9vB,OAAQ8vB,IAEevwD,IAASgvD,IAC1B9tC,EAAOlhB,EAAMgtB,GACrBukC,EAAQvxD,QAAQ,EAElBgP,sBACE,OAAOpE,OAAOoW,iBAEhBhS,eAAeqW,EAAQhB,EAAOoB,EAAQsQ,GAC7B,OAAAH,GAAevQ,EAAQhB,EAAOoB,EAAQsQ,GAE/C/mB,WAAWqW,GACT,MAAM8Q,EAAYxC,GAAetO,GAC1B,SAAG8Q,IAAaA,EAAUw7B,cAWrC,MAAoBC,GAClB5iD,cACE2P,KAAKkzC,MAAQ,GAEf7iD,OAAOkS,EAAO4wC,EAAM3wD,EAAM6tB,GACX,eAAT8iC,IACGnzC,KAAAkzC,MAAQlzC,KAAKozC,mBAAmB7wC,GAAO,GACvCvC,KAAA+e,QAAQ/e,KAAKkzC,MAAO3wC,EAAO,YAE5B,MAAAsN,EAAcQ,EAASrQ,KAAK0P,aAAanN,GAAO8N,OAAOA,GAAUrQ,KAAK0P,aAAanN,GACnFuT,EAAS9V,KAAK+e,QAAQlP,EAAatN,EAAO4wC,EAAM3wD,GAK/C,MAJM,iBAAT2wD,IACGnzC,KAAA+e,QAAQlP,EAAatN,EAAO,QAC5BvC,KAAA+e,QAAQ/e,KAAKkzC,MAAO3wC,EAAO,cAE3BuT,EAETzlB,QAAQwf,EAAatN,EAAO4wC,EAAM3wD,GAChCA,EAAOA,GAAQ,GACf,IAAA,MAAW6wD,KAAcxjC,EAAa,CACpC,MAAMyjC,EAASD,EAAWC,OAG1B,IAAyC,IAArChxD,EAFWgxD,EAAOH,GACP,CAAC5wC,EAAO/f,EAAM6wD,EAAWhvD,SACXivD,IAAqB9wD,EAAK+wD,WAC9C,OAAA,EAGJ,OAAA,EAETljD,aACOpP,EAAc+e,KAAKytB,UACtBztB,KAAKwzC,UAAYxzC,KAAKytB,OACtBztB,KAAKytB,YAAS,GAGlBp9B,aAAakS,GACX,GAAIvC,KAAKytB,OACP,OAAOztB,KAAKytB,OAEd,MAAM5d,EAAc7P,KAAKytB,OAASztB,KAAKozC,mBAAmB7wC,GAEnD,OADPvC,KAAKyzC,oBAAoBlxC,GAClBsN,EAETxf,mBAAmBkS,EAAO0gB,GAClB,MAAAb,EAAS7f,GAASA,EAAM6f,OACxB/9B,EAAUpC,EAAemgC,EAAO/9B,SAAW+9B,EAAO/9B,QAAQyf,QAAS,IACnE4vC,EAWV,SAAoBtxB,GAClB,MAAMuxB,EAAW,GACXD,EAAU,GACV1wD,EAAO1B,OAAO0B,KAAKslD,GAASxkC,QAAQnY,OAC1C,IAAA,IAAS7I,EAAI,EAAGA,EAAIE,EAAKC,OAAQH,IACvB4wD,EAAAjuD,KAAK6iD,GAASsL,UAAU5wD,EAAKF,KAEjC,MAAAgiB,EAAQsd,EAAOte,SAAW,GAChC,IAAA,IAAShhB,EAAI,EAAGA,EAAIgiB,EAAM7hB,OAAQH,IAAK,CACrC,MAAMwwD,EAASxuC,EAAMhiB,IACe,IAAhC4wD,EAAQvvD,QAAQmvD,KAClBI,EAAQjuD,KAAK6tD,GACbK,EAASL,EAAOtyD,KAAM,GAG1B,MAAO,CAAC8iB,QAAS4vC,EAAAC,SAAAA,GA1BCE,CAAWzxB,GACpB,OAAY,IAAZ/9B,GAAsB4+B,EAoCjC,SAA2B1gB,GAAQuB,QAAS4vC,EAAAC,SAAAA,GAAWtvD,EAAS4+B,GAC9D,MAAMnN,EAAS,GACTxT,EAAUC,EAAMoE,aACtB,IAAA,MAAW2sC,KAAUI,EAAS,CAC5B,MAAM1yD,EAAKsyD,EAAOtyD,GACZ4oB,EAAOkqC,GAAQzvD,EAAQrD,GAAKiiC,GACrB,OAATrZ,GAGJkM,EAAOrwB,KAAK,CACV6tD,OAAAA,EACAjvD,QAAS0vD,GAAWxxC,EAAM6f,OAAQ,CAACkxB,OAAAA,EAAQxuC,MAAO6uC,EAAS3yD,IAAM4oB,EAAMtH,KAGpE,OAAAwT,EAlDmCk+B,CAAkBzxC,EAAOmxC,EAASrvD,EAAS4+B,GAAhD,GAErC5yB,oBAAoBkS,GACZ,MAAA0xC,EAAsBj0C,KAAKwzC,WAAa,GACxC3jC,EAAc7P,KAAKytB,OACnB6N,EAAO,CAACn1C,EAAGC,IAAMD,EAAEkqB,QAAOrrB,IAAMoB,EAAE8tD,MAAUhvD,GAAAF,EAAEsuD,OAAOtyD,KAAOkE,EAAEouD,OAAOtyD,OAC3Egf,KAAK+e,QAAQuc,EAAK2Y,EAAqBpkC,GAActN,EAAO,QAC5DvC,KAAK+e,QAAQuc,EAAKzrB,EAAaokC,GAAsB1xC,EAAO,UAoBhE,SAAAuxC,GAAiBzvD,EAAS4+B,GACpB,OAACA,IAAmB,IAAZ5+B,GAGI,IAAZA,EACK,GAEFA,EALE,KAuBX,SAAA0vD,GAAoB3xB,GAAQkxB,OAACA,EAAQxuC,MAAAA,GAAQ8E,EAAMtH,GAC3C,MAAAtf,EAAOo/B,EAAO+xB,gBAAgBb,GAC9BlmC,EAASgV,EAAO4G,gBAAgBpf,EAAM5mB,GAI5C,OAHI8hB,GAASwuC,EAAOvxC,UAClBqL,EAAO3nB,KAAK6tD,EAAOvxC,UAEdqgB,EAAO6G,eAAe7b,EAAQ9K,EAAS,CAAC,IAAK,CAClDsO,YAAY,EACZC,WAAW,EACXJ,SAAS,IAIb,SAAA2jC,GAAsB/yD,EAAMgD,GACpB,MAAAgwD,EAAkBtyC,GAASK,SAAS/gB,IAAS,GAEnD,QADwBgD,EAAQ+d,UAAY,IAAI/gB,IAAS,IACnCgiB,WAAahf,EAAQgf,WAAagxC,EAAgBhxC,WAAa,IAsBvF,SAAAixC,GAAuBtzD,EAAIuzD,GACrB,MAAO,MAAPvzD,GAAqB,MAAPA,EACTA,EAEFuzD,EAAajnD,OAXH,SADOuwC,EAYqB0W,EAAa1W,WAXnB,WAAbA,EACjB,IAEQ,SAAbA,GAAoC,UAAbA,EAClB,SADL,IAQmE78C,EAAG8E,OAAO,GAAGqZ,cAZtF,IAA0B0+B,EAoD1B,SAAA2W,GAAqBpyB,GACnB,MAAM/9B,EAAU+9B,EAAO/9B,UAAY+9B,EAAO/9B,QAAU,IAC5CA,EAAAyf,QAAU7hB,EAAeoC,EAAQyf,QAAS,IAC1Czf,EAAA4f,OAzCV,SAA0Bme,EAAQ/9B,GAChC,MAAMowD,EAAgBlzC,GAAU6gB,EAAO/gC,OAAS,CAAC4iB,OAAQ,IACnDywC,EAAerwD,EAAQ4f,QAAU,GACjC0wC,EAAiBP,GAAahyB,EAAO/gC,KAAMgD,GAC3CuwD,EAAWtzD,OAAOwC,OAAO,MACzB0hC,EAASlkC,OAAOwC,OAAO,MA+BtB,OA9BAxC,OAAA0B,KAAK0xD,GAAcjpD,SAAczK,IACtC,MAAM6zD,EAAYH,EAAa1zD,GAC3B,IAACW,EAASkzD,GACL,OAAAnoC,QAAQooC,MAAM,0CAA0C9zD,KAEjE,GAAI6zD,EAAUvlC,OACL,OAAA5C,QAAQC,KAAK,kDAAkD3rB,KAElE,MAAAsM,EAAOgnD,GAActzD,EAAI6zD,GACzBE,EAhCV,SAAmCznD,EAAM+V,GAChC,OAAA/V,IAAS+V,EAAY,UAAY,UA+BpB2xC,CAA0B1nD,EAAMqnD,GAC5CM,EAAsBR,EAAcxwC,QAAU,GAC3C2wC,EAAAtnD,GAAQsnD,EAAStnD,IAAStM,EAC5BwkC,EAAAxkC,GAAM2D,EAAQrD,OAAOwC,OAAO,MAAO,CAAC,CAACwJ,KAAAA,GAAOunD,EAAWI,EAAoB3nD,GAAO2nD,EAAoBF,QAExG3yB,EAAAhd,KAAKhD,SAAS3W,SAAmBw7B,IAChC,MAAA5lC,EAAO4lC,EAAQ5lC,MAAQ+gC,EAAO/gC,KAC9BgiB,EAAY4jB,EAAQ5jB,WAAa+wC,GAAa/yD,EAAMgD,GAEpD4wD,GADkB1zC,GAAUlgB,IAAS,IACC4iB,QAAU,GAC/C3iB,OAAA0B,KAAKiyD,GAAqBxpD,SAAqBypD,IAC9C,MAAA5nD,EApDZ,SAAmCtM,EAAIqiB,GACrC,IAAI/V,EAAOtM,EAMJ,MALI,YAAPA,EACKsM,EAAA+V,EACS,YAAPriB,IACFsM,EAAc,MAAd+V,EAAoB,IAAM,KAE5B/V,EA6CU6nD,CAA0BD,EAAW7xC,GAC5CriB,EAAKimC,EAAQ35B,EAAO,WAAasnD,EAAStnD,IAASA,EACzDk4B,EAAOxkC,GAAMwkC,EAAOxkC,IAAOM,OAAOwC,OAAO,MACzCa,EAAQ6gC,EAAOxkC,GAAK,CAAC,CAACsM,KAAAA,GAAOonD,EAAa1zD,GAAKi0D,EAAoBC,WAGhE5zD,OAAA0B,KAAKwiC,GAAQ/5B,SAAevH,IACjC,MAAM8f,EAAQwhB,EAAOthC,GACrBS,EAAQqf,EAAO,CAACjC,GAASkC,OAAOD,EAAM3iB,MAAO0gB,GAASiC,WAEjDwhB,EAKU4vB,CAAiBhzB,EAAQ/9B,GAE5C,SAAAgxD,GAAkBjwC,GAIT,OAHPA,EAAOA,GAAQ,IACVhD,SAAWgD,EAAKhD,UAAY,GAC5BgD,EAAAmkB,OAASnkB,EAAKmkB,QAAU,GACtBnkB,EAQT,MAAMkwC,GAAW,IAAIj8B,IACfk8B,GAAa,IAAI1pD,IACvB,SAAA2pD,GAAoB/7B,EAAUg8B,GACxB,IAAAzyD,EAAOsyD,GAASnnC,IAAIsL,GAMjB,OALFz2B,IACIA,EAAAyyD,IACPH,GAAS3zC,IAAI8X,EAAUz2B,GACvBuyD,GAAWzpD,IAAI9I,IAEVA,EAET,MAAM0yD,GAAa,CAAC9pD,EAAKxG,EAAKlB,KACtB,MAAA0lB,EAAOzkB,EAAiBC,EAAKlB,QACtB,IAAT0lB,GACFhe,EAAIE,IAAI8d,IAGZ,MAAa+rC,GACXtlD,YAAY+xB,GACVpiB,KAAK41C,QAzBT,SAAoBxzB,GAIX,OAHPA,EAASA,GAAU,IACZhd,KAAOiwC,GAASjzB,EAAOhd,MAClBovC,GAAApyB,GACLA,EAqBUyzB,CAAWzzB,GAC1BpiB,KAAK81C,YAAc,IAAIz8B,IACvBrZ,KAAK+1C,eAAiB,IAAI18B,IAAA7W,eAG1B,OAAOxC,KAAK41C,QAAQpzC,SAAAnhB,WAGpB,OAAO2e,KAAK41C,QAAQv0D,KAAAA,SAEbA,GACP2e,KAAK41C,QAAQv0D,KAAOA,EAAA+jB,WAGpB,OAAOpF,KAAK41C,QAAQxwC,KAAAA,SAEbA,GACFpF,KAAA41C,QAAQxwC,KAAOiwC,GAASjwC,GAAA/gB,cAG7B,OAAO2b,KAAK41C,QAAQvxD,QAAAA,YAEVA,GACV2b,KAAK41C,QAAQvxD,QAAUA,EAAAyf,cAGvB,OAAO9D,KAAK41C,QAAQ9xC,QAEtBzT,SACE,MAAM+xB,EAASpiB,KAAK41C,QACf51C,KAAAg2C,aACOxB,GAAApyB,GAEd/xB,aACE2P,KAAK81C,YAAYG,QACjBj2C,KAAK+1C,eAAeE,QAEtB5lD,iBAAiB6lD,GACR,OAAAV,GAAWU,GAChB,IAAM,CAAC,CACL,YAAYA,IACZ,OAGN7lD,0BAA0B6lD,EAAalqB,GACrC,OAAOwpB,GAAW,GAAGU,gBAA0BlqB,KAC7C,IAAM,CACJ,CACE,YAAYkqB,iBAA2BlqB,IACvC,eAAeA,KAEjB,CACE,YAAYkqB,IACZ,OAIR7lD,wBAAwB6lD,EAAaxqB,GACnC,OAAO8pB,GAAW,GAAGU,KAAexqB,KAClC,IAAM,CAAC,CACL,YAAYwqB,cAAwBxqB,IACpC,YAAYwqB,IACZ,YAAYxqB,IACZ,OAGNr7B,gBAAgBijD,GACd,MAAMtyD,EAAKsyD,EAAOtyD,GAElB,OAAOw0D,GAAW,GADLx1C,KAAK3e,eACkBL,KAClC,IAAM,CAAC,CACL,WAAWA,OACRsyD,EAAO6C,wBAA0B,OAG1C9lD,cAAc+lD,EAAWC,GACvB,MAAMP,EAAc91C,KAAK81C,YACrB,IAAAjwC,EAAQiwC,EAAY3nC,IAAIioC,GAKrB,OAJFvwC,IAASwwC,IACZxwC,EAAQ,IAAIwT,IACZy8B,EAAYn0C,IAAIy0C,EAAWvwC,IAEtBA,EAETxV,gBAAgB+lD,EAAWE,EAAUD,GAC7B,MAAAhyD,QAACA,OAAShD,GAAQ2e,KAClB6F,EAAQ7F,KAAKu2C,cAAcH,EAAWC,GACtCxwB,EAAShgB,EAAMsI,IAAImoC,GACzB,GAAIzwB,EACK,OAAAA,EAET,MAAMzY,EAAS,IAAIvhB,IACnByqD,EAAS7qD,SAAgBzI,IACnBozD,IACFhpC,EAAOthB,IAAIsqD,GACXpzD,EAAKyI,SAAQvH,GAAOwxD,GAAWtoC,EAAQgpC,EAAWlyD,MAEpDlB,EAAKyI,SAAQvH,GAAOwxD,GAAWtoC,EAAQ/oB,EAASH,KAChDlB,EAAKyI,SAAevH,GAAAwxD,GAAWtoC,EAAQ7L,GAAUlgB,IAAS,GAAI6C,KAC9DlB,EAAKyI,SAAQvH,GAAOwxD,GAAWtoC,EAAQrL,GAAU7d,KACjDlB,EAAKyI,SAAQvH,GAAOwxD,GAAWtoC,EAAQ5L,GAAatd,QAEhD,MAAAiE,EAAQ/G,MAAM2K,KAAKqhB,GAOlB,OANc,IAAjBjlB,EAAMlF,QACFkF,EAAA1C,KAAKnE,OAAOwC,OAAO,OAEvByxD,GAAWhvD,IAAI+vD,IACjBzwC,EAAMlE,IAAI20C,EAAUnuD,GAEfA,EAETkI,oBACQ,MAAAhM,QAACA,OAAShD,GAAQ2e,KACjB,MAAA,CACL3b,EACAkd,GAAUlgB,IAAS,GACnB0gB,GAASK,SAAS/gB,IAAS,GAC3B,CAACA,KAAAA,GACD0gB,GACAP,IAGJnR,oBAAoB+c,EAAQye,EAAOvpB,EAAS+K,EAAW,CAAC,KAChD,MAAAyI,EAAS,CAAC6M,SAAS,IACnBrS,SAACA,EAAUkmC,YAAAA,GAAeC,GAAYz2C,KAAK+1C,eAAgB3oC,EAAQC,GACzE,IAAIhpB,EAAUisB,EACV,GAsCR,SAAqBjC,EAAOwd,GACpB,MAAA/b,aAACA,EAAcK,YAAAA,GAAeT,GAAarB,GACjD,IAAA,MAAWjC,KAAQyf,EAAO,CACxB,MAAMjb,EAAad,EAAa1D,GAC1ByE,EAAYV,EAAY/D,GACxBlrB,GAAsB2vB,GAAAD,IAAevC,EAAMjC,GACjD,GAAKwE,IAA0B3qB,EAAA/E,IAAUw1D,GAAYx1D,KAC/C2vB,GAAa1vB,EAAQD,GAClB,OAAA,EAGJ,OAAA,EAjDDy1D,CAAYrmC,EAAUub,GAAQ,CAChC/V,EAAO6M,SAAU,EAGPt+B,EAAA8qB,GAAemB,EAFfhO,EAAArc,EAAWqc,GAAWA,IAAYA,EACxBtC,KAAKipB,eAAe7b,EAAQ9K,EAASk0C,IAG3D,IAAA,MAAWpqC,KAAQyf,EACjB/V,EAAO1J,GAAQ/nB,EAAQ+nB,GAElB,OAAA0J,EAETzlB,eAAe+c,EAAQ9K,EAAS+K,EAAW,CAAC,IAAKgC,GAC/C,MAAMiB,SAACA,GAAYmmC,GAAYz2C,KAAK+1C,eAAgB3oC,EAAQC,GAC5D,OAAO1rB,EAAS2gB,GACZ6M,GAAemB,EAAUhO,OAAS,EAAW+M,GAC7CiB,GAGR,SAAqBmmC,GAAAG,EAAexpC,EAAQC,GACtC,IAAAxH,EAAQ+wC,EAAczoC,IAAIf,GACzBvH,IACHA,EAAQ,IAAIwT,IACZu9B,EAAcj1C,IAAIyL,EAAQvH,IAE5B,MAAM4T,EAAWpM,EAAS2C,OACtB,IAAA6V,EAAShgB,EAAMsI,IAAIsL,GACvB,IAAKoM,EAAQ,CAEFA,EAAA,CACPvV,SAFenD,GAAgBC,EAAQC,GAGvCmpC,YAAanpC,EAASgD,YAAaxnB,EAAEsW,cAAc4P,SAAS,YAE9DlJ,EAAMlE,IAAI8X,EAAUoM,GAEf,OAAAA,EAET,MAAM6wB,GAAcx1D,GAASS,EAAST,IACjCI,OAAOkhC,oBAAoBthC,GAAOo+B,QAAO,CAACC,EAAKr7B,IAAQq7B,GAAOt5B,EAAW/E,EAAMgD,MAAO,GAiB3F,MAAM2yD,GAAkB,CAAC,MAAO,SAAU,OAAQ,QAAS,aAC3D,SAAAC,GAA8BjZ,EAAUvwC,GAC/B,MAAa,QAAbuwC,GAAmC,WAAbA,QAA0BgZ,GAAgB1yD,QAAQ05C,IAA6B,MAATvwC,EAErG,SAAAypD,GAAuBC,EAAIC,GAClB,OAAA,SAAS9wD,EAAGC,GACV,OAAAD,EAAE6wD,KAAQ5wD,EAAE4wD,GACf7wD,EAAE8wD,GAAM7wD,EAAE6wD,GACV9wD,EAAE6wD,GAAM5wD,EAAE4wD,IAGlB,SAAAE,GAA8B50C,GAC5B,MAAMC,EAAQD,EAAQC,MAChB40C,EAAmB50C,EAAMle,QAAQ4d,UACvCM,EAAM8+B,cAAc,eACpB/+C,EAAS60D,GAAoBA,EAAiBC,WAAY,CAAC90C,GAAUC,GAEvE,SAAA80C,GAA6B/0C,GAC3B,MAAMC,EAAQD,EAAQC,MAChB40C,EAAmB50C,EAAMle,QAAQ4d,UACvC3f,EAAS60D,GAAoBA,EAAiBG,WAAY,CAACh1C,GAAUC,GAEvE,SAAAg1C,GAAmBjxD,GASV,OARHwuB,MAAqC,iBAATxuB,EAC9BA,EAAOyuB,SAASyiC,eAAelxD,GACtBA,GAAQA,EAAKrD,SACtBqD,EAAOA,EAAK,IAEVA,GAAQA,EAAKogB,SACfpgB,EAAOA,EAAKogB,QAEPpgB,EAET,MAAMmxD,GAAY,GACZC,GAAYxzD,IAChB,MAAMwiB,EAAS6wC,GAAUrzD,GAClB,OAAA5C,OAAOwgB,OAAO21C,IAAWpnC,QAAQle,GAAMA,EAAEuU,SAAWA,IAAQmY,OAErE,SAAyB84B,GAAAvyD,EAAK0E,EAAOmjC,GAC7B,MAAAjqC,EAAO1B,OAAO0B,KAAKoC,GACzB,IAAA,MAAWlB,KAAOlB,EAAM,CACtB,MAAM40D,GAAU1zD,EAChB,GAAI0zD,GAAU9tD,EAAO,CACnB,MAAM5I,EAAQkE,EAAIlB,UACXkB,EAAIlB,IACP+oC,EAAO,GAAK2qB,EAAS9tD,KACvB1E,EAAIwyD,EAAS3qB,GAAQ/rC,KAc7B,MAAY22D,GACVxnD,YAAY/J,EAAMwxD,GAChB,MAAM11B,EAASpiB,KAAKoiB,OAAS,IAAIuzB,GAAOmC,GAClCC,EAAgBR,GAAUjxD,GAC1B0xD,EAAgBN,GAASK,GAC/B,GAAIC,EACI,MAAA,IAAIjoC,MACR,4CAA+CioC,EAAch3D,GAAK,kDAClBg3D,EAActxC,OAAO1lB,GAAK,oBAG9E,MAAMqD,EAAU+9B,EAAO6G,eAAe7G,EAAO61B,oBAAqBj4C,KAAK2G,cACvE3G,KAAKwC,SAAW,IAAY4f,EAAA5f,UA5dhC,SAAyBkE,GACvB,OAAKoO,MAAiD,oBAApBojC,iBAAmCxxC,aAAkBwxC,gBAC9E1I,GAEF2C,GAwdmCgG,CAAgBJ,IACxD/3C,KAAKwC,SAAS41C,aAAah2B,GAC3B,MAAM9f,EAAUtC,KAAKwC,SAAS61C,eAAeN,EAAe1zD,EAAQ+yB,aAC9D1Q,EAASpE,GAAWA,EAAQoE,OAC5BI,EAASJ,GAAUA,EAAOI,OAC1BpB,EAAQgB,GAAUA,EAAOhB,MAC/B1F,KAAKhf,GAAKD,IACVif,KAAKkD,IAAMZ,EACXtC,KAAK0G,OAASA,EACd1G,KAAK0F,MAAQA,EACb1F,KAAK8G,OAASA,EACd9G,KAAKs4C,SAAWj0D,EAChB2b,KAAKu4C,aAAev4C,KAAKoX,YACzBpX,KAAKsuC,QAAU,GACftuC,KAAKw4C,UAAY,GACjBx4C,KAAK+kB,aAAU,EACf/kB,KAAK8tC,MAAQ,GACb9tC,KAAKuG,6BAA0B,EAC/BvG,KAAKirB,eAAY,EACjBjrB,KAAK0e,QAAU,GACf1e,KAAKy4C,gBAAa,EAClBz4C,KAAK04C,WAAa,GAClB14C,KAAK24C,0BAAuB,EAC5B34C,KAAK44C,gBAAkB,GACvB54C,KAAKiE,OAAS,GACdjE,KAAK64C,SAAW,IAAI5F,GACpBjzC,KAAK6yC,SAAW,GAChB7yC,KAAK84C,eAAiB,GACtB94C,KAAK+4C,UAAW,EAChB/4C,KAAKmsB,yBAAsB,EAC3BnsB,KAAK2mB,cAAW,EAChB3mB,KAAKg5C,UDx5JT,SAAkBz2D,EAAIm+B,GAChB,IAAAu4B,EACJ,OAAO,YAAYz2D,GAOV,OANHk+B,GACWw4B,aAAAD,GACHA,EAAAE,WAAW52D,EAAIm+B,EAAOl+B,IAEhCD,EAAGG,MAAMsd,KAAMxd,GAEVk+B,GC+4JU04B,EAAS71C,GAAQvD,KAAKqjB,OAAO9f,IAAOlf,EAAQg1D,aAAe,GAC5Er5C,KAAKotB,aAAe,GACpBqqB,GAAUz3C,KAAKhf,IAAMgf,KAChBsC,GAAYoE,GAIR6W,GAAA+7B,OAAOt5C,KAAM,WAAYk3C,IACzB35B,GAAA+7B,OAAOt5C,KAAM,WAAYq3C,IAC7Br3C,KAAAu5C,cACDv5C,KAAK+4C,UACF/4C,KAAAqjB,UAPL3W,QAAQooC,MAAM,qEAOT19B,kBAIP,MAAO/yB,SAAS+yB,YAACA,sBAAa1T,GAAsBgC,MAAAA,EAAAoB,OAAOA,eAAQyxC,GAAgBv4C,KAC/E,OAAC/e,EAAcm2B,GAGf1T,GAAuB60C,EAClBA,EAEFzxC,EAASpB,EAAQoB,EAAS,KALxBsQ,EAKwBhS,WAGjC,OAAOpF,KAAKoiB,OAAOhd,KAAAA,SAEZA,GACPpF,KAAKoiB,OAAOhd,KAAOA,EAAA/gB,cAGnB,OAAO2b,KAAKs4C,SAAAj0D,YAEFA,GACV2b,KAAKoiB,OAAO/9B,QAAUA,EAExBgM,cASS,OARP2P,KAAKqhC,cAAc,cACfrhC,KAAK3b,QAAQ0f,WACV/D,KAAA8hB,SAEO/J,GAAA/X,KAAMA,KAAK3b,QAAQge,kBAE5BrC,KAAAw5C,aACLx5C,KAAKqhC,cAAc,aACZrhC,KAET3P,QAES,OADKoW,GAAAzG,KAAK0G,OAAQ1G,KAAKkD,KACvBlD,KAET3P,OAES,OADPktB,GAASga,KAAKv3B,MACPA,KAET3P,OAAOqV,EAAOoB,GACPyW,GAASiB,QAAQxe,MAGfA,KAAAy5C,kBAAoB,CAAC/zC,MAAAA,EAAOoB,OAAAA,GAFjC9G,KAAK05C,QAAQh0C,EAAOoB,GAKxBzW,QAAQqV,EAAOoB,GACb,MAAMziB,EAAU2b,KAAK3b,QACfqiB,EAAS1G,KAAK0G,OACd0Q,EAAc/yB,EAAQqf,qBAAuB1D,KAAKoX,YAClDuiC,EAAU35C,KAAKwC,SAASyU,eAAevQ,EAAQhB,EAAOoB,EAAQsQ,GAC9DwiC,EAAWv1D,EAAQge,kBAAoBrC,KAAKwC,SAASC,sBACrDc,EAAOvD,KAAK0F,MAAQ,SAAW,SACrC1F,KAAK0F,MAAQi0C,EAAQj0C,MACrB1F,KAAK8G,OAAS6yC,EAAQ7yC,OACtB9G,KAAKu4C,aAAev4C,KAAKoX,YACpBW,GAAY/X,KAAM45C,GAAU,KAG5B55C,KAAAqhC,cAAc,SAAU,CAACh7C,KAAMszD,IACpCr3D,EAAS+B,EAAQw1D,SAAU,CAAC75C,KAAM25C,GAAU35C,MACxCA,KAAK+4C,UACH/4C,KAAKg5C,UAAUz1C,IACZvD,KAAA85C,UAIXzpD,sBAGO1N,EAFWqd,KAAK3b,QACS4f,QAAU,IACpB,CAAC81C,EAAavS,KAChCuS,EAAY/4D,GAAKwmD,KAGrBn3C,sBACE,MAAMhM,EAAU2b,KAAK3b,QACf21D,EAAY31D,EAAQ4f,OACpBuhB,EAASxlB,KAAKiE,OACdg2C,EAAU34D,OAAO0B,KAAKwiC,GAAQlG,QAAO,CAACl6B,EAAKpE,KAC/CoE,EAAIpE,IAAM,EACHoE,IACN,IACH,IAAIuG,EAAQ,GACRquD,IACFruD,EAAQA,EAAMiiC,OACZtsC,OAAO0B,KAAKg3D,GAAWp2D,KAAK5C,IAC1B,MAAMuzD,EAAeyF,EAAUh5D,GACzBsM,EAAOgnD,GAActzD,EAAIuzD,GACzB2F,EAAoB,MAAT5sD,EACX6iC,EAAwB,MAAT7iC,EACd,MAAA,CACLjJ,QAASkwD,EACT4F,UAAWD,EAAW,YAAc/pB,EAAe,SAAW,OAC9DiqB,MAAOF,EAAW,eAAiB/pB,EAAe,WAAa,eAKlExtC,EAAAgJ,GAAQrF,IACX,MAAMiuD,EAAejuD,EAAKjC,QACpBrD,EAAKuzD,EAAavzD,GAClBsM,EAAOgnD,GAActzD,EAAIuzD,GACzB8F,EAAYp4D,EAAesyD,EAAalzD,KAAMiF,EAAK8zD,YAC3B,IAA1B7F,EAAa1W,UAA0BiZ,GAAqBvC,EAAa1W,SAAUvwC,KAAUwpD,GAAqBxwD,EAAK6zD,aACzH5F,EAAa1W,SAAWv3C,EAAK6zD,WAE/BF,EAAQj5D,IAAM,EACd,IAAIgjB,EAAQ,KACZ,GAAIhjB,KAAMwkC,GAAUA,EAAOxkC,GAAIK,OAASg5D,EACtCr2C,EAAQwhB,EAAOxkC,OACV,CAELgjB,EAAQ,IADWskC,GAASgS,SAASD,GAC7B,CAAe,CACrBr5D,GAAAA,EACAK,KAAMg5D,EACNn3C,IAAKlD,KAAKkD,IACVX,MAAOvC,OAETwlB,EAAOxhB,EAAMhjB,IAAMgjB,EAErBA,EAAMu2C,KAAKhG,EAAclwD,MAEtB1B,EAAAs3D,GAAS,CAACO,EAAYx5D,KACpBw5D,UACIh1B,EAAOxkC,MAGb2B,EAAA6iC,GAASxhB,IACJqqC,GAAA/rB,UAAUtiB,KAAMgE,EAAOA,EAAM3f,SACrCgqD,GAAQoM,OAAOz6C,KAAMgE,MAGzB3T,kBACE,MAAMqzB,EAAW1jB,KAAKw4C,UAChB1rB,EAAU9sB,KAAKoF,KAAKhD,SAASnf,OAC7B4pC,EAAUnJ,EAASzgC,OAEzB,GADAygC,EAASoK,MAAK,CAAC3nC,EAAGC,IAAMD,EAAE1C,MAAQ2C,EAAE3C,QAChCopC,EAAUC,EAAS,CACrB,IAAA,IAAShqC,EAAIgqC,EAAShqC,EAAI+pC,IAAW/pC,EACnCkd,KAAK06C,oBAAoB53D,GAElB4gC,EAAAl4B,OAAOshC,EAASD,EAAUC,GAErC9sB,KAAK44C,gBAAkBl1B,EAAShiC,MAAM,GAAGosC,KAAKipB,GAAc,QAAS,UAEvE1mD,8BACE,MAAOmoD,UAAW90B,EAAUte,MAAMhD,SAACA,IAAapC,KAC5C0jB,EAASzgC,OAASmf,EAASnf,eACtB+c,KAAK+kB,QAELrB,EAAAj4B,SAAQ,CAACqB,EAAMnC,KACmC,IAArDyX,EAASiO,QAAOrrB,GAAKA,IAAM8H,EAAKkqC,WAAU/zC,QAC5C+c,KAAK06C,oBAAoB/vD,MAI/B0F,2BACE,MAAMsqD,EAAiB,GACjBv4C,EAAWpC,KAAKoF,KAAKhD,SAC3B,IAAItf,EAAGO,EAEP,IADK2c,KAAA46C,8BACA93D,EAAI,EAAGO,EAAO+e,EAASnf,OAAQH,EAAIO,EAAMP,IAAK,CACjD,MAAMmkC,EAAU7kB,EAAStf,GACrB,IAAAgK,EAAOkT,KAAKgoB,eAAellC,GAC/B,MAAMzB,EAAO4lC,EAAQ5lC,MAAQ2e,KAAKoiB,OAAO/gC,KAWzC,GAVIyL,EAAKzL,MAAQyL,EAAKzL,OAASA,IAC7B2e,KAAK06C,oBAAoB53D,GACzBgK,EAAOkT,KAAKgoB,eAAellC,IAE7BgK,EAAKzL,KAAOA,EACZyL,EAAKuW,UAAY4jB,EAAQ5jB,WAAa+wC,GAAa/yD,EAAM2e,KAAK3b,SACzDyI,EAAA+tD,MAAQ5zB,EAAQ4zB,OAAS,EAC9B/tD,EAAKrJ,MAAQX,EACRgK,EAAA29B,MAAQ,GAAKxD,EAAQwD,MACrB39B,EAAAm1B,QAAUjiB,KAAK4zB,iBAAiB9wC,GACjCgK,EAAK+3B,WACP/3B,EAAK+3B,WAAWi2B,YAAYh4D,GAC5BgK,EAAK+3B,WAAWiC,iBACX,CACC,MAAAi0B,EAAkBzS,GAAS0S,cAAc35D,IACzConC,mBAACA,EAAAgD,gBAAoBA,GAAmB1pB,GAASK,SAAS/gB,GACzDC,OAAA+M,OAAO0sD,EAAgBx5D,UAAW,CACvCkqC,gBAAiB6c,GAASgB,WAAW7d,GACrChD,mBAAoBA,GAAsB6f,GAASgB,WAAW7gB,KAE3D37B,EAAA+3B,WAAa,IAAIk2B,EAAgB/6C,KAAMld,GAC5C63D,EAAel1D,KAAKqH,EAAK+3B,aAItB,OADF7kB,KAAAi7C,kBACEN,EAETtqD,iBACE1N,EAAKqd,KAAKoF,KAAKhD,UAAU,CAAC6kB,EAASzjC,KAC5Bwc,KAAAgoB,eAAexkC,GAAcqhC,WAAWoL,UAC5CjwB,MAEL3P,QACO2P,KAAAk7C,iBACLl7C,KAAKqhC,cAAc,SAErBhxC,OAAOkT,GACL,MAAM6e,EAASpiB,KAAKoiB,OACbA,EAAAiB,SACP,MAAMh/B,EAAU2b,KAAKs4C,SAAWl2B,EAAO6G,eAAe7G,EAAO61B,oBAAqBj4C,KAAK2G,cACjFw0C,EAAgBn7C,KAAKmsB,qBAAuB9nC,EAAQ4d,UAK1D,GAJKjC,KAAAo7C,gBACAp7C,KAAAq7C,sBACAr7C,KAAAs7C,uBACLt7C,KAAK64C,SAAS0C,cACuD,IAAjEv7C,KAAKqhC,cAAc,eAAgB,CAAC99B,KAAAA,EAAMgwC,YAAY,IACxD,OAEF,MAAMoH,EAAiB36C,KAAKw7C,2BAC5Bx7C,KAAKqhC,cAAc,wBACnB,IAAImN,EAAa,EACR,IAAA,IAAA1rD,EAAI,EAAGO,EAAO2c,KAAKoF,KAAKhD,SAASnf,OAAQH,EAAIO,EAAMP,IAAK,CACzD,MAAA+hC,WAACA,GAAc7kB,KAAKgoB,eAAellC,GACnCmtC,GAASkrB,IAAwD,IAAvCR,EAAex2D,QAAQ0gC,GACvDA,EAAW42B,sBAAsBxrB,GACjCue,EAAa/nD,KAAK6B,KAAKu8B,EAAWkG,iBAAkByjB,GAEtDA,EAAaxuC,KAAK07C,YAAcr3D,EAAQooD,OAAO2B,YAAcI,EAAa,EAC1ExuC,KAAK27C,cAAcnN,GACd2M,GACEx4D,EAAAg4D,GAAiB91B,IACTA,EAAAoL,WAGfjwB,KAAK47C,gBAAgBr4C,GAChBvD,KAAAqhC,cAAc,cAAe,CAAC99B,KAAAA,IAC9BvD,KAAAsuC,QAAQxgB,KAAKipB,GAAc,IAAK,SAC/B,MAAAr4B,QAACA,aAAS+5B,GAAcz4C,KAC1By4C,EACFz4C,KAAK67C,cAAcpD,GAAY,GACtB/5B,EAAQz7B,QACZ+c,KAAA87C,mBAAmBp9B,EAASA,GAAS,GAEvC1e,KAAA85C,SAEPzpD,gBACO1N,EAAAqd,KAAKiE,QAASD,IACjBqqC,GAAQ0N,UAAU/7C,KAAMgE,MAErBhE,KAAAg8C,sBACAh8C,KAAAi8C,sBAEP5rD,sBACE,MAAMhM,EAAU2b,KAAK3b,QACf63D,EAAiB,IAAIrwD,IAAIvK,OAAO0B,KAAKgd,KAAK04C,aAC1CyD,EAAY,IAAItwD,IAAIxH,EAAQse,QAC7Bzc,EAAUg2D,EAAgBC,MAAgBn8C,KAAK24C,uBAAyBt0D,EAAQ0f,aAC9E/D,KAAAo8C,eACAp8C,KAAAw5C,cAGTnpD,uBACE,MAAMyoD,eAACA,GAAkB94C,KACnBq8C,EAAUr8C,KAAKs8C,0BAA4B,GACjD,IAAA,MAAW96B,OAACA,EAAA13B,MAAQA,EAAOoD,MAAAA,KAAUmvD,EAAS,CAE5C1E,GAAgBmB,EAAgBhvD,EADR,oBAAX03B,GAAgCt0B,EAAQA,IAIzDmD,yBACE,MAAM+8B,EAAeptB,KAAKotB,aAC1B,IAAKA,IAAiBA,EAAanqC,OACjC,OAEF+c,KAAKotB,aAAe,GACd,MAAAmvB,EAAev8C,KAAKoF,KAAKhD,SAASnf,OAClCu5D,EAAW3Y,GAAQ,IAAIh4C,IAC3BuhC,EACG/c,WAAYle,EAAE,KAAO0xC,IACrBjgD,KAAI,CAACuO,EAAGrP,IAAMA,EAAI,IAAMqP,EAAE3G,OAAO,GAAGwkB,KAAK,QAExCysC,EAAYD,EAAQ,GAC1B,IAAA,IAAS15D,EAAI,EAAGA,EAAIy5D,EAAcz5D,IAChC,IAAKoD,EAAUu2D,EAAWD,EAAQ15D,IAChC,OAGG,OAAA1B,MAAM2K,KAAK0wD,GACf74D,QAASuO,EAAE7M,MAAM,OACjB1B,KAAIuC,IAAM,CAACq7B,OAAQr7B,EAAE,GAAI2D,OAAQ3D,EAAE,GAAI+G,OAAQ/G,EAAE,OAEtDkK,cAAcm+C,GACZ,IAA+D,IAA3DxuC,KAAKqhC,cAAc,eAAgB,CAACkS,YAAY,IAClD,OAEFlF,GAAQhrB,OAAOrjB,KAAMA,KAAK0F,MAAO1F,KAAK8G,OAAQ0nC,GAC9C,MAAMjmC,EAAOvI,KAAKirB,UACZyxB,EAASn0C,EAAK7C,OAAS,GAAK6C,EAAKzB,QAAU,EACjD9G,KAAKsuC,QAAU,GACV3rD,EAAAqd,KAAK8tC,OAAQx3B,IACZomC,GAA2B,cAAjBpmC,EAAIunB,WAGdvnB,EAAIgM,WACFhM,EAAAgM,YAEDtiB,KAAAsuC,QAAQ7oD,QAAQ6wB,EAAIg4B,cACxBtuC,MACHA,KAAKsuC,QAAQ7iD,SAAQ,CAACnF,EAAMqE,KAC1BrE,EAAKq2D,KAAOhyD,KAEdqV,KAAKqhC,cAAc,eAErBhxC,gBAAgBkT,GACd,IAA6E,IAAzEvD,KAAKqhC,cAAc,uBAAwB,CAAC99B,KAAAA,EAAMgwC,YAAY,IAAlE,CAGS,IAAA,IAAAzwD,EAAI,EAAGO,EAAO2c,KAAKoF,KAAKhD,SAASnf,OAAQH,EAAIO,IAAQP,EACvDkd,KAAAgoB,eAAellC,GAAG+hC,WAAWvC,YAE3B,IAAA,IAAAx/B,EAAI,EAAGO,EAAO2c,KAAKoF,KAAKhD,SAASnf,OAAQH,EAAIO,IAAQP,EAC5Dkd,KAAK48C,eAAe95D,EAAGmD,EAAWsd,GAAQA,EAAK,CAAC/f,aAAcV,IAAMygB,GAEjEvD,KAAAqhC,cAAc,sBAAuB,CAAC99B,KAAAA,KAE7ClT,eAAe1F,EAAO4Y,GACd,MAAAzW,EAAOkT,KAAKgoB,eAAer9B,GAC3BnI,EAAO,CAACsK,KAAAA,EAAMrJ,MAAAkH,EAAO4Y,KAAAA,EAAMgwC,YAAY,IACW,IAApDvzC,KAAKqhC,cAAc,sBAAuB7+C,KAG9CsK,EAAK+3B,WAAW1G,QAAQ5a,GACxB/gB,EAAK+wD,YAAa,EAClBvzC,KAAKqhC,cAAc,qBAAsB7+C,IAE3C6N,UACiE,IAA3D2P,KAAKqhC,cAAc,eAAgB,CAACkS,YAAY,MAGhDh2B,GAASh3B,IAAIyZ,MACXA,KAAK+4C,WAAax7B,GAASiB,QAAQxe,OACrCud,GAASzzB,MAAMkW,OAGZA,KAAA8e,OACLo4B,GAAqB,CAAC30C,MAAOvC,SAGjC3P,OACM,IAAAvN,EACJ,GAAIkd,KAAKy5C,kBAAmB,CACpB,MAAA/zC,MAACA,EAAOoB,OAAAA,GAAU9G,KAAKy5C,kBAC7Bz5C,KAAK05C,QAAQh0C,EAAOoB,GACpB9G,KAAKy5C,kBAAoB,KAG3B,GADKz5C,KAAAi2C,QACDj2C,KAAK0F,OAAS,GAAK1F,KAAK8G,QAAU,EACpC,OAEF,IAA6D,IAAzD9G,KAAKqhC,cAAc,aAAc,CAACkS,YAAY,IAChD,OAEF,MAAMsJ,EAAS78C,KAAKsuC,QACf,IAAAxrD,EAAI,EAAGA,EAAI+5D,EAAO55D,QAAU45D,EAAO/5D,GAAGukD,GAAK,IAAKvkD,EAC5C+5D,EAAA/5D,GAAGg8B,KAAK9e,KAAKirB,WAGtB,IADKjrB,KAAA88C,gBACEh6D,EAAI+5D,EAAO55D,SAAUH,EACnB+5D,EAAA/5D,GAAGg8B,KAAK9e,KAAKirB,WAEtBjrB,KAAKqhC,cAAc,aAErBhxC,uBAAuBozB,GACrB,MAAMC,EAAW1jB,KAAK44C,gBAChB9iC,EAAS,GACf,IAAIhzB,EAAGO,EACF,IAAAP,EAAI,EAAGO,EAAOqgC,EAASzgC,OAAQH,EAAIO,IAAQP,EAAG,CACjD,MAAMgK,EAAO42B,EAAS5gC,GACjB2gC,IAAiB32B,EAAKm1B,SACzBnM,EAAOrwB,KAAKqH,GAGT,OAAAgpB,EAETzlB,+BACE,OAAO2P,KAAK2jB,wBAAuB,GAErCtzB,gBACE,IAAqE,IAAjE2P,KAAKqhC,cAAc,qBAAsB,CAACkS,YAAY,IACxD,OAEF,MAAM7vB,EAAW1jB,KAAKunC,+BACtB,IAAA,IAASzkD,EAAI4gC,EAASzgC,OAAS,EAAGH,GAAK,IAAKA,EAC1Ckd,KAAK+8C,aAAar5B,EAAS5gC,IAE7Bkd,KAAKqhC,cAAc,qBAErBhxC,aAAavD,GACX,MAAMoW,EAAMlD,KAAKkD,IACX4F,EAAOhc,EAAK69B,MACZqyB,GAAWl0C,EAAK8hB,SAChBriB,EAAOvI,KAAKirB,UACZzoC,EAAO,CACXsK,KAAAA,EACArJ,MAAOqJ,EAAKrJ,MACZ8vD,YAAY,IAEwC,IAAlDvzC,KAAKqhC,cAAc,oBAAqB7+C,KAGxCw6D,GACFn0C,GAAS3F,EAAK,CACZuF,MAAoB,IAAdK,EAAKL,KAAiB,EAAIF,EAAKE,KAAOK,EAAKL,KACjDC,OAAsB,IAAfI,EAAKJ,MAAkB1I,KAAK0F,MAAQ6C,EAAKG,MAAQI,EAAKJ,MAC7DC,KAAkB,IAAbG,EAAKH,IAAgB,EAAIJ,EAAKI,IAAMG,EAAKH,IAC9CC,QAAwB,IAAhBE,EAAKF,OAAmB5I,KAAK8G,OAASyB,EAAKK,OAASE,EAAKF,SAGrE9b,EAAK+3B,WAAW/F,OACZk+B,GACSj0C,GAAA7F,GAEb1gB,EAAK+wD,YAAa,EAClBvzC,KAAKqhC,cAAc,mBAAoB7+C,IAEzC6N,cAAciY,GACZ,OAAOD,GAAeC,EAAOtI,KAAKirB,UAAWjrB,KAAK07C,aAEpDrrD,0BAA0BzH,EAAG2a,EAAMlf,EAAS80C,GACpC,MAAA3X,EAASkqB,GAAYC,MAAMpoC,GAC7B,MAAkB,mBAAXie,EACFA,EAAOxhB,KAAMpX,EAAGvE,EAAS80C,GAE3B,GAET9oC,eAAe7M,GACP,MAAAyjC,EAAUjnB,KAAKoF,KAAKhD,SAAS5e,GAC7BkgC,EAAW1jB,KAAKw4C,UACtB,IAAI1rD,EAAO42B,EAASrT,WAAYrrB,GAAKA,EAAEgyC,WAAa/P,IAASpI,MAkBtD,OAjBF/xB,IACIA,EAAA,CACLzL,KAAM,KACN+jB,KAAM,GACN6hB,QAAS,KACTpC,WAAY,KACZoF,OAAQ,KACR5C,QAAS,KACTE,QAAS,KACTszB,MAAO5zB,GAAWA,EAAQ4zB,OAAS,EACnCp3D,MAAOD,EACPwzC,SAAU/P,EACV55B,QAAS,GACTF,SAAS,GAEXu2B,EAASj+B,KAAKqH,IAETA,EAETuD,aACS,OAAA2P,KAAK2mB,WAAkB3mB,KAAA2mB,SAAW1Z,GAAc,KAAM,CAAC1K,MAAOvC,KAAM3e,KAAM,WAEnFgP,yBACE,OAAO2P,KAAKunC,+BAA+BtkD,OAE7CoN,iBAAiB7M,GACT,MAAAyjC,EAAUjnB,KAAKoF,KAAKhD,SAAS5e,GACnC,IAAKyjC,EACI,OAAA,EAEH,MAAAn6B,EAAOkT,KAAKgoB,eAAexkC,GAC1B,MAAuB,kBAAhBsJ,EAAKm9B,QAAwBn9B,EAAKm9B,QAAUhD,EAAQgD,OAEpE55B,qBAAqB7M,EAAcy+B,GACpBjiB,KAAKgoB,eAAexkC,GAC5BymC,QAAUhI,EAEjB5xB,qBAAqB1F,GACnBqV,KAAK84C,eAAenuD,IAAUqV,KAAK84C,eAAenuD,GAEpD0F,kBAAkB1F,GACT,OAACqV,KAAK84C,eAAenuD,GAE9B0F,kBAAkB7M,EAAc4nC,EAAWnJ,GACnC,MAAA1e,EAAO0e,EAAU,OAAS,OAC1Bn1B,EAAOkT,KAAKgoB,eAAexkC,GAC3Bo6B,EAAQ9wB,EAAK+3B,WAAW4H,wBAAmB,EAAWlpB,GACxDvd,EAAQolC,IACLt+B,EAAAsY,KAAKgmB,GAAWnB,QAAUhI,EAC1BjiB,KAAAqjB,WAELrjB,KAAKi9C,qBAAqBz5D,EAAcy+B,GAClCrE,EAAAyF,OAAOv2B,EAAM,CAACm1B,QAAAA,IACpBjiB,KAAKqjB,QAAQngB,GAAQA,EAAI1f,eAAiBA,EAAe+f,OAAO,KAGpElT,KAAK7M,EAAc4nC,GACZprB,KAAAk9C,kBAAkB15D,EAAc4nC,GAAW,GAElD/6B,KAAK7M,EAAc4nC,GACZprB,KAAAk9C,kBAAkB15D,EAAc4nC,GAAW,GAElD/6B,oBAAoB7M,GACZ,MAAAsJ,EAAOkT,KAAKw4C,UAAUh1D,GACxBsJ,GAAQA,EAAK+3B,YACf/3B,EAAK+3B,WAAWs4B,kBAEXn9C,KAAKw4C,UAAUh1D,GAExB6M,QACE,IAAIvN,EAAGO,EAGF,IAFA2c,KAAAu3B,OACLha,GAAS6/B,OAAOp9C,MACXld,EAAI,EAAGO,EAAO2c,KAAKoF,KAAKhD,SAASnf,OAAQH,EAAIO,IAAQP,EACxDkd,KAAK06C,oBAAoB53D,GAG7BuN,UACE2P,KAAKqhC,cAAc,iBACb,MAAA36B,OAACA,MAAQxD,GAAOlD,KACjBA,KAAAq9C,QACLr9C,KAAKoiB,OAAO4zB,aACRtvC,IACG1G,KAAAo8C,eACL31C,GAAYC,EAAQxD,GACpBlD,KAAKwC,SAAS86C,eAAep6C,GAC7BlD,KAAK0G,OAAS,KACd1G,KAAKkD,IAAM,MAEblD,KAAKqhC,cAAc,kBACZoW,GAAUz3C,KAAKhf,IACtBgf,KAAKqhC,cAAc,gBAErBhxC,iBAAiB7N,GACR,OAAAwd,KAAK0G,OAAO62C,aAAa/6D,GAElC6N,aACO2P,KAAAw9C,iBACDx9C,KAAK3b,QAAQ0f,WACV/D,KAAAy9C,uBAELz9C,KAAK+4C,UAAW,EAGpB1oD,iBACE,MAAM9E,EAAYyU,KAAK04C,WACjBl2C,EAAWxC,KAAKwC,SAChBk7C,EAAO,CAACr8D,EAAMs8D,KACTn7C,EAAAiW,iBAAiBzY,KAAM3e,EAAMs8D,GACtCpyD,EAAUlK,GAAQs8D,GAEdvyD,EAAW,CAACxC,EAAG5D,EAAGE,KACtB0D,EAAE4tB,QAAUxxB,EACZ4D,EAAE6tB,QAAUvxB,EACZ8a,KAAK67C,cAAcjzD,IAErBjG,EAAKqd,KAAK3b,QAAQse,QAASthB,GAASq8D,EAAKr8D,EAAM+J,KAEjDiF,uBACO2P,KAAK24C,uBACR34C,KAAK24C,qBAAuB,IAE9B,MAAMptD,EAAYyU,KAAK24C,qBACjBn2C,EAAWxC,KAAKwC,SAChBk7C,EAAO,CAACr8D,EAAMs8D,KACTn7C,EAAAiW,iBAAiBzY,KAAM3e,EAAMs8D,GACtCpyD,EAAUlK,GAAQs8D,GAEdC,EAAU,CAACv8D,EAAMs8D,KACjBpyD,EAAUlK,KACHmhB,EAAAkW,oBAAoB1Y,KAAM3e,EAAMs8D,UAClCpyD,EAAUlK,KAGf+J,EAAW,CAACsa,EAAOoB,KACnB9G,KAAK0G,QACP1G,KAAK8hB,OAAOpc,EAAOoB,IAGnB,IAAA+2C,EACJ,MAAM9E,EAAW,KACf6E,EAAQ,SAAU7E,GAClB/4C,KAAK+4C,UAAW,EACX/4C,KAAA8hB,SACL47B,EAAK,SAAUtyD,GACfsyD,EAAK,SAAUG,IAEjBA,EAAW,KACT79C,KAAK+4C,UAAW,EAChB6E,EAAQ,SAAUxyD,GACb4U,KAAAq9C,QACLr9C,KAAK05C,QAAQ,EAAG,GAChBgE,EAAK,SAAU3E,IAEbv2C,EAASs7C,WAAW99C,KAAK0G,QAC3BqyC,IAEA8E,IAGJxtD,eACE1N,EAAKqd,KAAK04C,YAAY,CAACttD,EAAU/J,KAC1B2e,KAAAwC,SAASkW,oBAAoB1Y,KAAM3e,EAAM+J,MAEhD4U,KAAK04C,WAAa,GAClB/1D,EAAKqd,KAAK24C,sBAAsB,CAACvtD,EAAU/J,KACpC2e,KAAAwC,SAASkW,oBAAoB1Y,KAAM3e,EAAM+J,MAEhD4U,KAAK24C,0BAAuB,EAE9BtoD,iBAAiB1E,EAAO4X,EAAMu3B,GACtB,MAAAxsB,EAASwsB,EAAU,MAAQ,SAC7B,IAAAhuC,EAAMxG,EAAMxD,EAAGO,EAKd,IAJQ,YAATkgB,IACKzW,EAAAkT,KAAKgoB,eAAer8B,EAAM,GAAGnI,cAC/BsJ,EAAA+3B,WAAW,IAAMvW,EAAS,wBAE5BxrB,EAAI,EAAGO,EAAOsI,EAAM1I,OAAQH,EAAIO,IAAQP,EAAG,CAC9CwD,EAAOqF,EAAM7I,GACb,MAAM+hC,EAAav+B,GAAQ0Z,KAAKgoB,eAAe1hC,EAAK9C,cAAcqhC,WAC9DA,GACFA,EAAWvW,EAAS,cAAchoB,EAAKmvB,QAASnvB,EAAK9C,aAAc8C,EAAK7C,QAI9E4M,oBACE,OAAO2P,KAAK0e,SAAW,GAEzBruB,kBAAkB0tD,GACV,MAAAC,EAAah+C,KAAK0e,SAAW,GAC7BmD,EAASk8B,EAAen6D,KAAI,EAAEJ,aAAAA,EAAcC,MAAWkH,MACrD,MAAAmC,EAAOkT,KAAKgoB,eAAexkC,GACjC,IAAKsJ,EACG,MAAA,IAAIijB,MAAM,6BAA+BvsB,GAE1C,MAAA,CACLA,aAAAA,EACAiyB,QAAS3oB,EAAKsY,KAAKza,GACnBlH,MAAAkH,OAGazH,EAAe2+B,EAAQm8B,KAEtCh+C,KAAK0e,QAAUmD,EACf7hB,KAAKy4C,WAAa,KAClBz4C,KAAK87C,mBAAmBj6B,EAAQm8B,IAGpC3tD,cAAc8iD,EAAM3wD,EAAM6tB,GACxB,OAAOrQ,KAAK64C,SAASoF,OAAOj+C,KAAMmzC,EAAM3wD,EAAM6tB,GAEhDhgB,mBAAmBwxB,EAAQm8B,EAAYE,GAC/B,MAAAC,EAAen+C,KAAK3b,QAAQ2e,MAC5Bs4B,EAAO,CAACn1C,EAAGC,IAAMD,EAAEkqB,QAAYrrB,IAACoB,EAAE8tD,SAAUlvD,EAAExB,eAAiB0B,EAAE1B,cAAgBwB,EAAEvB,QAAUyB,EAAEzB,UAC/F26D,EAAc9iB,EAAK0iB,EAAYn8B,GAC/Bw8B,EAAYH,EAASr8B,EAASyZ,EAAKzZ,EAAQm8B,GAC7CI,EAAYn7D,QACT+c,KAAAs+C,iBAAiBF,EAAaD,EAAa56C,MAAM,GAEpD86C,EAAUp7D,QAAUk7D,EAAa56C,MAC9BvD,KAAAs+C,iBAAiBD,EAAWF,EAAa56C,MAAM,GAGxDlT,cAAczH,EAAGs1D,GACf,MAAM17D,EAAO,CACX28B,MAAOv2B,EACPs1D,OAAAA,EACA3K,YAAY,EACZgL,YAAav+C,KAAKyqC,cAAc7hD,IAE5B41D,EAAelL,IAAmBA,EAAAjvD,QAAQse,QAAU3C,KAAK3b,QAAQse,QAAQoM,SAASnmB,EAAEopD,OAAO3wD,MACjG,IAA6D,IAAzD2e,KAAKqhC,cAAc,cAAe7+C,EAAMg8D,GAC1C,OAEF,MAAMpwD,EAAU4R,KAAKy+C,aAAa71D,EAAGs1D,EAAQ17D,EAAK+7D,aAM3C,OALP/7D,EAAK+wD,YAAa,EACbvzC,KAAAqhC,cAAc,aAAc7+C,EAAMg8D,IACnCpwD,GAAW5L,EAAK4L,UACb4R,KAAA85C,SAEA95C,KAET3P,aAAazH,EAAGs1D,EAAQK,GACtB,MAAO7/B,QAASs/B,EAAa,GAAA35D,QAAIA,GAAW2b,KACtCm5B,EAAmB+kB,EACnBr8B,EAAS7hB,KAAK0+C,mBAAmB91D,EAAGo1D,EAAYO,EAAaplB,GAC7DwlB,EDh0LV,SAAuB/1D,GACrB,MAAkB,YAAXA,EAAEvH,MAAiC,UAAXuH,EAAEvH,MAA+B,gBAAXuH,EAAEvH,KC+zLrCu9D,CAAch2D,GACxBi2D,EA7uBV,SAA4Bj2D,EAAGi2D,EAAWN,EAAaI,GACrD,OAAKJ,GAA0B,aAAX31D,EAAEvH,KAGlBs9D,EACKE,EAEFj2D,EALE,KA2uBWk2D,CAAmBl2D,EAAGoX,KAAKy4C,WAAY8F,EAAaI,GAClEJ,IACFv+C,KAAKy4C,WAAa,KAClBn2D,EAAS+B,EAAQsf,QAAS,CAAC/a,EAAGi5B,EAAQ7hB,MAAOA,MACzC2+C,GACFr8D,EAAS+B,EAAQuf,QAAS,CAAChb,EAAGi5B,EAAQ7hB,MAAOA,OAG3C,MAAA5R,GAAWlL,EAAe2+B,EAAQm8B,GAMjC,OALH5vD,GAAW8vD,KACbl+C,KAAK0e,QAAUmD,EACV7hB,KAAA87C,mBAAmBj6B,EAAQm8B,EAAYE,IAE9Cl+C,KAAKy4C,WAAaoG,EACXzwD,EAETiC,mBAAmBzH,EAAGo1D,EAAYO,EAAaplB,GACzC,GAAW,aAAXvwC,EAAEvH,KACG,MAAA,GAET,IAAKk9D,EACI,OAAAP,EAEH,MAAAG,EAAen+C,KAAK3b,QAAQ2e,MAClC,OAAOhD,KAAK++C,0BAA0Bn2D,EAAGu1D,EAAa56C,KAAM46C,EAAchlB,IAG9E,MAAM6lB,GAAoB,IAAMr8D,EAAKk1D,GAAMJ,WAAYl1C,GAAUA,EAAMs2C,SAAS0C,eA2ChF,SAAiB0D,GAAA/7C,EAAKuS,EAASkf,GAC7B,MAAMD,WAACA,EAAYwqB,YAAAA,EAAAl6D,EAAaA,EAAGE,EAAAA,EAAAsuC,YAAGA,cAAaD,GAAe9d,EAClE,IAAI0pC,EAAcD,EAAc1rB,EAC5BtwB,EAAAwE,YACJxE,EAAI0E,IAAI5iB,EAAGE,EAAGsuC,EAAakB,EAAayqB,EAAaxqB,EAAWwqB,GAC5D5rB,EAAc2rB,GAChBC,EAAcD,EAAc3rB,EAC5BrwB,EAAI0E,IAAI5iB,EAAGE,EAAGquC,EAAaoB,EAAWwqB,EAAazqB,EAAayqB,GAAa,IAE7Ej8C,EAAI0E,IAAI5iB,EAAGE,EAAGg6D,EAAavqB,EAAW5tC,EAAS2tC,EAAa3tC,GAE1Dmc,EAAA2E,YACA3E,EAAA4F,OAKN,SAA6Bs2C,GAAAx3C,EAAK2rB,EAAaC,EAAa6rB,GACpD,MAAAp6D,EAHC+mB,GAGmBpE,EAAIvjB,QAAQi7D,aAHN,CAAC,aAAc,WAAY,aAAc,aAInE,MAAAC,KAA+BhsB,GAAe,EAC9CisB,EAAa/4D,KAAK4B,IAAIk3D,EAAeF,EAAa9rB,EAAc,GAChEksB,EAAqB3+C,IACzB,MAAM4+C,GAA+BlsB,EAAA/sC,KAAK4B,IAAIk3D,EAAez+C,IAAQu+C,EAAa,EAClF,OAAO/0D,GAAYwW,EAAK,EAAGra,KAAK4B,IAAIk3D,EAAeG,KAE9C,MAAA,CACLC,WAAYF,EAAkBx6D,EAAE06D,YAChCC,SAAUH,EAAkBx6D,EAAE26D,UAC9BC,WAAYv1D,GAAYrF,EAAE46D,WAAY,EAAGL,GACzCM,SAAUx1D,GAAYrF,EAAE66D,SAAU,EAAGN,IAGzC,SAAoBO,GAAArtD,EAAGstD,EAAOh7D,EAAGE,GACxB,MAAA,CACLF,EAAGA,EAAI0N,EAAIjM,KAAKiJ,IAAIswD,GACpB96D,EAAGA,EAAIwN,EAAIjM,KAAKgI,IAAIuxD,IAGxB,SAAAC,GAAiB/8C,EAAKuS,EAASsd,EAAQiB,EAASjqC,EAAK4uC,GACnD,MAAM3zC,EAACA,EAAGE,EAAAA,EAAGwvC,WAAY5qC,EAAOo1D,YAAAA,EAAa3rB,YAAa2sB,GAAUzqC,EAC9D+d,EAAc/sC,KAAK6B,IAAImtB,EAAQ+d,YAAcQ,EAAUjB,EAASmsB,EAAa,GAC7E3rB,EAAc2sB,EAAS,EAAIA,EAASlsB,EAAUjB,EAASmsB,EAAc,EAC3E,IAAIiB,EAAgB,EACpB,MAAMC,EAAQr2D,EAAMD,EACpB,GAAIkqC,EAAS,CACX,MAEMqsB,IAFuBH,EAAS,EAAIA,EAASlsB,EAAU,IAChCR,EAAc,EAAIA,EAAcQ,EAAU,IACI,EAE3EmsB,MAD6C,IAAvBE,EAA4BD,EAAQC,KAA4CrsB,GAAWosB,IACvE,EAE5C,MACME,KADO75D,KAAK6B,IAAI,KAAO83D,EAAQ5sB,EAAcT,EAASvsC,GAAMgtC,GAC7B,EAC/BkB,EAAa5qC,EAAQw2D,EAAcH,EACnCxrB,EAAW5qC,EAAMu2D,EAAcH,GAC/BR,WAACA,WAAYC,EAAUC,WAAAA,EAAAC,SAAYA,GAAYV,GAAoB3pC,EAAS8d,EAAaC,EAAamB,EAAWD,GACjH6rB,EAA2B/sB,EAAcmsB,EACzCa,EAAyBhtB,EAAcosB,EACvCa,EAA0B/rB,EAAairB,EAAaY,EACpDG,EAAwB/rB,EAAWirB,EAAWY,EAC9CG,EAA2BptB,EAAcssB,EACzCe,EAAyBrtB,EAAcusB,EACvCe,EAA0BnsB,EAAamrB,EAAac,EACpDG,EAAwBnsB,EAAWmrB,EAAWc,EAEpD,GADI19C,EAAAwE,YACAixB,EAAU,CAEZ,GADAz1B,EAAI0E,IAAI5iB,EAAGE,EAAGsuC,EAAaitB,EAAyBC,GAChDd,EAAW,EAAG,CAChB,MAAMmB,EAAUhB,GAAWS,EAAwBE,EAAuB17D,EAAGE,GAC7Ege,EAAI0E,IAAIm5C,EAAQ/7D,EAAG+7D,EAAQ77D,EAAG06D,EAAUc,EAAuB/rB,EAAW5tC,GAE5E,MAAMi6D,EAAKjB,GAAWa,EAAwBjsB,EAAU3vC,EAAGE,GAE3D,GADIge,EAAA6E,OAAOi5C,EAAGh8D,EAAGg8D,EAAG97D,GAChB46D,EAAW,EAAG,CAChB,MAAMiB,EAAUhB,GAAWa,EAAwBE,EAAuB97D,EAAGE,GACzEge,EAAA0E,IAAIm5C,EAAQ/7D,EAAG+7D,EAAQ77D,EAAG46D,EAAUnrB,EAAW5tC,EAAS+5D,EAAwBr6D,KAAKD,IAG3F,GADI0c,EAAA0E,IAAI5iB,EAAGE,EAAGquC,EAAaoB,EAAYmrB,EAAWvsB,EAAcmB,EAAcmrB,EAAatsB,GAAc,GACrGssB,EAAa,EAAG,CAClB,MAAMkB,EAAUhB,GAAWY,EAA0BE,EAAyB77D,EAAGE,GAC7Ege,EAAA0E,IAAIm5C,EAAQ/7D,EAAG+7D,EAAQ77D,EAAG26D,EAAYgB,EAA0Bp6D,KAAKD,GAAIkuC,EAAa3tC,GAE5F,MAAMk6D,EAAKlB,GAAWQ,EAA0B7rB,EAAY1vC,EAAGE,GAE/D,GADIge,EAAA6E,OAAOk5C,EAAGj8D,EAAGi8D,EAAG/7D,GAChBy6D,EAAa,EAAG,CAClB,MAAMoB,EAAUhB,GAAWQ,EAA0BE,EAAyBz7D,EAAGE,GACjFge,EAAI0E,IAAIm5C,EAAQ/7D,EAAG+7D,EAAQ77D,EAAGy6D,EAAYjrB,EAAa3tC,EAAS05D,QAE7D,CACLv9C,EAAI4E,OAAO9iB,EAAGE,GACd,MAAMg8D,EAAcz6D,KAAKiJ,IAAI+wD,GAA2BjtB,EAAcxuC,EAChEm8D,EAAc16D,KAAKgI,IAAIgyD,GAA2BjtB,EAActuC,EACtEge,EAAI6E,OAAOm5C,EAAaC,GACxB,MAAMC,EAAY36D,KAAKiJ,IAAIgxD,GAAyBltB,EAAcxuC,EAC5Dq8D,EAAY56D,KAAKgI,IAAIiyD,GAAyBltB,EAActuC,EAClEge,EAAI6E,OAAOq5C,EAAWC,GAEpBn+C,EAAA2E,YAwCN,SAAAk0B,GAAoB74B,EAAKuS,EAASsd,EAAQiB,EAASW,EAAUgE,GAC3D,MAAMt0C,QAACA,GAAWoxB,GACZtN,YAACA,kBAAamV,GAAmBj5B,EACjCi9D,EAAgC,UAAxBj9D,EAAQgyC,YACjBluB,IAGDm5C,GACFp+C,EAAIqH,UAA0B,EAAdpC,EAChBjF,EAAIq+C,SAAWjkC,GAAmB,UAElCpa,EAAIqH,UAAYpC,EAChBjF,EAAIq+C,SAAWjkC,GAAmB,SAEhC7H,EAAQ+rC,aAjCd,SAA+Bt+C,EAAKuS,EAAS6rC,GAC3C,MAAMt8D,EAACA,EAAAE,EAAGA,EAAGwvC,WAAAA,EAAAwqB,YAAYA,cAAasC,GAAe/rC,EAC/C+d,EAAc/sC,KAAK6B,IAAImtB,EAAQ+d,YAAc0rB,EAAa,GAC1D3rB,EAAc9d,EAAQ8d,YAAc2rB,EACtC,IAAAp8D,EAMJ,IALIw+D,GACMrC,GAAA/7C,EAAKuS,EAASif,EAAahuC,GAEjCwc,EAAAwE,YACJxE,EAAI0E,IAAI5iB,EAAGE,EAAGquC,EAAamB,EAAahuC,EAAKguC,GAAY,GACpD5xC,EAAI,EAAGA,EAAI0+D,IAAe1+D,EACzBogB,EAAAkF,SAIN,IAFIlF,EAAAwE,YACJxE,EAAI0E,IAAI5iB,EAAGE,EAAGsuC,EAAakB,EAAYA,EAAahuC,GAC/C5D,EAAI,EAAGA,EAAI0+D,IAAe1+D,EACzBogB,EAAAkF,SAkBJq5C,CAAsBv+C,EAAKuS,EAAS6rC,GAElCA,GACFrC,GAAQ/7C,EAAKuS,EAASkf,GAExBsrB,GAAQ/8C,EAAKuS,EAASsd,EAAQiB,EAASW,EAAUgE,GAC7Cz1B,EAAAkF,UAvMN9mB,OAAOqjB,iBAAiBkzC,GAAO,CAC7B91C,SAAU,CACR8C,WAHe,KAIf3jB,MAAO6gB,IAET01C,UAAW,CACT5yC,WAPe,KAQf3jB,MAAOu2D,IAETl2C,UAAW,CACTsD,WAXe,KAYf3jB,MAAOqgB,IAET+mC,SAAU,CACRzjC,WAfe,KAgBf3jB,MAAOonD,IAEToZ,QAAS,CACP78C,WAnBe,KAoBf3jB,MAl1BU,SAo1BZw2D,SAAU,CACR7yC,WAvBe,KAwBf3jB,MAAOw2D,IAET5P,SAAU,CACRjjC,WA3Be,KA4Bf3jB,MAAO,IAAIyK,KACT28C,GAASx8C,OAAOH,GAChBqzD,OAGJ2C,WAAY,CACV98C,WAlCe,KAmCf3jB,MAAO,IAAIyK,KACT28C,GAAS8U,UAAUzxD,GACnBqzD,SAqKN,MAAA4C,WAAyB1oB,GACvB7oC,YAAY+vB,GACV2P,QACA/vB,KAAK3b,aAAU,EACf2b,KAAK2zB,mBAAgB,EACrB3zB,KAAK00B,gBAAa,EAClB10B,KAAK20B,cAAW,EAChB30B,KAAKuzB,iBAAc,EACnBvzB,KAAKwzB,iBAAc,EACnBxzB,KAAKk/C,YAAc,EACnBl/C,KAAKwhD,YAAc,EACfphC,GACF9+B,OAAO+M,OAAO2R,KAAMogB,GAGxB/vB,QAAQwxD,EAAQC,EAAQ3oB,GACtB,MAAM7wB,EAAQtI,KAAKo5B,SAAS,CAAC,IAAK,KAAMD,IAClC9vC,MAACA,WAAOE,GAAYT,EAAkBwf,EAAO,CAACtjB,EAAG68D,EAAQ38D,EAAG48D,KAC5DptB,WAACA,EAAYC,SAAAA,EAAApB,YAAUA,cAAaC,EAAaG,cAAAA,GAAiB3zB,KAAKo5B,SAAS,CACpF,aACA,WACA,cACA,cACA,iBACCD,GACG4oB,EAAU/hD,KAAK3b,QAAQ2vC,QAAU,EAEjCguB,EADiB//D,EAAe0xC,EAAegB,EAAWD,IACxBhuC,GAAOmD,GAAcR,EAAOqrC,EAAYC,GAC1EstB,EAAe13D,GAAWhB,EAAUgqC,EAAcwuB,EAASvuB,EAAcuuB,GAC/E,OAAQC,GAAiBC,EAE3B5xD,eAAe8oC,GACP,MAAAn0C,EAACA,IAAGE,EAAGwvC,WAAAA,EAAAC,SAAYA,cAAUpB,EAAaC,YAAAA,GAAexzB,KAAKo5B,SAAS,CAC3E,IACA,IACA,aACA,WACA,cACA,cACA,iBACCD,IACGpG,OAACA,EAAQiB,QAAAA,GAAWh0B,KAAK3b,QACzB69D,KAA0BvtB,GAAY,EACtCwtB,GAAc5uB,EAAcC,EAAcQ,EAAUjB,GAAU,EAC7D,MAAA,CACL/tC,EAAGA,EAAIyB,KAAKiJ,IAAIwyD,GAAaC,EAC7Bj9D,EAAGA,EAAIuB,KAAKgI,IAAIyzD,GAAaC,GAGjC9xD,gBAAgB8oC,GACd,OAAOn5B,KAAKorC,eAAejS,GAE7B9oC,KAAK6S,GACG,MAAA7e,QAACA,gBAASsvC,GAAiB3zB,KAC3B+yB,GAAkB1uC,EAAA0uC,QAAU,GAAK,EACjCiB,GAAmB3vC,EAAA2vC,SAAW,GAAK,EACnC2E,EAAWt0C,EAAQs0C,SAGzB,GAFA34B,KAAKk/C,YAAuC,UAAxB76D,EAAQgyC,YAA2B,IAAO,EAC9Dr2B,KAAKwhD,YAAc7tB,EAAgBjtC,EAAMD,KAAKkB,MAAMgsC,EAAgBjtC,GAAO,EACrD,IAAlBitC,GAAuB3zB,KAAKuzB,YAAc,GAAKvzB,KAAKwzB,YAAc,EACpE,OAEEtwB,EAAA6C,OACJ,IAAIq8C,EAAe,EACnB,GAAIrvB,EAAQ,CACVqvB,EAAervB,EAAS,EACxB,MAAMmvB,GAAaliD,KAAK00B,WAAa10B,KAAK20B,UAAY,EACtDzxB,EAAIsE,UAAU/gB,KAAKiJ,IAAIwyD,GAAaE,EAAc37D,KAAKgI,IAAIyzD,GAAaE,GACpEpiD,KAAK2zB,eAAiBntC,IACT47D,EAAArvB,GAGnB7vB,EAAIgH,UAAY7lB,EAAQ6d,gBACxBgB,EAAIoH,YAAcjmB,EAAQ8d,YAC1B,MAAMwyB,EAvIV,SAAiBzxB,EAAKuS,EAASsd,EAAQiB,EAAS2E,GACxC,MAAA6oB,YAACA,EAAa9sB,WAAAA,EAAAf,cAAYA,GAAiBle,EACjD,IAAIkf,EAAWlf,EAAQkf,SACvB,GAAI6sB,EAAa,CACfvB,GAAQ/8C,EAAKuS,EAASsd,EAAQiB,EAASU,EAAahuC,EAAKiyC,GACzD,IAAA,IAAS71C,EAAI,EAAGA,EAAI0+D,IAAe1+D,EAC7BogB,EAAAgF,OAEDngB,MAAM4rC,KACTgB,EAAWD,EAAaf,EAAgBjtC,EACpCitC,EAAgBjtC,GAAQ,IACdiuC,GAAAjuC,IAMX,OAFPu5D,GAAQ/8C,EAAKuS,EAASsd,EAAQiB,EAASW,EAAUgE,GAC7Cz1B,EAAAgF,OACGysB,EAsHY0tB,CAAQn/C,EAAKlD,KAAMoiD,EAAcpuB,EAAS2E,GAC3DoD,GAAW74B,EAAKlD,KAAMoiD,EAAcpuB,EAASW,EAAUgE,GACnDz1B,EAAAiD,WAmBR,SAAkBm8C,GAAAp/C,EAAK7e,EAASye,EAAQze,GACtC6e,EAAIq/C,QAAUtgE,EAAe6gB,EAAMqa,eAAgB94B,EAAQ84B,gBAC3Dja,EAAIsjC,YAAYvkD,EAAe6gB,EAAMsa,WAAY/4B,EAAQ+4B,aACzDla,EAAIujC,eAAiBxkD,EAAe6gB,EAAMua,iBAAkBh5B,EAAQg5B,kBACpEna,EAAIq+C,SAAWt/D,EAAe6gB,EAAMwa,gBAAiBj5B,EAAQi5B,iBAC7Dpa,EAAIqH,UAAYtoB,EAAe6gB,EAAMqF,YAAa9jB,EAAQ8jB,aAC1DjF,EAAIoH,YAAcroB,EAAe6gB,EAAMX,YAAa9d,EAAQ8d,aAE9D,SAAgB4F,GAAA7E,EAAK+F,EAAUplB,GACzBqf,EAAA6E,OAAOlkB,EAAOmB,EAAGnB,EAAOqB,GAW9B,SAAkBs9D,GAAAz1D,EAAQuuB,EAAS4wB,EAAS,IAC1C,MAAMh/C,EAAQH,EAAO9J,QACd6G,MAAO24D,EAAc,EAAG14D,IAAK24D,EAAYx1D,EAAQ,GAAKg/C,GACtDpiD,MAAO64D,EAAc54D,IAAK64D,GAActnC,EACzCxxB,EAAQrD,KAAK6B,IAAIm6D,EAAaE,GAC9B54D,EAAMtD,KAAK4B,IAAIq6D,EAAWE,GAC1BC,EAAUJ,EAAcE,GAAgBD,EAAYC,GAAgBF,EAAcG,GAAcF,EAAYE,EAC3G,MAAA,CACL11D,MAAAA,EACApD,MAAAA,EACAsqB,KAAMkH,EAAQlH,KACd/wB,KAAM0G,EAAMD,IAAU+4D,EAAU31D,EAAQnD,EAAMD,EAAQC,EAAMD,GAGhE,SAAqBg5D,GAAA5/C,EAAK8G,EAAMsR,EAAS4wB,GACjC,MAAAn/C,OAACA,UAAQ1I,GAAW2lB,GACpB9c,MAACA,EAAOpD,MAAAA,EAAAsqB,KAAOA,OAAM/wB,GAAQm/D,GAASz1D,EAAQuuB,EAAS4wB,GACvD6W,EA1BR,SAAuB1+D,GACrB,OAAIA,EAAQ2+D,QACHh6C,GAEL3kB,EAAQowB,SAA8C,aAAnCpwB,EAAQkwB,uBACtBnL,GAEFrB,GAmBYk7C,CAAc5+D,GACjC,IACIvB,EAAGwlB,EAAOkM,GADVyY,KAACA,GAAO,EAAMpqC,QAAAA,GAAWqpD,GAAU,GAEvC,IAAKppD,EAAI,EAAGA,GAAKO,IAAQP,EACvBwlB,EAAQvb,GAAQjD,GAAmBjH,EAAAQ,EAAOP,EAAIA,IAAMoK,GAChDob,EAAM2J,OAECgb,GACL/pB,EAAA4E,OAAOQ,EAAMtjB,EAAGsjB,EAAMpjB,GACnB+nC,GAAA,GAEP81B,EAAW7/C,EAAKsR,EAAMlM,EAAOzlB,EAASwB,EAAQ2+D,SAEzCxuC,EAAAlM,GAMT,OAJI8L,IACF9L,EAAQvb,GAAQjD,GAAmBjH,EAAAQ,EAAO,IAAM6J,GAChD61D,EAAW7/C,EAAKsR,EAAMlM,EAAOzlB,EAASwB,EAAQ2+D,YAEvC5uC,EAEX,SAAyB8uC,GAAAhgD,EAAK8G,EAAMsR,EAAS4wB,GAC3C,MAAMn/C,EAASid,EAAKjd,QACdG,MAACA,EAAOpD,MAAAA,EAAAzG,KAAOA,GAAQm/D,GAASz1D,EAAQuuB,EAAS4wB,IACjDjf,KAACA,GAAO,EAAMpqC,QAAAA,GAAWqpD,GAAU,GACzC,IAEIppD,EAAGwlB,EAAO66C,EAAO9tB,EAAMF,EAAMiuB,EAF7BC,EAAO,EACPC,EAAS,EAEb,MAAMC,EAAc54D,OAA8B9H,EAAAQ,EAAOsH,EAAQA,IAAUuC,EACrEs2D,EAAQ,KACRnuB,IAASF,IACXjyB,EAAI6E,OAAOs7C,EAAMluB,GACjBjyB,EAAI6E,OAAOs7C,EAAMhuB,GACjBnyB,EAAI6E,OAAOs7C,EAAMD,KAOrB,IAJIn2B,IACF3kB,EAAQvb,EAAOw2D,EAAW,IACtBrgD,EAAA4E,OAAOQ,EAAMtjB,EAAGsjB,EAAMpjB,IAEvBpC,EAAI,EAAGA,GAAKO,IAAQP,EAAG,CAE1B,GADAwlB,EAAQvb,EAAOw2D,EAAWzgE,IACtBwlB,EAAM2J,KACR,SAEF,MAAMjtB,EAAIsjB,EAAMtjB,EACVE,EAAIojB,EAAMpjB,EACVu+D,EAAa,EAAJz+D,EACXy+D,IAAWN,GACTj+D,EAAImwC,EACCA,EAAAnwC,EACEA,EAAIiwC,IACNA,EAAAjwC,GAEDm+D,GAAAC,EAASD,EAAOr+D,KAAOs+D,IAE/BE,IACAtgD,EAAI6E,OAAO/iB,EAAGE,GACNi+D,EAAAM,EACCH,EAAA,EACTjuB,EAAOF,EAAOjwC,GAERk+D,EAAAl+D,EAEVs+D,IAEF,SAAAE,GAA2B15C,GACzB,MAAMJ,EAAOI,EAAK3lB,QACZ+4B,EAAaxT,EAAKwT,YAAcxT,EAAKwT,WAAWn6B,OAEtD,QADqB+mB,EAAKitB,YAAejtB,EAAK2W,OAAU/W,EAAK6K,SAA2C,aAAhC7K,EAAK2K,wBAA0C3K,EAAKo5C,SAAY5lC,GACnH8lC,GAAkBJ,GA3HzClB,GAAW5gE,GAAK,MAChB4gE,GAAW7/C,SAAW,CACpBs0B,YAAa,SACbl0B,YAAa,OACbmb,qBAAiB,EACjBgiC,aAAc,EACdn3C,YAAa,EACb4qB,OAAQ,EACRiB,QAAS,EACT3qC,WAAO,EACPsvC,UAAU,GAEZipB,GAAWtoB,cAAgB,CACzBp3B,gBAAiB,mBAgJnB,MAAMyhD,GAA8B,mBAAXC,OACzB,SAAc9kC,GAAA5b,EAAK8G,EAAMlgB,EAAOoD,GAC1By2D,KAAc35C,EAAK3lB,QAAQi3B,QAzBjC,SAA6BpY,EAAK8G,EAAMlgB,EAAOoD,GAC7C,IAAI22D,EAAO75C,EAAK85C,MACXD,IACIA,EAAA75C,EAAK85C,MAAQ,IAAIF,OACpB55C,EAAK65C,KAAKA,EAAM/5D,EAAOoD,IACpB22D,EAAAh8C,aAGTy6C,GAASp/C,EAAK8G,EAAK3lB,SACnB6e,EAAIkF,OAAOy7C,GAiBWE,CAAA7gD,EAAK8G,EAAMlgB,EAAOoD,GAf1C,SAA0BgW,EAAK8G,EAAMlgB,EAAOoD,GACpC,MAAA+uB,SAACA,UAAU53B,GAAW2lB,EACtBg6C,EAAgBN,GAAkB15C,GACxC,IAAA,MAAWsR,KAAWW,EACXqmC,GAAAp/C,EAAK7e,EAASi3B,EAAQxY,OAC3BI,EAAAwE,YACAs8C,EAAc9gD,EAAK8G,EAAMsR,EAAS,CAACxxB,MAAAA,EAAOC,IAAKD,EAAQoD,EAAQ,KAC7DgW,EAAA2E,YAEF3E,EAAAkF,SAQa67C,CAAA/gD,EAAK8G,EAAMlgB,EAAOoD,GAGvC,MAAAg3D,WAA0BhrB,GACxB7oC,YAAY+vB,GACV2P,QACA/vB,KAAKk3B,UAAW,EAChBl3B,KAAK3b,aAAU,EACf2b,KAAKsc,YAAS,EACdtc,KAAK2gB,WAAQ,EACb3gB,KAAK+4B,eAAY,EACjB/4B,KAAK8jD,WAAQ,EACb9jD,KAAKmkD,aAAU,EACfnkD,KAAKokD,eAAY,EACjBpkD,KAAKi3B,YAAa,EAClBj3B,KAAKqkD,gBAAiB,EACtBrkD,KAAKyc,mBAAgB,EACjB2D,GACF9+B,OAAO+M,OAAO2R,KAAMogB,GAGxB/vB,oBAAoB46B,EAAW5nB,GAC7B,MAAMhf,EAAU2b,KAAK3b,QAChB,IAAAA,EAAQowB,SAA8C,aAAnCpwB,EAAQkwB,0BAA2ClwB,EAAQ2+D,UAAYhjD,KAAKqkD,eAAgB,CAClH,MAAMjwC,EAAO/vB,EAAQiwB,SAAWtU,KAAK2gB,MAAQ3gB,KAAK+4B,UAClD5kB,GAA2BnU,KAAKmkD,QAAS9/D,EAAS4mC,EAAW7W,EAAM/Q,GACnErD,KAAKqkD,gBAAiB,GAAAt3D,WAGfA,GACTiT,KAAKmkD,QAAUp3D,SACRiT,KAAKokD,iBACLpkD,KAAK8jD,MACZ9jD,KAAKqkD,gBAAiB,EAAAt3D,aAGtB,OAAOiT,KAAKmkD,QAAAloC,eAGZ,OAAOjc,KAAKokD,YAAcpkD,KAAKokD,UD/iInC,SAA0Bp6C,EAAMoS,GAC9B,MAAMrvB,EAASid,EAAKjd,OACdunB,EAAWtK,EAAK3lB,QAAQiwB,SACxBpnB,EAAQH,EAAO9J,OACrB,IAAKiK,EACI,MAAA,GAEH,MAAAknB,IAASpK,EAAK2W,OACd72B,MAACA,EAAOC,IAAAA,GAxDhB,SAAyBgD,EAAQG,EAAOknB,EAAME,GAC5C,IAAIxqB,EAAQ,EACRC,EAAMmD,EAAQ,EACd,GAAAknB,IAASE,EACX,KAAOxqB,EAAQoD,IAAUH,EAAOjD,GAAOmoB,MACrCnoB,IAGJ,KAAOA,EAAQoD,GAASH,EAAOjD,GAAOmoB,MACpCnoB,IAMF,IAJSA,GAAAoD,EACLknB,IACKrqB,GAAAD,GAEFC,EAAMD,GAASiD,EAAOhD,EAAMmD,GAAO+kB,MACxCloB,IAGF,OADOA,GAAAmD,EACA,CAACpD,MAAAA,EAAOC,IAAAA,GAqCMu6D,CAAgBv3D,EAAQG,EAAOknB,EAAME,GAC1D,OACS6H,GAAcnS,GADN,IAAbsK,EACyB,CAAC,CAACxqB,MAAAA,EAAOC,IAAAA,EAAKqqB,KAAAA,IArC7C,SAAuBrnB,EAAQjD,EAAOxB,EAAK8rB,GACzC,MAAMlnB,EAAQH,EAAO9J,OACf6yB,EAAS,GACf,IAEI/rB,EAFAiB,EAAOlB,EACP0qB,EAAOznB,EAAOjD,GAElB,IAAKC,EAAMD,EAAQ,EAAGC,GAAOzB,IAAOyB,EAAK,CACjC,MAAAy1B,EAAMzyB,EAAOhD,EAAMmD,GACrBsyB,EAAIvN,MAAQuN,EAAI+X,KACb/iB,EAAKvC,OACDmC,GAAA,EACA0B,EAAArwB,KAAK,CAACqE,MAAOA,EAAQoD,EAAOnD,KAAMA,EAAM,GAAKmD,EAAOknB,KAAAA,IACnDtqB,EAAAkB,EAAOw0B,EAAI+X,KAAOxtC,EAAM,OAG3BiB,EAAAjB,EACHyqB,EAAKvC,OACCnoB,EAAAC,IAGLyqB,EAAAgL,EAKF,OAHM,OAATx0B,GACF8qB,EAAOrwB,KAAK,CAACqE,MAAOA,EAAQoD,EAAOnD,IAAKiB,EAAOkC,EAAOknB,KAAAA,IAEjD0B,EAgBoByuC,CAAcx3D,EAAQjD,EAFrCC,EAAMD,EAAQC,EAAMmD,EAAQnD,IACjBigB,EAAK+uB,WAAuB,IAAVjvC,GAAeC,IAAQmD,EAAQ,GAHrBH,EAAQqvB,GCqiIdooC,CAAiBxkD,KAAMA,KAAK3b,QAAQi3B,UAEjFjrB,QACE,MAAM4rB,EAAWjc,KAAKic,SAChBlvB,EAASiT,KAAKjT,OACpB,OAAOkvB,EAASh5B,QAAU8J,EAAOkvB,EAAS,GAAGnyB,OAE/CuG,OACE,MAAM4rB,EAAWjc,KAAKic,SAChBlvB,EAASiT,KAAKjT,OACdG,EAAQ+uB,EAASh5B,OACvB,OAAOiK,GAASH,EAAOkvB,EAAS/uB,EAAQ,GAAGnD,KAE7CsG,YAAYiY,EAAOlgB,GACjB,MAAM/D,EAAU2b,KAAK3b,QACfnD,EAAQonB,EAAMlgB,GACd2E,EAASiT,KAAKjT,OACdkvB,EAAWD,GAAehc,KAAM,CAAC5X,SAAAA,EAAU0B,MAAO5I,EAAO6I,IAAK7I,IAChE,IAAC+6B,EAASh5B,OACZ,OAEF,MAAM6yB,EAAS,GACT2uC,EAlGV,SAAiCpgE,GAC/B,OAAIA,EAAQ2+D,QACHhqC,GAEL30B,EAAQowB,SAA8C,aAAnCpwB,EAAQkwB,uBACtB0E,GAEFF,GA2FgB2rC,CAAwBrgE,GAC7C,IAAIvB,EAAGO,EACF,IAAAP,EAAI,EAAGO,EAAO44B,EAASh5B,OAAQH,EAAIO,IAAQP,EAAG,CAC3C,MAAAgH,MAACA,EAAOC,IAAAA,GAAOkyB,EAASn5B,GACxB6Q,EAAK5G,EAAOjD,GACZ8J,EAAK7G,EAAOhD,GAClB,GAAI4J,IAAOC,EAAI,CACbkiB,EAAOrwB,KAAKkO,GACZ,SAEI,MACAgxD,EAAeF,EAAa9wD,EAAIC,EAD5BnN,KAAKwB,KAAK/G,EAAQyS,EAAGvL,KAAcwL,EAAGxL,GAAYuL,EAAGvL,KAClB/D,EAAQ2+D,SACrD2B,EAAav8D,GAAYkgB,EAAMlgB,GAC/B0tB,EAAOrwB,KAAKk/D,GAEd,OAAyB,IAAlB7uC,EAAO7yB,OAAe6yB,EAAO,GAAKA,EAE3CzlB,YAAY6S,EAAKoY,EAAS4wB,GAEjB,OADewX,GAAkB1jD,KACjCgkD,CAAc9gD,EAAKlD,KAAMsb,EAAS4wB,GAE3C77C,KAAK6S,EAAKpZ,EAAOoD,GACf,MAAM+uB,EAAWjc,KAAKic,SAChB+nC,EAAgBN,GAAkB1jD,MACxC,IAAIoU,EAAOpU,KAAK2gB,MAChB72B,EAAQA,GAAS,EACToD,EAAAA,GAAU8S,KAAKjT,OAAO9J,OAAS6G,EACvC,IAAA,MAAWwxB,KAAWW,EACZ7H,GAAA4vC,EAAc9gD,EAAKlD,KAAMsb,EAAS,CAACxxB,MAAAA,EAAOC,IAAKD,EAAQoD,EAAQ,IAEzE,QAASknB,EAEX/jB,KAAK6S,EAAK+nB,EAAWnhC,EAAOoD,GACpB,MAAA7I,EAAU2b,KAAK3b,SAAW,IACjB2b,KAAKjT,QAAU,IACnB9J,QAAUoB,EAAQ8jB,cACvBjF,EAAA6C,OACC+Y,GAAA5b,EAAKlD,KAAMlW,EAAOoD,GACnBgW,EAAAiD,WAEFnG,KAAKk3B,WACPl3B,KAAKqkD,gBAAiB,EACtBrkD,KAAK8jD,WAAQ,IA2BnB,SAAmBc,GAAAhsC,EAAI7C,EAAKzoB,EAAM6rC,GAChC,MAAM90C,EAAUu0B,EAAGv0B,UACXiJ,GAAOpM,GAAS03B,EAAGwgB,SAAS,CAAC9rC,GAAO6rC,GAC5C,OAAQ1yC,KAAKwB,IAAI8tB,EAAM70B,GAASmD,EAAQijB,OAASjjB,EAAQwgE,UA1B3DX,GAAYljE,GAAK,OACjBkjE,GAAYniD,SAAW,CACrBob,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBnV,YAAa,EACbuM,iBAAiB,EACjBH,uBAAwB,UACxBrM,MAAM,EACNoM,UAAU,EACV0uC,SAAS,EACTvuC,QAAS,GAEXyvC,GAAY5qB,cAAgB,CAC1Bp3B,gBAAiB,kBACjBC,YAAa,eAEf+hD,GAAY1iD,YAAc,CACxBuD,aAAa,EACbE,WAAaZ,GAAkB,eAATA,GAAkC,SAATA,GAQjD,MAAAygD,WAA2B5rB,GACzB7oC,YAAY+vB,GACV2P,QACA/vB,KAAK3b,aAAU,EACf2b,KAAK6R,YAAS,EACd7R,KAAKiS,UAAO,EACZjS,KAAKu3B,UAAO,EACRnX,GACF9+B,OAAO+M,OAAO2R,KAAMogB,GAGxB/vB,QAAQ00D,EAAQC,EAAQ7rB,GACtB,MAAM90C,EAAU2b,KAAK3b,SACfW,EAACA,EAAGE,EAAAA,GAAK8a,KAAKo5B,SAAS,CAAC,IAAK,KAAMD,GACzC,OAAS1yC,KAAKiB,IAAIq9D,EAAS//D,EAAG,GAAKyB,KAAKiB,IAAIs9D,EAAS9/D,EAAG,GAAMuB,KAAKiB,IAAIrD,EAAQwgE,UAAYxgE,EAAQijB,OAAQ,GAE7GjX,SAAS00D,EAAQ5rB,GACR,OAAAyrB,GAAU5kD,KAAM+kD,EAAQ,IAAK5rB,GAEtC9oC,SAAS20D,EAAQ7rB,GACR,OAAAyrB,GAAU5kD,KAAMglD,EAAQ,IAAK7rB,GAEtC9oC,eAAe8oC,GACb,MAAMn0C,EAACA,EAAGE,EAAAA,GAAK8a,KAAKo5B,SAAS,CAAC,IAAK,KAAMD,GACzC,MAAO,CAACn0C,EAAAA,EAAGE,EAAAA,GAEbmL,KAAKhM,GAEC,IAAAijB,GADMjjB,EAAAA,GAAW2b,KAAK3b,SAAW,IAChBijB,QAAU,EAC/BA,EAAS7gB,KAAK6B,IAAIgf,EAAQA,GAAUjjB,EAAQ4gE,aAAe,GAE3D,OAAgC,MADZ39C,GAAUjjB,EAAQ8jB,aAAe,IAGvD9X,KAAK6S,EAAKqF,GACR,MAAMlkB,EAAU2b,KAAK3b,QACjB2b,KAAKiS,MAAQ5tB,EAAQijB,OAAS,KAAQe,GAAerI,KAAMuI,EAAMvI,KAAK3Z,KAAKhC,GAAW,KAG1F6e,EAAIoH,YAAcjmB,EAAQ8d,YAC1Be,EAAIqH,UAAYlmB,EAAQ8jB,YACxBjF,EAAIgH,UAAY7lB,EAAQ6d,gBACxB6E,GAAU7D,EAAK7e,EAAS2b,KAAKhb,EAAGgb,KAAK9a,IAEvCmL,WACQ,MAAAhM,EAAU2b,KAAK3b,SAAW,GACzB,OAAAA,EAAQijB,OAASjjB,EAAQwgE,WAkBpC,SAAAK,GAAsBC,EAAKhsB,GACzB,MAAMn0C,EAACA,EAAAE,EAAGA,EAAGojC,KAAAA,EAAA5iB,MAAMA,EAAOoB,OAAAA,GAAUq+C,EAAI/rB,SAAS,CAAC,IAAK,IAAK,OAAQ,QAAS,UAAWD,GACpF,IAAA1wB,EAAMC,EAAOC,EAAKC,EAAQw8C,EAcvB,OAbHD,EAAIh2B,YACNi2B,EAAOt+C,EAAS,EACT2B,EAAAhiB,KAAK4B,IAAIrD,EAAGsjC,GACX5f,EAAAjiB,KAAK6B,IAAItD,EAAGsjC,GACpB3f,EAAMzjB,EAAIkgE,EACVx8C,EAAS1jB,EAAIkgE,IAEbA,EAAO1/C,EAAQ,EACf+C,EAAOzjB,EAAIogE,EACX18C,EAAQ1jB,EAAIogE,EACNz8C,EAAAliB,KAAK4B,IAAInD,EAAGojC,GACT1f,EAAAniB,KAAK6B,IAAIpD,EAAGojC,IAEhB,CAAC7f,KAAAA,EAAME,IAAAA,EAAKD,MAAAA,EAAOE,OAAAA,GAE5B,SAAqBy8C,GAAAC,EAAMpkE,EAAOmH,EAAKC,GACrC,OAAOg9D,EAAO,EAAIh7D,GAAYpJ,EAAOmH,EAAKC,GA2B5C,SAAAi9D,GAAuBJ,GACrB,MAAM5pC,EAAS2pC,GAAaC,GACtBz/C,EAAQ6V,EAAO7S,MAAQ6S,EAAO9S,KAC9B3B,EAASyU,EAAO3S,OAAS2S,EAAO5S,IAChC6uB,EA7BR,SAA0B2tB,EAAKK,EAAMC,GAC7B,MAAAvkE,EAAQikE,EAAI9gE,QAAQ8jB,YACpBm9C,EAAOH,EAAIj2B,cACXjqC,EAAIonB,GAAOnrB,GACV,MAAA,CACLqN,EAAG82D,GAAYC,EAAK38C,IAAK1jB,EAAE0jB,IAAK,EAAG88C,GACnC/yD,EAAG2yD,GAAYC,EAAK58C,MAAOzjB,EAAEyjB,MAAO,EAAG88C,GACvCp/D,EAAGi/D,GAAYC,EAAK18C,OAAQ3jB,EAAE2jB,OAAQ,EAAG68C,GACzC70D,EAAGy0D,GAAYC,EAAK78C,KAAMxjB,EAAEwjB,KAAM,EAAG+8C,IAqBxBE,CAAiBP,EAAKz/C,EAAQ,EAAGoB,EAAS,GACnDQ,EAnBR,SAA2B69C,EAAKK,EAAMC,GACpC,MAAMp2B,mBAACA,GAAsB81B,EAAI/rB,SAAS,CAAC,uBACrCl4C,EAAQikE,EAAI9gE,QAAQi7D,aACpBr6D,EAAIqnB,GAAcprB,GAClBykE,EAAOl/D,KAAK4B,IAAIm9D,EAAMC,GACtBH,EAAOH,EAAIj2B,cACX02B,EAAev2B,GAAsB1tC,EAAST,GAC7C,MAAA,CACLoqB,QAAS+5C,IAAaO,GAAgBN,EAAK38C,KAAO28C,EAAK78C,KAAMxjB,EAAEqmB,QAAS,EAAGq6C,GAC3El6C,SAAU45C,IAAaO,GAAgBN,EAAK38C,KAAO28C,EAAK58C,MAAOzjB,EAAEwmB,SAAU,EAAGk6C,GAC9Ep6C,WAAY85C,IAAaO,GAAgBN,EAAK18C,QAAU08C,EAAK78C,KAAMxjB,EAAEsmB,WAAY,EAAGo6C,GACpFn6C,YAAa65C,IAAaO,GAAgBN,EAAK18C,QAAU08C,EAAK58C,MAAOzjB,EAAEumB,YAAa,EAAGm6C,IAQ1EE,CAAkBV,EAAKz/C,EAAQ,EAAGoB,EAAS,GACnD,MAAA,CACLg/C,MAAO,CACL9gE,EAAGu2B,EAAO9S,KACVvjB,EAAGq2B,EAAO5S,IACVzV,EAAGwS,EACH7U,EAAGiW,EACHQ,OAAAA,GAEFg6C,MAAO,CACLt8D,EAAGu2B,EAAO9S,KAAO+uB,EAAO5mC,EACxB1L,EAAGq2B,EAAO5S,IAAM6uB,EAAOjpC,EACvB2E,EAAGwS,EAAQ8xB,EAAO5mC,EAAI4mC,EAAO9kC,EAC7B7B,EAAGiW,EAAS0wB,EAAOjpC,EAAIipC,EAAOpxC,EAC9BkhB,OAAQ,CACNgE,QAAS7kB,KAAK6B,IAAI,EAAGgf,EAAOgE,QAAU7kB,KAAK6B,IAAIkvC,EAAOjpC,EAAGipC,EAAO5mC,IAChE6a,SAAUhlB,KAAK6B,IAAI,EAAGgf,EAAOmE,SAAWhlB,KAAK6B,IAAIkvC,EAAOjpC,EAAGipC,EAAO9kC,IAClE6Y,WAAY9kB,KAAK6B,IAAI,EAAGgf,EAAOiE,WAAa9kB,KAAK6B,IAAIkvC,EAAOpxC,EAAGoxC,EAAO5mC,IACtE4a,YAAa/kB,KAAK6B,IAAI,EAAGgf,EAAOkE,YAAc/kB,KAAK6B,IAAIkvC,EAAOpxC,EAAGoxC,EAAO9kC,OAKhF,SAAiBg4C,GAAAya,EAAKngE,EAAGE,EAAGi0C,GAC1B,MAAM4sB,EAAc,OAAN/gE,EACRghE,EAAc,OAAN9gE,EAERq2B,EAAS4pC,KADEY,GAASC,IACSd,GAAaC,EAAKhsB,GACrD,OAAO5d,IACHwqC,GAASx7D,GAAWvF,EAAGu2B,EAAO9S,KAAM8S,EAAO7S,UAClCs9C,GAAAz7D,GAAWrF,EAAGq2B,EAAO5S,IAAK4S,EAAO3S,SAKhD,SAAAq9C,GAA2B/iD,EAAK+E,GAC9B/E,EAAI+E,KAAKA,EAAKjjB,EAAGijB,EAAK/iB,EAAG+iB,EAAK/U,EAAG+U,EAAKpX,GAExC,SAAqBq1D,GAAAj+C,EAAM2hC,EAAQuc,EAAU,IAC3C,MAAMnhE,EAAIijB,EAAKjjB,IAAMmhE,EAAQnhE,GAAK4kD,EAAS,EACrC1kD,EAAI+iB,EAAK/iB,IAAMihE,EAAQjhE,GAAK0kD,EAAS,EACrC12C,GAAU+U,EAAAjjB,EAAIijB,EAAK/U,IAAMizD,EAAQnhE,EAAImhE,EAAQjzD,EAAI02C,EAAS,GAAK5kD,EAC/D6L,GAAUoX,EAAA/iB,EAAI+iB,EAAKpX,IAAMs1D,EAAQjhE,EAAIihE,EAAQt1D,EAAI+4C,EAAS,GAAK1kD,EAC9D,MAAA,CACLF,EAAGijB,EAAKjjB,EAAIA,EACZE,EAAG+iB,EAAK/iB,EAAIA,EACZgO,EAAG+U,EAAK/U,EAAIA,EACZrC,EAAGoX,EAAKpX,EAAIA,EACZyW,OAAQW,EAAKX,QAlHjBw9C,GAAa9jE,GAAK,QAClB8jE,GAAa/iD,SAAW,CACtBoG,YAAa,EACb08C,UAAW,EACXvuB,iBAAkB,EAClB2uB,YAAa,EACb79C,WAAY,SACZE,OAAQ,EACRD,SAAU,GAEZy9C,GAAaxrB,cAAgB,CAC3Bp3B,gBAAiB,kBACjBC,YAAa,eAyGf,MAAAikD,WAAyBltB,GACvB7oC,YAAY+vB,GACV2P,QACA/vB,KAAK3b,aAAU,EACf2b,KAAKmvB,gBAAa,EAClBnvB,KAAKsoB,UAAO,EACZtoB,KAAK0F,WAAQ,EACb1F,KAAK8G,YAAS,EACd9G,KAAK2vB,mBAAgB,EACjBvP,GACF9+B,OAAO+M,OAAO2R,KAAMogB,GAGxB/vB,KAAK6S,GACH,MAAMysB,cAACA,EAAetrC,SAAS8d,YAACA,kBAAaD,IAAoBlC,MAC3DshD,MAACA,EAAOwE,MAAAA,GAASP,GAAcvlD,MAC/BqmD,GAnCS/+C,EAmCew+C,EAAMx+C,QAlCxBgE,SAAWhE,EAAOmE,UAAYnE,EAAOiE,YAAcjE,EAAOkE,YAkCxBH,GAAqB46C,GAnCvE,IAAmB3+C,EAoCXpE,EAAA6C,OACA+/C,EAAM5yD,IAAMouD,EAAMpuD,GAAK4yD,EAAMj1D,IAAMywD,EAAMzwD,IACvCqS,EAAAwE,YACQ2+C,EAAAnjD,EAAKgjD,GAAYJ,EAAOn2B,EAAe2xB,IAC/Cp+C,EAAA4F,OACJu9C,EAAYnjD,EAAKgjD,GAAY5E,GAAQ3xB,EAAem2B,IACpD5iD,EAAIgH,UAAY/H,EAChBe,EAAIgF,KAAK,YAEPhF,EAAAwE,YACQ2+C,EAAAnjD,EAAKgjD,GAAY5E,EAAO3xB,IACpCzsB,EAAIgH,UAAYhI,EACZgB,EAAAgF,OACAhF,EAAAiD,UAEN9V,QAAQ00D,EAAQC,EAAQ7rB,GACf,OAAAuR,GAAQ1qC,KAAM+kD,EAAQC,EAAQ7rB,GAEvC9oC,SAAS00D,EAAQ5rB,GACR,OAAAuR,GAAQ1qC,KAAM+kD,EAAQ,KAAM5rB,GAErC9oC,SAAS20D,EAAQ7rB,GACR,OAAAuR,GAAQ1qC,KAAM,KAAMglD,EAAQ7rB,GAErC9oC,eAAe8oC,GACP,MAAAn0C,EAACA,EAAGE,EAAAA,EAAAojC,KAAGA,EAAM6G,WAAAA,GAAcnvB,KAAKo5B,SAAS,CAAC,IAAK,IAAK,OAAQ,cAAeD,GAC1E,MAAA,CACLn0C,EAAGmqC,GAAkBnqC,EAAAsjC,GAAQ,EAAItjC,EACjCE,EAAGiqC,EAAajqC,GAAKA,EAAIojC,GAAQ,GAGrCj4B,SAAS/C,GACP,MAAgB,MAATA,EAAe0S,KAAK0F,MAAQ,EAAI1F,KAAK8G,OAAS,GAGzDs/C,GAAWplE,GAAK,MAChBolE,GAAWrkD,SAAW,CACpBmtB,cAAe,QACf/mB,YAAa,EACbm3C,aAAc,EACd3vB,cAAe,OACfvoB,gBAAY,GAEdg/C,GAAW9sB,cAAgB,CACzBp3B,gBAAiB,kBACjBC,YAAa,eAGf,IAAIO,UAA+BqpB,OAAO,CAC1Cwd,UAAW,KACXqY,WAAAA,GACAsC,YAAAA,GACAY,aAAAA,GACAsB,WAAAA,KAsGA,SAAAE,GAA+Br/B,GAC7B,GAAIA,EAAQgQ,WAAY,CACtB,MAAM7xB,EAAO6hB,EAAQb,aACda,EAAQgQ,kBACRhQ,EAAQb,MACf9kC,OAAO+mC,eAAepB,EAAS,OAAQ,CAAC/lC,MAAOkkB,KAGnD,SAAAmhD,GAA4BhkD,GAC1BA,EAAM6C,KAAKhD,SAAS3W,SAASw7B,IACLq/B,GAAAr/B,MAmB1B,IAAIu/B,GAAoB,CACtBxlE,GAAI,aACJ+gB,SAAU,CACR0kD,UAAW,UACX3rB,SAAS,GAEX4rB,qBAAsB,CAACnkD,EAAO/f,EAAM6B,KAC9B,IAACA,EAAQy2C,QAEX,YADmByrB,GAAAhkD,GAGrB,MAAMmqC,EAAiBnqC,EAAMmD,MAC7BnD,EAAM6C,KAAKhD,SAAS3W,SAAQ,CAACw7B,EAASzjC,KAC9B,MAAA4iC,MAACA,YAAO/iB,GAAa4jB,EACrBn6B,EAAOyV,EAAMylB,eAAexkC,GAC5B4hB,EAAOghB,GAASa,EAAQ7hB,KAC9B,GAAsD,MAAlDyH,GAAQ,CAACxJ,EAAWd,EAAMle,QAAQgf,YACpC,OAEE,IAACvW,EAAK+3B,WAAW6B,mBACnB,OAEI,MAAAigC,EAAQpkD,EAAM0B,OAAOnX,EAAKu6B,SAChC,GAAmB,WAAfs/B,EAAMtlE,MAAoC,SAAfslE,EAAMtlE,KACnC,OAEE,GAAAkhB,EAAMle,QAAQwf,QAChB,OAEF,IAAI/Z,MAACA,EAAAoD,MAAOA,GA7ClB,SAAmDJ,EAAMC,GACvD,MAAME,EAAaF,EAAO9J,OAC1B,IACIiK,EADApD,EAAQ,EAEZ,MAAMsD,OAACA,GAAUN,GACXzE,IAACA,EAAAC,IAAKA,EAAKiF,WAAAA,EAAAC,WAAYA,GAAcJ,EAAOK,gBASlD,OARIF,IACMzD,EAAAQ,GAAYS,GAAagC,EAAQK,EAAOE,KAAMjF,GAAKyC,GAAI,EAAGmC,EAAa,IAGvEC,EADNM,EACMlD,GAAYS,GAAagC,EAAQK,EAAOE,KAAMhF,GAAKuC,GAAK,EAAGf,EAAOmD,GAAcnD,EAEhFmD,EAAanD,EAEhB,CAACA,MAAAA,EAAOoD,MAAAA,GA+BU05D,CAA0C95D,EAAMsY,GAErE,GAAIlY,IADc7I,EAAQwiE,WAAa,EAAIna,GAGzC,YADsB4Z,GAAAr/B,GAiBpB,IAAA6/B,EACJ,OAfI7lE,EAAcmlC,KAChBa,EAAQb,MAAQhhB,SACT6hB,EAAQ7hB,KACR9jB,OAAA+mC,eAAepB,EAAS,OAAQ,CACrCvW,cAAc,EACd7L,YAAY,EACZsJ,IAAK,WACH,OAAOnO,KAAKi3B,YAEdt1B,IAAK,SAASlR,GACZuP,KAAKomB,MAAQ31B,MAKXpM,EAAQoiE,WACX,IAAA,OACHK,EApLR,SAAwB1hD,EAAMtb,EAAOoD,EAAOw/C,EAAgBroD,GACpD,MAAA0iE,EAAU1iE,EAAQ0iE,SAAWra,EACnC,GAAIqa,GAAW75D,EACN,OAAAkY,EAAK1jB,MAAMoI,EAAOA,EAAQoD,GAEnC,MAAM45D,EAAY,GACZE,GAAuB95D,EAAA,IAAgB65D,EAAA,GAC7C,IAAIE,EAAe,EACb,MAAAC,EAAWp9D,EAAQoD,EAAQ,EACjC,IACIpK,EAAGqkE,EAAcC,EAAS7+C,EAAM8+C,EADhClhE,EAAI2D,EAGR,IADAg9D,EAAUG,KAAkB7hD,EAAKjf,GAC5BrD,EAAI,EAAGA,EAAIikE,EAAU,EAAGjkE,IAAK,CAChC,IAEI8b,EAFAykD,EAAO,EACPiE,EAAO,EAEX,MAAMC,EAAgB9gE,KAAKkB,OAAW7E,EAAA,GAAKkkE,GAAe,EAAIl9D,EACxD09D,EAAc/gE,KAAK4B,IAAI5B,KAAKkB,OAAW7E,EAAA,GAAKkkE,GAAe,EAAG95D,GAASpD,EACvE29D,EAAiBD,EAAcD,EACrC,IAAK3oD,EAAI2oD,EAAe3oD,EAAI4oD,EAAa5oD,IACvCykD,GAAQj+C,EAAKxG,GAAG5Z,EAChBsiE,GAAQliD,EAAKxG,GAAG1Z,EAEVm+D,GAAAoE,EACAH,GAAAG,EACR,MAAMC,EAAYjhE,KAAKkB,MAAM7E,EAAIkkE,GAAe,EAAIl9D,EAC9C69D,EAAUlhE,KAAK4B,IAAI5B,KAAKkB,OAAW7E,EAAA,GAAKkkE,GAAe,EAAG95D,GAASpD,GAClE9E,EAAG4iE,EAAS1iE,EAAG2iE,GAAWziD,EAAKjf,GAEtC,IADAihE,EAAU7+C,GAAO,EACZ3J,EAAI8oD,EAAW9oD,EAAI+oD,EAAS/oD,IAC/B2J,EAAO,GAAM9hB,KAAKwB,KACf2/D,EAAUvE,IAASj+C,EAAKxG,GAAG1Z,EAAI2iE,IAC/BD,EAAUxiD,EAAKxG,GAAG5Z,IAAasiE,EAAAO,IAE9Bt/C,EAAO6+C,IACCA,EAAA7+C,EACV4+C,EAAe/hD,EAAKxG,GACZyoD,EAAAzoD,GAGZkoD,EAAUG,KAAkBE,EACxBhhE,EAAAkhE,EAGC,OADPP,EAAUG,KAAkB7hD,EAAK8hD,GAC1BJ,EAwIWgB,CAAe1iD,EAAMtb,EAAOoD,EAAOw/C,EAAgBroD,GAC/D,MACG,IAAA,UACSyiE,EAzIpB,SAA0B1hD,EAAMtb,EAAOoD,EAAOw/C,GAC5C,IAEI5pD,EAAGwlB,EAAOtjB,EAAGE,EAAGi+D,EAAO4E,EAAUC,EAAUC,EAAY5yB,EAAMF,EAF7DkuB,EAAO,EACPC,EAAS,EAEb,MAAMwD,EAAY,GACZI,EAAWp9D,EAAQoD,EAAQ,EAC3Bg7D,EAAO9iD,EAAKtb,GAAO9E,EAEnBmjE,EADO/iD,EAAK8hD,GAAUliE,EACVkjE,EAClB,IAAKplE,EAAIgH,EAAOhH,EAAIgH,EAAQoD,IAASpK,EAAG,CACtCwlB,EAAQlD,EAAKtiB,GACRkC,GAAAsjB,EAAMtjB,EAAIkjE,GAAQC,EAAKzb,EAC5BxnD,EAAIojB,EAAMpjB,EACV,MAAMu+D,EAAa,EAAJz+D,EACf,GAAIy+D,IAAWN,EACTj+D,EAAImwC,GACCA,EAAAnwC,EACI6iE,EAAAjlE,GACFoC,EAAIiwC,IACNA,EAAAjwC,EACI8iE,EAAAllE,GAEbugE,GAAiBC,EAAAD,EAAO/6C,EAAMtjB,KAAOs+D,MAChC,CACL,MAAM8E,EAAYtlE,EAAI,EACtB,IAAK7B,EAAc8mE,KAAc9mE,EAAc+mE,GAAW,CAClD,MAAAK,EAAqB5hE,KAAK4B,IAAI0/D,EAAUC,GACxCM,EAAqB7hE,KAAK6B,IAAIy/D,EAAUC,GAC1CK,IAAuBJ,GAAcI,IAAuBD,GACpDtB,EAAArhE,KAAK8iE,EACVC,EAAA,GAAApjD,EAAKijD,IADK,CAEbrjE,EAAGq+D,KAGHiF,IAAuBL,GAAcK,IAAuBF,GACpDtB,EAAArhE,KAAK8iE,EACVC,EAAA,GAAApjD,EAAKkjD,IADK,CAEbtjE,EAAGq+D,KAILvgE,EAAI,GAAKslE,IAAcH,GACzBnB,EAAUrhE,KAAK2f,EAAKgjD,IAEtBtB,EAAUrhE,KAAK6iB,GACP66C,EAAAM,EACCH,EAAA,EACTjuB,EAAOF,EAAOjwC,EACd6iE,EAAWC,EAAWC,EAAanlE,GAGhC,OAAAgkE,EAsFW2B,CAAiBrjD,EAAMtb,EAAOoD,EAAOw/C,GACjD,MAAA,QAEM,MAAA,IAAI38B,MAAM,qCAAqC1rB,EAAQoiE,cAE/Dx/B,EAAQgQ,WAAa6vB,MAGzBz2D,QAAQkS,GACagkD,GAAAhkD,KA0CvB,SAAoBmmD,GAAAtgE,EAAU6yC,EAAOjwC,EAAMopB,GACzC,GAAIA,EACF,OAEF,IAAItqB,EAAQmxC,EAAM7yC,GACd2B,EAAMiB,EAAK5C,GAKR,MAJU,UAAbA,IACF0B,EAAQF,EAAgBE,GACxBC,EAAMH,EAAgBG,IAEjB,CAAC3B,SAAAA,EAAU0B,MAAAA,EAAOC,IAAAA,GAoB3B,SAAyB4+D,GAAA7+D,EAAOC,EAAKgD,GAC7B,KAAAhD,EAAMD,EAAOC,IAAO,CACxB,MAAMue,EAAQvb,EAAOhD,GACrB,IAAKhC,MAAMugB,EAAMtjB,KAAO+C,MAAMugB,EAAMpjB,GAClC,MAGG,OAAA6E,EAET,SAAkB6+D,GAAAziE,EAAGC,EAAGgmB,EAAM7pB,GAC5B,OAAI4D,GAAKC,EACA7D,EAAG4D,EAAEimB,GAAOhmB,EAAEgmB,IAEhBjmB,EAAIA,EAAEimB,GAAQhmB,EAAIA,EAAEgmB,GAAQ,EAGrC,SAAAy8C,GAA6BC,EAAU9+C,GACrC,IAAIjd,EAAS,GACT4zB,GAAQ,EAOL,OANHx/B,EAAQ2nE,IACFnoC,GAAA,EACC5zB,EAAA+7D,GAET/7D,EAzCJ,SAA6B+7D,EAAU9+C,GACrC,MAAMhlB,EAACA,EAAI,KAAME,EAAAA,EAAI,MAAQ4jE,GAAY,GACnCC,EAAa/+C,EAAKjd,OAClBA,EAAS,GAaR,OAZPid,EAAKiS,SAASxwB,SAAQ,EAAE3B,MAAAA,EAAOC,IAAAA,MACvBA,EAAA4+D,GAAgB7+D,EAAOC,EAAKg/D,GAClC,MAAM9tB,EAAQ8tB,EAAWj/D,GACnBkB,EAAO+9D,EAAWh/D,GACd,OAAN7E,GACF6H,EAAOtH,KAAK,CAACT,EAAGi2C,EAAMj2C,EAAGE,EAAAA,IACzB6H,EAAOtH,KAAK,CAACT,EAAGgG,EAAKhG,EAAGE,EAAAA,KACT,OAANF,IACT+H,EAAOtH,KAAK,CAACT,EAAAA,EAAGE,EAAG+1C,EAAM/1C,IACzB6H,EAAOtH,KAAK,CAACT,EAAAA,EAAGE,EAAG8F,EAAK9F,QAGrB6H,EAyBIi8D,CAAoBF,EAAU9+C,GAElCjd,EAAO9J,OAAS,IAAIihE,GAAY,CACrCn3D,OAAAA,EACA1I,QAAS,CAACowB,QAAS,GACnBkM,MAAAA,EACAoY,UAAWpY,IACR,KAEP,SAAAsoC,GAA0BtlE,GACjB,OAAAA,IAA0B,IAAhBA,EAAOukB,KAG1B,SAAwBghD,GAAAzkE,EAASkG,EAAOw+D,GAEtC,IAAIC,EADW3kE,EAAQkG,GACLud,KAClB,MAAMmhD,EAAU,CAAC1+D,GACb,IAAA9G,EACJ,IAAKslE,EACI,OAAAC,EAET,MAAgB,IAATA,IAAgD,IAA9BC,EAAQllE,QAAQilE,IAAc,CACjD,IAACxnE,EAAewnE,GACX,OAAAA,EAGT,GADAvlE,EAASY,EAAQ2kE,IACZvlE,EACI,OAAA,EAET,GAAIA,EAAOo+B,QACF,OAAAmnC,EAETC,EAAQ5jE,KAAK2jE,GACbA,EAAOvlE,EAAOqkB,KAET,OAAA,EAET,SAAqBohD,GAAAt/C,EAAMrf,EAAOuC,GAChC,MAAMk8D,EA6CR,SAAyBp/C,GACvB,MAAM3lB,EAAU2lB,EAAK3lB,QACfklE,EAAallE,EAAQ6jB,KAC3B,IAAIkhD,EAAOnnE,EAAesnE,GAAcA,EAAW1lE,OAAQ0lE,QAC9C,IAATH,IACKA,IAAE/kE,EAAQ6d,iBAEf,IAAS,IAATknD,GAA2B,OAATA,EACb,OAAA,EAET,IAAa,IAATA,EACK,MAAA,SAEF,OAAAA,EA1DMI,CAAgBx/C,GAC7B,GAAIroB,EAASynE,GACJ,OAAArhE,MAAMqhE,EAAKloE,QAAiBkoE,EAErC,IAAIvlE,EAASxB,WAAW+mE,GACxB,OAAIxnE,EAAeiC,IAAW4C,KAAKkB,MAAM9D,KAAYA,EAKvD,SAA2B4lE,EAAS9+D,EAAO9G,EAAQqJ,GACjC,MAAZu8D,GAA+B,MAAZA,IACrB5lE,EAAS8G,EAAQ9G,GAEnB,GAAIA,IAAW8G,GAAS9G,EAAS,GAAKA,GAAUqJ,EACvC,OAAA,EAEF,OAAArJ,EAXE6lE,CAAkBN,EAAK,GAAIz+D,EAAO9G,EAAQqJ,GAE5C,CAAC,SAAU,QAAS,MAAO,QAAS,SAAS/I,QAAQilE,IAAS,GAAKA,EAkF5E,SAAwBO,GAAA58D,EAAQ68D,EAAaC,GAC3C,MAAMC,EAAY,GAClB,IAAA,IAASlrD,EAAI,EAAGA,EAAIirD,EAAW5mE,OAAQ2b,IAAK,CAC1C,MAAMoL,EAAO6/C,EAAWjrD,IAClBq8B,MAACA,EAAOjwC,KAAAA,EAAAsd,MAAMA,GAASyhD,GAAU//C,EAAM4/C,EAAa,KACtD,MAACthD,GAAU2yB,GAASjwC,GAGxB,GAAIiwC,EACF6uB,EAAUE,QAAQ1hD,QAGlB,GADAvb,EAAOtH,KAAK6iB,IACPtd,EACH,MAIN+B,EAAOtH,QAAQqkE,GAEjB,SAAmBC,GAAA//C,EAAM4/C,EAAaxhE,GAC9B,MAAAkgB,EAAQ0B,EAAKnJ,YAAY+oD,EAAaxhE,GAC5C,IAAKkgB,EACI,MAAA,GAET,MAAM2hD,EAAa3hD,EAAMlgB,GACnB6zB,EAAWjS,EAAKiS,SAChB8sC,EAAa/+C,EAAKjd,OACxB,IAAIkuC,GAAQ,EACRjwC,GAAO,EACX,IAAA,IAASlI,EAAI,EAAGA,EAAIm5B,EAASh5B,OAAQH,IAAK,CACxC,MAAMw4B,EAAUW,EAASn5B,GACnBonE,EAAanB,EAAWztC,EAAQxxB,OAAO1B,GACvC+hE,EAAYpB,EAAWztC,EAAQvxB,KAAK3B,GACtC,GAAAmC,GAAW0/D,EAAYC,EAAYC,GAAY,CACjDlvB,EAAQgvB,IAAeC,EACvBl/D,EAAOi/D,IAAeE,EACtB,OAGG,MAAA,CAAClvB,MAAAA,EAAOjwC,KAAAA,EAAMsd,MAAAA,GAGvB,MAAgB8hD,GACd/5D,YAAYuZ,GACV5J,KAAKhb,EAAI4kB,EAAK5kB,EACdgb,KAAK9a,EAAI0kB,EAAK1kB,EACd8a,KAAKsH,OAASsC,EAAKtC,OAErBjX,YAAY6S,EAAKqY,EAAQ3R,GACjB,MAAA5kB,EAACA,EAAGE,EAAAA,EAAAoiB,OAAGA,GAAUtH,KAGvB,OAFAub,EAASA,GAAU,CAACzxB,MAAO,EAAGC,IAAKrD,GACnCwc,EAAI0E,IAAI5iB,EAAGE,EAAGoiB,EAAQiU,EAAOxxB,IAAKwxB,EAAOzxB,OAAO,IACxC8f,EAAK2R,OAEflrB,YAAYiY,GACJ,MAAAtjB,EAACA,EAAGE,EAAAA,EAAAoiB,OAAGA,GAAUtH,KACjB3W,EAAQif,EAAMjf,MACb,MAAA,CACLrE,EAAGA,EAAIyB,KAAKiJ,IAAIrG,GAASie,EACzBpiB,EAAGA,EAAIuB,KAAKgI,IAAIpF,GAASie,EACzBje,MAAAA,IAKN,SAAAykB,GAAoBnqB,GACZ,MAAA4e,MAACA,EAAO2F,KAAAkhD,EAAAp/C,KAAMA,GAAQrmB,EAC5B,GAAI/B,EAAewnE,GACjB,OAcJ,SAAwB7mD,EAAO5X,GACvB,MAAAmC,EAAOyV,EAAMylB,eAAer9B,GAE3B,OADSmC,GAAQyV,EAAMqxB,iBAAiBjpC,GAC9BmC,EAAKm6B,QAAU,KAjBvBojC,CAAe9nD,EAAO6mD,GAE/B,GAAa,UAATA,EACF,OApGJ,SAAyBzlE,GACjB,MAAAqgB,MAACA,EAAOvgB,MAAAkH,EAAAqf,KAAOA,GAAQrmB,EACvBoJ,EAAS,GACTkvB,EAAWjS,EAAKiS,SAChBquC,EAAetgD,EAAKjd,OACpB88D,EAUR,SAAuB7lD,EAAOrZ,GAC5B,MAAM4/D,EAAQ,GACRlrB,EAAQr7B,EAAM2gB,wBAAwB,QAC5C,IAAA,IAAS7hC,EAAI,EAAGA,EAAIu8C,EAAMp8C,OAAQH,IAAK,CACrC,MAAMgK,EAAOuyC,EAAMv8C,GACf,GAAAgK,EAAKrJ,QAAUkH,EACjB,MAEGmC,EAAKm9B,QACRsgC,EAAMP,QAAQl9D,EAAKm6B,SAGhB,OAAAsjC,EAtBYC,CAAcxmD,EAAOrZ,GACxCk/D,EAAWpkE,KAAKojE,GAAoB,CAAC7jE,EAAG,KAAME,EAAG8e,EAAM4E,QAASoB,IAChE,IAAA,IAASlnB,EAAI,EAAGA,EAAIm5B,EAASh5B,OAAQH,IAAK,CACxC,MAAMw4B,EAAUW,EAASn5B,GACzB,IAAA,IAAS8b,EAAI0c,EAAQxxB,MAAO8U,GAAK0c,EAAQvxB,IAAK6U,IAC7B+qD,GAAA58D,EAAQu9D,EAAa1rD,GAAIirD,GAG5C,OAAO,IAAI3F,GAAY,CAACn3D,OAAAA,EAAQ1I,QAAS,KAuFhComE,CAAgB9mE,GAEzB,GAAa,UAATylE,EACK,OAAA,EAET,MAAMN,EAWR,SAAyBnlE,GAEvB,IADcA,EAAOqgB,OAAS,IACpBi1B,yBACR,OAgBJ,SAAiCt1C,GACzB,MAAAqgB,MAACA,EAAOkE,KAAQkhD,GAAAzlE,EAChBU,EAAU2f,EAAM3f,QAChBpB,EAAS+gB,EAAMwlB,YAAYvmC,OAC3B6G,EAAQzF,EAAQxB,QAAUmhB,EAAM1b,IAAM0b,EAAM3b,IAC5CnH,EAzKR,SAAyBkoE,EAAMplD,EAAOuqB,GAChC,IAAArtC,EAUG,OARGA,EADG,UAATkoE,EACM76B,EACU,QAAT66B,EACDplD,EAAM3f,QAAQxB,QAAUmhB,EAAM3b,IAAM2b,EAAM1b,IACzC3G,EAASynE,GACVA,EAAKloE,MAEL8iB,EAAM+/B,eAET7iD,EA8JOwpE,CAAgBtB,EAAMplD,EAAOla,GACrCjG,EAAS,GACX,GAAAQ,EAAQ2uC,KAAK2F,SAAU,CACnB,MAAA/H,EAAS5sB,EAAMi1B,yBAAyB,EAAGnvC,GACjD,OAAO,IAAIsgE,GAAU,CACnBplE,EAAG4rC,EAAO5rC,EACVE,EAAG0rC,EAAO1rC,EACVoiB,OAAQtD,EAAMw0B,8BAA8Bt3C,KAGhD,IAAA,IAAS4B,EAAI,EAAGA,EAAIG,IAAUH,EACrBe,EAAA4B,KAAKue,EAAMi1B,yBAAyBn2C,EAAG5B,IAEzC,OAAA2C,EAlCE8mE,CAAwBhnE,GAEjC,OAEF,SAA+BA,GACvB,MAAAqgB,MAACA,EAAQ,GAAIkE,KAAQkhD,GAAAzlE,EACrB2iB,EAvKR,SAAyB8iD,EAAMplD,GAC7B,IAAIsC,EAAQ,KAUL,MATM,UAAT8iD,EACF9iD,EAAQtC,EAAM4E,OACI,QAATwgD,EACT9iD,EAAQtC,EAAM2E,IACLhnB,EAASynE,GACV9iD,EAAAtC,EAAMtW,iBAAiB07D,EAAKloE,OAC3B8iB,EAAMksB,eACf5pB,EAAQtC,EAAMksB,gBAET5pB,EA4JOskD,CAAgBxB,EAAMplD,GACpC,GAAIpiB,EAAe0kB,GAAQ,CACzB,MAAM6oB,EAAanrB,EAAMmsB,eAClB,MAAA,CACLnrC,EAAGmqC,EAAa7oB,EAAQ,KACxBphB,EAAGiqC,EAAa,KAAO7oB,GAGpB,OAAA,KAZAukD,CAAsBlnE,GAhBZmnE,CAAgBnnE,GACjC,OAAImlE,aAAoBsB,GACftB,EAEFD,GAAoBC,EAAU9+C,GA+CvC,SAAmB+gD,GAAA7nD,EAAKvf,EAAQ4kB,GAC9B,MAAM1kB,EAASiqB,GAAWnqB,IACpBqmB,KAACA,EAAMhG,MAAAA,EAAA1W,KAAOA,GAAQ3J,EACtBqnE,EAAWhhD,EAAK3lB,QAChBklE,EAAayB,EAAS9iD,KACtB7H,EAAQ2qD,EAAS9oD,iBACjB+oD,MAACA,EAAQ5qD,EAAOkqD,MAAAA,EAAQlqD,GAASkpD,GAAc,GACjD1lE,GAAUmmB,EAAKjd,OAAO9J,SACxB4lB,GAAS3F,EAAKqF,GAKlB,SAAgBrF,EAAKkd,GACnB,MAAMpW,KAACA,EAAMnmB,OAAAA,EAAAonE,MAAQA,EAAOV,MAAAA,EAAAhiD,KAAOA,QAAMvE,GAASoc,EAC5Ch4B,EAAW4hB,EAAK2W,MAAQ,QAAUP,EAAI9yB,KACxC4V,EAAA6C,OACa,MAAb3d,GAAoBmiE,IAAUU,IACnBC,GAAAhoD,EAAKrf,EAAQ0kB,EAAKI,KAC/BT,GAAKhF,EAAK,CAAC8G,KAAAA,EAAMnmB,OAAAA,EAAQsd,MAAO8pD,EAAOjnD,MAAAA,EAAO5b,SAAAA,IAC1C8a,EAAAiD,UACAjD,EAAA6C,OACSmlD,GAAAhoD,EAAKrf,EAAQ0kB,EAAKK,SAEjCV,GAAKhF,EAAK,CAAC8G,KAAAA,EAAMnmB,OAAAA,EAAQsd,MAAOopD,EAAOvmD,MAAAA,EAAO5b,SAAAA,IAC1C8a,EAAAiD,UAhBFglD,CAAOjoD,EAAK,CAAC8G,KAAAA,EAAMnmB,OAAAA,EAAQonE,MAAAA,EAAOV,MAAAA,EAAOhiD,KAAAA,EAAMvE,MAAAA,EAAO1W,KAAAA,IAC3Cyb,GAAA7F,IAiBf,SAAsBgoD,GAAAhoD,EAAKrf,EAAQunE,GAC3B,MAAAnvC,SAACA,SAAUlvB,GAAUlJ,EAC3B,IAAIo3C,GAAQ,EACRowB,GAAW,EACXnoD,EAAAwE,YACJ,IAAA,MAAW4T,KAAWW,EAAU,CACxB,MAAAnyB,MAACA,MAAOC,GAAOuxB,EACflJ,EAAarlB,EAAOjD,GACpB2tC,EAAY1qC,EAAO47D,GAAgB7+D,EAAOC,EAAKgD,IACjDkuC,GACE/3B,EAAA4E,OAAOsK,EAAWptB,EAAGotB,EAAWltB,GAC5B+1C,GAAA,IAEJ/3B,EAAA6E,OAAOqK,EAAWptB,EAAGomE,GACrBloD,EAAA6E,OAAOqK,EAAWptB,EAAGotB,EAAWltB,IAEtCmmE,IAAaxnE,EAAOi/D,YAAY5/C,EAAKoY,EAAS,CAAC2R,KAAMo+B,IACjDA,EACEnoD,EAAA2E,YAEA3E,EAAA6E,OAAO0vB,EAAUzyC,EAAGomE,GAGxBloD,EAAA6E,OAAOlkB,EAAOo3C,QAAQj2C,EAAGomE,GACzBloD,EAAA2E,YACA3E,EAAA4F,OAEN,SAAAZ,GAAchF,EAAKkd,GACjB,MAAMpW,KAACA,EAAAnmB,OAAMA,EAAQuE,SAAAA,EAAU+Y,cAAO6C,GAASoc,EACzCnE,EAlZR,SAAmBjS,EAAMnmB,EAAQuE,GAC/B,MAAM6zB,EAAWjS,EAAKiS,SAChBlvB,EAASid,EAAKjd,OACdu+D,EAAUznE,EAAOkJ,OACjB1H,EAAQ,GACd,IAAA,MAAWi2B,KAAWW,EAAU,CAC1B,IAAAnyB,MAACA,MAAOC,GAAOuxB,EACbvxB,EAAA4+D,GAAgB7+D,EAAOC,EAAKgD,GAClC,MAAMwuB,EAASmtC,GAAWtgE,EAAU2E,EAAOjD,GAAQiD,EAAOhD,GAAMuxB,EAAQlH,MACpE,IAACvwB,EAAOo4B,SAAU,CACpB52B,EAAMI,KAAK,CACT9B,OAAQ23B,EACRz3B,OAAQ03B,EACRzxB,MAAOiD,EAAOjD,GACdC,IAAKgD,EAAOhD,KAEd,SAEI,MAAAwhE,EAAiBvvC,GAAen4B,EAAQ03B,GAC9C,IAAA,MAAWiwC,KAAOD,EAAgB,CAC1B,MAAAE,EAAY/C,GAAWtgE,EAAUkjE,EAAQE,EAAI1hE,OAAQwhE,EAAQE,EAAIzhE,KAAMyhE,EAAIp3C,MAC3Es3C,EAAcrwC,GAAcC,EAASvuB,EAAQ0+D,GACnD,IAAA,MAAWE,KAAcD,EACvBrmE,EAAMI,KAAK,CACT9B,OAAQgoE,EACR9nE,OAAQ2nE,EACR1hE,MAAO,CAAAuG,CACJjI,GAAWwgE,GAASrtC,EAAQkwC,EAAW,QAAShlE,KAAK6B,MAExDyB,IAAK,CAAAsG,CACFjI,GAAWwgE,GAASrtC,EAAQkwC,EAAW,MAAOhlE,KAAK4B,SAMvD,OAAAhD,EA8WU++D,CAAUp6C,EAAMnmB,EAAQuE,GACzC,IAAA,MAAYzE,OAAQioE,EAAK/nE,OAAQ2nE,EAAK1hE,MAAAA,EAAAC,IAAOA,KAAQkyB,EAAU,CAC7D,MAAOnZ,OAAOZ,gBAACA,EAAkB7B,GAAS,IAAMurD,EAC1CC,GAAsB,IAAXhoE,EACbqf,EAAA6C,OACJ7C,EAAIgH,UAAYhI,EAChB4pD,GAAW5oD,EAAKc,EAAO6nD,GAAYnD,GAAWtgE,EAAU0B,EAAOC,IAC3DmZ,EAAAwE,YACJ,MAAM2jD,IAAarhD,EAAK84C,YAAY5/C,EAAK0oD,GACrC,IAAAx3C,EACJ,GAAIy3C,EAAU,CACRR,EACEnoD,EAAA2E,YAEekkD,GAAA7oD,EAAKrf,EAAQkG,EAAK3B,GAEjC,MAAA4jE,IAAenoE,EAAOi/D,YAAY5/C,EAAKsoD,EAAK,CAACv+B,KAAMo+B,EAAUxoE,SAAS,IAC5EuxB,EAAOi3C,GAAYW,EACd53C,GACgB23C,GAAA7oD,EAAKrf,EAAQiG,EAAO1B,GAGvC8a,EAAA2E,YACA3E,EAAAgF,KAAKkM,EAAO,UAAY,WACxBlR,EAAAiD,WAGR,SAAoB2lD,GAAA5oD,EAAKc,EAAOuX,GAC9B,MAAM5S,IAACA,EAAAC,OAAKA,GAAU5E,EAAMzB,MAAM0oB,WAC5B7iC,SAACA,EAAA0B,MAAUA,EAAOC,IAAAA,GAAOwxB,GAAU,GACxB,MAAbnzB,IACE8a,EAAAwE,YACJxE,EAAI+E,KAAKne,EAAO6e,EAAK5e,EAAMD,EAAO8e,EAASD,GACvCzF,EAAA4F,QAGR,SAA4BijD,GAAA7oD,EAAKrf,EAAQykB,EAAOlgB,GACxC,MAAA6jE,EAAoBpoE,EAAOgd,YAAYyH,EAAOlgB,GAChD6jE,GACE/oD,EAAA6E,OAAOkkD,EAAkBjnE,EAAGinE,EAAkB/mE,GAItD,IAAIzB,GAAQ,CACVzC,GAAI,SACJqP,oBAAoBkS,EAAO2pD,EAAO7nE,GAChC,MAAM6I,GAASqV,EAAM6C,KAAKhD,UAAY,IAAInf,OACpCwB,EAAU,GACZ,IAAAqI,EAAMhK,EAAGknB,EAAMrmB,EACnB,IAAKb,EAAI,EAAGA,EAAIoK,IAASpK,EACvBgK,EAAOyV,EAAMylB,eAAellC,GAC5BknB,EAAOld,EAAKm6B,QACHtjC,EAAA,KACLqmB,GAAQA,EAAK3lB,SAAW2lB,aAAgBk6C,KACjCvgE,EAAA,CACPs+B,QAAS1f,EAAMqxB,iBAAiB9wC,GAChCW,MAAOX,EACPolB,KAAMohD,GAAYt/C,EAAMlnB,EAAGoK,GAC3BqV,MAAAA,EACAjV,KAAMR,EAAK+3B,WAAWxgC,QAAQgf,UAC9BW,MAAOlX,EAAK23B,OACZza,KAAAA,IAGJld,EAAKq/D,QAAUxoE,EACfc,EAAQgB,KAAK9B,GAEf,IAAKb,EAAI,EAAGA,EAAIoK,IAASpK,EACvBa,EAASc,EAAQ3B,GACZa,IAA0B,IAAhBA,EAAOukB,OAGtBvkB,EAAOukB,KAAOghD,GAAezkE,EAAS3B,EAAGuB,EAAQ8kE,aAGrD94D,WAAWkS,EAAO2pD,EAAO7nE,GACjB,MAAAo6B,EAA4B,eAArBp6B,EAAQ+nE,SACf1oC,EAAWnhB,EAAMglC,+BACjBh/B,EAAOhG,EAAM0oB,UACnB,IAAA,IAASnoC,EAAI4gC,EAASzgC,OAAS,EAAGH,GAAK,IAAKA,EAAG,CACvC,MAAAa,EAAS+/B,EAAS5gC,GAAGqpE,QACtBxoE,IAGEA,EAAAqmB,KAAK0tB,oBAAoBnvB,EAAM5kB,EAAO2J,MACzCmxB,GAAQ96B,EAAOukB,MACP6iD,GAAAxoD,EAAMW,IAAKvf,EAAQ4kB,MAInClY,mBAAmBkS,EAAO2pD,EAAO7nE,GAC3B,GAAqB,uBAArBA,EAAQ+nE,SACV,OAEF,MAAM1oC,EAAWnhB,EAAMglC,+BACvB,IAAA,IAASzkD,EAAI4gC,EAASzgC,OAAS,EAAGH,GAAK,IAAKA,EAAG,CACvC,MAAAa,EAAS+/B,EAAS5gC,GAAGqpE,QACvBlD,GAAiBtlE,IACTonE,GAAAxoD,EAAMW,IAAKvf,EAAQ4e,EAAM0oB,aAIzC56B,kBAAkBkS,EAAO/f,EAAM6B,GACvB,MAAAV,EAASnB,EAAKsK,KAAKq/D,QACpBlD,GAAiBtlE,IAAgC,sBAArBU,EAAQ+nE,UAG/BrB,GAAAxoD,EAAMW,IAAKvf,EAAQ4e,EAAM0oB,YAErClpB,SAAU,CACRonD,WAAW,EACXiD,SAAU,sBAId,MAAMC,GAAa,CAACC,EAAW7kB,KAC7B,IAAI8kB,UAACA,EAAY9kB,EAAU+kB,SAAAA,EAAW/kB,GAAY6kB,EAK3C,OAJHA,EAAUG,gBACAF,EAAA9lE,KAAK4B,IAAIkkE,EAAW9kB,GAChC+kB,EAAWF,EAAUI,iBAAmBjmE,KAAK4B,IAAImkE,EAAU/kB,IAEtD,CACL+kB,SAAAA,EACAD,UAAAA,EACAI,WAAYlmE,KAAK6B,IAAIm/C,EAAU8kB,KAInC,MAAAK,WAAqB1zB,GACnB7oC,YAAY+xB,GACV2N,QACA/vB,KAAK6sD,QAAS,EACd7sD,KAAK8sD,eAAiB,GACtB9sD,KAAK+sD,aAAe,KACpB/sD,KAAKgtD,cAAe,EACpBhtD,KAAKuC,MAAQ6f,EAAO7f,MACpBvC,KAAK3b,QAAU+9B,EAAO/9B,QACtB2b,KAAKkD,IAAMkf,EAAOlf,IAClBlD,KAAKitD,iBAAc,EACnBjtD,KAAKktD,iBAAc,EACnBltD,KAAKmtD,gBAAa,EAClBntD,KAAKsX,eAAY,EACjBtX,KAAKyK,cAAW,EAChBzK,KAAK2I,SAAM,EACX3I,KAAK4I,YAAS,EACd5I,KAAKyI,UAAO,EACZzI,KAAK0I,WAAQ,EACb1I,KAAK8G,YAAS,EACd9G,KAAK0F,WAAQ,EACb1F,KAAKg+B,cAAW,EAChBh+B,KAAK69B,cAAW,EAChB79B,KAAKM,YAAS,EACdN,KAAKgjC,cAAW,EAElB3yC,OAAOoa,EAAU6M,EAAWD,GAC1BrX,KAAKyK,SAAWA,EAChBzK,KAAKsX,UAAYA,EACjBtX,KAAKg+B,SAAW3mB,EACXrX,KAAA4/B,gBACA5/B,KAAAotD,cACAptD,KAAA+gC,MAEP1wC,gBACM2P,KAAKmwB,gBACPnwB,KAAK0F,MAAQ1F,KAAKyK,SACbzK,KAAAyI,KAAOzI,KAAKg+B,SAASv1B,KAC1BzI,KAAK0I,MAAQ1I,KAAK0F,QAElB1F,KAAK8G,OAAS9G,KAAKsX,UACdtX,KAAA2I,IAAM3I,KAAKg+B,SAASr1B,IACzB3I,KAAK4I,OAAS5I,KAAK8G,QAGvBzW,cACQ,MAAAi8D,EAAYtsD,KAAK3b,QAAQklC,QAAU,GACzC,IAAI0jC,EAAc3qE,EAASgqE,EAAUe,eAAgB,CAACrtD,KAAKuC,OAAQvC,OAAS,GACxEssD,EAAUj8C,SACE48C,EAAAA,EAAY58C,QAAQ/pB,GAASgmE,EAAUj8C,OAAO/pB,EAAM0Z,KAAKuC,MAAM6C,SAE3EknD,EAAUx+B,OACEm/B,EAAAA,EAAYn/B,MAAK,CAAC3nC,EAAGC,IAAMkmE,EAAUx+B,KAAK3nC,EAAGC,EAAG4Z,KAAKuC,MAAM6C,SAEvEpF,KAAK3b,QAAQxB,SACHoqE,EAAApqE,UAEdmd,KAAKitD,YAAcA,EAErB58D,MACQ,MAAAhM,QAACA,MAAS6e,GAAOlD,KACnB,IAAC3b,EAAQq0C,QAEX,YADK14B,KAAA0F,MAAQ1F,KAAK8G,OAAS,GAG7B,MAAMwlD,EAAYjoE,EAAQklC,OACpB+jC,EAAY9gD,GAAO8/C,EAAU1pD,MAC7B6kC,EAAW6lB,EAAUjnE,KACrBg8C,EAAcriC,KAAKutD,uBACnBf,SAACA,EAAAG,WAAUA,GAAcN,GAAWC,EAAW7kB,GACrD,IAAI/hC,EAAOoB,EACX5D,EAAIN,KAAO0qD,EAAU/nD,OACjBvF,KAAKmwB,gBACPzqB,EAAQ1F,KAAKyK,SACb3D,EAAS9G,KAAKwtD,SAASnrB,EAAaoF,EAAU+kB,EAAUG,GAAc,KAEtE7lD,EAAS9G,KAAKsX,UACd5R,EAAQ1F,KAAKytD,SAASprB,EAAaoF,EAAU+kB,EAAUG,GAAc,IAEvE3sD,KAAK0F,MAAQjf,KAAK4B,IAAIqd,EAAOrhB,EAAQomB,UAAYzK,KAAKyK,UACtDzK,KAAK8G,OAASrgB,KAAK4B,IAAIye,EAAQziB,EAAQizB,WAAatX,KAAKsX,WAE3DjnB,SAASgyC,EAAaoF,EAAU+kB,EAAUG,GACxC,MAAMzpD,IAACA,EAAKuH,SAAAA,EAAUpmB,SAAUklC,QAAQ6S,QAACA,KAAap8B,KAChD0tD,EAAW1tD,KAAK8sD,eAAiB,GACjCK,EAAantD,KAAKmtD,WAAa,CAAC,GAChCpqD,EAAa4pD,EAAavwB,EAChC,IAAIuxB,EAActrB,EAClBn/B,EAAIiH,UAAY,OAChBjH,EAAIkH,aAAe,SACnB,IAAIwjD,GAAM,EACNjlD,GAAO5F,EAYJ,OAXP/C,KAAKitD,YAAYxhE,SAAQ,CAACirC,EAAY5zC,KACpC,MAAMw3B,EAAYkyC,EAAY/kB,EAAW,EAAKvkC,EAAIuC,YAAYixB,EAAW/sB,MAAMjE,OACrE,IAAN5iB,GAAWqqE,EAAWA,EAAWlqE,OAAS,GAAKq3B,EAAY,EAAI8hB,EAAU3xB,KAC5DkjD,GAAA5qD,EACfoqD,EAAWA,EAAWlqE,QAAcH,EAAA,EAAI,EAAI,IAAM,EAC3C6lB,GAAA5F,EACP6qD,KAEOF,EAAA5qE,GAAK,CAAC2lB,KAAM,EAAGE,IAAAA,EAAKilD,IAAAA,EAAKloD,MAAO4U,EAAWxT,OAAQ6lD,GACjDQ,EAAAA,EAAWlqE,OAAS,IAAMq3B,EAAY8hB,KAE5CuxB,EAETt9D,SAASgyC,EAAaoF,EAAU+kB,EAAUG,GACxC,MAAMzpD,IAACA,EAAKoU,UAAAA,EAAWjzB,SAAUklC,QAAQ6S,QAACA,KAAap8B,KACjD0tD,EAAW1tD,KAAK8sD,eAAiB,GACjCI,EAAcltD,KAAKktD,YAAc,GACjCW,EAAcv2C,EAAY+qB,EAChC,IAAIyrB,EAAa1xB,EACb2xB,EAAkB,EAClBC,EAAmB,EACnBvlD,EAAO,EACPwlD,EAAM,EAgBH,OAfPjuD,KAAKitD,YAAYxhE,SAAQ,CAACirC,EAAY5zC,KACpC,MAAMw3B,EAAYkyC,EAAY/kB,EAAW,EAAKvkC,EAAIuC,YAAYixB,EAAW/sB,MAAMjE,MAC3E5iB,EAAI,GAAKkrE,EAAmBrB,EAAa,EAAIvwB,EAAUyxB,IACzDC,GAAcC,EAAkB3xB,EAChC8wB,EAAYznE,KAAK,CAACigB,MAAOqoD,EAAiBjnD,OAAQknD,IAClDvlD,GAAQslD,EAAkB3xB,EAC1B6xB,IACAF,EAAkBC,EAAmB,GAE9BN,EAAA5qE,GAAK,CAAC2lB,KAAAA,EAAME,IAAKqlD,EAAkBC,IAAAA,EAAKvoD,MAAO4U,EAAWxT,OAAQ6lD,GACzDoB,EAAAtnE,KAAK6B,IAAIylE,EAAiBzzC,GAC5C0zC,GAAoBrB,EAAavwB,KAErB0xB,GAAAC,EACdb,EAAYznE,KAAK,CAACigB,MAAOqoD,EAAiBjnD,OAAQknD,IAC3CF,EAETz9D,iBACM,IAAC2P,KAAK3b,QAAQq0C,QAChB,OAEF,MAAM2J,EAAcriC,KAAKutD,uBAClBT,eAAgBY,EAAUrpE,SAASsI,MAACA,EAAO48B,QAAQ6S,QAACA,GAAAliB,IAAUA,IAAQla,KACvEkuD,EAAYj0C,GAAcC,EAAKla,KAAKyI,KAAMzI,KAAK0F,OACrD,GAAI1F,KAAKmwB,eAAgB,CACvB,IAAIy9B,EAAM,EACNnlD,EAAO7b,GAAeD,EAAOqT,KAAKyI,KAAO2zB,EAASp8B,KAAK0I,MAAQ1I,KAAKmtD,WAAWS,IACnF,IAAA,MAAWO,KAAUT,EACfE,IAAQO,EAAOP,MACjBA,EAAMO,EAAOP,IACNnlD,EAAA7b,GAAeD,EAAOqT,KAAKyI,KAAO2zB,EAASp8B,KAAK0I,MAAQ1I,KAAKmtD,WAAWS,KAE1EO,EAAAxlD,KAAO3I,KAAK2I,IAAM05B,EAAcjG,EACvC+xB,EAAO1lD,KAAOylD,EAAU7zC,WAAW6zC,EAAUlpE,EAAEyjB,GAAO0lD,EAAOzoD,OAC7D+C,GAAQ0lD,EAAOzoD,MAAQ02B,MAEpB,CACL,IAAI6xB,EAAM,EACNtlD,EAAM/b,GAAeD,EAAOqT,KAAK2I,IAAM05B,EAAcjG,EAASp8B,KAAK4I,OAAS5I,KAAKktD,YAAYe,GAAKnnD,QACtG,IAAA,MAAWqnD,KAAUT,EACfS,EAAOF,MAAQA,IACjBA,EAAME,EAAOF,IACPtlD,EAAA/b,GAAeD,EAAOqT,KAAK2I,IAAM05B,EAAcjG,EAASp8B,KAAK4I,OAAS5I,KAAKktD,YAAYe,GAAKnnD,SAEpGqnD,EAAOxlD,IAAMA,EACNwlD,EAAA1lD,MAAQzI,KAAKyI,KAAO2zB,EAC3B+xB,EAAO1lD,KAAOylD,EAAU7zC,WAAW6zC,EAAUlpE,EAAEmpE,EAAO1lD,MAAO0lD,EAAOzoD,OACpEiD,GAAOwlD,EAAOrnD,OAASs1B,GAI7B/rC,eACE,MAAiC,QAA1B2P,KAAK3b,QAAQw5C,UAAgD,WAA1B79B,KAAK3b,QAAQw5C,SAEzDxtC,OACM,GAAA2P,KAAK3b,QAAQq0C,QAAS,CACxB,MAAMx1B,EAAMlD,KAAKkD,IACjB2F,GAAS3F,EAAKlD,MACTA,KAAAouD,QACMrlD,GAAA7F,IAGf7S,QACE,MAAOhM,QAASulB,EAAMsjD,YAAAA,EAAAC,WAAaA,MAAYjqD,GAAOlD,MAChDrT,MAACA,EAAO48B,OAAQ+iC,GAAa1iD,EAC7BykD,EAAetsD,GAASZ,MACxB+sD,EAAYj0C,GAAcrQ,EAAKsQ,IAAKla,KAAKyI,KAAMzI,KAAK0F,OACpD4nD,EAAY9gD,GAAO8/C,EAAU1pD,OAC5BzB,MAAOmtD,EAAAlyB,QAAWA,GAAWkwB,EAC9B7kB,EAAW6lB,EAAUjnE,KACrBkoE,EAAe9mB,EAAW,EAC5B,IAAA+mB,EACCxuD,KAAAknC,YACDhkC,EAAAiH,UAAY+jD,EAAU/jD,UAAU,QACpCjH,EAAIkH,aAAe,SACnBlH,EAAIqH,UAAY,GAChBrH,EAAIN,KAAO0qD,EAAU/nD,OACrB,MAAMinD,SAACA,EAAAD,UAAUA,EAAWI,WAAAA,GAAcN,GAAWC,EAAW7kB,GAqD1DtX,EAAenwB,KAAKmwB,eACpBkS,EAAcriC,KAAKutD,sBAEdiB,EADPr+B,EACO,CACPnrC,EAAG4H,GAAeD,EAAOqT,KAAKyI,KAAO2zB,EAASp8B,KAAK0I,MAAQykD,EAAW,IACtEjoE,EAAG8a,KAAK2I,IAAMyzB,EAAUiG,EACxBr4B,KAAM,GAGC,CACPhlB,EAAGgb,KAAKyI,KAAO2zB,EACfl3C,EAAG0H,GAAeD,EAAOqT,KAAK2I,IAAM05B,EAAcjG,EAASp8B,KAAK4I,OAASskD,EAAY,GAAGpmD,QACxFkD,KAAM,GAGYyQ,GAAAza,KAAKkD,IAAK0G,EAAK6kD,eACrC,MAAM1rD,EAAa4pD,EAAavwB,EAChCp8B,KAAKitD,YAAYxhE,SAAQ,CAACirC,EAAY5zC,KAChCogB,EAAAoH,YAAcosB,EAAW43B,WAAaA,EACtCprD,EAAAgH,UAAYwsB,EAAW43B,WAAaA,EACxC,MAAM9oD,EAAYtC,EAAIuC,YAAYixB,EAAW/sB,MAAMjE,MAC7CyE,EAAY+jD,EAAU/jD,UAAUusB,EAAWvsB,YAAcusB,EAAWvsB,UAAYmiD,EAAUniD,YAC1FzE,EAAQ8mD,EAAW+B,EAAe/oD,EACxC,IAAIxgB,EAAIwpE,EAAOxpE,EACXE,EAAIspE,EAAOtpE,EACfgpE,EAAUQ,SAAS1uD,KAAK0F,OACpByqB,EACErtC,EAAI,GAAKkC,EAAI0gB,EAAQ02B,EAAUp8B,KAAK0I,QACtCxjB,EAAIspE,EAAOtpE,GAAK6d,EACTyrD,EAAAxkD,OACHhlB,EAAAwpE,EAAOxpE,EAAI4H,GAAeD,EAAOqT,KAAKyI,KAAO2zB,EAASp8B,KAAK0I,MAAQykD,EAAWqB,EAAOxkD,QAElFlnB,EAAI,GAAKoC,EAAI6d,EAAa/C,KAAK4I,SACxC5jB,EAAIwpE,EAAOxpE,EAAIA,EAAIkoE,EAAYsB,EAAOxkD,MAAMtE,MAAQ02B,EAC7CoyB,EAAAxkD,OACP9kB,EAAIspE,EAAOtpE,EAAI0H,GAAeD,EAAOqT,KAAK2I,IAAM05B,EAAcjG,EAASp8B,KAAK4I,OAASskD,EAAYsB,EAAOxkD,MAAMlD,UAvF5F,SAAS9hB,EAAGE,EAAGwxC,GACnC,GAAI3uC,MAAMykE,IAAaA,GAAY,GAAKzkE,MAAMwkE,IAAcA,EAAY,EACtE,OAEErpD,EAAA6C,OACE,MAAAwE,EAAYtoB,EAAey0C,EAAWnsB,UAAW,GAQvD,GAPIrH,EAAAgH,UAAYjoB,EAAey0C,EAAWxsB,UAAWmkD,GACjDnrD,EAAAq/C,QAAUtgE,EAAey0C,EAAW6rB,QAAS,QAC7Cr/C,EAAAujC,eAAiBxkD,EAAey0C,EAAW+P,eAAgB,GAC3DvjC,EAAAq+C,SAAWt/D,EAAey0C,EAAW6qB,SAAU,SACnDr+C,EAAIqH,UAAYA,EACZrH,EAAAoH,YAAcroB,EAAey0C,EAAWpsB,YAAa+jD,GACrDnrD,EAAAsjC,YAAYvkD,EAAey0C,EAAWi4B,SAAU,KAChDrC,EAAUG,cAAe,CAC3B,MAAMmC,EAAc,CAClBtnD,OAAQilD,EAAY9lE,KAAKooE,MAAQ,EACjCznD,WAAYsvB,EAAWtvB,WACvBC,SAAUqvB,EAAWrvB,SACrBc,YAAaoC,GAETyrB,EAAUk4B,EAAU9zC,MAAMp1B,EAAGwnE,EAAW,GAE9CxlD,GAAgB9D,EAAK0rD,EAAa54B,EADlB9wC,EAAIqpE,EACgCjC,EAAUI,iBAAmBF,OAC5E,CACL,MAAMsC,EAAU5pE,EAAIuB,KAAK6B,KAAKm/C,EAAW8kB,GAAa,EAAG,GACnDwC,EAAWb,EAAU7zC,WAAWr1B,EAAGwnE,GACnClN,EAAehzC,GAAcoqB,EAAW4oB,cAC1Cp8C,EAAAwE,YACApmB,OAAOwgB,OAAOw9C,GAAcpL,MAAKnvD,GAAW,IAANA,IACxCsmB,GAAmBnI,EAAK,CACtBle,EAAG+pE,EACH7pE,EAAG4pE,EACH57D,EAAGs5D,EACH37D,EAAG07D,EACHjlD,OAAQg4C,IAGNp8C,EAAA+E,KAAK8mD,EAAUD,EAAStC,EAAUD,GAEpCrpD,EAAAgF,OACc,IAAdqC,GACErH,EAAAkF,SAGJlF,EAAAiD,UA8CJ6oD,CADcd,EAAUlpE,EAAEA,GACLE,EAAGwxC,GACpB1xC,EDj4OK,EAAC2H,EAAO8b,EAAMC,EAAOwR,IAE3BvtB,KADOutB,EAAM,OAAS,SACJxR,EAAkB,WAAV/b,GAAsB8b,EAAOC,GAAS,EAAID,EC+3OnEwmD,CAAO9kD,EAAWnlB,EAAIwnE,EAAW+B,EAAcp+B,EAAenrC,EAAI0gB,EAAQ1F,KAAK0I,MAAOkB,EAAKsQ,KA7ChF,SAASl1B,EAAGE,EAAGwxC,GAC9BhtB,GAAWxG,EAAKwzB,EAAW/sB,KAAM3kB,EAAGE,EAAKynE,EAAa,EAAIW,EAAW,CACnE1iD,cAAe8rB,EAAWzM,OAC1B9f,UAAW+jD,EAAU/jD,UAAUusB,EAAWvsB,aA2CnCO,CAAAwjD,EAAUlpE,EAAEA,GAAIE,EAAGwxC,GACxBvG,EACFq+B,EAAOxpE,GAAK0gB,EAAQ02B,EAEpBoyB,EAAOtpE,GAAK6d,KAGKgY,GAAA/a,KAAKkD,IAAK0G,EAAK6kD,eAEtCp+D,YACE,MAAMuZ,EAAO5J,KAAK3b,QACZ89C,EAAYv4B,EAAKypB,MACjB67B,EAAY1iD,GAAO21B,EAAUv/B,MAC7BusD,EAAe5iD,GAAU41B,EAAU/F,SACrC,IAAC+F,EAAUzJ,QACb,OAEF,MAAMw1B,EAAYj0C,GAAcrQ,EAAKsQ,IAAKla,KAAKyI,KAAMzI,KAAK0F,OACpDxC,EAAMlD,KAAKkD,IACX26B,EAAWsE,EAAUtE,SACrB0wB,EAAeW,EAAU7oE,KAAO,EAChC+oE,EAA6BD,EAAaxmD,IAAM4lD,EAClD,IAAArpE,EACAujB,EAAOzI,KAAKyI,KACZgC,EAAWzK,KAAK0F,MACpB,GAAI1F,KAAKmwB,eACI1lB,EAAAhkB,KAAK6B,OAAO0X,KAAKmtD,YAC5BjoE,EAAI8a,KAAK2I,IAAMymD,EACf3mD,EAAO7b,GAAegd,EAAKjd,MAAO8b,EAAMzI,KAAK0I,MAAQ+B,OAChD,CACC,MAAA6M,EAAYtX,KAAKktD,YAAY5tC,QAAO,CAACC,EAAKl5B,IAASI,KAAK6B,IAAIi3B,EAAKl5B,EAAKygB,SAAS,GACrF5hB,EAAIkqE,EAA6BxiE,GAAegd,EAAKjd,MAAOqT,KAAK2I,IAAK3I,KAAK4I,OAAS0O,EAAY1N,EAAK2f,OAAO6S,QAAUp8B,KAAKutD,uBAE7H,MAAMvoE,EAAI4H,GAAeixC,EAAUp1B,EAAMA,EAAOgC,GAC5CvH,EAAAiH,UAAY+jD,EAAU/jD,UAAUzd,GAAmBmxC,IACvD36B,EAAIkH,aAAe,SACnBlH,EAAIoH,YAAc63B,EAAUhhC,MAC5B+B,EAAIgH,UAAYi4B,EAAUhhC,MAC1B+B,EAAIN,KAAOssD,EAAU3pD,OACrBmE,GAAWxG,EAAKi/B,EAAUx4B,KAAM3kB,EAAGE,EAAGgqE,GAExC7+D,sBACQ,MAAA8xC,EAAYniC,KAAK3b,QAAQgvC,MACzB67B,EAAY1iD,GAAO21B,EAAUv/B,MAC7BusD,EAAe5iD,GAAU41B,EAAU/F,SACzC,OAAO+F,EAAUzJ,QAAUw2B,EAAUnsD,WAAaosD,EAAaroD,OAAS,EAE1EzW,iBAAiBrL,EAAGE,GAClB,IAAIpC,EAAGusE,EAAQC,EACX,GAAA/kE,GAAWvF,EAAGgb,KAAKyI,KAAMzI,KAAK0I,QAC7Bne,GAAWrF,EAAG8a,KAAK2I,IAAK3I,KAAK4I,QAEhC,IADA0mD,EAAKtvD,KAAK8sD,eACLhqE,EAAI,EAAGA,EAAIwsE,EAAGrsE,SAAUH,EAE3B,GADAusE,EAASC,EAAGxsE,GACRyH,GAAWvF,EAAGqqE,EAAO5mD,KAAM4mD,EAAO5mD,KAAO4mD,EAAO3pD,QAC/Cnb,GAAWrF,EAAGmqE,EAAO1mD,IAAK0mD,EAAO1mD,IAAM0mD,EAAOvoD,QACjD,OAAO9G,KAAKitD,YAAYnqE,GAIvB,OAAA,KAETuN,YAAYzH,GACV,MAAMghB,EAAO5J,KAAK3b,QAClB,IAmBJ,SAAoBhD,EAAMuoB,GACxB,IAAc,iBAAwB,aAATvoB,KAA8BuoB,EAAAjG,SAAWiG,EAAK2lD,SAClE,OAAA,EAET,GAAI3lD,EAAKhG,UAAqB,UAAAviB,GAAoB,YAATA,GAChC,OAAA,EAEF,OAAA,EA1BAmuE,CAAW5mE,EAAEvH,KAAMuoB,GACtB,OAEF,MAAM6lD,EAAczvD,KAAK0vD,iBAAiB9mE,EAAE5D,EAAG4D,EAAE1D,GACjD,GAAe,cAAX0D,EAAEvH,MAAmC,aAAXuH,EAAEvH,KAAqB,CACnD,MAAM4nB,EAAWjJ,KAAK+sD,aAChB4C,GApWWvpE,EAoWqBqpE,EApWT,QAAftpE,EAoWc8iB,IApWe,OAAN7iB,GAAcD,EAAE3C,eAAiB4C,EAAE5C,cAAgB2C,EAAE1C,QAAU2C,EAAE3C,OAqWlGwlB,IAAa0mD,GACfrtE,EAASsnB,EAAK2lD,QAAS,CAAC3mE,EAAGqgB,EAAUjJ,MAAOA,MAE9CA,KAAK+sD,aAAe0C,EAChBA,IAAgBE,GAClBrtE,EAASsnB,EAAKjG,QAAS,CAAC/a,EAAG6mE,EAAazvD,MAAOA,WAExCyvD,GACTntE,EAASsnB,EAAKhG,QAAS,CAAChb,EAAG6mE,EAAazvD,MAAOA,MA7WlC,IAAC7Z,EAAGC,GA0XvB,IAAIwpE,GAAgB,CAClB5uE,GAAI,SACJ6uE,SAAUjD,GACVv8D,MAAMkS,EAAO2pD,EAAO7nE,GACZ,MAAAoyC,EAASl0B,EAAMk0B,OAAS,IAAIm2B,GAAO,CAAC1pD,IAAKX,EAAMW,IAAK7e,QAAAA,EAASke,MAAAA,IAC3D8rC,GAAA/rB,UAAU/f,EAAOk0B,EAAQpyC,GACjCgqD,GAAQoM,OAAOl4C,EAAOk0B,IAExBpmC,KAAKkS,GACK8rC,GAAA0N,UAAUx5C,EAAOA,EAAMk0B,eACxBl0B,EAAMk0B,QAEfpmC,aAAakS,EAAO2pD,EAAO7nE,GACzB,MAAMoyC,EAASl0B,EAAMk0B,OACb4X,GAAA/rB,UAAU/f,EAAOk0B,EAAQpyC,GACjCoyC,EAAOpyC,QAAUA,GAEnBgM,YAAYkS,GACV,MAAMk0B,EAASl0B,EAAMk0B,OACdA,EAAA22B,cACA32B,EAAAq5B,kBAETz/D,WAAWkS,EAAO/f,GACXA,EAAK07D,QACF37C,EAAAk0B,OAAOs5B,YAAYvtE,EAAK28B,QAGlCpd,SAAU,CACR22B,SAAS,EACTmF,SAAU,MACVlxC,MAAO,SACPq2C,UAAU,EACVngD,SAAS,EACTyd,OAAQ,IACRjQ,QAAQzH,EAAG8tC,EAAYD,GACrB,MAAM9rC,EAAQ+rC,EAAWlzC,aACnBwsE,EAAKv5B,EAAOl0B,MACdytD,EAAGp8B,iBAAiBjpC,IACtBqlE,EAAG9tC,KAAKv3B,GACR+rC,EAAWzM,QAAS,IAEpB+lC,EAAGjuC,KAAKp3B,GACR+rC,EAAWzM,QAAS,IAGxBtmB,QAAS,KACT4rD,QAAS,KACThmC,OAAQ,CACNpoB,MAAQ+B,GAAQA,EAAIX,MAAMle,QAAQ8c,MAClCqrD,SAAU,GACVpwB,QAAS,GACT/rC,eAAekS,GACP,MAAAH,EAAWG,EAAM6C,KAAKhD,UACrBmnB,QAAQkjC,cAACA,EAAArlD,WAAeA,YAAY+C,EAAWhJ,MAAAd,IAAUkC,EAAMk0B,OAAOpyC,QAC7E,OAAOke,EAAMohB,yBAAyB//B,KAAKkJ,IACzC,MAAMgW,EAAQhW,EAAK+3B,WAAW/L,SAAS2zC,EAAgB,OAAI,GACrDtkD,EAAcoE,GAAUzJ,EAAMqF,aAC7B,MAAA,CACLwB,KAAMvH,EAAStV,EAAKrJ,OAAOgnC,MAC3BvgB,UAAWpH,EAAMZ,gBACjBosD,UAAWjuD,EACX4pB,QAASn9B,EAAKm1B,QACdsgC,QAASz/C,EAAMqa,eACfwxC,SAAU7rD,EAAMsa,WAChBqpB,eAAgB3jC,EAAMua,iBACtBkkC,SAAUz+C,EAAMwa,gBAChB/S,WAAYpC,EAAYzC,MAAQyC,EAAYrB,QAAU,EACtDwD,YAAaxH,EAAMX,YACnBiF,WAAYA,GAActE,EAAMsE,WAChCC,SAAUvE,EAAMuE,SAChB8C,UAAWA,GAAarH,EAAMqH,UAC9Bm1C,aAAc,EACd97D,aAAcsJ,EAAKrJ,SAEpBuc,QAGPqzB,MAAO,CACLlyB,MAAQ+B,GAAQA,EAAIX,MAAMle,QAAQ8c,MAClCu3B,SAAS,EACTmF,SAAU,SACVl0B,KAAM,KAGVnI,YAAa,CACXuD,YAAcV,IAAUA,EAAKW,WAAW,MACxCukB,OAAQ,CACNxkB,YAAcV,IAAU,CAAC,iBAAkB,SAAU,QAAQ0K,SAAS1K,MAK5E,MAAA4rD,WAAoB/2B,GAClB7oC,YAAY+xB,GACV2N,QACA/vB,KAAKuC,MAAQ6f,EAAO7f,MACpBvC,KAAK3b,QAAU+9B,EAAO/9B,QACtB2b,KAAKkD,IAAMkf,EAAOlf,IAClBlD,KAAKkwD,cAAW,EAChBlwD,KAAK2I,SAAM,EACX3I,KAAK4I,YAAS,EACd5I,KAAKyI,UAAO,EACZzI,KAAK0I,WAAQ,EACb1I,KAAK0F,WAAQ,EACb1F,KAAK8G,YAAS,EACd9G,KAAK69B,cAAW,EAChB79B,KAAKM,YAAS,EACdN,KAAKgjC,cAAW,EAElB3yC,OAAOoa,EAAU6M,GACf,MAAM1N,EAAO5J,KAAK3b,QAGd,GAFJ2b,KAAKyI,KAAO,EACZzI,KAAK2I,IAAM,GACNiB,EAAK8uB,QAER,YADA14B,KAAK0F,MAAQ1F,KAAK8G,OAAS9G,KAAK0I,MAAQ1I,KAAK4I,OAAS,GAGnD5I,KAAA0F,MAAQ1F,KAAK0I,MAAQ+B,EACrBzK,KAAA8G,OAAS9G,KAAK4I,OAAS0O,EAC5B,MAAMsuB,EAAYzkD,EAAQyoB,EAAKD,MAAQC,EAAKD,KAAK1mB,OAAS,EACrD+c,KAAAkwD,SAAW3jD,GAAU3C,EAAKwyB,SAC/B,MAAM+zB,EAAWvqB,EAAYp5B,GAAO5C,EAAKhH,MAAMG,WAAa/C,KAAKkwD,SAASppD,OACtE9G,KAAKmwB,eACPnwB,KAAK8G,OAASqpD,EAEdnwD,KAAK0F,MAAQyqD,EAGjB9/D,eACQ,MAAA0lB,EAAM/V,KAAK3b,QAAQw5C,SAClB,MAAQ,QAAR9nB,GAAyB,WAARA,EAE1B1lB,UAAU0iC,GACR,MAAMpqB,IAACA,EAAAF,KAAKA,EAAMG,OAAAA,EAAAF,MAAQA,UAAOrkB,GAAW2b,KACtCrT,EAAQtI,EAAQsI,MACtB,IACI8d,EAAUo8B,EAAQC,EADlBz/B,EAAW,EAkBR,OAhBHrH,KAAKmwB,gBACE0W,EAAAj6C,GAAeD,EAAO8b,EAAMC,GACrCo+B,EAASn+B,EAAMoqB,EACftoB,EAAW/B,EAAQD,IAEM,SAArBpkB,EAAQw5C,UACVgJ,EAASp+B,EAAOsqB,EACP+T,EAAAl6C,GAAeD,EAAOic,EAAQD,GACvCtB,GAAgB,GAAL7gB,IAEXqgD,EAASn+B,EAAQqqB,EACR+T,EAAAl6C,GAAeD,EAAOgc,EAAKC,GACpCvB,EAAgB,GAAL7gB,GAEbikB,EAAW7B,EAASD,GAEf,CAACk+B,OAAAA,EAAQC,OAAAA,EAAQr8B,SAAAA,EAAUpD,SAAAA,GAEpChX,OACE,MAAM6S,EAAMlD,KAAKkD,IACX0G,EAAO5J,KAAK3b,QACd,IAACulB,EAAK8uB,QACR,OAEI,MAAA03B,EAAW5jD,GAAO5C,EAAKhH,MAEvBmwB,EADaq9B,EAASrtD,WACA,EAAI/C,KAAKkwD,SAASvnD,KACxCk+B,OAACA,EAAQC,OAAAA,EAAAr8B,SAAQA,EAAUpD,SAAAA,GAAYrH,KAAKqwD,UAAUt9B,GAC5DrpB,GAAWxG,EAAK0G,EAAKD,KAAM,EAAG,EAAGymD,EAAU,CACzCjvD,MAAOyI,EAAKzI,MACZsJ,SAAAA,EACApD,SAAAA,EACA8C,UAAWzd,GAAmBkd,EAAKjd,OACnCyd,aAAc,SACdH,YAAa,CAAC48B,EAAQC,MAc5B,IAAIwpB,GAAe,CACjBtvE,GAAI,QACJ6uE,SAAUI,GACV5/D,MAAMkS,EAAO2pD,EAAO7nE,IAbtB,SAAqBke,EAAO4/B,GACpB,MAAA9O,EAAQ,IAAI48B,GAAM,CACtB/sD,IAAKX,EAAMW,IACX7e,QAAS89C,EACT5/B,MAAAA,IAEM8rC,GAAA/rB,UAAU/f,EAAO8wB,EAAO8O,GAChCkM,GAAQoM,OAAOl4C,EAAO8wB,GACtB9wB,EAAMguD,WAAal9B,EAMjBm9B,CAAYjuD,EAAOle,IAErBgM,KAAKkS,GACH,MAAMguD,EAAahuD,EAAMguD,WACzBliB,GAAQ0N,UAAUx5C,EAAOguD,UAClBhuD,EAAMguD,YAEflgE,aAAakS,EAAO2pD,EAAO7nE,GACzB,MAAMgvC,EAAQ9wB,EAAMguD,WACZliB,GAAA/rB,UAAU/f,EAAO8wB,EAAOhvC,GAChCgvC,EAAMhvC,QAAUA,GAElB0d,SAAU,CACRpV,MAAO,SACP+rC,SAAS,EACT91B,KAAM,CACJtC,OAAQ,QAEV0iC,UAAU,EACV5G,QAAS,GACTyB,SAAU,MACVl0B,KAAM,GACNrJ,OAAQ,KAEVg5B,cAAe,CACbn4B,MAAO,SAETK,YAAa,CACXuD,aAAa,EACbE,YAAY,IAIhB,MAAMrhB,GAAM,IAAI6sE,QAChB,IAAIC,GAAkB,CACpB1vE,GAAI,WACJqP,MAAMkS,EAAO2pD,EAAO7nE,GACZ,MAAAgvC,EAAQ,IAAI48B,GAAM,CACtB/sD,IAAKX,EAAMW,IACX7e,QAAAA,EACAke,MAAAA,IAEM8rC,GAAA/rB,UAAU/f,EAAO8wB,EAAOhvC,GAChCgqD,GAAQoM,OAAOl4C,EAAO8wB,GACtBzvC,GAAI+d,IAAIY,EAAO8wB,IAEjBhjC,KAAKkS,GACK8rC,GAAA0N,UAAUx5C,EAAO3e,GAAIuqB,IAAI5L,IACjC3e,GAAIqsB,OAAO1N,IAEblS,aAAakS,EAAO2pD,EAAO7nE,GACnB,MAAAgvC,EAAQzvC,GAAIuqB,IAAI5L,GACd8rC,GAAA/rB,UAAU/f,EAAO8wB,EAAOhvC,GAChCgvC,EAAMhvC,QAAUA,GAElB0d,SAAU,CACRpV,MAAO,SACP+rC,SAAS,EACT91B,KAAM,CACJtC,OAAQ,UAEV0iC,UAAU,EACV5G,QAAS,EACTyB,SAAU,MACVl0B,KAAM,GACNrJ,OAAQ,MAEVg5B,cAAe,CACbn4B,MAAO,SAETK,YAAa,CACXuD,aAAa,EACbE,YAAY,IAIhB,MAAM0rD,GAAc,CAClBtgE,QAAQ1E,GACF,IAACA,EAAM1I,OACF,OAAA,EAET,IAAIH,EAAGC,EACHiC,EAAI,EACJE,EAAI,EACJgI,EAAQ,EACP,IAAApK,EAAI,EAAGC,EAAM4I,EAAM1I,OAAQH,EAAIC,IAAOD,EAAG,CACtC,MAAA81B,EAAKjtB,EAAM7I,GAAG2yB,QAChB,GAAAmD,GAAMA,EAAGg4C,WAAY,CACvB,MAAM76C,EAAM6C,EAAGi4C,kBACf7rE,GAAK+wB,EAAI/wB,EACTE,GAAK6wB,EAAI7wB,IACPgI,GAGC,MAAA,CACLlI,EAAGA,EAAIkI,EACPhI,EAAGA,EAAIgI,IAGXmD,QAAQ1E,EAAOmlE,GACT,IAACnlE,EAAM1I,OACF,OAAA,EAET,IAGIH,EAAGC,EAAKguE,EAHR/rE,EAAI8rE,EAAc9rE,EAClBE,EAAI4rE,EAAc5rE,EAClBgmD,EAAcrpD,OAAOgF,kBAEpB,IAAA/D,EAAI,EAAGC,EAAM4I,EAAM1I,OAAQH,EAAIC,IAAOD,EAAG,CACtC,MAAA81B,EAAKjtB,EAAM7I,GAAG2yB,QAChB,GAAAmD,GAAMA,EAAGg4C,WAAY,CACvB,MACMngE,EAAIjH,EAAsBsnE,EADjBl4C,EAAGwyB,kBAEd36C,EAAIy6C,IACQA,EAAAz6C,EACGsgE,EAAAn4C,IAIvB,GAAIm4C,EAAgB,CAClB,MAAMC,EAAKD,EAAeF,kBAC1B7rE,EAAIgsE,EAAGhsE,EACPE,EAAI8rE,EAAG9rE,EAEF,MAAA,CACLF,EAAAA,EACAE,EAAAA,KAIN,SAAA+rE,GAAsB3oC,EAAM4oC,GAQnB,OAPHA,IACE/vE,EAAQ+vE,GACJ9vE,MAAAG,UAAUkE,KAAK/C,MAAM4lC,EAAM4oC,GAEjC5oC,EAAK7iC,KAAKyrE,IAGP5oC,EAET,SAAA6oC,GAAuBtrE,GAChB,OAAe,iBAARA,GAAoBA,aAAeurE,SAAWvrE,EAAI1B,QAAQ,OAAY,EACzE0B,EAAIP,MAAM,MAEZO,EAET,SAAAwrE,GAA2B9uD,EAAOjc,GAC1B,MAAAmvB,QAACA,EAASjyB,aAAAA,EAAcC,MAASkH,GAAArE,EACjCu+B,EAAatiB,EAAMylB,eAAexkC,GAAcqhC,YAChD4F,MAACA,EAAAvpC,MAAOA,GAAS2jC,EAAWysC,iBAAiB3mE,GAC5C,MAAA,CACL4X,MAAAA,EACAkoB,MAAAA,EACA5Y,OAAQgT,EAAW2F,UAAU7/B,GAC7B0gC,IAAK9oB,EAAM6C,KAAKhD,SAAS5e,GAAc4hB,KAAKza,GAC5CmsC,eAAgB51C,EAChB+lC,QAASpC,EAAWqC,aACpBkE,UAAWzgC,EACXnH,aAAAA,EACAiyB,QAAAA,GAGJ,SAAA87C,GAAwBn+B,EAAS/uC,GACzB,MAAA6e,EAAMkwB,EAAQ7wB,MAAMW,KACpBsuD,KAACA,EAAMC,OAAAA,EAAAp+B,MAAQA,GAASD,GACxBo5B,SAACA,YAAUD,GAAaloE,EACxBqtE,EAAWllD,GAAOnoB,EAAQqtE,UAC1BxC,EAAY1iD,GAAOnoB,EAAQ6qE,WAC3ByC,EAAanlD,GAAOnoB,EAAQstE,YAC5BC,EAAiBv+B,EAAMpwC,OACvB4uE,EAAkBJ,EAAOxuE,OACzB6uE,EAAoBN,EAAKvuE,OACzBm5C,EAAU7vB,GAAUloB,EAAQ+3C,SAClC,IAAIt1B,EAASs1B,EAAQt1B,OACjBpB,EAAQ,EACRqsD,EAAqBP,EAAKlyC,QAAO,CAACpyB,EAAO8kE,IAAa9kE,EAAQ8kE,EAASC,OAAOhvE,OAAS+uE,EAASnoD,MAAM5mB,OAAS+uE,EAASE,MAAMjvE,QAAQ,GAO1I,GANA8uE,GAAsB3+B,EAAQ++B,WAAWlvE,OAASmwC,EAAQg/B,UAAUnvE,OAChE2uE,IACF9qD,GAAU8qD,EAAiB1C,EAAUnsD,cAClB,GAAK1e,EAAQguE,aAC/BhuE,EAAQiuE,mBAEPP,EAAoB,CAEZjrD,GAAAgrD,GADaztE,EAAQkuE,cAAgB9rE,KAAK6B,IAAIikE,EAAWmF,EAAS3uD,YAAc2uD,EAAS3uD,aAE5EgvD,EAAAD,GAAqBJ,EAAS3uD,YACnDgvD,EAAqB,GAAK1tE,EAAQmuE,YAElCX,IACF/qD,GAAUziB,EAAQouE,gBACjBZ,EAAkBF,EAAW5uD,YAC5B8uD,EAAkB,GAAKxtE,EAAQquE,eAEnC,IAAIC,EAAe,EACb,MAAAC,EAAe,SAAS5oD,GAC5BtE,EAAQjf,KAAK6B,IAAIod,EAAOxC,EAAIuC,YAAYuE,GAAMtE,MAAQitD,IAkBxD,OAhBIzvD,EAAA6C,OACJ7C,EAAIN,KAAOssD,EAAU3pD,OACrB5iB,EAAKywC,EAAQC,MAAOu/B,GACpB1vD,EAAIN,KAAO8uD,EAASnsD,OACpB5iB,EAAKywC,EAAQ++B,WAAWvkC,OAAOwF,EAAQg/B,WAAYQ,GACnDD,EAAetuE,EAAQkuE,cAAiB/F,EAAW,EAAInoE,EAAQ0oD,WAAc,EACxEpqD,EAAA6uE,GAAOQ,IACVrvE,EAAKqvE,EAASC,OAAQW,GACtBjwE,EAAKqvE,EAASnoD,MAAO+oD,GACrBjwE,EAAKqvE,EAASE,MAAOU,MAERD,EAAA,EACfzvD,EAAIN,KAAO+uD,EAAWpsD,OACtB5iB,EAAKywC,EAAQq+B,OAAQmB,GACjB1vD,EAAAiD,UACJT,GAAS02B,EAAQ12B,MACV,CAACA,MAAAA,EAAOoB,OAAAA,GAqBjB,SAAyB+rD,GAAAtwD,EAAOle,EAASgC,EAAMysE,GACvC,MAAA9tE,EAACA,QAAG0gB,GAASrf,GACZqf,MAAOqtD,EAAY9nC,WAAWxiB,KAACA,QAAMC,IAAUnG,EACtD,IAAIywD,EAAS,SAWN,MAVQ,WAAXF,EACFE,EAAShuE,IAAMyjB,EAAOC,GAAS,EAAI,OAAS,QACnC1jB,GAAK0gB,EAAQ,EACbstD,EAAA,OACAhuE,GAAK+tE,EAAartD,EAAQ,IAC1BstD,EAAA,SAnBb,SAA6BA,EAAQzwD,EAAOle,EAASgC,GAC7C,MAAArB,EAACA,QAAG0gB,GAASrf,EACb4sE,EAAQ5uE,EAAQ6uE,UAAY7uE,EAAQ8uE,aAC1C,MAAe,SAAXH,GAAqBhuE,EAAI0gB,EAAQutD,EAAQ1wD,EAAMmD,OAGpC,UAAXstD,GAAsBhuE,EAAI0gB,EAAQutD,EAAQ,QAA9C,EAeIG,CAAoBJ,EAAQzwD,EAAOle,EAASgC,KACrC2sE,EAAA,UAEJA,EAET,SAA4BK,GAAA9wD,EAAOle,EAASgC,GAC1C,MAAMysE,EAASzsE,EAAKysE,QAAUzuE,EAAQyuE,QApCxC,SAAyBvwD,EAAOlc,GACxB,MAAAnB,EAACA,SAAG4hB,GAAUzgB,EAChB,OAAAnB,EAAI4hB,EAAS,EACR,MACE5hB,EAAKqd,EAAMuE,OAASA,EAAS,EAC/B,SAEF,SA6ByCwsD,CAAgB/wD,EAAOlc,GAChE,MAAA,CACL2sE,OAAQ3sE,EAAK2sE,QAAU3uE,EAAQ2uE,QAAUH,GAAgBtwD,EAAOle,EAASgC,EAAMysE,GAC/EA,OAAAA,GAuBJ,SAA4BS,GAAAlvE,EAASgC,EAAMmtE,EAAWjxD,GAC9C,MAAA2wD,UAACA,EAAWC,aAAAA,EAAAhsD,aAAcA,GAAgB9iB,GAC1C2uE,OAACA,SAAQF,GAAUU,EACnBC,EAAiBP,EAAYC,GAC7B7nD,QAACA,EAAAG,SAASA,EAAUF,WAAAA,EAAAC,YAAYA,GAAec,GAAcnF,GAC/D,IAAAniB,EAzBN,SAAgBqB,EAAM2sE,GAChB,IAAAhuE,EAACA,QAAG0gB,GAASrf,EAMV,MALQ,UAAX2sE,EACGhuE,GAAA0gB,EACe,WAAXstD,IACThuE,GAAM0gB,EAAQ,GAET1gB,EAkBC0uE,CAAOrtE,EAAM2sE,GACf,MAAA9tE,EAjBR,SAAgBmB,EAAMysE,EAAQW,GACxB,IAAAvuE,EAACA,SAAG4hB,GAAUzgB,EAQX,MAPQ,QAAXysE,EACG5tE,GAAAuuE,EAELvuE,GADoB,WAAX4tE,EACJhsD,EAAS2sD,EAER3sD,EAAS,EAEV5hB,EAQGyuE,CAAOttE,EAAMysE,EAAQW,GAYxB,MAXQ,WAAXX,EACa,SAAXE,EACGhuE,GAAAyuE,EACe,UAAXT,IACJhuE,GAAAyuE,GAEa,SAAXT,EACJhuE,GAAAyB,KAAK6B,IAAIgjB,EAASC,GAAc2nD,EACjB,UAAXF,IACJhuE,GAAAyB,KAAK6B,IAAImjB,EAAUD,GAAe0nD,GAElC,CACLluE,EAAGsF,GAAYtF,EAAG,EAAGud,EAAMmD,MAAQrf,EAAKqf,OACxCxgB,EAAGoF,GAAYpF,EAAG,EAAGqd,EAAMuE,OAASzgB,EAAKygB,SAG7C,SAAqB8sD,GAAAxgC,EAASzmC,EAAOtI,GAC7B,MAAA+3C,EAAU7vB,GAAUloB,EAAQ+3C,SAClC,MAAiB,WAAVzvC,EACHymC,EAAQpuC,EAAIouC,EAAQ1tB,MAAQ,EAClB,UAAV/Y,EACEymC,EAAQpuC,EAAIouC,EAAQ1tB,MAAQ02B,EAAQ1zB,MACpC0qB,EAAQpuC,EAAIo3C,EAAQ3zB,KAE5B,SAAAorD,GAAiC3nE,GACxB,OAAA+kE,GAAa,GAAIE,GAAcjlE,IASxC,SAAA4nE,GAA2Bh2C,EAAWxb,GAC9B,MAAAyL,EAAWzL,GAAWA,EAAQ2kB,SAAW3kB,EAAQ2kB,QAAQmM,SAAW9wB,EAAQ2kB,QAAQmM,QAAQtV,UAC3F,OAAA/P,EAAW+P,EAAU/P,SAASA,GAAY+P,EAEnD,MAAAi2C,WAAsB76B,GACpB7oC,YAAY+xB,GACV2N,QACA/vB,KAAKg0D,QAAU,EACfh0D,KAAK0e,QAAU,GACf1e,KAAKi0D,oBAAiB,EACtBj0D,KAAKk0D,WAAQ,EACbl0D,KAAKm0D,uBAAoB,EACzBn0D,KAAKo0D,cAAgB,GACrBp0D,KAAK4iB,iBAAc,EACnB5iB,KAAK2mB,cAAW,EACX3mB,KAAAuC,MAAQ6f,EAAO7f,OAAS6f,EAAO9F,OACpCtc,KAAKsc,OAAStc,KAAKuC,MACnBvC,KAAK3b,QAAU+9B,EAAO/9B,QACtB2b,KAAKq0D,gBAAa,EAClBr0D,KAAKqzB,WAAQ,EACbrzB,KAAKmyD,gBAAa,EAClBnyD,KAAKwxD,UAAO,EACZxxD,KAAKoyD,eAAY,EACjBpyD,KAAKyxD,YAAS,EACdzxD,KAAKgzD,YAAS,EACdhzD,KAAK8yD,YAAS,EACd9yD,KAAKhb,OAAI,EACTgb,KAAK9a,OAAI,EACT8a,KAAK8G,YAAS,EACd9G,KAAK0F,WAAQ,EACb1F,KAAKs0D,YAAS,EACdt0D,KAAKu0D,YAAS,EACdv0D,KAAKw0D,iBAAc,EACnBx0D,KAAKy0D,sBAAmB,EACxBz0D,KAAK00D,qBAAkB,EAEzBrkE,WAAWhM,GACT2b,KAAK3b,QAAUA,EACf2b,KAAKm0D,uBAAoB,EACzBn0D,KAAK2mB,cAAW,EAElBt2B,qBACE,MAAMw1B,EAAS7lB,KAAKm0D,kBACpB,GAAItuC,EACK,OAAAA,EAET,MAAMtjB,EAAQvC,KAAKuC,MACble,EAAU2b,KAAK3b,QAAQsrB,WAAW3P,KAAK2G,cACvCiD,EAAOvlB,EAAQy2C,SAAWv4B,EAAMle,QAAQ4d,WAAa5d,EAAQ29B,WAC7DA,EAAa,IAAIG,GAAWniB,KAAKuC,MAAOqH,GAIvC,OAHHA,EAAK+D,aACF3N,KAAAm0D,kBAAoB7yE,OAAOyqC,OAAO/J,IAElCA,EAET3xB,aACS,OAAA2P,KAAK2mB,WACP3mB,KAAA2mB,UAhEqBxV,EAgEWnR,KAAKuC,MAAMoE,aAhEdysB,EAgE4BpzB,KAhEnB20D,EAgEyB30D,KAAKo0D,cA/DpEnnD,GAAckE,EAAQ,CAC3BiiB,QAAAA,EACAuhC,aAAAA,EACAtzE,KAAM,cAJV,IAA8B8vB,EAAQiiB,EAASuhC,EAkE7CtkE,SAASiS,EAASje,GAChB,MAAMy5B,UAACA,GAAaz5B,EACduwE,EAAc92C,EAAU82C,YAAYlyE,MAAMsd,KAAM,CAACsC,IACjD+wB,EAAQvV,EAAUuV,MAAM3wC,MAAMsd,KAAM,CAACsC,IACrCuyD,EAAa/2C,EAAU+2C,WAAWnyE,MAAMsd,KAAM,CAACsC,IACrD,IAAIuH,EAAQ,GAIL,OAHCA,EAAAonD,GAAapnD,EAAOsnD,GAAcyD,IAClC/qD,EAAAonD,GAAapnD,EAAOsnD,GAAc99B,IAClCxpB,EAAAonD,GAAapnD,EAAOsnD,GAAc0D,IACnChrD,EAETxZ,cAAcskE,EAActwE,GAC1B,OAAOwvE,GAAwBxvE,EAAQy5B,UAAUq0C,WAAWzvE,MAAMsd,KAAM,CAAC20D,KAE3EtkE,QAAQskE,EAActwE,GACpB,MAAMy5B,UAACA,GAAaz5B,EACdywE,EAAY,GAaX,OAZFnyE,EAAAgyE,GAAeryD,IAClB,MAAM0vD,EAAW,CACfC,OAAQ,GACRpoD,MAAO,GACPqoD,MAAO,IAEH6C,EAASjB,GAAkBh2C,EAAWxb,GAC5C2uD,GAAae,EAASC,OAAQd,GAAc4D,EAAOC,YAAYvzE,KAAKue,KAAMsC,KAC1E2uD,GAAae,EAASnoD,MAAOkrD,EAAOtqC,MAAMhpC,KAAKue,KAAMsC,IACrD2uD,GAAae,EAASE,MAAOf,GAAc4D,EAAOE,WAAWxzE,KAAKue,KAAMsC,KACxEwyD,EAAUrvE,KAAKusE,MAEV8C,EAETzkE,aAAaskE,EAActwE,GACzB,OAAOwvE,GAAwBxvE,EAAQy5B,UAAUs0C,UAAU1vE,MAAMsd,KAAM,CAAC20D,KAE1EtkE,UAAUskE,EAActwE,GACtB,MAAMy5B,UAACA,GAAaz5B,EACd6wE,EAAep3C,EAAUo3C,aAAaxyE,MAAMsd,KAAM,CAAC20D,IACnDlD,EAAS3zC,EAAU2zC,OAAO/uE,MAAMsd,KAAM,CAAC20D,IACvCQ,EAAcr3C,EAAUq3C,YAAYzyE,MAAMsd,KAAM,CAAC20D,IACvD,IAAI9qD,EAAQ,GAIL,OAHCA,EAAAonD,GAAapnD,EAAOsnD,GAAc+D,IAClCrrD,EAAAonD,GAAapnD,EAAOsnD,GAAcM,IAClC5nD,EAAAonD,GAAapnD,EAAOsnD,GAAcgE,IACnCtrD,EAETxZ,aAAahM,GACX,MAAMw9B,EAAS7hB,KAAK0e,QACdtZ,EAAOpF,KAAKuC,MAAM6C,KAClBovD,EAAc,GACdC,EAAmB,GACnBC,EAAkB,GACxB,IACI5xE,EAAGC,EADH4xE,EAAe,GAEd,IAAA7xE,EAAI,EAAGC,EAAM8+B,EAAO5+B,OAAQH,EAAIC,IAAOD,EAC1C6xE,EAAalvE,KAAK4rE,GAAkBrxD,KAAKuC,MAAOsf,EAAO/+B,KAkBlD,OAhBHuB,EAAQgsB,SACKskD,EAAAA,EAAatkD,QAAO,CAACoF,EAAS9qB,EAAOxC,IAAU9D,EAAQgsB,OAAOoF,EAAS9qB,EAAOxC,EAAOid,MAElG/gB,EAAQ+wE,WACKT,EAAAA,EAAa7mC,MAAK,CAAC3nC,EAAGC,IAAM/B,EAAQ+wE,SAASjvE,EAAGC,EAAGgf,MAE/DziB,EAAAgyE,GAAeryD,IACZ,MAAAyyD,EAASjB,GAAkBzvE,EAAQy5B,UAAWxb,GACpDkyD,EAAY/uE,KAAKsvE,EAAOM,WAAW5zE,KAAKue,KAAMsC,IAC9CmyD,EAAiBhvE,KAAKsvE,EAAOO,gBAAgB7zE,KAAKue,KAAMsC,IACxDoyD,EAAgBjvE,KAAKsvE,EAAOQ,eAAe9zE,KAAKue,KAAMsC,OAExDtC,KAAKw0D,YAAcA,EACnBx0D,KAAKy0D,iBAAmBA,EACxBz0D,KAAK00D,gBAAkBA,EACvB10D,KAAKq0D,WAAaM,EACXA,EAETtkE,OAAOjC,EAAS8vD,GACd,MAAM75D,EAAU2b,KAAK3b,QAAQsrB,WAAW3P,KAAK2G,cACvCkb,EAAS7hB,KAAK0e,QAChB,IAAAiD,EACAgzC,EAAe,GACf,GAAC9yC,EAAO5+B,OAML,CACL,MAAM46C,EAAW8yB,GAAYtsE,EAAQw5C,UAAUp8C,KAAKue,KAAM6hB,EAAQ7hB,KAAKi0D,gBACvEU,EAAe30D,KAAKw1D,aAAanxE,GAC5B2b,KAAAqzB,MAAQrzB,KAAKy1D,SAASd,EAActwE,GACpC2b,KAAAmyD,WAAanyD,KAAK01D,cAAcf,EAActwE,GAC9C2b,KAAAwxD,KAAOxxD,KAAK21D,QAAQhB,EAActwE,GAClC2b,KAAAoyD,UAAYpyD,KAAK41D,aAAajB,EAActwE,GAC5C2b,KAAAyxD,OAASzxD,KAAK61D,UAAUlB,EAActwE,GAC3C,MAAMgC,EAAO2Z,KAAKk0D,MAAQ3C,GAAevxD,KAAM3b,GACzCyxE,EAAkBx0E,OAAO+M,OAAO,GAAIwvC,EAAUx3C,GAC9CmtE,EAAYH,GAAmBrzD,KAAKuC,MAAOle,EAASyxE,GACpDC,EAAkBxC,GAAmBlvE,EAASyxE,EAAiBtC,EAAWxzD,KAAKuC,OACrFvC,KAAKgzD,OAASQ,EAAUR,OACxBhzD,KAAK8yD,OAASU,EAAUV,OACXnxC,EAAA,CACXqyC,QAAS,EACThvE,EAAG+wE,EAAgB/wE,EACnBE,EAAG6wE,EAAgB7wE,EACnBwgB,MAAOrf,EAAKqf,MACZoB,OAAQzgB,EAAKygB,OACbwtD,OAAQz2B,EAAS74C,EACjBuvE,OAAQ12B,EAAS34C,QA1BE,IAAjB8a,KAAKg0D,UACMryC,EAAA,CACXqyC,QAAS,IA2Bfh0D,KAAKo0D,cAAgBO,EACrB30D,KAAK2mB,cAAW,EACZhF,GACG3hB,KAAAysB,qBAAqBpJ,OAAOrjB,KAAM2hB,GAErCvzB,GAAW/J,EAAQ2xE,UACb3xE,EAAA2xE,SAASv0E,KAAKue,KAAM,CAACuC,MAAOvC,KAAKuC,MAAO6wB,QAASpzB,KAAMk+C,OAAAA,IAGnE7tD,UAAU4lE,EAAc/yD,EAAK7c,EAAMhC,GACjC,MAAM6xE,EAAgBl2D,KAAKm2D,iBAAiBF,EAAc5vE,EAAMhC,GAC5D6e,EAAA6E,OAAOmuD,EAAcnxB,GAAImxB,EAAclxB,IACvC9hC,EAAA6E,OAAOmuD,EAAcjxB,GAAIixB,EAAchxB,IACvChiC,EAAA6E,OAAOmuD,EAAcE,GAAIF,EAAcG,IAE7ChmE,iBAAiB4lE,EAAc5vE,EAAMhC,GAC7B,MAAA2uE,OAACA,SAAQF,GAAU9yD,MACnBkzD,UAACA,eAAW/rD,GAAgB9iB,GAC5BinB,QAACA,EAAAG,SAASA,EAAUF,WAAAA,EAAAC,YAAYA,GAAec,GAAcnF,IAC5DniB,EAAGsxE,EAAKpxE,EAAGqxE,GAAON,GACnBvwD,MAACA,SAAOoB,GAAUzgB,EACxB,IAAI0+C,EAAIE,EAAImxB,EAAIpxB,EAAIE,EAAImxB,EAoCxB,MAnCe,WAAXvD,GACF5tB,EAAKqxB,EAAOzvD,EAAS,EACN,SAAXksD,GACGjuB,EAAAuxB,EACLrxB,EAAKF,EAAKmuB,EACVluB,EAAKE,EAAKguB,EACVmD,EAAKnxB,EAAKguB,IAEVnuB,EAAKuxB,EAAM5wD,EACXu/B,EAAKF,EAAKmuB,EACVluB,EAAKE,EAAKguB,EACVmD,EAAKnxB,EAAKguB,GAEPkD,EAAArxB,IAGHE,EADa,SAAX+tB,EACGsD,EAAM7vE,KAAK6B,IAAIgjB,EAASC,GAAe2nD,EACxB,UAAXF,EACJsD,EAAM5wD,EAAQjf,KAAK6B,IAAImjB,EAAUD,GAAe0nD,EAEhDlzD,KAAKs0D,OAEG,QAAXxB,GACG9tB,EAAAuxB,EACLrxB,EAAKF,EAAKkuB,EACVnuB,EAAKE,EAAKiuB,EACVkD,EAAKnxB,EAAKiuB,IAEVluB,EAAKuxB,EAAMzvD,EACXo+B,EAAKF,EAAKkuB,EACVnuB,EAAKE,EAAKiuB,EACVkD,EAAKnxB,EAAKiuB,GAEPmD,EAAArxB,GAEA,CAACD,GAAAA,EAAIE,GAAAA,EAAImxB,GAAAA,EAAIpxB,GAAAA,EAAIE,GAAAA,EAAImxB,GAAAA,GAE9BhmE,UAAU6jB,EAAIhR,EAAK7e,GACjB,MAAMgvC,EAAQrzB,KAAKqzB,MACbpwC,EAASowC,EAAMpwC,OACrB,IAAIisE,EAAWmD,EAAcvvE,EAC7B,GAAIG,EAAQ,CACV,MAAMirE,EAAYj0C,GAAc51B,EAAQ61B,IAAKla,KAAKhb,EAAGgb,KAAK0F,OAQ1D,IAPAwO,EAAGlvB,EAAI4uE,GAAY5zD,KAAM3b,EAAQu5C,WAAYv5C,GACzC6e,EAAAiH,UAAY+jD,EAAU/jD,UAAU9lB,EAAQu5C,YAC5C16B,EAAIkH,aAAe,SACnB8kD,EAAY1iD,GAAOnoB,EAAQ6qE,WAC3BmD,EAAehuE,EAAQguE,aACvBnvD,EAAIgH,UAAY7lB,EAAQmyE,WACxBtzD,EAAIN,KAAOssD,EAAU3pD,OAChBziB,EAAI,EAAGA,EAAIG,IAAUH,EACpBogB,EAAAwH,SAAS2oB,EAAMvwC,GAAIorE,EAAUlpE,EAAEkvB,EAAGlvB,GAAIkvB,EAAGhvB,EAAIgqE,EAAUnsD,WAAa,GACrEmR,EAAAhvB,GAAKgqE,EAAUnsD,WAAasvD,EAC3BvvE,EAAI,IAAMG,IACTixB,EAAAhvB,GAAKb,EAAQiuE,kBAAoBD,IAK5ChiE,cAAc6S,EAAKgR,EAAIpxB,EAAGorE,EAAW7pE,GAC7B,MAAAmwE,EAAcx0D,KAAKw0D,YAAY1xE,GAC/BwyE,EAAkBt1D,KAAKy0D,iBAAiB3xE,IACxCypE,UAACA,EAAWC,SAAAA,EAAAzf,WAAUA,GAAc1oD,EACpCqtE,EAAWllD,GAAOnoB,EAAQqtE,UAC1B+E,EAAS7C,GAAY5zD,KAAM,OAAQ3b,GACnCqyE,EAAYxI,EAAUlpE,EAAEyxE,GACxBE,EAAUpK,EAAYmF,EAAS3uD,YAAuB2uD,EAAA3uD,WAAawpD,GAAa,EAAI,EACpFqK,EAAS1iD,EAAGhvB,EAAIyxE,EACtB,GAAItyE,EAAQooE,cAAe,CACzB,MAAMmC,EAAc,CAClBtnD,OAAQ7gB,KAAK4B,IAAImkE,EAAUD,GAAa,EACxCnlD,WAAYkuD,EAAgBluD,WAC5BC,SAAUiuD,EAAgBjuD,SAC1Bc,YAAa,GAET6tB,EAAUk4B,EAAU7zC,WAAWq8C,EAAWlK,GAAYA,EAAW,EACjEv2B,EAAU2gC,EAASrK,EAAY,EACrCrpD,EAAIoH,YAAcjmB,EAAQwyE,mBAC1B3zD,EAAIgH,UAAY7lB,EAAQwyE,mBACd9vD,GAAA7D,EAAK0rD,EAAa54B,EAASC,GACrC/yB,EAAIoH,YAAckqD,EAAYryD,YAC9Be,EAAIgH,UAAYsqD,EAAYtyD,gBAClB6E,GAAA7D,EAAK0rD,EAAa54B,EAASC,OAChC,CACL/yB,EAAIqH,UAAY5oB,EAAS6yE,EAAYrsD,aAAe1hB,KAAK6B,OAAOhH,OAAOwgB,OAAO0yD,EAAYrsD,cAAiBqsD,EAAYrsD,aAAe,EACtIjF,EAAIoH,YAAckqD,EAAYryD,YAC1Be,EAAAsjC,YAAYguB,EAAYp3C,YAAc,IACtCla,EAAAujC,eAAiB+tB,EAAYn3C,kBAAoB,EACrD,MAAMy5C,EAAS5I,EAAU7zC,WAAWq8C,EAAWlK,EAAWzf,GACpDgqB,EAAS7I,EAAU7zC,WAAW6zC,EAAU9zC,MAAMs8C,EAAW,GAAIlK,EAAWzf,EAAa,GACrFuS,EAAehzC,GAAckoD,EAAYlV,cAC3Ch+D,OAAOwgB,OAAOw9C,GAAcpL,MAAKnvD,GAAW,IAANA,KACpCme,EAAAwE,YACJxE,EAAIgH,UAAY7lB,EAAQwyE,mBACxBxrD,GAAmBnI,EAAK,CACtBle,EAAG8xE,EACH5xE,EAAG0xE,EACH1jE,EAAGs5D,EACH37D,EAAG07D,EACHjlD,OAAQg4C,IAENp8C,EAAAgF,OACAhF,EAAAkF,SACJlF,EAAIgH,UAAYsqD,EAAYtyD,gBACxBgB,EAAAwE,YACJ2D,GAAmBnI,EAAK,CACtBle,EAAG+xE,EACH7xE,EAAG0xE,EAAS,EACZ1jE,EAAGs5D,EAAW,EACd37D,EAAG07D,EAAY,EACfjlD,OAAQg4C,IAENp8C,EAAAgF,SAEJhF,EAAIgH,UAAY7lB,EAAQwyE,mBACpB3zD,EAAAkjC,SAAS0wB,EAAQF,EAAQpK,EAAUD,GACnCrpD,EAAA8zD,WAAWF,EAAQF,EAAQpK,EAAUD,GACzCrpD,EAAIgH,UAAYsqD,EAAYtyD,gBAC5BgB,EAAIkjC,SAAS2wB,EAAQH,EAAS,EAAGpK,EAAW,EAAGD,EAAY,IAG3DrpD,EAAAgH,UAAYlK,KAAK00D,gBAAgB5xE,GAEvCuN,SAAS6jB,EAAIhR,EAAK7e,GAChB,MAAMmtE,KAACA,GAAQxxD,MACTwyD,YAACA,EAAayE,UAAAA,EAAA1E,cAAWA,EAAehG,UAAAA,EAAAC,SAAWA,aAAUzf,GAAc1oD,EAC3EqtE,EAAWllD,GAAOnoB,EAAQqtE,UAChC,IAAIwF,EAAiBxF,EAAS3uD,WAC1Bo0D,EAAe,EACnB,MAAMjJ,EAAYj0C,GAAc51B,EAAQ61B,IAAKla,KAAKhb,EAAGgb,KAAK0F,OACpD0xD,EAAiB,SAASptD,GAC1B9G,EAAAwH,SAASV,EAAMkkD,EAAUlpE,EAAEkvB,EAAGlvB,EAAImyE,GAAejjD,EAAGhvB,EAAIgyE,EAAiB,GAC7EhjD,EAAGhvB,GAAKgyE,EAAiB1E,GAErB6E,EAA0BnJ,EAAU/jD,UAAU8sD,GACpD,IAAIjF,EAAUsF,EAAWztD,EAAO/mB,EAAG8b,EAAGvb,EAAM2iB,EAUvC,IATL9C,EAAIiH,UAAY8sD,EAChB/zD,EAAIkH,aAAe,SACnBlH,EAAIN,KAAO8uD,EAASnsD,OACjB2O,EAAAlvB,EAAI4uE,GAAY5zD,KAAMq3D,EAAyBhzE,GAClD6e,EAAIgH,UAAY7lB,EAAQkzE,UACxB50E,EAAKqd,KAAKmyD,WAAYiF,GACPD,EAAA5E,GAA6C,UAA5B8E,EACd,WAAdJ,EAA0BzK,EAAW,EAAIzf,EAAeyf,EAAW,EAAIzf,EACvE,EACCjqD,EAAI,EAAGO,EAAOmuE,EAAKvuE,OAAQH,EAAIO,IAAQP,EAAG,CAUxC,IATLkvE,EAAWR,EAAK1uE,GAChBw0E,EAAYt3D,KAAK00D,gBAAgB5xE,GACjCogB,EAAIgH,UAAYotD,EAChB30E,EAAKqvE,EAASC,OAAQmF,GACtBvtD,EAAQmoD,EAASnoD,MACb0oD,GAAiB1oD,EAAM5mB,SACzB+c,KAAKw3D,cAAct0D,EAAKgR,EAAIpxB,EAAGorE,EAAW7pE,GACzB6yE,EAAAzwE,KAAK6B,IAAIopE,EAAS3uD,WAAYwpD,IAE5C3tD,EAAI,EAAGoH,EAAO6D,EAAM5mB,OAAQ2b,EAAIoH,IAAQpH,EAC3Cw4D,EAAevtD,EAAMjL,IACrBs4D,EAAiBxF,EAAS3uD,WAE5BpgB,EAAKqvE,EAASE,MAAOkF,GAERD,EAAA,EACfD,EAAiBxF,EAAS3uD,WAC1BpgB,EAAKqd,KAAKoyD,UAAWgF,GACrBljD,EAAGhvB,GAAKstE,EAEVniE,WAAW6jB,EAAIhR,EAAK7e,GAClB,MAAMotE,EAASzxD,KAAKyxD,OACdxuE,EAASwuE,EAAOxuE,OACtB,IAAI0uE,EAAY7uE,EAChB,GAAIG,EAAQ,CACV,MAAMirE,EAAYj0C,GAAc51B,EAAQ61B,IAAKla,KAAKhb,EAAGgb,KAAK0F,OAQ1D,IAPAwO,EAAGlvB,EAAI4uE,GAAY5zD,KAAM3b,EAAQozE,YAAapzE,GAC9C6vB,EAAGhvB,GAAKb,EAAQouE,gBACZvvD,EAAAiH,UAAY+jD,EAAU/jD,UAAU9lB,EAAQozE,aAC5Cv0D,EAAIkH,aAAe,SACnBunD,EAAanlD,GAAOnoB,EAAQstE,YAC5BzuD,EAAIgH,UAAY7lB,EAAQqzE,YACxBx0D,EAAIN,KAAO+uD,EAAWpsD,OACjBziB,EAAI,EAAGA,EAAIG,IAAUH,EACpBogB,EAAAwH,SAAS+mD,EAAO3uE,GAAIorE,EAAUlpE,EAAEkvB,EAAGlvB,GAAIkvB,EAAGhvB,EAAIysE,EAAW5uD,WAAa,GACvEmR,EAAAhvB,GAAKysE,EAAW5uD,WAAa1e,EAAQquE,eAI9CriE,eAAe6jB,EAAIhR,EAAKy0D,EAAatzE,GAC7B,MAAA2uE,OAACA,SAAQF,GAAU9yD,MACnBhb,EAACA,IAAGE,GAAKgvB,GACTxO,MAACA,SAAOoB,GAAU6wD,GAClBrsD,QAACA,EAASG,SAAAA,EAAAF,WAAUA,EAAYC,YAAAA,GAAec,GAAcjoB,EAAQ8iB,cAC3EjE,EAAIgH,UAAY7lB,EAAQ6d,gBACxBgB,EAAIoH,YAAcjmB,EAAQ8d,YAC1Be,EAAIqH,UAAYlmB,EAAQ8jB,YACpBjF,EAAAwE,YACAxE,EAAA4E,OAAO9iB,EAAIsmB,EAASpmB,GACT,QAAX4tE,GACG9yD,KAAA43D,UAAU1jD,EAAIhR,EAAKy0D,EAAatzE,GAEnC6e,EAAA6E,OAAO/iB,EAAI0gB,EAAQ+F,EAAUvmB,GACjCge,EAAI20D,iBAAiB7yE,EAAI0gB,EAAOxgB,EAAGF,EAAI0gB,EAAOxgB,EAAIumB,GACnC,WAAXqnD,GAAkC,UAAXE,GACpBhzD,KAAA43D,UAAU1jD,EAAIhR,EAAKy0D,EAAatzE,GAEvC6e,EAAI6E,OAAO/iB,EAAI0gB,EAAOxgB,EAAI4hB,EAAS0E,GAC/BtI,EAAA20D,iBAAiB7yE,EAAI0gB,EAAOxgB,EAAI4hB,EAAQ9hB,EAAI0gB,EAAQ8F,EAAatmB,EAAI4hB,GAC1D,WAAXgsD,GACG9yD,KAAA43D,UAAU1jD,EAAIhR,EAAKy0D,EAAatzE,GAEnC6e,EAAA6E,OAAO/iB,EAAIumB,EAAYrmB,EAAI4hB,GAC/B5D,EAAI20D,iBAAiB7yE,EAAGE,EAAI4hB,EAAQ9hB,EAAGE,EAAI4hB,EAASyE,GACrC,WAAXunD,GAAkC,SAAXE,GACpBhzD,KAAA43D,UAAU1jD,EAAIhR,EAAKy0D,EAAatzE,GAEnC6e,EAAA6E,OAAO/iB,EAAGE,EAAIomB,GAClBpI,EAAI20D,iBAAiB7yE,EAAGE,EAAGF,EAAIsmB,EAASpmB,GACpCge,EAAA2E,YACA3E,EAAAgF,OACA7jB,EAAQ8jB,YAAc,GACpBjF,EAAAkF,SAGR/X,uBAAuBhM,GACrB,MAAMke,EAAQvC,KAAKuC,MACbqb,EAAQ5d,KAAK4iB,YACbk1C,EAAQl6C,GAASA,EAAM54B,EACvB+yE,EAAQn6C,GAASA,EAAM14B,EAC7B,GAAI4yE,GAASC,EAAO,CACZ,MAAAl6B,EAAW8yB,GAAYtsE,EAAQw5C,UAAUp8C,KAAKue,KAAMA,KAAK0e,QAAS1e,KAAKi0D,gBAC7E,IAAKp2B,EACH,OAEF,MAAMx3C,EAAO2Z,KAAKk0D,MAAQ3C,GAAevxD,KAAM3b,GACzCyxE,EAAkBx0E,OAAO+M,OAAO,GAAIwvC,EAAU79B,KAAKk0D,OACnDV,EAAYH,GAAmB9wD,EAAOle,EAASyxE,GAC/CxtD,EAAQirD,GAAmBlvE,EAASyxE,EAAiBtC,EAAWjxD,GAClEu1D,EAAM/2C,MAAQzY,EAAMtjB,GAAK+yE,EAAMh3C,MAAQzY,EAAMpjB,IAC/C8a,KAAKgzD,OAASQ,EAAUR,OACxBhzD,KAAK8yD,OAASU,EAAUV,OACxB9yD,KAAK0F,MAAQrf,EAAKqf,MAClB1F,KAAK8G,OAASzgB,EAAKygB,OACnB9G,KAAKs0D,OAASz2B,EAAS74C,EACvBgb,KAAKu0D,OAAS12B,EAAS34C,EAClB8a,KAAAysB,qBAAqBpJ,OAAOrjB,KAAMsI,KAI7CjY,cACS,QAAE2P,KAAKg0D,QAEhB3jE,KAAK6S,GACH,MAAM7e,EAAU2b,KAAK3b,QAAQsrB,WAAW3P,KAAK2G,cAC7C,IAAIqtD,EAAUh0D,KAAKg0D,QACnB,IAAKA,EACH,OAEFh0D,KAAKg4D,uBAAuB3zE,GAC5B,MAAMszE,EAAc,CAClBjyD,MAAO1F,KAAK0F,MACZoB,OAAQ9G,KAAK8G,QAEToN,EAAK,CACTlvB,EAAGgb,KAAKhb,EACRE,EAAG8a,KAAK9a,GAEV8uE,EAAUvtE,KAAKwB,IAAI+rE,GAAW,KAAO,EAAIA,EACnC,MAAA53B,EAAU7vB,GAAUloB,EAAQ+3C,SAC5B67B,EAAoBj4D,KAAKqzB,MAAMpwC,QAAU+c,KAAKmyD,WAAWlvE,QAAU+c,KAAKwxD,KAAKvuE,QAAU+c,KAAKoyD,UAAUnvE,QAAU+c,KAAKyxD,OAAOxuE,OAC9HoB,EAAQy2C,SAAWm9B,IACjB/0D,EAAA6C,OACJ7C,EAAIg1D,YAAclE,EACbh0D,KAAAgnC,eAAe9yB,EAAIhR,EAAKy0D,EAAatzE,GAC1Co2B,GAAsBvX,EAAK7e,EAAQoqE,eACnCv6C,EAAGhvB,GAAKk3C,EAAQzzB,IACX3I,KAAAknC,UAAUhzB,EAAIhR,EAAK7e,GACnB2b,KAAAm4D,SAASjkD,EAAIhR,EAAK7e,GAClB2b,KAAAo4D,WAAWlkD,EAAIhR,EAAK7e,GACzB02B,GAAqB7X,EAAK7e,EAAQoqE,eAC9BvrD,EAAAiD,WAGR9V,oBACE,OAAO2P,KAAK0e,SAAW,GAEzBruB,kBAAkB0tD,EAAgB+S,GAChC,MAAM9S,EAAah+C,KAAK0e,QAClBmD,EAASk8B,EAAen6D,KAAI,EAAEJ,aAAAA,EAAcC,MAAWkH,MACrD,MAAAmC,EAAOkT,KAAKuC,MAAMylB,eAAexkC,GACvC,IAAKsJ,EACG,MAAA,IAAIijB,MAAM,kCAAoCvsB,GAE/C,MAAA,CACLA,aAAAA,EACAiyB,QAAS3oB,EAAKsY,KAAKza,GACnBlH,MAAAkH,MAGEyD,GAAWlL,EAAe86D,EAAYn8B,GACtCw2C,EAAkBr4D,KAAKs4D,iBAAiBz2C,EAAQivC,IAClD1iE,GAAWiqE,KACbr4D,KAAK0e,QAAUmD,EACf7hB,KAAKi0D,eAAiBnD,EACtB9wD,KAAKu4D,qBAAsB,EAC3Bv4D,KAAKqjB,QAAO,IAGhBhzB,YAAYzH,EAAGs1D,EAAQK,GAAc,GAC/B,GAAAL,GAAUl+C,KAAKu4D,oBACV,OAAA,EAETv4D,KAAKu4D,qBAAsB,EAC3B,MAAMl0E,EAAU2b,KAAK3b,QACf25D,EAAah+C,KAAK0e,SAAW,GAC7BmD,EAAS7hB,KAAK0+C,mBAAmB91D,EAAGo1D,EAAYE,EAAQK,GACxD8Z,EAAkBr4D,KAAKs4D,iBAAiBz2C,EAAQj5B,GAChDwF,EAAU8vD,IAAWh7D,EAAe2+B,EAAQm8B,IAAeqa,EAW1D,OAVHjqE,IACF4R,KAAK0e,QAAUmD,GACXx9B,EAAQy2C,SAAWz2C,EAAQ2xE,YAC7Bh2D,KAAKi0D,eAAiB,CACpBjvE,EAAG4D,EAAE5D,EACLE,EAAG0D,EAAE1D,GAEP8a,KAAKqjB,QAAO,EAAM66B,KAGf9vD,EAETiC,mBAAmBzH,EAAGo1D,EAAYE,EAAQK,GACxC,MAAMl6D,EAAU2b,KAAK3b,QACjB,GAAW,aAAXuE,EAAEvH,KACG,MAAA,GAET,IAAKk9D,EACI,OAAAP,EAET,MAAMn8B,EAAS7hB,KAAKuC,MAAMw8C,0BAA0Bn2D,EAAGvE,EAAQkf,KAAMlf,EAAS65D,GAIvE,OAHH75D,EAAQxB,SACHg/B,EAAAh/B,UAEFg/B,EAETxxB,iBAAiBwxB,EAAQj5B,GACjB,MAAA0rE,OAACA,EAAQC,OAAAA,EAAAlwE,QAAQA,GAAW2b,KAC5B69B,EAAW8yB,GAAYtsE,EAAQw5C,UAAUp8C,KAAKue,KAAM6hB,EAAQj5B,GAClE,OAAoB,IAAbi1C,IAAuBy2B,IAAWz2B,EAAS74C,GAAKuvE,IAAW12B,EAAS34C,IAG/E6uE,GAAQpD,YAAcA,GACtB,IAAI6H,GAAiB,CACnBx3E,GAAI,UACJ6uE,SAAUkE,GACVpD,YAAAA,GACAtgE,UAAUkS,EAAO2pD,EAAO7nE,GAClBA,IACFke,EAAM6wB,QAAU,IAAI2gC,GAAQ,CAACxxD,MAAAA,EAAOle,QAAAA,MAGxCgM,aAAakS,EAAO2pD,EAAO7nE,GACrBke,EAAM6wB,SACR7wB,EAAM6wB,QAAQvM,WAAWxiC,IAG7BgM,MAAMkS,EAAO2pD,EAAO7nE,GACdke,EAAM6wB,SACR7wB,EAAM6wB,QAAQvM,WAAWxiC,IAG7BgM,UAAUkS,GACR,MAAM6wB,EAAU7wB,EAAM6wB,QAClB,GAAAA,GAAWA,EAAQqlC,cAAe,CACpC,MAAMj2E,EAAO,CACX4wC,QAAAA,GAEF,IAAuD,IAAnD7wB,EAAM8+B,cAAc,oBAAqB7+C,GAC3C,OAEF4wC,EAAQtU,KAAKvc,EAAMW,KACnBX,EAAM8+B,cAAc,mBAAoB7+C,KAG5C6N,WAAWkS,EAAO/f,GAChB,GAAI+f,EAAM6wB,QAAS,CACjB,MAAM+F,EAAmB32C,EAAK07D,OAC1B37C,EAAM6wB,QAAQ28B,YAAYvtE,EAAK28B,MAAOga,EAAkB32C,EAAK+7D,eAC/D/7D,EAAK4L,SAAU,KAIrB2T,SAAU,CACR+4B,SAAS,EACTk7B,SAAU,KACVn4B,SAAU,UACV37B,gBAAiB,kBACjBs0D,WAAY,OACZtH,UAAW,CACT5uD,OAAQ,QAEV+xD,aAAc,EACdC,kBAAmB,EACnB10B,WAAY,OACZ25B,UAAW,OACX/E,YAAa,EACbd,SAAU,GAEVuF,UAAW,OACXS,YAAa,OACbhF,cAAe,EACfD,gBAAiB,EACjBd,WAAY,CACVrxD,OAAQ,QAEVm3D,YAAa,OACbr7B,QAAS,EACT+2B,aAAc,EACdD,UAAW,EACX/rD,aAAc,EACdolD,UAAW,CAACrpD,EAAK0G,IAASA,EAAK8nD,SAASrrE,KACxCmmE,SAAU,CAACtpD,EAAK0G,IAASA,EAAK8nD,SAASrrE,KACvCwwE,mBAAoB,OACpBtE,eAAe,EACfxlB,WAAY,EACZ5qC,YAAa,gBACbgG,YAAa,EACblG,UAAW,CACT+b,SAAU,IACVwC,OAAQ,gBAEVwB,WAAY,CACVJ,QAAS,CACPvgC,KAAM,SACNsgC,WAAY,CAAC,IAAK,IAAK,QAAS,SAAU,SAAU,WAEtDqyC,QAAS,CACPxzC,OAAQ,SACRxC,SAAU,MAGdF,UAAW,CACT82C,YAAa9zE,EACbuP,MAAMskE,GACA,GAAAA,EAAa1xE,OAAS,EAAG,CAC3B,MAAMqD,EAAOquE,EAAa,GACpBprC,EAASjjC,EAAKic,MAAM6C,KAAKmkB,OACzBmvC,EAAanvC,EAASA,EAAOtmC,OAAS,EAC5C,GAAI+c,MAAQA,KAAK3b,SAAiC,YAAtB2b,KAAK3b,QAAQkf,KAChC,OAAAjd,EAAK2gC,QAAQwD,OAAS,GAAA,GACpBnkC,EAAKmkC,MACd,OAAOnkC,EAAKmkC,MAAA,GACHiuC,EAAa,GAAKpyE,EAAK8kC,UAAYstC,EAC5C,OAAOnvC,EAAOjjC,EAAK8kC,WAGhB,MAAA,IAETypC,WAAY/zE,EACZqxE,WAAYrxE,EACZk0E,YAAal0E,EACbuP,MAAMumC,GACJ,GAAI52B,MAAQA,KAAK3b,SAAiC,YAAtB2b,KAAK3b,QAAQkf,KACvC,OAAOqzB,EAAYnM,MAAQ,KAAOmM,EAAYE,gBAAkBF,EAAYE,eAE1E,IAAArM,EAAQmM,EAAY3P,QAAQwD,OAAS,GACrCA,IACOA,GAAA,MAEX,MAAMvpC,EAAQ01C,EAAYE,eAInB,OAHF71C,EAAcC,KACRupC,GAAAvpC,GAEJupC,GAETp6B,WAAWumC,GACT,MACMvyC,EADOuyC,EAAYr0B,MAAMylB,eAAe4O,EAAYpzC,cACrCqhC,WAAW/L,SAAS8d,EAAYxL,WAC9C,MAAA,CACLjpB,YAAa9d,EAAQ8d,YACrBD,gBAAiB7d,EAAQ6d,gBACzBiG,YAAa9jB,EAAQ8jB,YACrBiV,WAAY/4B,EAAQ+4B,WACpBC,iBAAkBh5B,EAAQg5B,iBAC1BiiC,aAAc,IAGlBjvD,iBACE,OAAO2P,KAAK3b,QAAQkzE,WAEtBlnE,gBAAgBumC,GACd,MACMvyC,EADOuyC,EAAYr0B,MAAMylB,eAAe4O,EAAYpzC,cACrCqhC,WAAW/L,SAAS8d,EAAYxL,WAC9C,MAAA,CACLhkB,WAAY/iB,EAAQ+iB,WACpBC,SAAUhjB,EAAQgjB,WAGtB4tD,WAAYn0E,EACZsxE,UAAWtxE,EACXo0E,aAAcp0E,EACd2wE,OAAQ3wE,EACRq0E,YAAar0E,IAGjBw4C,cAAe,CACbo4B,SAAU,OACVC,WAAY,OACZzC,UAAW,QAEb1tD,YAAa,CACXuD,YAAcV,GAAkB,WAATA,GAA8B,aAATA,GAAgC,aAATA,EACnEY,YAAY,EACZ6Y,UAAW,CACT/Y,aAAa,EACbE,YAAY,GAEdhD,UAAW,CACTiD,WAAW,GAEb8c,WAAY,CACV9c,UAAW,cAGfixC,uBAAwB,CAAC,gBAGvBryC,UAA8BioB,OAAO,CACzCwd,UAAW,KACXovB,WAAYnS,GACZoS,OAAQn1E,GACRmpE,OAAQgD,GACRiJ,SAAUnI,GACVT,MAAOK,GACPyD,QAASyE,KAYT,SAAwBM,GAAAvvC,EAAQ8B,EAAK1gC,EAAOouE,GACpC,MAAA99B,EAAQ1R,EAAOplC,QAAQknC,GAC7B,IAAkB,IAAd4P,EACK,MAZS,EAAC1R,EAAQ8B,EAAK1gC,EAAOouE,KACpB,iBAAR1tC,GACD1gC,EAAA4+B,EAAO9jC,KAAK4lC,GAAO,EACf0tC,EAAA/O,QAAQ,CAACvmE,MAAAkH,EAAO8/B,MAAOY,KAC1BtjC,MAAMsjC,KACP1gC,EAAA,MAEHA,GAKEquE,CAAYzvC,EAAQ8B,EAAK1gC,EAAOouE,GAGlC,OAAA99B,IADM1R,EAAO0vC,YAAY5tC,GACR1gC,EAAQswC,EAGlC,MAAAi+B,WAA4Bn7B,GAC1B1tC,YAAY+vB,GACJ2P,MAAA3P,GACNpgB,KAAKm5D,iBAAc,EACnBn5D,KAAKo5D,YAAc,EACnBp5D,KAAKq5D,aAAe,GAEtBhpE,KAAKkkD,GACH,MAAM+kB,EAAQt5D,KAAKq5D,aACnB,GAAIC,EAAMr2E,OAAQ,CAChB,MAAMsmC,EAASvpB,KAAKwpB,YACT,IAAA,MAAC/lC,MAAOkH,EAAA8/B,MAAAA,KAAU6uC,EACvB/vC,EAAO5+B,KAAW8/B,GACpBlB,EAAO/9B,OAAOb,EAAO,GAGzBqV,KAAKq5D,aAAe,GAEtBtpC,MAAMwqB,KAAKhG,GAEblkD,MAAMg7B,EAAK1gC,GACT,GAAI1J,EAAcoqC,GACT,OAAA,KAET,MAAM9B,EAASvpB,KAAKwpB,YAGb,MA5BQ,EAAC7+B,EAAOrC,IAAkB,OAAVqC,EAAiB,KAAOL,GAAY7D,KAAKc,MAAMoD,GAAQ,EAAGrC,GA4BlFixE,CAFP5uE,EAAQ7I,SAAS6I,IAAU4+B,EAAO5+B,KAAW0gC,EAAM1gC,EAC/CmuE,GAAevvC,EAAQ8B,EAAKppC,EAAe0I,EAAO0gC,GAAMrrB,KAAKq5D,cACxC9vC,EAAOtmC,OAAS,GAE3CoN,sBACQ,MAAA9C,WAACA,EAAYC,WAAAA,GAAcwS,KAAKvS,gBACtC,IAAIpF,IAACA,EAAAC,IAAKA,GAAO0X,KAAKs/B,WAAU,GACJ,UAAxBt/B,KAAK3b,QAAQk3B,SACVhuB,IACGlF,EAAA,GAEHmF,IACGlF,EAAA0X,KAAKwpB,YAAYvmC,OAAS,IAGpC+c,KAAK3X,IAAMA,EACX2X,KAAK1X,IAAMA,EAEb+H,aACE,MAAMhI,EAAM2X,KAAK3X,IACXC,EAAM0X,KAAK1X,IACXyqC,EAAS/yB,KAAK3b,QAAQ0uC,OACtB5E,EAAQ,GACd,IAAI5E,EAASvpB,KAAKwpB,YACRD,EAAQ,IAARlhC,GAAaC,IAAQihC,EAAOtmC,OAAS,EAAKsmC,EAASA,EAAO7nC,MAAM2G,EAAKC,EAAM,GACrF0X,KAAKo5D,YAAc3yE,KAAK6B,IAAIihC,EAAOtmC,QAAU8vC,EAAS,EAAI,GAAI,GAC9D/yB,KAAKm5D,YAAcn5D,KAAK3X,KAAO0qC,EAAS,GAAM,GAC9C,IAAA,IAAS7xC,EAAQmH,EAAKnH,GAASoH,EAAKpH,IAClCitC,EAAM1oC,KAAK,CAACvE,MAAAA,IAEP,OAAAitC,EAET99B,iBAAiBnP,GACf,MAAMqoC,EAASvpB,KAAKwpB,YACpB,OAAItoC,GAAS,GAAKA,EAAQqoC,EAAOtmC,OACxBsmC,EAAOroC,GAETA,EAETmP,YACQ0/B,MAAAzN,YACDtiB,KAAKmwB,iBACHnwB,KAAA2+B,gBAAkB3+B,KAAK2+B,gBAGhCtuC,iBAAiBnP,GAIR,MAHc,iBAAVA,IACTA,EAAQ8e,KAAK8R,MAAM5wB,IAEJ,OAAVA,EAAiB2oC,IAAM7pB,KAAKgyB,oBAA4B9wC,EAAA8e,KAAKm5D,aAAen5D,KAAKo5D,aAE1F/oE,gBAAgB1F,GACd,MAAMwjC,EAAQnuB,KAAKmuB,MACnB,OAAIxjC,EAAQ,GAAKA,EAAQwjC,EAAMlrC,OAAS,EAC/B,KAEF+c,KAAKtS,iBAAiBygC,EAAMxjC,GAAOzJ,OAE5CmP,iBAAiBiW,GACf,OAAO7f,KAAKc,MAAMyY,KAAKm5D,YAAcn5D,KAAKw5D,mBAAmBlzD,GAAStG,KAAKo5D,aAE7E/oE,eACE,OAAO2P,KAAK4I,QAUhB,SAAA6wD,GAAyBC,EAAmBC,GAC1C,MAAMxrC,EAAQ,IAER5S,OAACA,OAAQ8pB,EAAMh9C,IAAAA,EAAAC,IAAKA,YAAKsxE,EAAW1sE,MAAAA,EAAA2sE,SAAOA,EAAUC,UAAAA,EAAAC,cAAWA,GAAiBL,EACjF7vB,EAAOxE,GAAQ,EACf20B,EAAYH,EAAW,GACtBxxE,IAAK4xE,EAAM3xE,IAAK4xE,GAAQP,EACzBpsE,GAActM,EAAcoH,GAC5BmF,GAAcvM,EAAcqH,GAC5B6xE,GAAgBl5E,EAAciM,GAC9BktE,GAAqBF,EAAAD,IAAqBH,EAAA,GAChD,IACI/5C,EAAQs6C,EAASC,EAASC,EAD1BvmC,EAAU5sC,GAAgB8yE,EAAAD,GAAQD,EAAYnwB,GAAQA,EAE1D,GAAI7V,EAXgB,QAWUzmC,IAAeC,EAC3C,MAAO,CAAC,CAACtM,MAAO+4E,GAAO,CAAC/4E,MAAOg5E,IAEjCK,EAAY9zE,KAAK00C,KAAK++B,EAAOlmC,GAAWvtC,KAAKkB,MAAMsyE,EAAOjmC,GACtDumC,EAAYP,IACdhmC,EAAU5sC,EAAQmzE,EAAYvmC,EAAUgmC,EAAYnwB,GAAQA,GAEzD5oD,EAAc24E,KACR75C,EAAAt5B,KAAKiB,IAAI,GAAIkyE,GACZ5lC,EAAAvtC,KAAK00C,KAAKnH,EAAUjU,GAAUA,GAE3B,UAAXxE,GACQ8+C,EAAA5zE,KAAKkB,MAAMsyE,EAAOjmC,GAAWA,EAC7BsmC,EAAA7zE,KAAK00C,KAAK++B,EAAOlmC,GAAWA,IAE5BqmC,EAAAJ,EACAK,EAAAJ,GAER3sE,GAAcC,GAAc63C,GD/gSlC,SAAqBrgD,EAAGgD,GAChB,MAAAwyE,EAAU/zE,KAAKc,MAAMvC,GAC3B,OAASw1E,EAAUxyE,GAAYhD,GAAQw1E,EAAUxyE,GAAYhD,EC6gSrBy1E,IAAmBpyE,GAAOg9C,EAAMrR,EAAU,MAChFumC,EAAY9zE,KAAKc,MAAMd,KAAK4B,KAAKC,EAAMD,GAAO2rC,EAAS6lC,IACvD7lC,KAAiB3rC,GAAOkyE,EACdF,EAAAhyE,EACAiyE,EAAAhyE,GACD6xE,GACTE,EAAU9sE,EAAalF,EAAMgyE,EAC7BC,EAAU9sE,EAAalF,EAAMgyE,EAC7BC,EAAYrtE,EAAQ,EACpB8mC,KAAqBqmC,GAAWE,IAEhCA,KAAuBF,GAAWrmC,EAEhCumC,EADE/yE,EAAa+yE,EAAW9zE,KAAKc,MAAMgzE,GAAYvmC,EAAU,KAC/CvtC,KAAKc,MAAMgzE,GAEX9zE,KAAK00C,KAAKo/B,IAG1B,MAAMG,EAAgBj0E,KAAK6B,IACzBK,EAAeqrC,GACfrrC,EAAe0xE,IAEjBt6C,EAASt5B,KAAKiB,IAAI,GAAIzG,EAAc24E,GAAac,EAAgBd,GACvDS,EAAA5zE,KAAKc,MAAM8yE,EAAUt6C,GAAUA,EAC/Bu6C,EAAA7zE,KAAKc,MAAM+yE,EAAUv6C,GAAUA,EACzC,IAAInhB,EAAI,EAcD,IAbHrR,IACEwsE,GAAiBM,IAAYhyE,GACzB8lC,EAAA1oC,KAAK,CAACvE,MAAOmH,IACfgyE,EAAUhyE,GACZuW,IAEEpX,EAAaf,KAAKc,OAAO8yE,EAAUz7D,EAAIo1B,GAAWjU,GAAUA,EAAQ13B,EAAKsyE,GAAkBtyE,EAAK+xE,EAAYV,KAC9G96D,KAEOy7D,EAAUhyE,GACnBuW,KAGGA,EAAI27D,IAAa37D,EAChBuvB,EAAA1oC,KAAK,CAACvE,MAAOuF,KAAKc,OAAiB8yE,EAAAz7D,EAAIo1B,GAAWjU,GAAUA,IAW7D,OATHvyB,GAAcusE,GAAiBO,IAAYhyE,EACzC6lC,EAAMlrC,QAAUuE,EAAa2mC,EAAMA,EAAMlrC,OAAS,GAAG/B,MAAOoH,EAAKqyE,GAAkBryE,EAAK8xE,EAAYV,IAChGvrC,EAAAA,EAAMlrC,OAAS,GAAG/B,MAAQoH,EAE1B6lC,EAAA1oC,KAAK,CAACvE,MAAOoH,IAEXkF,GAAc8sE,IAAYhyE,GAC9B6lC,EAAA1oC,KAAK,CAACvE,MAAOo5E,IAEdnsC,EAET,SAAAwsC,GAA2Bz5E,EAAOk5E,GAAYjrC,WAACA,EAAAkN,YAAYA,IACzD,MAAM90B,EAAMhf,EAAU8zC,GAChB98B,GAAsB4vB,EAAA1oC,KAAKgI,IAAI8Y,GAAO9gB,KAAKiJ,IAAI6X,KAAS,KACxDtkB,EAAS,IAAOm3E,GAAc,GAAKl5E,GAAO+B,OACzC,OAAAwD,KAAK4B,IAAI+xE,EAAa76D,EAAOtc,GA/FtCi2E,GAAcl4E,GAAK,WACnBk4E,GAAcn3D,SAAW,CACvBosB,MAAO,CACL7rC,SAAU42E,GAAc33E,UAAUmpC,mBA8FtC,MAAAkwC,WAA8B78B,GAC5B1tC,YAAY+vB,GACJ2P,MAAA3P,GACNpgB,KAAKlW,WAAQ,EACbkW,KAAKjW,SAAM,EACXiW,KAAKm5D,iBAAc,EACnBn5D,KAAK66D,eAAY,EACjB76D,KAAKo5D,YAAc,EAErB/oE,MAAMg7B,EAAK1gC,GACT,OAAI1J,EAAcoqC,KAGE,iBAARA,GAAoBA,aAAexpC,UAAYC,UAAUupC,GAF5D,MAKDA,EAEVh7B,yBACQ,MAAA6iC,YAACA,GAAelzB,KAAK3b,SACrBkJ,WAACA,EAAYC,WAAAA,GAAcwS,KAAKvS,gBAClC,IAAApF,IAACA,MAAKC,GAAO0X,KACjB,MAAM86D,EAAS/1E,GAAMsD,EAAMkF,EAAalF,EAAMtD,EACxCg2E,EAASh2E,GAAMuD,EAAMkF,EAAalF,EAAMvD,EAC9C,GAAImuC,EAAa,CACf,MAAM8nC,EAAU7zE,EAAKkB,GACf4yE,EAAU9zE,EAAKmB,GACjB0yE,EAAU,GAAKC,EAAU,EACpBF,EAAA,GACEC,EAAU,GAAKC,EAAU,GAC3BH,EAAA,GAGX,GAAIzyE,IAAQC,EAAK,CACf,IAAIyqC,EAAS,GACTzqC,GAAOzG,OAAOq5E,kBAAoB7yE,GAAOxG,OAAOs5E,oBACzCpoC,EAAAtsC,KAAKwB,IAAU,IAANK,IAEpByyE,EAAOzyE,EAAMyqC,GACRG,GACH4nC,EAAOzyE,EAAM0qC,GAGjB/yB,KAAK3X,IAAMA,EACX2X,KAAK1X,IAAMA,EAEb+H,eACQ,MAAA8pC,EAAWn6B,KAAK3b,QAAQ8pC,MAC1B,IACA0rC,GADAx/B,cAACA,WAAe+gC,GAAYjhC,EAezB,OAbHihC,GACSvB,EAAApzE,KAAK00C,KAAKn7B,KAAK1X,IAAM8yE,GAAY30E,KAAKkB,MAAMqY,KAAK3X,IAAM+yE,GAAY,EAC1EvB,EAAW,MACbntD,QAAQC,KAAK,UAAU3M,KAAKhf,sBAAsBo6E,mCAA0CvB,8BACjFA,EAAA,OAGbA,EAAW75D,KAAKq7D,mBAChBhhC,EAAgBA,GAAiB,IAE/BA,IACSw/B,EAAApzE,KAAK4B,IAAIgyC,EAAew/B,IAE9BA,EAETxpE,mBACE,OAAOxO,OAAOgF,kBAEhBwJ,aACE,MAAMuZ,EAAO5J,KAAK3b,QACZ81C,EAAWvwB,EAAKukB,MACtB,IAAI0rC,EAAW75D,KAAKs7D,eACTzB,EAAApzE,KAAK6B,IAAI,EAAGuxE,GACvB,MAcM1rC,EAAQsrC,GAdkB,CAC9BI,SAAAA,EACAt+C,OAAQ3R,EAAK2R,OACblzB,IAAKuhB,EAAKvhB,IACVC,IAAKshB,EAAKthB,IACVsxE,UAAWz/B,EAASy/B,UACpBv0B,KAAMlL,EAASihC,SACfluE,MAAOitC,EAASjtC,MAChB4sE,UAAW95D,KAAKu7D,aAChBpsC,WAAYnvB,KAAKmwB,eACjBkM,YAAalC,EAASkC,aAAe,EACrC09B,eAA0C,IAA3B5/B,EAAS4/B,eAER/5D,KAAKs+B,QAAUt+B,MAa1B,MAXa,UAAhB4J,EAAK2R,QACPrzB,EAAmBimC,EAAOnuB,KAAM,SAE9B4J,EAAK/mB,SACDsrC,EAAAtrC,UACNmd,KAAKlW,MAAQkW,KAAK1X,IAClB0X,KAAKjW,IAAMiW,KAAK3X,MAEhB2X,KAAKlW,MAAQkW,KAAK3X,IAClB2X,KAAKjW,IAAMiW,KAAK1X,KAEX6lC,EAET99B,YACE,MAAM89B,EAAQnuB,KAAKmuB,MACnB,IAAIrkC,EAAQkW,KAAK3X,IACb0B,EAAMiW,KAAK1X,IAEf,GADMynC,MAAAzN,YACFtiB,KAAK3b,QAAQ0uC,QAAU5E,EAAMlrC,OAAQ,CACjC,MAAA8vC,KAAgBjpC,GAASrD,KAAK6B,IAAI6lC,EAAMlrC,OAAS,EAAG,GAAK,EACtD6G,GAAAipC,EACFhpC,GAAAgpC,EAET/yB,KAAKm5D,YAAcrvE,EACnBkW,KAAK66D,UAAY9wE,EACjBiW,KAAKo5D,YAAcrvE,EAAMD,EAE3BuG,iBAAiBnP,GACR,OAAAo4B,GAAap4B,EAAO8e,KAAKuC,MAAMle,QAAQm1B,OAAQxZ,KAAK3b,QAAQ8pC,MAAMnU,SAI7E,MAAAwhD,WAA0BZ,GACxBvqE,sBACE,MAAMhI,IAACA,EAAAC,IAAKA,GAAO0X,KAAKs/B,WAAU,GAC7Bt/B,KAAA3X,IAAMzG,EAAeyG,GAAOA,EAAM,EAClC2X,KAAA1X,IAAM1G,EAAe0G,GAAOA,EAAM,EAClC0X,KAAAy7D,yBAEPprE,mBACE,MAAM8+B,EAAanvB,KAAKmwB,eAClBltC,EAASksC,EAAanvB,KAAK0F,MAAQ1F,KAAK8G,OACxCu1B,EAAc9zC,EAAUyX,KAAK3b,QAAQ8pC,MAAMkO,aAC3C98B,GAAsB4vB,EAAA1oC,KAAKgI,IAAI4tC,GAAe51C,KAAKiJ,IAAI2sC,KAAiB,KACxEiH,EAAWtjC,KAAK2jC,wBAAwB,GAC9C,OAAOl9C,KAAK00C,KAAKl4C,EAASwD,KAAK4B,IAAI,GAAIi7C,EAASvgC,WAAaxD,IAE/DlP,iBAAiBnP,GACR,OAAU,OAAVA,EAAiB2oC,IAAM7pB,KAAKgyB,oBAA4B9wC,EAAA8e,KAAKm5D,aAAen5D,KAAKo5D,aAE1F/oE,iBAAiBiW,GACf,OAAOtG,KAAKm5D,YAAcn5D,KAAKw5D,mBAAmBlzD,GAAStG,KAAKo5D,aAUpE,SAAAsC,GAAiBC,GAEf,OAAkB,IADHA,EAAWl1E,KAAKiB,IAAI,GAAIjB,KAAKkB,MAAMT,EAAMy0E,KAR1DH,GAAYx6E,GAAK,SACjBw6E,GAAYz5D,SAAW,CACrBosB,MAAO,CACL7rC,SAAU23C,GAAMV,WAAWS,UA8B/B,MAAA4hC,WAA+B79B,GAC7B1tC,YAAY+vB,GACJ2P,MAAA3P,GACNpgB,KAAKlW,WAAQ,EACbkW,KAAKjW,SAAM,EACXiW,KAAKm5D,iBAAc,EACnBn5D,KAAKo5D,YAAc,EAErB/oE,MAAMg7B,EAAK1gC,GACT,MAAMzJ,EAAQ05E,GAAgBr5E,UAAUuwB,MAAMpvB,MAAMsd,KAAM,CAACqrB,EAAK1gC,IAChE,GAAc,IAAVzJ,EAIJ,OAAOU,EAAeV,IAAUA,EAAQ,EAAIA,EAAQ,KAHlD8e,KAAK67D,OAAQ,EAKjBxrE,sBACE,MAAMhI,IAACA,EAAAC,IAAKA,GAAO0X,KAAKs/B,WAAU,GAClCt/B,KAAK3X,IAAMzG,EAAeyG,GAAO5B,KAAK6B,IAAI,EAAGD,GAAO,KACpD2X,KAAK1X,IAAM1G,EAAe0G,GAAO7B,KAAK6B,IAAI,EAAGA,GAAO,KAChD0X,KAAK3b,QAAQ6uC,cACflzB,KAAK67D,OAAQ,GAEV77D,KAAAy7D,yBAEPprE,yBACQ,MAAA9C,WAACA,EAAYC,WAAAA,GAAcwS,KAAKvS,gBACtC,IAAIpF,EAAM2X,KAAK3X,IACXC,EAAM0X,KAAK1X,IACf,MAAMwyE,EAAS/1E,GAAMsD,EAAMkF,EAAalF,EAAMtD,EACxCg2E,EAASh2E,GAAMuD,EAAMkF,EAAalF,EAAMvD,EACxC+2E,EAAM,CAAC/2E,EAAGyL,IAAM/J,KAAKiB,IAAI,GAAIjB,KAAKkB,MAAMT,EAAMnC,IAAMyL,GACtDnI,IAAQC,IACND,GAAO,GACFyyE,EAAA,GACAC,EAAA,MAEPD,EAAOgB,EAAIzzE,GAAK,IAChB0yE,EAAOe,EAAIxzE,EAAK,MAGhBD,GAAO,GACTyyE,EAAOgB,EAAIxzE,GAAK,IAEdA,GAAO,GACTyyE,EAAOe,EAAIzzE,EAAK,IAEd2X,KAAK67D,OAAS77D,KAAK3X,MAAQ2X,KAAK++B,eAAiB12C,IAAQyzE,EAAI97D,KAAK3X,IAAK,IACzEyyE,EAAOgB,EAAIzzE,GAAK,IAElB2X,KAAK3X,IAAMA,EACX2X,KAAK1X,IAAMA,EAEb+H,aACE,MAAMuZ,EAAO5J,KAAK3b,QAKZ8pC,EAjFV,SAAuBurC,EAAmBC,GACxC,MAAMoC,EAASt1E,KAAKkB,MAAMT,EAAMyyE,EAAUrxE,MACpC0zE,EAAiBv1E,KAAK00C,KAAKw+B,EAAUrxE,IAAM7B,KAAKiB,IAAI,GAAIq0E,IACxD5tC,EAAQ,GACV,IAAAwtC,EAAU55E,EAAgB23E,EAAkBrxE,IAAK5B,KAAKiB,IAAI,GAAIjB,KAAKkB,MAAMT,EAAMyyE,EAAUtxE,QACzFyzE,EAAMr1E,KAAKkB,MAAMT,EAAMy0E,IACvBM,EAAcx1E,KAAKkB,MAAMg0E,EAAUl1E,KAAKiB,IAAI,GAAIo0E,IAChDlC,EAAYkC,EAAM,EAAIr1E,KAAKiB,IAAI,GAAIjB,KAAKwB,IAAI6zE,IAAQ,EACrD,GACD3tC,EAAM1oC,KAAK,CAACvE,MAAOy6E,EAAS9gC,MAAO6gC,GAAQC,OACzCM,EACkB,KAAhBA,IACYA,EAAA,IACZH,EACUlC,EAAAkC,GAAO,EAAI,EAAIlC,GAE7B+B,EAAUl1E,KAAKc,MAAM00E,EAAcx1E,KAAKiB,IAAI,GAAIo0E,GAAOlC,GAAaA,QAC7DkC,EAAMC,GAAWD,IAAQC,GAAUE,EAAcD,GACpD,MAAAE,EAAWn6E,EAAgB23E,EAAkBpxE,IAAKqzE,GAEjD,OADPxtC,EAAM1oC,KAAK,CAACvE,MAAOg7E,EAAUrhC,MAAO6gC,GAAQC,KACrCxtC,EA6DSguC,CAJY,CACxB9zE,IAAK2X,KAAK6+B,SACVv2C,IAAK0X,KAAK4+B,UAEmC5+B,MAYxC,MAXa,UAAhB4J,EAAK2R,QACPrzB,EAAmBimC,EAAOnuB,KAAM,SAE9B4J,EAAK/mB,SACDsrC,EAAAtrC,UACNmd,KAAKlW,MAAQkW,KAAK1X,IAClB0X,KAAKjW,IAAMiW,KAAK3X,MAEhB2X,KAAKlW,MAAQkW,KAAK3X,IAClB2X,KAAKjW,IAAMiW,KAAK1X,KAEX6lC,EAET99B,iBAAiBnP,GACR,YAAU,IAAVA,EACH,IACAo4B,GAAap4B,EAAO8e,KAAKuC,MAAMle,QAAQm1B,OAAQxZ,KAAK3b,QAAQ8pC,MAAMnU,QAExE3pB,YACE,MAAMvG,EAAQkW,KAAK3X,IACb0nC,MAAAzN,YACNtiB,KAAKm5D,YAAcjyE,EAAM4C,GACzBkW,KAAKo5D,YAAclyE,EAAM8Y,KAAK1X,KAAOpB,EAAM4C,GAE7CuG,iBAAiBnP,GAIX,YAHU,IAAVA,GAAiC,IAAVA,IACzBA,EAAQ8e,KAAK3X,KAED,OAAVnH,GAAkB6G,MAAM7G,GACnB2oC,IAEF7pB,KAAKgyB,mBAAmB9wC,IAAU8e,KAAK3X,IAC1C,GACOnB,EAAAhG,GAAS8e,KAAKm5D,aAAen5D,KAAKo5D,aAE/C/oE,iBAAiBiW,GACT,MAAAw9B,EAAU9jC,KAAKw5D,mBAAmBlzD,GACxC,OAAO7f,KAAKiB,IAAI,GAAIsY,KAAKm5D,YAAcr1B,EAAU9jC,KAAKo5D,cAa1D,SAAAgD,GAA+BxyD,GAC7B,MAAMuwB,EAAWvwB,EAAKukB,MAClB,GAAAgM,EAASzB,SAAW9uB,EAAK8uB,QAAS,CAC9B,MAAA0D,EAAU7vB,GAAU4tB,EAAS6C,iBAC5B,OAAA/6C,EAAek4C,EAASv3B,MAAQu3B,EAASv3B,KAAKvc,KAAM0b,GAASa,KAAKvc,MAAQ+1C,EAAQt1B,OAEpF,OAAA,EAST,SAAAu1D,GAAyBhzE,EAAO0sB,EAAK1vB,EAAMgC,EAAKC,GAC1C,OAAAe,IAAUhB,GAAOgB,IAAUf,EACtB,CACLwB,MAAOisB,EAAO1vB,EAAO,EACrB0D,IAAKgsB,EAAO1vB,EAAO,GAEZgD,EAAQhB,GAAOgB,EAAQf,EACzB,CACLwB,MAAOisB,EAAM1vB,EACb0D,IAAKgsB,GAGF,CACLjsB,MAAOisB,EACPhsB,IAAKgsB,EAAM1vB,GAGf,SAAAi2E,GAA4Bt4D,GAC1B,MAAMurB,EAAO,CACX3+B,EAAGoT,EAAMyE,KAAOzE,EAAMksD,SAASznD,KAC/B/V,EAAGsR,EAAM0E,MAAQ1E,EAAMksD,SAASxnD,MAChCna,EAAGyV,EAAM2E,IAAM3E,EAAMksD,SAASvnD,IAC9BviB,EAAG4d,EAAM4E,OAAS5E,EAAMksD,SAAStnD,QAE7B2zD,EAASj7E,OAAO+M,OAAO,GAAIkhC,GAC3BqS,EAAa,GACbxF,EAAU,GACVogC,EAAax4D,EAAMy4D,aAAax5E,OAChCy5E,EAAiB14D,EAAM3f,QAAQu0C,YAC/B+jC,EAAkBD,EAAeE,kBAAoBp2E,EAAKg2E,EAAa,EAC7E,IAAA,IAAS15E,EAAI,EAAGA,EAAI05E,EAAY15E,IAAK,CACnC,MAAM8mB,EAAO8yD,EAAe/sD,WAAW3L,EAAM64D,qBAAqB/5E,IAClEs5C,EAAQt5C,GAAK8mB,EAAKwyB,QAClB,MAAMpD,EAAgBh1B,EAAM84D,iBAAiBh6E,EAAGkhB,EAAM+4D,YAAc3gC,EAAQt5C,GAAI65E,GAC1EK,EAASxwD,GAAO5C,EAAKhH,MACrButD,GA1CgBjtD,EA0CYc,EAAMd,IA1CbN,EA0CkBo6D,EAzCvCvyC,EAAAtpC,EAD2BspC,EA0CoBzmB,EAAMy4D,aAAa35E,IAzCjD2nC,EAAQ,CAACA,GAC3B,CACLv3B,EAAGyS,GAAazC,EAAKN,EAAK2C,OAAQklB,GAClC55B,EAAG45B,EAAMxnC,OAAS2f,EAAKG,aAuCvB6+B,EAAW9+C,GAAKqtE,EAChB,MAAM5tB,EAAe34C,EAAgBoa,EAAMo0B,cAAct1C,GAAK65E,GACxDtzE,EAAQ5C,KAAKc,MAAMkB,EAAU85C,IAGtB06B,GAAAV,EAAQhtC,EAAMgT,EAFX85B,GAAgBhzE,EAAO2vC,EAAch0C,EAAGmrE,EAASj9D,EAAG,EAAG,KACvDmpE,GAAgBhzE,EAAO2vC,EAAc9zC,EAAGirE,EAASt/D,EAAG,GAAI,MA/C5E,IAA0BqS,EAAKN,EAAM6nB,EAkDnCzmB,EAAMk5D,eACJ3tC,EAAK3+B,EAAI2rE,EAAO3rE,EAChB2rE,EAAO7pE,EAAI68B,EAAK78B,EAChB68B,EAAKhhC,EAAIguE,EAAOhuE,EAChBguE,EAAOn2E,EAAImpC,EAAKnpC,GAEZ4d,EAAAm5D,iBAsBR,SAA8Bn5D,EAAO49B,EAAYxF,GAC/C,MAAMzwC,EAAQ,GACR6wE,EAAax4D,EAAMy4D,aAAax5E,OAChC2mB,EAAO5F,EAAM3f,QACb+4E,EAAQhB,GAAsBxyD,GAAQ,EACtCyzD,EAAgBr5D,EAAM+4D,YACtBJ,EAAkB/yD,EAAKgvB,YAAYgkC,kBAAoBp2E,EAAKg2E,EAAa,EAC/E,IAAA,IAAS15E,EAAI,EAAGA,EAAI05E,EAAY15E,IAAK,CACnC,MAAMw6E,EAAqBt5D,EAAM84D,iBAAiBh6E,EAAGu6E,EAAgBD,EAAQhhC,EAAQt5C,GAAI65E,GACnFtzE,EAAQ5C,KAAKc,MAAMkB,EAAUmB,EAAgB0zE,EAAmBj0E,MAAQtC,KACxEV,EAAOu7C,EAAW9+C,GAClBoC,EAAIq4E,GAAUD,EAAmBp4E,EAAGmB,EAAKwK,EAAGxH,GAC5C8gB,EAAYqzD,GAAqBn0E,GACjCof,EAAOg1D,GAAiBH,EAAmBt4E,EAAGqB,EAAK6M,EAAGiX,GAC5Dxe,EAAMlG,KAAK,CACTT,EAAGs4E,EAAmBt4E,EACtBE,EAAAA,EACAilB,UAAAA,EACA1B,KAAAA,EACAE,IAAKzjB,EACLwjB,MAAOD,EAAOpiB,EAAK6M,EACnB0V,OAAQ1jB,EAAImB,EAAKwK,IAGd,OAAAlF,EA9CkB+xE,CAAqB15D,EAAO49B,EAAYxF,GAEnE,SAAA6gC,GAAsBV,EAAQhtC,EAAMlmC,EAAOs0E,EAASC,GAClD,MAAMnvE,EAAMhI,KAAKwB,IAAIxB,KAAKgI,IAAIpF,IACxBqG,EAAMjJ,KAAKwB,IAAIxB,KAAKiJ,IAAIrG,IAC9B,IAAIrE,EAAI,EACJE,EAAI,EACJy4E,EAAQ7zE,MAAQylC,EAAK3+B,GAClB5L,GAAAuqC,EAAK3+B,EAAI+sE,EAAQ7zE,OAAS2E,EAC/B8tE,EAAO3rE,EAAInK,KAAK4B,IAAIk0E,EAAO3rE,EAAG2+B,EAAK3+B,EAAI5L,IAC9B24E,EAAQ5zE,IAAMwlC,EAAK78B,IACvB1N,GAAA24E,EAAQ5zE,IAAMwlC,EAAK78B,GAAKjE,EAC7B8tE,EAAO7pE,EAAIjM,KAAK6B,IAAIi0E,EAAO7pE,EAAG68B,EAAK78B,EAAI1N,IAErC44E,EAAQ9zE,MAAQylC,EAAKhhC,GAClBrJ,GAAAqqC,EAAKhhC,EAAIqvE,EAAQ9zE,OAAS4F,EAC/B6sE,EAAOhuE,EAAI9H,KAAK4B,IAAIk0E,EAAOhuE,EAAGghC,EAAKhhC,EAAIrJ,IAC9B04E,EAAQ7zE,IAAMwlC,EAAKnpC,IACvBlB,GAAA04E,EAAQ7zE,IAAMwlC,EAAKnpC,GAAKsJ,EAC7B6sE,EAAOn2E,EAAIK,KAAK6B,IAAIi0E,EAAOn2E,EAAGmpC,EAAKnpC,EAAIlB,IA6B3C,SAAAs4E,GAA8Bn0E,GACxB,OAAU,IAAVA,GAAyB,MAAVA,EACV,SACEA,EAAQ,IACV,OAEF,QAET,SAA0Bo0E,GAAAz4E,EAAGkO,EAAGvG,GAMvB,MALO,UAAVA,EACG3H,GAAAkO,EACc,WAAVvG,IACT3H,GAAMkO,EAAI,GAELlO,EAET,SAAmBu4E,GAAAr4E,EAAG2L,EAAGxH,GAMhB,OALO,KAAVA,GAA0B,MAAVA,EAClBnE,GAAM2L,EAAI,GACDxH,EAAQ,KAAOA,EAAQ,MAC3BnE,GAAA2L,GAEA3L,EA6CT,SAAwB24E,GAAA75D,EAAOsD,EAAQqxB,EAAU+/B,GAC/C,MAAMx1D,IAACA,GAAOc,EACd,GAAI20B,EACFz1B,EAAI0E,IAAI5D,EAAMi0B,QAASj0B,EAAMk0B,QAAS5wB,EAAQ,EAAG5gB,OAC5C,CACD,IAAAsyC,EAAgBh1B,EAAM84D,iBAAiB,EAAGx1D,GAC1CpE,EAAA4E,OAAOkxB,EAAch0C,EAAGg0C,EAAc9zC,GAC1C,IAAA,IAASpC,EAAI,EAAGA,EAAI41E,EAAY51E,IACdk2C,EAAAh1B,EAAM84D,iBAAiBh6E,EAAGwkB,GACtCpE,EAAA6E,OAAOixB,EAAch0C,EAAGg0C,EAAc9zC,IAtMhD02E,GAAiB56E,GAAK,cACtB46E,GAAiB75D,SAAW,CAC1BosB,MAAO,CACL7rC,SAAU23C,GAAMV,WAAWukC,YAC3BjjC,MAAO,CACLC,SAAS,KA8Nf,MAAAijC,WAAgCnD,GAC9BvqE,YAAY+vB,GACJ2P,MAAA3P,GACNpgB,KAAKi4B,aAAU,EACfj4B,KAAKk4B,aAAU,EACfl4B,KAAK+8D,iBAAc,EACnB/8D,KAAKy8D,aAAe,GACpBz8D,KAAKm9D,iBAAmB,GAE1B9sE,gBACE,MAAM+rC,EAAUp8B,KAAKkwD,SAAW3jD,GAAU6vD,GAAsBp8D,KAAK3b,SAAW,GAC1E6O,EAAI8M,KAAK0F,MAAQ1F,KAAKyK,SAAW2xB,EAAQ12B,MACzC7U,EAAImP,KAAK8G,OAAS9G,KAAKsX,UAAY8kB,EAAQt1B,OACjD9G,KAAKi4B,QAAUxxC,KAAKkB,MAAMqY,KAAKyI,KAAOvV,EAAI,EAAIkpC,EAAQ3zB,MACtDzI,KAAKk4B,QAAUzxC,KAAKkB,MAAMqY,KAAK2I,IAAM9X,EAAI,EAAIurC,EAAQzzB,KACrD3I,KAAK+8D,YAAct2E,KAAKkB,MAAMlB,KAAK4B,IAAI6K,EAAGrC,GAAK,GAEjDR,sBACE,MAAMhI,IAACA,EAAAC,IAAKA,GAAO0X,KAAKs/B,WAAU,GAClCt/B,KAAK3X,IAAMzG,EAAeyG,KAASN,MAAMM,GAAOA,EAAM,EACtD2X,KAAK1X,IAAM1G,EAAe0G,KAASP,MAAMO,GAAOA,EAAM,EACjD0X,KAAAy7D,yBAEPprE,mBACE,OAAO5J,KAAK00C,KAAKn7B,KAAK+8D,YAAcX,GAAsBp8D,KAAK3b,UAEjEgM,mBAAmB89B,GACDysC,GAAAr5E,UAAU0hD,mBAAmBxhD,KAAKue,KAAMmuB,GACxDnuB,KAAKy8D,aAAez8D,KAAKwpB,YACtB5lC,KAAI,CAAC1C,EAAOyJ,KACL,MAAA8/B,EAAQnoC,EAAS0d,KAAK3b,QAAQu0C,YAAYt2C,SAAU,CAACpB,EAAOyJ,GAAQqV,MACnE,OAAAyqB,GAAmB,IAAVA,EAAcA,EAAQ,MAEvCpa,QAAO,CAACtrB,EAAGjC,IAAMkd,KAAKuC,MAAMsvB,kBAAkB/uC,KAEnDuN,MACE,MAAMuZ,EAAO5J,KAAK3b,QACdulB,EAAK8uB,SAAW9uB,EAAKgvB,YAAYF,QAChB4jC,GAAAt8D,MAEdA,KAAAk9D,eAAe,EAAG,EAAG,EAAG,GAGjC7sE,eAAe2tE,EAAcC,EAAeC,EAAaC,GACvDn+D,KAAKi4B,SAAWxxC,KAAKkB,OAAOq2E,EAAeC,GAAiB,GAC5Dj+D,KAAKk4B,SAAWzxC,KAAKkB,OAAOu2E,EAAcC,GAAkB,GACvDn+D,KAAA+8D,aAAet2E,KAAK4B,IAAI2X,KAAK+8D,YAAc,EAAGt2E,KAAK6B,IAAI01E,EAAcC,EAAeC,EAAaC,IAExG9tE,cAAc1F,GAGL,OAAAf,EAAgBe,GAFCjE,GAAYsZ,KAAAy8D,aAAax5E,QAAU,IAEVsF,EAD9ByX,KAAK3b,QAAQqwC,YAAc,IAGhDrkC,8BAA8BnP,GAC5B,GAAID,EAAcC,GACT,OAAA2oC,IAET,MAAMu0C,EAAgBp+D,KAAK+8D,aAAe/8D,KAAK1X,IAAM0X,KAAK3X,KACtD,OAAA2X,KAAK3b,QAAQxB,SACPmd,KAAK1X,IAAMpH,GAASk9E,GAEtBl9E,EAAQ8e,KAAK3X,KAAO+1E,EAE9B/tE,8BAA8B9G,GAC5B,GAAItI,EAAcsI,GACT,OAAAsgC,IAET,MAAMw0C,EAAiB90E,GAAYyW,KAAK+8D,aAAe/8D,KAAK1X,IAAM0X,KAAK3X,MACvE,OAAO2X,KAAK3b,QAAQxB,QAAUmd,KAAK1X,IAAM+1E,EAAiBr+D,KAAK3X,IAAMg2E,EAEvEhuE,qBAAqB1F,GACb,MAAAiuC,EAAc54B,KAAKy8D,cAAgB,GACzC,GAAI9xE,GAAS,GAAKA,EAAQiuC,EAAY31C,OAAQ,CAC5C,MAAMq7E,EAAa1lC,EAAYjuC,GACxB,OAjFb,SAAiCwmB,EAAQxmB,EAAO8/B,GAC9C,OAAOxd,GAAckE,EAAQ,CAC3BsZ,MAAAA,EACAhnC,MAAAkH,EACAtJ,KAAM,eA6EGk9E,CAAwBv+D,KAAK2G,aAAchc,EAAO2zE,IAG7DjuE,iBAAiB1F,EAAO6zE,EAAoB7B,EAAkB,GAC5D,MAAMtzE,EAAQ2W,KAAKo4B,cAAcztC,GAAS5D,EAAU41E,EAC7C,MAAA,CACL33E,EAAGyB,KAAKiJ,IAAIrG,GAASm1E,EAAqBx+D,KAAKi4B,QAC/C/yC,EAAGuB,KAAKgI,IAAIpF,GAASm1E,EAAqBx+D,KAAKk4B,QAC/C7uC,MAAAA,GAGJgH,yBAAyB1F,EAAOzJ,GAC9B,OAAO8e,KAAK88D,iBAAiBnyE,EAAOqV,KAAKw4B,8BAA8Bt3C,IAEzEmP,gBAAgB1F,GACd,OAAOqV,KAAKi5B,yBAAyBtuC,GAAS,EAAGqV,KAAK+jC,gBAExD1zC,sBAAsB1F,GACpB,MAAM8d,KAACA,EAAME,IAAAA,EAAAD,MAAKA,EAAOE,OAAAA,GAAU5I,KAAKm9D,iBAAiBxyE,GAClD,MAAA,CACL8d,KAAAA,EACAE,IAAAA,EACAD,MAAAA,EACAE,OAAAA,GAGJvY,iBACE,MAAM6R,gBAACA,EAAiB8wB,MAAM2F,SAACA,IAAa34B,KAAK3b,QACjD,GAAI6d,EAAiB,CACnB,MAAMgB,EAAMlD,KAAKkD,IACbA,EAAA6C,OACA7C,EAAAwE,YACJm2D,GAAe79D,KAAMA,KAAKw4B,8BAA8Bx4B,KAAK66D,WAAYliC,EAAU34B,KAAKy8D,aAAax5E,QACjGigB,EAAA2E,YACJ3E,EAAIgH,UAAYhI,EACZgB,EAAAgF,OACAhF,EAAAiD,WAGR9V,WACE,MAAM6S,EAAMlD,KAAKkD,IACX0G,EAAO5J,KAAK3b,SACZo0C,WAACA,OAAYzF,GAAQppB,EACrB8uD,EAAa14D,KAAKy8D,aAAax5E,OACrC,IAAIH,EAAGiwC,EAAQ8K,EAaf,GAZIj0B,EAAKgvB,YAAYF,SAxMzB,SAAyB10B,EAAO00D,GAC9B,MAAMx1D,IAACA,EAAK7e,SAASu0C,YAACA,IAAgB50B,EACtC,IAAA,IAASlhB,EAAI41E,EAAa,EAAG51E,GAAK,EAAGA,IAAK,CACxC,MAAMwiD,EAAc1M,EAAYjpB,WAAW3L,EAAM64D,qBAAqB/5E,IAChEk6E,EAASxwD,GAAO84B,EAAY1iC,OAC5B5d,EAACA,IAAGE,EAAGilB,UAAAA,EAAA1B,KAAWA,MAAME,EAAKD,MAAAA,EAAAE,OAAOA,GAAU5E,EAAMm5D,iBAAiBr6E,IACrEi6C,cAACA,GAAiBuI,EACpB,IAACrkD,EAAc87C,GAAgB,CAC3B,MAAAuiB,EAAehzC,GAAcg5B,EAAYga,cACzCljB,EAAU7vB,GAAU+4B,EAAYtI,iBACtC95B,EAAIgH,UAAY6yB,EACV,MAAA0hC,EAAeh2D,EAAO2zB,EAAQ3zB,KAC9Bi2D,EAAc/1D,EAAMyzB,EAAQzzB,IAC5Bg2D,EAAgBj2D,EAAQD,EAAO2zB,EAAQ12B,MACvCk5D,EAAiBh2D,EAASD,EAAMyzB,EAAQt1B,OAC1CxlB,OAAOwgB,OAAOw9C,GAAcpL,MAAKnvD,GAAW,IAANA,KACpCme,EAAAwE,YACJ2D,GAAmBnI,EAAK,CACtBle,EAAGy5E,EACHv5E,EAAGw5E,EACHxrE,EAAGyrE,EACH9tE,EAAG+tE,EACHt3D,OAAQg4C,IAENp8C,EAAAgF,QAEAhF,EAAAkjC,SAASq4B,EAAcC,EAAaC,EAAeC,GAIzDl1D,GAAAxG,EACAc,EAAMy4D,aAAa35E,GACnBkC,EACAE,EAAK83E,EAAOj6D,WAAa,EACzBi6D,EACA,CACE77D,MAAOmkC,EAAYnkC,MACnBgJ,UAAAA,EACAC,aAAc,YAmKhBy0D,CAAgB7+D,KAAM04D,GAEpB1lC,EAAK0F,SACP14B,KAAKmuB,MAAM1iC,SAAQ,CAACmzB,EAAMj0B,KACxB,GAAc,IAAVA,EAAa,CACNooC,EAAA/yB,KAAKw4B,8BAA8B5Z,EAAK19B,QAtJ3D,SAAwB8iB,EAAO86D,EAAcx3D,EAAQoxD,GACnD,MAAMx1D,EAAMc,EAAMd,IACZy1B,EAAWmmC,EAAanmC,UACvBx3B,kBAAOoJ,GAAau0D,GACrBnmC,IAAa+/B,IAAgBr4D,IAAUkK,GAAajD,EAAS,IAG/DpE,EAAA6C,OACJ7C,EAAIoH,YAAcjK,EAClB6C,EAAIqH,UAAYA,EAChBrH,EAAIsjC,YAAYs4B,EAAa1hD,YAC7Bla,EAAIujC,eAAiBq4B,EAAazhD,iBAC9Bna,EAAAwE,YACWm2D,GAAA75D,EAAOsD,EAAQqxB,EAAU+/B,GACpCx1D,EAAA2E,YACA3E,EAAAkF,SACAlF,EAAAiD,WAwImB44D,CAAA/+D,KADKgzB,EAAKrjB,WAAW3P,KAAK2G,WAAWhc,EAAQ,IAC1BooC,EAAQ2lC,OAI5CjgC,EAAWC,QAAS,CAEtB,IADIx1B,EAAA6C,OACCjjB,EAAI41E,EAAa,EAAG51E,GAAK,EAAGA,IAAK,CACpC,MAAMwiD,EAAc7M,EAAW9oB,WAAW3P,KAAK68D,qBAAqB/5E,KAC7Dqe,kBAAOoJ,GAAa+6B,EACtB/6B,GAAclK,IAGnB6C,EAAIqH,UAAYA,EAChBrH,EAAIoH,YAAcjK,EAClB6C,EAAIsjC,YAAYlB,EAAYloB,YAC5Bla,EAAIujC,eAAiBnB,EAAYjoB,iBACjC0V,EAAS/yB,KAAKw4B,8BAA8B5uB,EAAKukB,MAAMtrC,QAAUmd,KAAK3X,IAAM2X,KAAK1X,KACtEu1C,EAAA79B,KAAK88D,iBAAiBh6E,EAAGiwC,GAChC7vB,EAAAwE,YACAxE,EAAA4E,OAAO9H,KAAKi4B,QAASj4B,KAAKk4B,SAC1Bh1B,EAAA6E,OAAO81B,EAAS74C,EAAG64C,EAAS34C,GAC5Bge,EAAAkF,UAEFlF,EAAAiD,WAGR9V,cACAA,aACE,MAAM6S,EAAMlD,KAAKkD,IACX0G,EAAO5J,KAAK3b,QACZ81C,EAAWvwB,EAAKukB,MAClB,IAACgM,EAASzB,QACZ,OAEI,MAAAhE,EAAa10B,KAAKo4B,cAAc,GACtC,IAAIrF,EAAQrtB,EACRxC,EAAA6C,OACA7C,EAAAsE,UAAUxH,KAAKi4B,QAASj4B,KAAKk4B,SACjCh1B,EAAIlC,OAAO0zB,GACXxxB,EAAIiH,UAAY,SAChBjH,EAAIkH,aAAe,SACnBpK,KAAKmuB,MAAM1iC,SAAQ,CAACmzB,EAAMj0B,KACxB,GAAc,IAAVA,IAAgBif,EAAK/mB,QACvB,OAEF,MAAMyiD,EAAcnL,EAASxqB,WAAW3P,KAAK2G,WAAWhc,IAClD24C,EAAW92B,GAAO84B,EAAY1iC,MAEpC,GADAmwB,EAAS/yB,KAAKw4B,8BAA8Bx4B,KAAKmuB,MAAMxjC,GAAOzJ,OAC1DokD,EAAYxI,kBAAmB,CACjC55B,EAAIN,KAAO0gC,EAAS/9B,OACZG,EAAAxC,EAAIuC,YAAYmZ,EAAK6L,OAAO/kB,MACpCxC,EAAIgH,UAAYo7B,EAAYvI,cACtB,MAAAX,EAAU7vB,GAAU+4B,EAAYtI,iBACtC95B,EAAIkjC,UACD1gC,EAAQ,EAAI02B,EAAQ3zB,MACpBsqB,EAASuQ,EAASj9C,KAAO,EAAI+1C,EAAQzzB,IACtCjD,EAAQ02B,EAAQ12B,MAChB49B,EAASj9C,KAAO+1C,EAAQt1B,QAG5B4C,GAAWxG,EAAK0b,EAAK6L,MAAO,GAAIsI,EAAQuQ,EAAU,CAChDniC,MAAOmkC,EAAYnkC,WAGnB+B,EAAAiD,UAEN9V,cAEF0tE,GAAkB/8E,GAAK,eACvB+8E,GAAkBh8D,SAAW,CAC3B22B,SAAS,EACTsmC,SAAS,EACTnhC,SAAU,YACVpF,WAAY,CACVC,SAAS,EACTnuB,UAAW,EACX6S,WAAY,GACZC,iBAAkB,GAEpB2V,KAAM,CACJ2F,UAAU,GAEZjE,WAAY,EACZvG,MAAO,CACL2O,mBAAmB,EACnBx6C,SAAU23C,GAAMV,WAAWS,SAE7BpB,YAAa,CACXmE,mBAAe,EACfC,gBAAiB,EACjBtE,SAAS,EACT91B,KAAM,CACJvc,KAAM,IAER/D,SAASmoC,GACAA,EAET2R,QAAS,EACTwgC,mBAAmB,IAGvBmB,GAAkBzkC,cAAgB,CAChC2lC,mBAAoB,cACpBC,oBAAqB,QACrBC,cAAe,SAEjBpB,GAAkBv8D,YAAc,CAC9Bi3B,WAAY,CACVvzB,UAAW,SAIf,MAAMk6D,GAAY,CAChBC,YAAa,CAACC,QAAQ,EAAMj5E,KAAM,EAAGk5E,MAAO,KAC5CC,OAAQ,CAACF,QAAQ,EAAMj5E,KAAM,IAAMk5E,MAAO,IAC1CE,OAAQ,CAACH,QAAQ,EAAMj5E,KAAM,IAAOk5E,MAAO,IAC3CG,KAAM,CAACJ,QAAQ,EAAMj5E,KAAM,KAASk5E,MAAO,IAC3CI,IAAK,CAACL,QAAQ,EAAMj5E,KAAM,MAAUk5E,MAAO,IAC3CK,KAAM,CAACN,QAAQ,EAAOj5E,KAAM,OAAWk5E,MAAO,GAC9CM,MAAO,CAACP,QAAQ,EAAMj5E,KAAM,OAASk5E,MAAO,IAC5CO,QAAS,CAACR,QAAQ,EAAOj5E,KAAM,OAASk5E,MAAO,GAC/CQ,KAAM,CAACT,QAAQ,EAAMj5E,KAAM,SAEvB25E,GAAS1+E,OAAO0B,KAAKo8E,IAC3B,SAAAa,GAAgB95E,EAAGC,GACjB,OAAOD,EAAIC,EAEb,SAAA0rB,GAAe9N,EAAOrE,GACpB,GAAI1e,EAAc0e,GACT,OAAA,KAET,MAAMugE,EAAUl8D,EAAMm8D,UAChBC,OAACA,EAAQ74E,MAAO84E,EAAAC,WAAAA,GAAct8D,EAAMu8D,WAC1C,IAAIr/E,EAAQye,EASZ,MARsB,mBAAXygE,IACTl/E,EAAQk/E,EAAOl/E,IAEZU,EAAeV,KACVA,EAAkB,iBAAXk/E,EACXF,EAAQpuD,MAAM5wB,EAAOk/E,GACrBF,EAAQpuD,MAAM5wB,IAEN,OAAVA,EACK,MAELm/E,IACFn/E,EAAkB,SAAVm/E,IAA8Bx4E,EAAAy4E,KAA8B,IAAfA,EAEjDJ,EAAQM,QAAQt/E,EAAOm/E,GADvBH,EAAQM,QAAQt/E,EAAO,UAAWo/E,KAGhCp/E,GAEV,SAAmCu/E,GAAAC,EAASr4E,EAAKC,EAAKq4E,GACpD,MAAMt9E,EAAO28E,GAAM/8E,OACV,IAAA,IAAAH,EAAIk9E,GAAM77E,QAAQu8E,GAAU59E,EAAIO,EAAO,IAAKP,EAAG,CAChD,MAAA89E,EAAWxB,GAAUY,GAAMl9E,IAC3Bi9B,EAAS6gD,EAASrB,MAAQqB,EAASrB,MAAQ19E,OAAOq5E,iBACpD,GAAA0F,EAAStB,QAAU74E,KAAK00C,QAAY9yC,IAAQ03B,EAAS6gD,EAASv6E,QAAUs6E,EAC1E,OAAOX,GAAMl9E,GAGjB,OAAOk9E,GAAM38E,EAAO,GAkBtB,SAAiBw9E,GAAA1yC,EAAO2yC,EAAMC,GAC5B,GAAKA,GACW,GACLA,EAAW99E,OAAQ,CAC5B,MAAM6H,GAACA,EAAAD,GAAIA,GAAML,GAAQu2E,EAAYD,GAErC3yC,EADkB4yC,EAAWj2E,IAAOg2E,EAAOC,EAAWj2E,GAAMi2E,EAAWl2E,KACpD,QAJnBsjC,EAAM2yC,IAAQ,EAoBlB,SAA6BE,GAAAh9D,EAAOlC,EAAQm/D,GAC1C,MAAM9yC,EAAQ,GACR+yC,EAAM,GACN79E,EAAOye,EAAO7e,OACpB,IAAIH,EAAG5B,EACP,IAAK4B,EAAI,EAAGA,EAAIO,IAAQP,EACtB5B,EAAQ4gB,EAAOhf,GACfo+E,EAAIhgF,GAAS4B,EACbqrC,EAAM1oC,KAAK,CACTvE,MAAAA,EACA25C,OAAO,IAGH,OAAS,IAATx3C,GAAe49E,EA1BzB,SAAuBj9D,EAAOmqB,EAAO+yC,EAAKD,GACxC,MAAMf,EAAUl8D,EAAMm8D,SAChBllC,GAASilC,EAAQM,QAAQryC,EAAM,GAAGjtC,MAAO+/E,GACzCj2E,EAAOmjC,EAAMA,EAAMlrC,OAAS,GAAG/B,MACrC,IAAI25C,EAAOlwC,EACN,IAAAkwC,EAAQI,EAAOJ,GAAS7vC,EAAM6vC,GAASqlC,EAAQp0E,IAAI+uC,EAAO,EAAGomC,GAChEt2E,EAAQu2E,EAAIrmC,GACRlwC,GAAS,IACXwjC,EAAMxjC,GAAOkwC,OAAQ,GAGlB,OAAA1M,EAeqCgzC,CAAcn9D,EAAOmqB,EAAO+yC,EAAKD,GAAzC9yC,EAEtC,MAAAizC,WAAwBrjC,GACtB1tC,YAAY4b,GACJ8jB,MAAA9jB,GACNjM,KAAKytB,OAAS,CACZroB,KAAM,GACNmkB,OAAQ,GACRtG,IAAK,IAEPjjB,KAAKqhE,MAAQ,MACbrhE,KAAKshE,gBAAa,EAClBthE,KAAKuhE,SAAW,GAChBvhE,KAAKwhE,aAAc,EACnBxhE,KAAKugE,gBAAa,EAEpBlwE,KAAK2pD,EAAWpwC,GACd,MAAMk3D,EAAO9mB,EAAU8mB,OAAS9mB,EAAU8mB,KAAO,IAC3CZ,EAAUlgE,KAAKmgE,SAAW,IAAIn2B,GAASC,MAAM+P,EAAUhQ,SAASnsB,MACtEqiD,EAAQ3lB,KAAK3wC,GACLjlB,EAAAm8E,EAAKW,eAAgBvB,EAAQwB,WACrC1hE,KAAKugE,WAAa,CAChBH,OAAQU,EAAKV,OACb74E,MAAOu5E,EAAKv5E,MACZ+4E,WAAYQ,EAAKR,YAEnBvwC,MAAMwqB,KAAKP,GACXh6C,KAAKwhE,YAAc53D,EAAK+3D,WAE1BtxE,MAAMg7B,EAAK1gC,GACT,YAAY,IAAR0gC,EACK,KAEFvZ,GAAM9R,KAAMqrB,GAErBh7B,eACQ0/B,MAAAof,eACNnvC,KAAKytB,OAAS,CACZroB,KAAM,GACNmkB,OAAQ,GACRtG,IAAK,IAGT5yB,sBACE,MAAMhM,EAAU2b,KAAK3b,QACf67E,EAAUlgE,KAAKmgE,SACft2B,EAAOxlD,EAAQy8E,KAAKj3B,MAAQ,MAClC,IAAIxhD,IAACA,EAAAC,IAAKA,EAAKiF,WAAAA,EAAAC,WAAYA,GAAcwS,KAAKvS,gBAC9C,SAAAm0E,EAAsBrmD,GACfhuB,GAAexF,MAAMwzB,EAAOlzB,OACzBA,EAAA5B,KAAK4B,IAAIA,EAAKkzB,EAAOlzB,MAExBmF,GAAezF,MAAMwzB,EAAOjzB,OACzBA,EAAA7B,KAAK6B,IAAIA,EAAKizB,EAAOjzB,MAG1BiF,GAAeC,IAClBo0E,EAAa5hE,KAAK6hE,mBACK,UAAnBx9E,EAAQk3B,QAA+C,WAAzBl3B,EAAQ8pC,MAAMxqC,QAC9Ci+E,EAAa5hE,KAAKs/B,WAAU,KAG1Bj3C,EAAAzG,EAAeyG,KAASN,MAAMM,GAAOA,GAAO63E,EAAQM,QAAQniD,KAAKC,MAAOurB,GACxEvhD,EAAA1G,EAAe0G,KAASP,MAAMO,GAAOA,GAAO43E,EAAQ4B,MAAMzjD,KAAKC,MAAOurB,GAAQ,EACpF7pC,KAAK3X,IAAM5B,KAAK4B,IAAIA,EAAKC,EAAM,GAC/B0X,KAAK1X,IAAM7B,KAAK6B,IAAID,EAAM,EAAGC,GAE/B+H,kBACE,MAAM+f,EAAMpQ,KAAK+hE,qBACjB,IAAI15E,EAAMxG,OAAOgF,kBACbyB,EAAMzG,OAAOsoC,kBAKjB,OAJI/Z,EAAIntB,SACNoF,EAAM+nB,EAAI,GACJ9nB,EAAA8nB,EAAIA,EAAIntB,OAAS,IAElB,CAACoF,IAAAA,EAAKC,IAAAA,GAEf+H,aACE,MAAMhM,EAAU2b,KAAK3b,QACf29E,EAAW39E,EAAQy8E,KACnB3mC,EAAW91C,EAAQ8pC,MACnB4yC,EAAiC,WAApB5mC,EAASx2C,OAAsBqc,KAAK+hE,qBAAuB/hE,KAAKiiE,YAC5D,UAAnB59E,EAAQk3B,QAAsBwlD,EAAW99E,SACtC+c,KAAA3X,IAAM2X,KAAK6+B,UAAYkiC,EAAW,GACvC/gE,KAAK1X,IAAM0X,KAAK4+B,UAAYmiC,EAAWA,EAAW99E,OAAS,IAE7D,MAAMoF,EAAM2X,KAAK3X,IAEX8lC,ED74TV,SAAwBrsB,EAAQzZ,EAAKC,GACnC,IAAIwB,EAAQ,EACRC,EAAM+X,EAAO7e,OACjB,KAAO6G,EAAQC,GAAO+X,EAAOhY,GAASzB,GACpCyB,IAEF,KAAOC,EAAMD,GAASgY,EAAO/X,EAAM,GAAKzB,GACtCyB,IAEK,OAAAD,EAAQ,GAAKC,EAAM+X,EAAO7e,OAC7B6e,EAAOpgB,MAAMoI,EAAOC,GACpB+X,ECk4TYogE,CAAenB,EAAY14E,EAD7B2X,KAAK1X,KAWV,OATF0X,KAAAqhE,MAAQW,EAASn4B,OAAS1P,EAASD,SACpCumC,GAA0BuB,EAAStB,QAAS1gE,KAAK3X,IAAK2X,KAAK1X,IAAK0X,KAAKmiE,kBAAkB95E,IA7I/F,SAAoC2b,EAAOy9B,EAAUi/B,EAASr4E,EAAKC,GACxD,IAAA,IAAAxF,EAAIk9E,GAAM/8E,OAAS,EAAGH,GAAKk9E,GAAM77E,QAAQu8E,GAAU59E,IAAK,CAC/D,MAAM+mD,EAAOm2B,GAAMl9E,GACf,GAAAs8E,GAAUv1B,GAAMy1B,QAAUt7D,EAAMm8D,SAAS7kC,KAAKhzC,EAAKD,EAAKwhD,IAASpI,EAAW,EACvE,OAAAoI,EAGX,OAAOm2B,GAAMU,EAAUV,GAAM77E,QAAQu8E,GAAW,GAuI1C0B,CAA2BpiE,KAAMmuB,EAAMlrC,OAAQ++E,EAAStB,QAAS1gE,KAAK3X,IAAK2X,KAAK1X,MAC/E0X,KAAAshE,WAAcnnC,EAASU,MAAMC,SAA0B,SAAf96B,KAAKqhE,MAtItD,SAA4Bx3B,GACjB,IAAA,IAAA/mD,EAAIk9E,GAAM77E,QAAQ0lD,GAAQ,EAAGxmD,EAAO28E,GAAM/8E,OAAQH,EAAIO,IAAQP,EACjE,GAAAs8E,GAAUY,GAAMl9E,IAAIw8E,OACtB,OAAOU,GAAMl9E,GAoIXu/E,CAAmBriE,KAAKqhE,YADyC,EAErErhE,KAAKsiE,YAAYvB,GACb18E,EAAQxB,SACJsrC,EAAAtrC,UAEDm+E,GAAoBhhE,KAAMmuB,EAAOnuB,KAAKshE,YAE/CjxE,gBACM2P,KAAK3b,QAAQk+E,qBACfviE,KAAKsiE,YAAYtiE,KAAKmuB,MAAMvqC,KAAIg7B,IAASA,EAAK19B,SAGlDmP,YAAY0wE,GACV,IAEI9lC,EAAOjwC,EAFPlB,EAAQ,EACRC,EAAM,EAENiW,KAAK3b,QAAQ0uC,QAAUguC,EAAW99E,SAC5Bg4C,EAAAj7B,KAAKwiE,mBAAmBzB,EAAW,IAEzCj3E,EADwB,IAAtBi3E,EAAW99E,OACL,EAAIg4C,GAEEj7B,KAAAwiE,mBAAmBzB,EAAW,IAAM9lC,GAAS,EAE7DjwC,EAAOgV,KAAKwiE,mBAAmBzB,EAAWA,EAAW99E,OAAS,IAEtD8G,EADkB,IAAtBg3E,EAAW99E,OACP+H,KAEQgV,KAAKwiE,mBAAmBzB,EAAWA,EAAW99E,OAAS,KAAO,GAGhF,MAAMmiD,EAAQ27B,EAAW99E,OAAS,EAAI,GAAM,IACpC6G,EAAAQ,GAAYR,EAAO,EAAGs7C,GACxBr7C,EAAAO,GAAYP,EAAK,EAAGq7C,GAC1BplC,KAAKuhE,SAAW,CAACz3E,MAAAA,EAAOC,IAAAA,EAAKg2B,OAAQ,KAAa,EAAIh2B,IAExDsG,YACE,MAAM6vE,EAAUlgE,KAAKmgE,SACf93E,EAAM2X,KAAK3X,IACXC,EAAM0X,KAAK1X,IACXjE,EAAU2b,KAAK3b,QACf29E,EAAW39E,EAAQy8E,KACnBlkC,EAAQolC,EAASn4B,MAAQ42B,GAA0BuB,EAAStB,QAASr4E,EAAKC,EAAK0X,KAAKmiE,kBAAkB95E,IACtG+yE,EAAWn5E,EAAe+/E,EAAS5G,SAAU,GAC7CtxB,EAAoB,SAAVlN,GAAmBolC,EAAS1B,WACtCmC,EAAa56E,EAASiiD,KAAwB,IAAZA,EAClC3b,EAAQ,GACd,IACI2yC,EAAM5zE,EADN+tC,EAAQ5yC,EAMZ,GAJIo6E,IACFxnC,GAASilC,EAAQM,QAAQvlC,EAAO,UAAW6O,IAE7C7O,GAASilC,EAAQM,QAAQvlC,EAAOwnC,EAAa,MAAQ7lC,GACjDsjC,EAAQ5kC,KAAKhzC,EAAKD,EAAKu0C,GAAS,IAASw+B,EAC3C,MAAM,IAAIrrD,MAAM1nB,EAAM,QAAUC,EAAM,uCAAyC8yE,EAAW,IAAMx+B,GAElG,MAAMmkC,EAAsC,SAAzB18E,EAAQ8pC,MAAMxqC,QAAqBqc,KAAK0iE,oBAC3D,IAAK5B,EAAO7lC,EAAO/tC,EAAQ,EAAG4zE,EAAOx4E,EAAKw4E,GAAQZ,EAAQp0E,IAAIg1E,EAAM1F,EAAUx+B,GAAQ1vC,IACpF2zE,GAAQ1yC,EAAO2yC,EAAMC,GAKhB,OAHHD,IAASx4E,GAA0B,UAAnBjE,EAAQk3B,QAAgC,IAAVruB,GAChD2zE,GAAQ1yC,EAAO2yC,EAAMC,GAEhBz/E,OAAO0B,KAAKmrC,GAAOL,MAAK,CAAC3nC,EAAGC,IAAMD,EAAIC,IAAGxC,KAAIoB,IAAMA,IAE5DqL,iBAAiBnP,GACf,MAAMg/E,EAAUlgE,KAAKmgE,SACf6B,EAAWhiE,KAAK3b,QAAQy8E,KAC9B,OAAIkB,EAASW,cACJzC,EAAQlmD,OAAO94B,EAAO8gF,EAASW,eAEjCzC,EAAQlmD,OAAO94B,EAAO8gF,EAASP,eAAemB,UAEvDvyE,oBAAoBywE,EAAMn2E,EAAOwjC,EAAOnU,GACtC,MAAM31B,EAAU2b,KAAK3b,QACfq9E,EAAUr9E,EAAQy8E,KAAKW,eACvB53B,EAAO7pC,KAAKqhE,MACZJ,EAAYjhE,KAAKshE,WACjBuB,EAAch5B,GAAQ63B,EAAQ73B,GAC9Bi5B,EAAc7B,GAAaS,EAAQT,GACnCriD,EAAOuP,EAAMxjC,GACbkwC,EAAQomC,GAAa6B,GAAelkD,GAAQA,EAAKic,MACjDpQ,EAAQzqB,KAAKmgE,SAASnmD,OAAO8mD,EAAM9mD,MAAmB8oD,EAAcD,IACpEjpD,EAAYv1B,EAAQ8pC,MAAM7rC,SAChC,OAAOs3B,EAAYt3B,EAASs3B,EAAW,CAAC6Q,EAAO9/B,EAAOwjC,GAAQnuB,MAAQyqB,EAExEp6B,mBAAmB89B,GACjB,IAAIrrC,EAAGO,EAAMu7B,EACR,IAAA97B,EAAI,EAAGO,EAAO8qC,EAAMlrC,OAAQH,EAAIO,IAAQP,EAC3C87B,EAAOuP,EAAMrrC,GACb87B,EAAK6L,MAAQzqB,KAAK+iE,oBAAoBnkD,EAAK19B,MAAO4B,EAAGqrC,GAGzD99B,mBAAmBnP,GACV,OAAU,OAAVA,EAAiB2oC,KAAO3oC,EAAQ8e,KAAK3X,MAAQ2X,KAAK1X,IAAM0X,KAAK3X,KAEtEgI,iBAAiBnP,GACf,MAAM8hF,EAAUhjE,KAAKuhE,SACfxrD,EAAM/V,KAAKwiE,mBAAmBthF,GACpC,OAAO8e,KAAKgyB,oBAA4BgxC,EAAAl5E,MAAQisB,GAAOitD,EAAQjjD,QAEjE1vB,iBAAiBiW,GACf,MAAM08D,EAAUhjE,KAAKuhE,SACfxrD,EAAM/V,KAAKw5D,mBAAmBlzD,GAAS08D,EAAQjjD,OAASijD,EAAQj5E,IACtE,OAAOiW,KAAK3X,IAAM0tB,GAAO/V,KAAK1X,IAAM0X,KAAK3X,KAE3CgI,cAAco6B,GACN,MAAAw4C,EAAYjjE,KAAK3b,QAAQ8pC,MACzB+0C,EAAiBljE,KAAKkD,IAAIuC,YAAYglB,GAAO/kB,MAC7Crc,EAAQd,EAAUyX,KAAKmwB,eAAiB8yC,EAAU3mC,YAAc2mC,EAAU5mC,aAC1E8mC,EAAc18E,KAAKiJ,IAAIrG,GACvB+5E,EAAc38E,KAAKgI,IAAIpF,GACvBg6E,EAAerjE,KAAK2jC,wBAAwB,GAAGt9C,KAC9C,MAAA,CACL6M,EAAIgwE,EAAiBC,EAAgBE,EAAeD,EACpDvyE,EAAIqyE,EAAiBE,EAAgBC,EAAeF,GAGxD9yE,kBAAkBizE,GACV,MAAAtB,EAAWhiE,KAAK3b,QAAQy8E,KACxBW,EAAiBO,EAASP,eAC1BznD,EAASynD,EAAeO,EAASn4B,OAAS43B,EAAepC,YACzDkE,EAAevjE,KAAK+iE,oBAAoBO,EAAa,EAAGtC,GAAoBhhE,KAAM,CAACsjE,GAActjE,KAAKshE,YAAatnD,GACnH3zB,EAAO2Z,KAAKwjE,cAAcD,GAC1B5C,EAAWl6E,KAAKkB,MAAMqY,KAAKmwB,eAAiBnwB,KAAK0F,MAAQrf,EAAK6M,EAAI8M,KAAK8G,OAASzgB,EAAKwK,GAAK,EACzF,OAAA8vE,EAAW,EAAIA,EAAW,EAEnCtwE,oBACM,IACAvN,EAAGO,EADH09E,EAAa/gE,KAAKytB,OAAOroB,MAAQ,GAErC,GAAI27D,EAAW99E,OACN,OAAA89E,EAET,MAAM1hC,EAAQr/B,KAAK2kB,0BACf,GAAA3kB,KAAKwhE,aAAeniC,EAAMp8C,OAC5B,OAAQ+c,KAAKytB,OAAOroB,KAAOi6B,EAAM,GAAGxa,WAAWgJ,mBAAmB7tB,MAE/D,IAAAld,EAAI,EAAGO,EAAOg8C,EAAMp8C,OAAQH,EAAIO,IAAQP,EAC3Ci+E,EAAaA,EAAWnzC,OAAOyR,EAAMv8C,GAAG+hC,WAAWgJ,mBAAmB7tB,OAExE,OAAQA,KAAKytB,OAAOroB,KAAOpF,KAAKmb,UAAU4lD,GAE5C1wE,qBACQ,MAAA0wE,EAAa/gE,KAAKytB,OAAOlE,QAAU,GACzC,IAAIzmC,EAAGO,EACP,GAAI09E,EAAW99E,OACN,OAAA89E,EAET,MAAMx3C,EAASvpB,KAAKwpB,YACf,IAAA1mC,EAAI,EAAGO,EAAOkmC,EAAOtmC,OAAQH,EAAIO,IAAQP,EACjCi+E,EAAAt7E,KAAKqsB,GAAM9R,KAAMupB,EAAOzmC,KAErC,OAAQkd,KAAKytB,OAAOlE,OAASvpB,KAAKwhE,YAAcT,EAAa/gE,KAAKmb,UAAU4lD,GAE9E1wE,UAAUyR,GACD,OAAApW,GAAaoW,EAAOgsB,KAAKmyC,MAuBpC,SAAqBp/D,GAAApW,EAAOqW,EAAKje,GAC/B,IAEI4gF,EAAYC,EAAYC,EAAYC,EAFpC94E,EAAK,EACLD,EAAKJ,EAAMxH,OAAS,EAEpBJ,GACEie,GAAOrW,EAAMK,GAAIirB,KAAOjV,GAAOrW,EAAMI,GAAIkrB,OACzCjrB,GAAAA,EAAID,GAAAA,GAAME,GAAaN,EAAO,MAAOqW,MAEvCiV,IAAK0tD,EAAY3C,KAAM6C,GAAcl5E,EAAMK,MAC3CirB,IAAK2tD,EAAY5C,KAAM8C,GAAcn5E,EAAMI,MAEzCiW,GAAOrW,EAAMK,GAAIg2E,MAAQhgE,GAAOrW,EAAMI,GAAIi2E,QAC1Ch2E,GAAAA,EAAID,GAAAA,GAAME,GAAaN,EAAO,OAAQqW,MAExCggE,KAAM2C,EAAY1tD,IAAK4tD,GAAcl5E,EAAMK,MAC3Cg2E,KAAM4C,EAAY3tD,IAAK6tD,GAAcn5E,EAAMI,KAE/C,MAAMg5E,EAAOH,EAAaD,EAC1B,OAAOI,EAAOF,GAAcC,EAAaD,IAAe7iE,EAAM2iE,GAAcI,EAAOF,EAtCrFvC,GAAUpgF,GAAK,OACfogF,GAAUr/D,SAAW,CACnBwZ,OAAQ,OACRyuB,SAAU,GACV82B,KAAM,CACJV,QAAQ,EACRv2B,MAAM,EACNtiD,OAAO,EACP+4E,YAAY,EACZI,QAAS,cACTe,eAAgB,IAElBtzC,MAAO,CACLxqC,OAAQ,OACRk3C,MAAO,CACLC,SAAS,KAyBf,MAAAgpC,WAA8B1C,GAC5B/wE,YAAY4b,GACJ8jB,MAAA9jB,GACNjM,KAAK+jE,OAAS,GACd/jE,KAAKgkE,aAAU,EACfhkE,KAAKikE,iBAAc,EAErB5zE,cACE,MAAM0wE,EAAa/gE,KAAKkkE,yBAClBz5E,EAAQuV,KAAK+jE,OAAS/jE,KAAKmkE,iBAAiBpD,GAC7C/gE,KAAAgkE,QAAUnjE,GAAYpW,EAAOuV,KAAK3X,KACvC2X,KAAKikE,YAAcpjE,GAAYpW,EAAOuV,KAAK1X,KAAO0X,KAAKgkE,QACvDj0C,MAAMuyC,YAAYvB,GAEpB1wE,iBAAiB0wE,GACT,MAAA14E,IAACA,MAAKC,GAAO0X,KACbrU,EAAQ,GACRlB,EAAQ,GACV,IAAA3H,EAAGO,EAAMmxB,EAAMwZ,EAAMxb,EACpB,IAAA1vB,EAAI,EAAGO,EAAO09E,EAAW99E,OAAQH,EAAIO,IAAQP,EAChDkrC,EAAO+yC,EAAWj+E,GACdkrC,GAAQ3lC,GAAO2lC,GAAQ1lC,GACzBqD,EAAMlG,KAAKuoC,GAGX,GAAAriC,EAAM1I,OAAS,EACV,MAAA,CACL,CAAC69E,KAAMz4E,EAAK0tB,IAAK,GACjB,CAAC+qD,KAAMx4E,EAAKytB,IAAK,IAGhB,IAAAjzB,EAAI,EAAGO,EAAOsI,EAAM1I,OAAQH,EAAIO,IAAQP,EAC3C0vB,EAAO7mB,EAAM7I,EAAI,GACjB0xB,EAAO7oB,EAAM7I,EAAI,GACjBkrC,EAAOriC,EAAM7I,GACT2D,KAAKc,OAAcirB,EAAAgC,GAAQ,KAAOwZ,GACpCvjC,EAAMhF,KAAK,CAACq7E,KAAM9yC,EAAMjY,IAAKjzB,GAAYO,EAAA,KAGtC,OAAAoH,EAET4F,yBACM,IAAA0wE,EAAa/gE,KAAKytB,OAAOxK,KAAO,GACpC,GAAI89C,EAAW99E,OACN,OAAA89E,EAET,MAAM37D,EAAOpF,KAAK0iE,oBACZj4C,EAAQzqB,KAAK+hE,qBAOZ,OALQhB,EADX37D,EAAKniB,QAAUwnC,EAAMxnC,OACV+c,KAAKmb,UAAU/V,EAAKwoB,OAAOnD,IAE3BrlB,EAAKniB,OAASmiB,EAAOqlB,EAEvBs2C,EAAA/gE,KAAKytB,OAAOxK,IAAM89C,EACxBA,EAET1wE,mBAAmBnP,GACjB,UAAoB8e,KAAK+jE,OAAQ7iF,GAAS8e,KAAKgkE,SAAWhkE,KAAKikE,YAEjE5zE,iBAAiBiW,GACf,MAAM08D,EAAUhjE,KAAKuhE,SACfz9B,EAAU9jC,KAAKw5D,mBAAmBlzD,GAAS08D,EAAQjjD,OAASijD,EAAQj5E,IAC1E,OAAO8W,GAAYb,KAAK+jE,OAAQjgC,EAAU9jC,KAAKikE,YAAcjkE,KAAKgkE,SAAS,IAG/EF,GAAgB9iF,GAAK,aACrB8iF,GAAgB/hE,SAAWq/D,GAAUr/D,SAYhC,MAACqiE,GAAgB,CACpB77B,GACA7lC,GACAoB,UAb+BioB,OAAO,CACxCwd,UAAW,KACX2vB,cAAAA,GACAsC,YAAAA,GACAI,iBAAAA,GACAmC,kBAAAA,GACAqD,UAAAA,GACA0C,gBAAAA"}