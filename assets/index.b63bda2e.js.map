{"version":3,"file":"index.b63bda2e.js","sources":["../../src/components/Integration/Datafeed/DatafeedWidgetUrl.vue","../../src/views/integration/datafeed/index.vue"],"sourcesContent":["<template>\n  <div\n   :class=\"[\n      'inline-block',\n      inlineEdit && 'bg-grey-01 bg-opacity-30 rounded-lg px-4 py-4'\n    ]\">\n    <div v-if=\"inlineEdit\" class=\"space-y-2 mb-4\">\n      <p class=\"text-lg font-medium mr-4\">\n        Add the URL your widget is hosted on\n      </p>\n      <p class=\"text-sm text-grey-03\">\n        Add the URL where your widget is hosted. This is required if you plan to use your data feed on a comparison website like SellCell or Swappa, as they rely on deep links. If you are using our API and don't have the widget hosted on a website or don't use deep links, you can enter any random URL.\n      </p>\n    </div>\n    <p v-else class=\"text-base font-semibold mr-4 mb-2\">\n      Add the URL your widget is hosted on\n    </p>\n    <div class=\"flex items-center gap-2\">\n      <Input\n        :model-value=\"widgetUrl\"\n        @update:model-value=\"handleChange\"\n        @click=\"($ev) => $emit('click', $ev)\"\n        :view=\"error ? 'danger' : 'default'\"\n        :disabled=\"loading\"\n        placeholder=\"ex. app.reusely.com\"\n        block\n      >\n        <template #prepend>\n          <span> https://</span>\n        </template>\n      </Input>\n      <transition name=\"slide-fade\">\n        <div v-if=\"isEditing\" class=\"flex inline-flex gap-2\">\n          <Button @click=\"handleSaveEdit\" :loading=\"loading\" dense color=\"teal\">\n            <span class=\"block py-1\">\n              <i class=\"material-icons\">check</i>\n            </span>\n          </Button>\n          <Button\n            @click=\"handleCancelEdit\"\n            :loading=\"loading\"\n            dense\n            color=\"red\"\n          >\n            <span class=\"block py-1\">\n              <i class=\"material-icons\">close</i>\n            </span>\n          </Button>\n        </div>\n      </transition>\n    </div>\n    <small v-if=\"error\" class=\"text-red-base block mt-2\">\n      URL is not valid!\n    </small>\n  </div>\n</template>\n<script>\nimport { computed, defineComponent, reactive } from 'vue'\n\nimport Input from 'bbUi/components/input/input.vue'\nimport Button from 'bbUi/components/button/button.vue'\n\nexport default defineComponent({\n  inheritAttrs: true,\n  name: 'DatafeedWidgetUrl',\n  components: {\n    Input,\n    Button\n  },\n  props: {\n    url: {\n      type: String\n    },\n    originalUrl: {\n      type: String,\n      default: ''\n    },\n    error: {\n      type: Boolean,\n      default: false\n    },\n    inlineEdit: {\n      type: Boolean,\n      default: false\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['change', 'click', 'save'],\n  setup(props, { emit }) {\n    const state = reactive({\n      url: '',\n      original_url: ''\n    })\n    const widgetUrl = computed({\n      get: () => (props.url ? props.url : state.url),\n      set: (url) => {\n        state.url = url\n        emit('change', url)\n      }\n    })\n    const originalUrl = computed({\n      get: () => (props.originalUrl ? props.originalUrl : state.original_url),\n      set: (url) => {\n        state.original_url = url\n        emit('update:originalUrl', url)\n      }\n    })\n    const handleChange = (value) => {\n      widgetUrl.value = value\n    }\n    const handleSaveEdit = () => {\n      state.original_url = state.original_url\n      emit('save', widgetUrl.value)\n    }\n    const handleCancelEdit = () => {\n      widgetUrl.value = originalUrl.value\n    }\n    const isEditing = computed(() => {\n      if (!props.inlineEdit) return false\n      return widgetUrl.value !== originalUrl.value\n    })\n    return {\n      widgetUrl,\n      isEditing,\n      handleChange,\n      handleSaveEdit,\n      handleCancelEdit\n    }\n  }\n})\n</script>\n","<template>\n  <Modal :model-value=\"true\" @click-close=\"handleClose\" title=\"Data Feed\" :size=\"isNotInitializedDatafeed ? 'sm' : 'lg'\" hide-footer>\n    <div v-if=\"isNotInitializedDatafeed\" class=\"grid gap-4\">\n      <DatafeedWidgetUrl\n        @change=\"handleChangeWidgetUrl\"\n        @click=\"handleClickWidgetUrl\"\n        @save=\"handleSaveWidgetUrl\"\n        v-model:original-url=\"originalWidgetUrl\"\n        :url=\"widgetURL\"\n        :error=\"errorWidgetUrl\"\n        :loading=\"loadingWidget\"\n        inline-edit\n      />\n      <div class=\"border border-grey-01 rounded-lg p-2 mb-4\">\n        <NotificationDatafeed\n          :status=\"stateWidgetURL ? 'Preparing data' : 'Waiting for URL'\"\n          :show-percentage=\"false\"\n        />\n      </div>\n    </div>\n    <div v-else>\n      <div v-loading=\"loadingWidget\">\n        <div class=\"block mb-4\">\n          <div class=\"grid md:grid-cols-3 gap-8 mb-4\">\n            <div>\n              <DatafeedWidgetUrl :url=\"widgetURL\" :error=\"errorWidgetUrl\" @change=\"doUpdateWidgetURL\" @click=\"handleClickWidgetUrl\" />\n            </div>\n            <div>\n              <p class=\"text-base font-semibold mr-4 my-2\">Share your .csv data feed</p>\n              <Tooltip\n                placement=\"top\"\n                :disabled=\"(!!widgetURL || !!widgetURL.length)\">\n                <template #content>\n                  <p>Please fill out your URL first before your access your data feed.</p>\n                </template>\n                <Input\n                  :value=\"dataFeedLink.copy\"\n                  class=\"input-datafeed w-full\"\n                  disabled\n                  append-flex>\n                  <template #append>\n                    <div\n                      :class=\"[\n                        'flex h-full',\n                        (widgetURL && dataFeedLink.copy && 'bg-white')\n                      ]\">\n                      <button\n                        title=\"Copy\"\n                        type=\"button\"\n                        :disabled=\"!widgetURL || !dataFeedLink.copy\"\n                        :class=\"(!widgetURL || !dataFeedLink.copy) && 'disabled'\"\n                        class=\"input-button-act border flex items-center border-l-0 border-grey-01\"\n                        @click=\"handleShareDatafeedLink(dataFeedLink.copy)\">\n                        <i class=\"copy material-symbols-outlined mx-auto\">content_copy</i>\n                      </button>\n                      <button\n                        title=\"Download\"\n                        type=\"button\"\n                        :disabled=\"!widgetURL || !dataFeedLink.download\"\n                        :class=\"(!widgetURL || !dataFeedLink.download) && 'disabled'\"\n                        class=\"input-button-act border flex items-center border-l-0 border-grey-01 rounded-r-md\"\n                        @click=\"handleDownload(dataFeedLink.copy, '.csv')\">\n                        <i class=\"copy material-symbols-outlined mx-auto\">download</i>\n                      </button>\n                    </div>\n                  </template>\n                </Input>\n              </Tooltip>\n            </div>\n            <div>\n              <p class=\"text-base font-semibold mr-4 my-2\">Share your .XML data feed</p>\n              <Tooltip\n                placement=\"top\"\n                :disabled=\"(!!widgetURL || !!widgetURL.length)\">\n                <template #content>\n                  <p>Please fill out your URL first before your access your data feed.</p>\n                </template>\n                <Input\n                  :value=\"dataFeedLinkXML.copy\"\n                  class=\"input-datafeed w-full\"\n                  disabled\n                  append-flex>\n                  <template #append>\n                    <div\n                      :class=\"[\n                        'flex h-full',\n                        (widgetURL && dataFeedLinkXML.copy && 'bg-white')\n                      ]\">\n                      <button\n                        title=\"Copy\"\n                        type=\"button\"\n                        :disabled=\"!widgetURL || !dataFeedLinkXML.download\"\n                        :class=\"(!widgetURL || !dataFeedLinkXML.copy) && 'disabled'\"\n                        class=\"input-button-act border flex items-center border-l-0 border-grey-01\"\n                        @click=\"handleShareDatafeedLink(dataFeedLinkXML.copy)\">\n                        <i class=\"copy material-symbols-outlined mx-auto\">content_copy</i>\n                      </button>\n                      <button\n                        title=\"Download\"\n                        type=\"button\"\n                        :disabled=\"!widgetURL || !dataFeedLinkXML.download\"\n                        :class=\"(!widgetURL || !dataFeedLinkXML.download) && 'disabled'\"\n                        class=\"input-button-act border flex items-center border-l-0 border-grey-01 rounded-r-md\"\n                        @click=\"handleDownload(dataFeedLinkXML.download, '.xml')\">\n                        <i class=\"copy material-symbols-outlined mx-auto\">download</i>\n                      </button>\n                    </div>\n                  </template>\n                </Input>\n              </Tooltip>\n            </div>\n          </div>\n        </div>\n        <template v-if=\"widgetURL && widgetURL.length\">\n          <div\n            v-if=\"!loading.data_feed\"\n            class=\"block my-12 border border-grey-01 rounded-lg px-8 py-6\">\n            <div class=\"grid grid-cols-2 gap-4 mb-4\">\n              <div>\n                <div>\n                  Total SKU: <strong>{{table.total_sku}}</strong>\n                </div>\n                <div>\n                  Total Manufacturer: <strong>{{table.total_manufacturer}}</strong>\n                </div>\n                <div>\n                  Total Model: <strong>{{table.total_model}}</strong>\n                </div>\n              </div>\n              <div>\n                <div class=\"float-right\">\n                  Last Update : <strong>{{table.last_update}}</strong>\n                </div>\n              </div>\n            </div>\n            <div>\n              <Table class=\"mb-6\" :data=\"tableData\" v-loading=\"loading.data_feed\" max-height=\"500\">\n                <TableColumn \n                  v-for=\"(cl, i) in table.columns\" \n                  :key=\"i\" \n                  :prop=\"cl.key\" \n                  :label=\"cl.label\" \n                  :width=\"columnWidth(cl.key)\" \n                >\n                  <template #default=\"scope\">\n                    <div v-if=\"['Deeplink', 'deeplink'].includes(cl.key)\" class=\"flex\">\n                      <div class=\"deeplink w-11/12\">{{ scope.row[cl.key] }}</div>\n                      <div class=\"w-1/12\"><i class=\"material-symbols-outlined text-lg text-teal-04 float-right\" @click=\"copyDeeplink(scope.row[cl.key])\">content_copy</i></div>\n                    </div>\n                    <div v-else>\n                      <span>{{ scope.row[cl.key] }}</span>\n                    </div>\n                  </template>\n                </TableColumn>\n              </Table>\n              <Pagination v-model:page=\"datafeed.page\" v-model:limit=\"datafeed.limit\" @click-page=\"handlePaginationChange\" @click-page-input=\"handlePaginationChange\" @click-limit-option=\"handlePaginationChange\" :disabled=\"isRestrictedDataFeed\" :data=\"table\" />\n            </div>\n          </div>\n          <div\n            v-if=\"loading.data_feed\"\n            class=\"flex flex-col justify-center my-6 h-96 border border-grey-01 rounded-lg\">\n            <div v-loading=\"true\" class=\"h-10\"></div>\n            <br /> <br />\n            <div class=\"items-center text-center\">\n              <h6>Please wait, we are updating your data. It may take several minutes to complete.</h6>\n            </div>\n          </div>\n        </template>\n        <div v-if=\"!widgetURL || !widgetURL.length\" class=\"bg-grey-01 bg-opacity-50 border-1 border-grey-01 rounded-lg h-96 flex items-center justify-center\">\n          <p class=\"text-grey-02\">Please fill out your URL first before your access your data feed.</p>\n        </div>\n      </div>\n    </div>\n  </Modal>\n</template>\n\n<script>\nimport { defineComponent, ref, watch, computed } from 'vue'\nimport { useShowAll, useShowWidgetURL } from 'composable/integration'\nimport { useUser } from 'composable/user'\nimport { usePaywall } from 'composable/paywall'\nimport { useNotification } from 'composable/notification'\nimport { useRouter } from 'vue-router'\n\nimport debounce from 'utils/debounce'\nimport copyText from 'utils/copy'\nimport Button from 'bbUi/components/button/button.vue'\nimport Alert from 'bbUi/components/alert/alert.vue'\nimport Input from 'bbUi/components/input/input.vue'\nimport Modal from 'bbUi/components/modal/modal.vue'\n\nimport Pagination from 'components/Pagination.vue'\nimport DatafeedWidgetUrl from 'components/Integration/Datafeed/DatafeedWidgetUrl.vue'\nimport NotificationDatafeed from 'components/Notification/Datafeed/NotificationDatafeed.vue'\n\nimport { deepClone } from 'utils/deep-clone'\nimport { isFunction } from 'utils/is'\nimport { ElMessage } from 'element-plus'\n\nexport default defineComponent({\n  components: {\n    Button,\n    Alert,\n    Input,\n    Modal,\n    Pagination,\n    DatafeedWidgetUrl,\n    NotificationDatafeed\n  },\n  async setup(){\n    const router = useRouter()\n    const { state: stateWidgetURL, loading: loadingWidget, actionGET: getWidgetURL, actionPOST: updateWidgetURL } = useShowWidgetURL()\n    const { datafeed, stateAllDataFeed: table, actionAllDataFeed, loading, refreshDatafeed, resetAllDataFeed, stateShowDataFeed, actionShowDataFeed } = useShowAll()\n    const { open: openPaywall } = usePaywall()\n    const { isProPlan, hasDataFeedAccess, isCurrentlyProcessingDatafeed } = useUser()\n    const { openNotification } = useNotification()\n\n    const errorWidgetUrl = ref(false)\n\n    const dataFeedLink = computed(\n      () => ({\n        copy: stateShowDataFeed.value?.datafeed_share_link ?? null,\n        download: stateShowDataFeed.value?.datafeed_download_link ?? null\n      })\n    )\n    const dataFeedLinkXML = computed(\n      () => ({\n        copy: stateShowDataFeed.value?.datafeed_share_link_xml ?? null,\n        download: stateShowDataFeed.value?.datafeed_download_link_xml ?? null\n      })\n    )\n    const isAvailableDatafeedLink = computed(() => dataFeedLink.value !== null)\n    const tableData = ref([])\n    const widgetURL = ref('')\n    const originalWidgetUrl = ref('')\n\n    const columnWidth = (column) => {\n      if (['Manufacturer', 'manufacturer'].includes(column)) return \"150\";\n      else if (['Model', 'model'].includes(column)) return \"150\"\n      else if (['Combined', 'combined'].includes(column)) return \"200\"\n      else if (['Deeplink', 'deeplink'].includes(column)) return \"450\"\n      return \"100\";\n    }\n    const openDataFeedPaywall = () => {\n      openPaywall({\n        title: 'Data Feed',\n        description:\n          'Seamlessly share, download, and integrate your buyback catalog, buyback pricing, and buyback widget deep links into your websites or app via an API or CSV.',\n        image_url: '/images/paywall/paywall-data-feed.svg'\n      })\n    }\n\n    const doActionAll = async () => {\n      if (!widgetURL.value || !widgetURL.value.length) {\n        tableData.value = []\n        return\n      }\n\n      await actionAllDataFeed()\n      tableData.value = deepClone(table.value.data)\n    }\n\n    const doReset = async () => {\n      if (!widgetURL.value || !widgetURL.value.length) {\n        tableData.value = []\n        return\n      }\n\n      await resetAllDataFeed()\n      tableData.value = deepClone(table.value.data)\n    }\n\n    const copyDeeplink = (deeplink) => {\n      navigator.clipboard.writeText(deeplink).then(() => {\n        ElMessage({\n          type: 'success',\n          message: 'Deeplink copied to clipbord'\n        })\n      })\n    }\n\n    const doShowWidgetURL = async () => {\n      await getWidgetURL()\n    }\n\n    const isRestrictedDataFeed = computed(() => !isProPlan.value ? hasDataFeedAccess.value == 0  : false)\n    const isNotInitializedDatafeed = computed(() => !stateWidgetURL.value || isCurrentlyProcessingDatafeed.value)\n\n    const doUpdateWidgetURL = debounce(async (value, callback=()=>{}) => {\n      if(isRestrictedDataFeed.value){\n        widgetURL.value = stateWidgetURL.value\n        openDataFeedPaywall()\n        return\n      }\n      errorWidgetUrl.value = false\n      const regex = /^[a-zA-Z0-9][a-zA-Z0-9-]{1,61}[a-zA-Z0-9](?:\\.[a-zA-Z]{2,})+/;\n      if (!regex.test(value)) {\n        errorWidgetUrl.value = true\n        widgetURL.value = value\n        return\n      }\n      const url = value\n      widgetURL.value = url\n      await updateWidgetURL(url)\n      await doShowWidgetURL()\n      await doActionAll()\n      isFunction(callback) && callback()\n    }, 300)\n    const handleShareDatafeedLink = (url) => {\n      if(isRestrictedDataFeed.value){\n        openDataFeedPaywall( )\n        return\n      }\n\n      copyText(url)\n    }\n    const handlePaginationChange = () => {\n      if(isRestrictedDataFeed.value){\n        openDataFeedPaywall()\n        return\n      }\n    }\n    const handleClickWidgetUrl = (ev) => {\n      if(isRestrictedDataFeed.value){\n        ev.preventDefault()\n        openDataFeedPaywall()\n        return\n      }\n    }\n    const handleDownload = (url, type) => {\n      if(isRestrictedDataFeed.value){\n        openDataFeedPaywall()\n        return\n      }\n\n      if (!stateShowDataFeed.value.has_data_feed_exists) {\n        return ElMessage({\n          type: 'warning',\n          message: 'Data Feed not found.'\n        })\n      }\n\n      const link = document.createElement('a')\n      const dateFile = new Date(Date.now())\n      const getDate = () => ({\n        year: dateFile.getFullYear(),\n        month: dateFile.getMonth() + 1,\n        date: dateFile.getDate(),\n        hours: dateFile.getHours(),\n        minutes: dateFile.getMinutes(),\n        seconds: dateFile.getSeconds()\n      })\n\n      link.download = `datafeed__${getDate().year}-${(getDate().month <= 9 && '0' + getDate().month) || getDate().month}-${(getDate().date <= 9 && '0' + getDate().date) || getDate().date}-${(getDate().hours <= 9 && '0' + getDate().hours) || getDate().hours}:${(getDate().minutes <= 9 && '0' + getDate().minutes) || getDate().minutes}:${(getDate().seconds <= 9 && '0' + getDate().seconds) || getDate().seconds}${type}`\n      \n      link.href = url\n      link.target = '_blank'\n      document.body.appendChild(link)\n      link.click()\n      document.body.removeChild(link)\n    }\n    const handleChangeWidgetUrl = (newWidgetUrl) => {\n      widgetURL.value = newWidgetUrl\n    }\n    const handleSaveWidgetUrl = async () => {\n      await doUpdateWidgetURL(widgetURL.value, async() => {\n        originalWidgetUrl.value = widgetURL.value\n        openNotification('NotificationDatafeed')\n      })\n    }\n    const handleClose = () => {\n      router.push({\n        name: 'integration'\n      })\n    }\n\n    doShowWidgetURL()\n    await actionShowDataFeed()\n\n    watch(() => ({\n      ...datafeed\n    }), debounce(async () => {\n      doActionAll()\n    }, 300), {\n      immediate: true,\n      deep: true\n    })\n\n    watch(() => refreshDatafeed.value, (value) => {\n      if (value) doReset()\n    }, { immediate: true })\n\n    watch(\n      () => stateWidgetURL.value,\n      (value) => {\n        widgetURL.value = value\n        originalWidgetUrl.value = value\n      }, { immediate: true })\n\n    return {\n      loading,\n      actionAllDataFeed,\n      table,\n      tableData,\n      datafeed,\n      isRestrictedDataFeed,\n      isNotInitializedDatafeed,\n      errorWidgetUrl,\n      columnWidth,\n      copyDeeplink,\n      doActionAll,\n      dataFeedLink,\n      dataFeedLinkXML,\n      isAvailableDatafeedLink,\n      copyText,\n      stateWidgetURL,\n      widgetURL,\n      originalWidgetUrl,\n      loadingWidget,\n      doShowWidgetURL,\n      doUpdateWidgetURL,\n      handleDownload,\n      handleShareDatafeedLink,\n      handlePaginationChange,\n      handleClickWidgetUrl,\n      handleChangeWidgetUrl,\n      handleSaveWidgetUrl,\n      handleClose\n    }\n  }\n})\n</script>\n\n<style lang=\"scss\" scoped>\n  .deeplink {\n    white-space: nowrap;\n    width: 30rem;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n</style>\n<style lang=\"scss\">\n.input-datafeed {\n  @apply text-sm;\n  .input-button-act {\n    @apply hover:bg-teal-04 hover:text-white cursor-pointer w-14;\n\n    &.disabled {\n      @apply hover:bg-grey-02 hover:bg-opacity-0 hover:text-grey-03 opacity-50 cursor-not-allowed;\n    }\n  }\n}\n</style>\n"],"names":["_sfc_main","defineComponent","inheritAttrs","name","components","Input","Button","props","url","type","String","originalUrl","default","error","Boolean","inlineEdit","loading","emits","[object Object]","emit","state","reactive","original_url","widgetUrl","computed","get","set","isEditing","value","handleChange","handleSaveEdit","handleCancelEdit","key","Alert","Modal","Pagination","DatafeedWidgetUrl","_openBlock","_createElementBlock","_ctx","_hoisted_1","_cache","_createElementVNode","class","_hoisted_2","_hoisted_3","_createVNode","_component_Input","model-value","onUpdate:modelValue","onClick","$ev","$emit","view","disabled","placeholder","prepend","_withCtx","_hoisted_4","_component_Button","dense","NotificationDatafeed","router","useRouter","stateWidgetURL","loadingWidget","actionGET","getWidgetURL","actionPOST","updateWidgetURL","useShowWidgetURL","datafeed","stateAllDataFeed","table","actionAllDataFeed","refreshDatafeed","resetAllDataFeed","stateShowDataFeed","actionShowDataFeed","useShowAll","open","openPaywall","usePaywall","isProPlan","hasDataFeedAccess","isCurrentlyProcessingDatafeed","useUser","openNotification","useNotification","errorWidgetUrl","ref","dataFeedLink","copy","_b","_a","datafeed_share_link","download","_d","_c","datafeed_download_link","dataFeedLinkXML","datafeed_share_link_xml","datafeed_download_link_xml","isAvailableDatafeedLink","tableData","widgetURL","originalWidgetUrl","openDataFeedPaywall","title","description","image_url","doActionAll","async","length","deepClone","data","doShowWidgetURL","isRestrictedDataFeed","isNotInitializedDatafeed","doUpdateWidgetURL","debounce","callback","test","isFunction","watch","__spreadValues","immediate","deep","doReset","columnWidth","column","includes","copyDeeplink","deeplink","navigator","clipboard","writeText","then","_u","message","copyText","handleDownload","has_data_feed_exists","ElMessage","link","document","createElement","dateFile","Date","now","getDate","year","getFullYear","month","getMonth","date","hours","getHours","minutes","getMinutes","seconds","getSeconds","href","target","body","appendChild","click","removeChild","handleShareDatafeedLink","handlePaginationChange","handleClickWidgetUrl","ev","preventDefault","handleChangeWidgetUrl","newWidgetUrl","handleSaveWidgetUrl","handleClose","push","_hoisted_11","_hoisted_14","_createBlock","_component_Modal","onClickClose","size","_component_DatafeedWidgetUrl","onChange","onSave","onUpdate:originalUrl","$event","_component_NotificationDatafeed","status","_withDirectives","_hoisted_5","_component_Tooltip","placement","content","_normalizeClass","_hoisted_6","_hoisted_8","_Fragment","data_feed","_createCommentVNode","_hoisted_10","_createTextVNode","_component_Table","_renderList","columns","cl","i","_component_TableColumn","prop","label","_hoisted_13","_toDisplayString","scope","row","_hoisted_15","_component_Pagination","page","onUpdate:page","limit","onUpdate:limit","onClickPage","onClickPageInput","onClickLimitOption","_hoisted_19","_hoisted_20"],"mappings":"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"}