{"version":3,"file":"FileUpload.29d24cb5.js","sources":["../../src/components/DragFile.vue","../../src/components/FileUpload.vue","../../../../../../../icon/upload.svg"],"sourcesContent":["<template>\n  <div>\n    <Alert v-if=\"invalid\" color=\"red\" view=\"smooth\" class=\"mb-5\" dense>\n      <div class=\"items-center h-full\">\n        File format is not supported. <br />\n        <small>Supported formats: {{ accept.toString() }}</small>\n      </div>\n      <template #left>\n        <span class=\"material-icons text-4xl\">info</span>\n      </template>\n      <template #right>\n        <span\n          class=\"material-icons my-auto ml-auto cursor-pointer\"\n          @click=\"closeAlert\"\n          >close</span\n        >\n      </template>\n    </Alert>\n    <div\n      class=\"w-full h-full border border-dashed border-teal-02 rounded-lg cursor-pointer transition-all\"\n      :class=\"{ 'border-teal-04': onDrag }\"\n      @dragover=\"dragOver\"\n      @dragleave=\"dragLeave\"\n      @drop=\"drop\"\n    >\n      <slot v-bind=\"{ openDialog: doChange }\" name=\"default\">\n        <div @click=\"doChange\" class=\"text-center text-sm py-6 px-4\">\n          <img src=\"/icon/upload.svg\" class=\"w-14 h-14 mx-auto\" />\n\n          Click to browser or <br />\n          drag and drop your files\n        </div>\n      </slot>\n      <input\n        ref=\"elInputFile\"\n        type=\"file\"\n        class=\"hidden\"\n        @change=\"fileChange\"\n        @click=\"handleFileClick\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { defineComponent, onMounted, ref, watch } from 'vue'\nimport { getFileFormat } from 'utils/string'\nimport Alert from 'bbUi/components/alert/alert.vue'\n\nexport default defineComponent({\n  components: {\n    Alert\n  },\n  props: {\n    accept: {\n      type: Array,\n      default: () => []\n    }\n  },\n  emits: ['change', 'click', 'dragover', 'dragleave', 'drop', 'reset'],\n  setup(props, { emit }) {\n    const elInputFile = ref(null)\n    const onDrag = ref(false)\n    const invalid = ref(false)\n\n    // EVENT\n    const emitFile = () => {\n      if (!elInputFile.value || !elInputFile.value.files.length) {\n        return\n      }\n\n      const type = getFileFormat(elInputFile.value.files[0].name)\n\n      if (!props.accept.includes(type)) {\n        invalid.value = true\n\n        return\n      }\n\n      invalid.value = false\n\n      emit('change', elInputFile.value.files)\n    }\n    const emitClick = () => emit('click')\n    const emitDragover = () => emit('dragover')\n    const emitDragleave = () => emit('dragleave')\n    const emitDrop = () => emit('drop')\n    const emitReset = () => emit('reset')\n\n    const fileChange = (_evt) => {\n      emitFile()\n    }\n\n    const reset = () => {\n      elInputFile.value.value = null\n      emitReset()\n    }\n\n    const closeAlert = () => {\n      invalid.value = false\n    }\n\n    const doChange = () => {\n      elInputFile.value.click()\n      emitClick()\n    }\n\n    const dragOver = (_evt) => {\n      _evt.preventDefault()\n      onDrag.value = true\n      emitDragover()\n    }\n\n    const dragLeave = (_evt) => {\n      _evt.preventDefault()\n      onDrag.value = false\n      emitDragleave()\n    }\n\n    const drop = (_evt) => {\n      _evt.preventDefault()\n      elInputFile.value.files = _evt.dataTransfer.files\n      emitFile()\n      emitDrop()\n      onDrag.value = false\n    }\n    const handleFileClick = () => {\n      if (elInputFile.value?.value) elInputFile.value.value = null\n    }\n\n    return {\n      elInputFile,\n      onDrag,\n      invalid,\n      fileChange,\n      reset,\n      closeAlert,\n      doChange,\n      dragOver,\n      dragLeave,\n      drop,\n      handleFileClick\n    }\n  }\n})\n</script>\n","<template>\n  <div class=\"file-uploader\">\n    <div class=\"file-picker\">\n      <FilePicker @change=\"handleChangeFile\" :accept=\"accept\">\n        <template #default=\"{ openDialog }\">\n          <slot v-bind=\"{ isEmptyFiles, openDialog, acceptedFileTypes, fileList }\">\n            <div\n              v-if=\"isEmptyFiles\"\n              @click=\"openDialog\"\n              class=\"py-6 px-4 text-center\"\n            >\n              <span class=\"text-teal-02\"\n                ><a class=\"font-semibold\" @click.prevent=\"\">Choose a file</a> or\n                drag it here\n              </span>\n            </div>\n          </slot>\n          <slot\n            name=\"file-list\"\n            v-bind=\"{\n              files: fileList,\n              removeFile: handleRemoveFile,\n              isEmptyFiles\n            }\"\n          >\n            <div v-if=\"!isEmptyFiles\" class=\"px-4 py-4\">\n              <div\n                v-for=\"file in fileList\"\n                :key=\"file.name\"\n                :class=\"[\n                  'file-list__item',\n                  file.status.progress < 100\n                    ? 'file-list__item--onprogress'\n                    : ''\n                ]\"\n              >\n                <div class=\"file-list__file-icon pr-6\">\n                  <i class=\"material-icons\">insert_drive_file</i>\n                </div>\n                <div class=\"relative w-full\">\n                  <div class=\"flex items-center\">\n                    <div class=\"file-list__file-name\">{{ file.name }}</div>\n                    <div class=\"file-list__file-size\">{{ file.size }}</div>\n                  </div>\n                  <transition name=\"fade\">\n                    <div\n                      v-if=\"file.status.progress < 100\"\n                      class=\"file-list__progress-bar\"\n                      :style=\"{ width: `${file.status.progress}%` }\"\n                    ></div\n                  ></transition>\n                </div>\n                <div class=\"file-list__file-remove pl-6\">\n                  <a @click.prevent=\"handleRemoveFile(file.id)\"\n                    ><i class=\"material-icons\">cancel</i></a\n                  >\n                </div>\n              </div>\n            </div>\n          </slot>\n        </template>\n      </FilePicker>\n    </div>\n    <div>\n      <slot name=\"types\" v-bind=\"{ acceptedFileTypes }\">\n        <small class=\"block mt-4\">\n          <span class=\"font-semibold\">File:</span> {{ acceptedFileTypes }}\n        </small>\n      </slot>\n    </div>\n  </div>\n</template>\n<script>\nimport { defineComponent, computed, ref } from 'vue'\nimport { fileSizeFormat } from 'utils/number'\nimport FilePicker from 'components/DragFile.vue'\nimport request from 'utils/request'\n\nexport default defineComponent({\n  components: {\n    FilePicker\n  },\n  props: {\n    singleUpload: {\n      type: Boolean,\n      default: false\n    },\n    accept: {\n      type: Array,\n      default: () => []\n    },\n    config: {\n      type: Object,\n      default: () => ({\n        url: null,\n        method: 'post',\n        headers: {},\n        field: 'file'\n      })\n    },\n    files: {\n      type: Array,\n      default: () => []\n    },\n    offline: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['change', 'completed', 'error', 'uploading', 'remove'],\n  setup(props, { emit }) {\n    const files = ref({})\n    const isUploading = ref(false)\n    const requestAbortControllers = ref(new Map())\n\n    const fileList = computed(() => {\n      return Object.entries(files.value).map(([id, eachFile]) => ({\n        id,\n        name: eachFile.file.name,\n        size: fileSizeFormat(eachFile.file.size),\n        file: eachFile.file,\n        status: eachFile.status\n      }))\n    })\n    const isEmptyFiles = computed(() => fileList.value.length < 1)\n    const acceptedFileTypes = computed(() => {\n      const accepteds = props.accept.map(i => i.toUpperCase())\n      if (accepteds.length === 2) {\n        return accepteds.join(' or ')\n      } else if (accepteds.length > 2) {\n        const lastItem = accepteds.pop()\n        return `${accepteds.join(', ')} or ${lastItem}`\n      }\n      return accepteds.join(', ')\n    })\n\n    const onFileUpload = (fileId, event) => {\n      const uploadProgressPercentage = Math.round(\n        (event.loaded * 100) / event.total\n      )\n      if (uploadProgressPercentage === 100 && isUploading.value) {\n        files.value[fileId].status.progress = 98\n      } else if (!isUploading.value) {\n        files.value[fileId].status.progress = uploadProgressPercentage\n      }\n    }\n    const onFileUploadError = (fileId) => {\n      files.value[fileId].status.error = true\n    }\n    const uploadFiles = async (files = []) => {\n      emit('uploading', true)\n      isUploading.value = true\n      // [TODO] Add multiple file upload support on single request\n      const requests = []\n      for (let eachFile of files) {\n        const formData = new FormData()\n        formData.append(props.config.field, eachFile.file)\n        const abortController = new AbortController()\n        requestAbortControllers.value.set(eachFile.id, abortController)\n        requests.push(\n          request({\n            ...props.config,\n            data: formData,\n            onUploadProgress: (event) => onFileUpload(eachFile.id, event),\n            signal: abortController.signal\n          })\n            .then(() => {\n              requestAbortControllers.value.delete(eachFile.id)\n            })\n            .catch(() => {\n              onFileUploadError(eachFile.id)\n              requestAbortControllers.value.delete(eachFile.id)\n            })\n        )\n      }\n      await Promise.allSettled(requests)\n      isUploading.value = false\n      emit('uploading', false)\n      const errorUploads = fileList.value.filter(\n        (file) => {\n          file.status.progress = 100\n          file.status.error === true\n        }\n      )\n      const hasErrorUploads = errorUploads.length > 0\n      if (hasErrorUploads) {\n        emit('error', errorUploads)\n        return\n      }\n      emit('completed', fileList.value)\n    }\n    const handleChangeFile = async (selectedFiles = null) => {\n      if (props.singleUpload) {\n        files.value = {}\n        selectedFiles = [selectedFiles[0]]\n      }\n      if (selectedFiles) {\n        const tempFiles = []\n        for (let file of selectedFiles) {\n          const fileId = window.crypto.randomUUID()\n          tempFiles.push({\n            id: fileId,\n            file\n          })\n          files.value[fileId] = {\n            file,\n            status: { progress: props.offline ? 100 : 10, error: false }\n          }\n        }\n        emit('change', fileList.value)\n        if (props.offline) {\n          emit('completed', fileList.value)\n        } else await uploadFiles(tempFiles)\n      }\n    }\n    const cancelFileUpload = (fileId) => {\n      if (!fileId) return\n      if (requestAbortControllers.value.has(fileId)) {\n        requestAbortControllers.value.get(fileId).abort()\n        requestAbortControllers.value.delete(fileId)\n      }\n    }\n    const handleRemoveFile = (fileId) => {\n      if (!fileId) return\n      if (!files.value.hasOwnProperty(fileId)) return\n      const isFileUploadOnProgress =\n        files.value[fileId].status.progress > 0 &&\n        files.value[fileId].status.progress < 100\n      if (isFileUploadOnProgress) {\n        cancelFileUpload(fileId)\n      }\n      emit('remove', {...files.value[fileId], id: fileId})\n      delete files.value[fileId]\n      emit('change', fileList.value)\n    }\n\n    return {\n      files,\n      requestAbortControllers,\n      fileList,\n      isEmptyFiles,\n      acceptedFileTypes,\n      handleChangeFile,\n      handleRemoveFile\n    }\n  }\n})\n</script>\n<style lang=\"scss\">\n.file-list {\n  $self: &;\n  @apply rounded-lg p-2 border border-dashed border-grey-03;\n  &__item {\n    @apply flex items-center my-1 p-2 transition duration-200;\n    &:hover {\n      @apply bg-grey-lighten rounded-lg;\n    }\n    &--error {\n      @apply bg-red-02 bg-opacity-30;\n\n      &:hover {\n        @apply bg-red-02 bg-opacity-30;\n      }\n      .file-list__file-icon,\n      .file-list__file-name,\n      .file-list__file-remove i {\n        @apply text-red-04;\n      }\n    }\n    &--onprogress {\n      #{$self}__file-icon,\n      #{$self}__file-name,\n      #{$self}__file-size {\n        @apply text-grey-03;\n      }\n    }\n  }\n  &__file-name {\n    @apply my-2;\n  }\n  &__file-size {\n    @apply mx-6 sm:block hidden;\n  }\n  &__file-remove {\n    @apply ml-auto;\n  }\n  &__progress-bar {\n    @apply transition-all duration-300 absolute h-1 bg-grey-04 w-0;\n  }\n}\n</style>\n","export default \"/icon/upload.svg\""],"names":["_sfc_main","defineComponent","components","Alert","props","accept","type","Array","default","emits","[object Object]","emit","elInputFile","ref","onDrag","invalid","emitFile","value","files","length","getFileFormat","name","includes","fileChange","_evt","reset","closeAlert","doChange","click","dragOver","preventDefault","dragLeave","drop","dataTransfer","handleFileClick","_a","FilePicker","_openBlock","_createElementBlock","key","color","view","class","left","_withCtx","_cache","_createElementVNode","args","_ctx","_createTextVNode","_createCommentVNode","_normalizeClass","border-teal-04","onDragover","onDragleave","$slots","_normalizeProps","_guardReactiveProps","openDialog","onClick","src","onChange","singleUpload","Boolean","config","Object","url","method","headers","field","offline","isUploading","requestAbortControllers","Map","fileList","computed","entries","map","id","eachFile","file","size","fileSizeFormat","status","isEmptyFiles","acceptedFileTypes","accepteds","i","toUpperCase","join","lastItem","pop","onFileUpload","fileId","event","uploadProgressPercentage","Math","round","loaded","total","progress","handleChangeFile","async","selectedFiles","tempFiles","window","crypto","randomUUID","push","error","files2","requests","formData","FormData","append","abortController","AbortController","set","request","__spreadProps","__spreadValues","data","onUploadProgress","signal","then","delete","catch","Promise","allSettled","errorUploads","filter","uploadFiles","handleRemoveFile","hasOwnProperty","has","get","abort","cancelFileUpload","_hoisted_1","_hoisted_3","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_11","_hoisted_2","_createVNode","_component_FilePicker","_hoisted_4","_withModifiers","_hoisted_5","_Fragment","_renderList","_toDisplayString","_hoisted_10","_renderSlot","_hoisted_12"],"mappings":"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"}