{"version":3,"file":"Device.89239645.js","sources":["../../src/components/Device.vue"],"sourcesContent":["<template>\n  <div class=\"text-right mb-4\">\n    <Button color=\"teal\" @click=\"modal = true\"\n      ><i class=\"material-icons\">add</i>Add Item</Button\n    >\n  </div>\n  <Table class=\"mb-6\" :data=\"devices\" max-height=\"300\">\n    <TableColumn prop=\"device\" label=\"Item\">\n      <template #default=\"{ row }\">\n        <div class=\"space-x-2 mb-0\">\n          <span class=\"font-bold\">{{ row.product.name }}</span>\n          <GolfSpecBadge\n            :length=\"row.device.golf_specs.length || row.device.golf_specs.custom_length\"\n            :loft=\"row.device.golf_specs.loft || row.device.golf_specs.custom_loft\"\n            :gender=\"row.device.golf_specs.gender || row.device.golf_specs.custom_gender\"\n            :shaft_model=\"row.device.golf_specs.shaft_model || row.device.golf_specs.custom_shaft_model\"\n            :shaft_material=\"row.device.golf_specs.shaft_material || row.device.golf_specs.custom_shaft_material\"\n          />\n          <Badge v-if=\"row.device.custom_color || row.device.color.name\" color=\"grey\">\n            <span class=\"whitespace-nowrap\">{{ row.device.custom_color || row.device.color.name }}</span>\n          </Badge>\n        </div>\n        <small v-if=\"row.device.is_mac == 1 && row.device.is_custom == 0\">{{ row.device.details }}</small>\n      </template>\n    </TableColumn>\n    <TableColumn label=\"IMEI/SN\" width=\"350\">\n      <template #default=\"{ row }\">\n        <div class=\"flex gap-2\">\n          <Input\n            v-if=\"row.device.imei_required || (row.device.is_custom && !row.device.category_id)\"\n            v-model=\"row.device.imei_sn\"\n            block\n            placeholder=\"IMEI/SN\"\n            @keypress.space.prevent\n          />\n          <span v-else>-</span>\n          <BBBScan\n            v-if=\"row.device.bbb_diagnostic_result\"\n            v-model=\"row.device.bbb_diagnostic_result\"\n            static\n          />\n        </div>\n      </template>\n    </TableColumn>\n\t\t<TableColumn prop=\"device.condition.name\" label=\"Condition\">\n\t\t\t<template #default=\"{ row }\">\n\t\t\t\t<div class=\"flex items-center gap-x-2\">\n\t\t\t\t\t<span>{{ row.device.condition.name }}</span>\n\t\t\t\t\t<Tooltip v-if=\"row.device.questions.length > 0\" placement=\"top\">\n\t\t\t\t\t\t<span class=\"material-icons\">info</span>\n\t\t\t\t\t\t<template #content>\n\t\t\t\t\t\t\t<div :style=\"{ maxWidth: '300px' }\">\n\t\t\t\t\t\t\t\t<p class=\"font-semibold mb-2\">Q&A</p>\n\t\t\t\t\t\t\t\t<ol class=\"list-decimal pl-4\">\n\t\t\t\t\t\t\t\t\t<template v-for=\"(question, questionIndex) in row.device.questions\">\n\t\t\t\t\t\t\t\t\t\t<li v-if=\"question.question && question.answer\" class=\"mb-1\" :key=\"questionIndex\">\n\t\t\t\t\t\t\t\t\t\t\t<p class=\"mb-1\">{{ question.question.question }}</p>\n\t\t\t\t\t\t\t\t\t\t\t<ul class=\"list\">\n\t\t\t\t\t\t\t\t\t\t\t\t<template v-if=\"question.answer\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<template v-if=\"!!question.answer.length\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li v-for=\"answer in question.answer\" :key=\"answer.id\" class=\"text-white\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ answer.answer }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>({{ conditionalQuestionShown(answer) }})</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li v-else class=\"text-white\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ question.answer.answer }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>({{ conditionalQuestionShown(question.answer) }})</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t</ol>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t</TableColumn>\n    <TableColumn prop=\"device.qty\" label=\"Quantity\" />\n    <TableColumn prop=\"device.price\" label=\"Payout\">\n      <template #default=\"{ row }\">\n        <Input\n          v-model=\"row.device.price\"\n          placeholder=\"Price\"\n          type=\"number\"\n          min=\"0\"\n          :disabled=\"isDisabledPrice\"\n          @keypress=\"onlyNumber\"\n          class=\"w-full\"\n          icon\n          icon-block>\n          <template #icon>\n            <Currency only-symbol class=\"text-xl\" />\n          </template>\n        </Input>\n      </template>\n    </TableColumn>\n    <TableColumn label=\"Total\">\n      <template #default=\"{ row }\">\n        <Currency\n          :value=\"\n            parseFloat(row.device.qty) * parseFloat(row.device.price) || 0\n          \"\n        />\n      </template>\n    </TableColumn>\n    <TableColumn>\n      <template #default=\"scope\">\n        <Button\n          color=\"red\"\n          @click=\"removeDevice(scope.$index)\"\n          dense\n          >Delete</Button\n        >\n      </template>\n    </TableColumn>\n  </Table>\n  <Modal v-model=\"modal\" title=\"Add Item\" @close=\"unsetData\">\n    <template #default>\n      <div>\n        <DeviceScan\n          :show=\"buybackType === 'instore' && modal\"\n          :selected=\"componentBind.data\"\n          @scanned=\"handleScan\"\n        />\n        <component\n          ref=\"refDeviceForm\"\n          v-bind=\"componentBind\"\n          :is=\"'SearchDeviceForm'\"\n          :device-scan=\"deviceScan\"\n          :is-disabled-custom-product=\"isDisableCustomProduct\"\n          with-scan\n        ></component>\n      </div>\n    </template>\n    <template #footer>\n      <div class=\"flex justify-between gap-x-4\">\n        <CancelAdd\n          v-if=\"buybackType === 'instore'\"\n          @cancel=\"() => {\n            modal = false\n            unsetData()\n          }\"\n        />\n        <Button v-if=\"isCustomProduct\" color=\"teal\" class=\"ml-auto\" @click=\"addCustomDevice\"\n          >Add Item</Button\n        >\n        <Button\n          v-else\n          color=\"teal\"\n          class=\"ml-auto\"\n          @click=\"addDevice\"\n          :disabled=\"refDeviceForm?.isEmptyCondition\"\n          >Add Item</Button\n        >\n      </div>\n    </template>\n  </Modal>\n</template>\n\n<script>\nimport { defineComponent, ref, watch, nextTick, computed } from 'vue'\nimport { useStore } from 'vuex'\nimport { isDisabledPrice, resetScanQR, removeScanQR } from 'composable/buyback'\nimport { useCondition } from 'store/pinia/condition'\nimport { useUser } from 'composable/user'\nimport Button from 'bbUi/components/button/button.vue'\nimport Input from 'bbUi/components/input/input.vue'\nimport Modal from 'bbUi/components/modal/modal.vue'\nimport Badge from 'bbUi/components/badge/badge.vue'\nimport Tab from 'bbUi/components/tab/tab.vue'\nimport SearchDeviceForm from './Device/Form.vue'\n// import CustomDeviceForm from './Device/CustomForm.vue'\nimport Currency from 'components/Currency.vue'\nimport DeviceScan from 'components/DeviceScan.vue'\nimport BBBScan from 'components/BuybackBoothScan/index.vue'\nimport CancelAdd from './BuybackBoothScan/CancelAdd.vue'\nimport GolfSpecBadge from 'components/Device/DeviceGolfSpecBadge.vue'\n\nexport default defineComponent({\n  components: {\n    Button,\n    Input,\n    Modal,\n    SearchDeviceForm,\n    // CustomDeviceForm,\n    DeviceScan,\n    BBBScan,\n    CancelAdd,\n    Currency,\n    Badge,\n    Tab,\n    GolfSpecBadge\n  },\n  props: {\n    data: {\n      type: Array,\n      default: () => []\n    },\n    buybackType: {\n      type: String,\n      default: 'instore'\n    }\n  },\n  emits: ['update:data'],\n  async setup(props, { emit }) {\n    const store = useStore()\n    const data = ref(null)\n    const dataComputer = ref(null)\n    const dataGolf = ref(null)\n    const device = ref(null)\n    const condition = ref(null)\n    const devices = ref(props.data || [])\n    const modal = ref(false)\n    const refDeviceForm = ref(null)\n    const colors = ref(null)\n    const isCustomProduct = ref(false)\n    const isCustomColor = ref(false)\n    const customColor = ref(null)\n    const { me, isDisableCustomProduct } = useUser()\n\t\tconst conditionStore = useCondition()\n\n    const componentBind = computed(() => {\n      return {\n        data: data.value,\n        'onUpdate:data': (value) => (data.value = value),\n        dataComputer: dataComputer.value,\n        'onUpdate:dataComputer': (value) => (dataComputer.value = value),\n        dataGolf: dataGolf.value,\n        'onUpdate:dataGolf': (value) => (dataGolf.value = value),\n        device: device.value,\n        'onUpdate:device': (value) => {\n          const isCustom = value?.is_custom\n          if (isCustom) isCustomProduct.value = true\n          device.value = value\n        },\n        condition: condition.value,\n        'onUpdate:condition': (value) => (condition.value = value),\n        colors: colors.value,\n        'onUpdate:colors': (value) => (colors.value = value),\n        hide: { imei_sn: false },\n        buybackType: props.buybackType,\n        multiImei: true,\n        'onUpdate:isCustomProduct': (customProduct) => isCustomProduct.value = customProduct == 1,\n        isCustomColor: isCustomColor.value,\n        'onUpdate:isCustomColor': (_isCustomColor) => isCustomColor.value = _isCustomColor,\n        customColor: customColor.value,\n        'onUpdate:customColor': (color) => customColor.value = color\n      }\n    })\n    const deviceScan = computed(() =>\n      store.state &&\n      store.state.user &&\n      store.state.user.bbbScan &&\n      store.state.user.bbbScan.device\n    )\n\n    // Auto show modal if no device selected\n    if (devices.value.length === 0) modal.value = true\n\n    const validateForm = () =>\n      new Promise((resolve) =>\n        nextTick(() => resolve(refDeviceForm.value?.validate?.()))\n      )\n\n\t\tconst conditionalQuestionShown = (item) => {\n\t\t\treturn conditionStore.getConditionalFormat({\n\t\t\t\t...item,\n\t\t\t\tsymbol: me.value.currency_symbol\n\t\t\t})\n\t\t}\n\n    const makeDeviceData = (isCustomProduct = false) => {\n      const deviceData = {\n        product: {\n          id: null,\n          name: null\n        },\n        device: {\n          condition: {\n            id: null,\n            name: null\n          },\n          price: null,\n          qty: null,\n          is_mac: null,\n          imei_sn: null,\n          color: {\n            id: null,\n            name: null\n          },\n          golf_specs: {\n            length: null,\n            loft: null,\n            gender: null,\n            shaft_model: null,\n            shaft_material: null,\n            custom_length: null,\n            custom_loft: null,\n            custom_gender: null,\n            custom_shaft_model: null,\n            custom_shaft_material: null\n          },\n          is_custom: 0,\n          details: null,\n          category_id: null,\n          category_name: null,\n          custom_color: null,\n\t\t\t\t\tquestions: []\n        }\n      }\n\n      if(isCustomProduct){\n        deviceData.product.id = null\n        deviceData.device.category_id = data.value.category_id\n        deviceData.device.category_name = data.value.category_name\n        deviceData.product.name = data.value.product_name\n        deviceData.device.is_custom = 1\n      }else {\n        deviceData.product.id =\n        device.value.product_id +\n        (dataComputer.value.processor\n          ? `-${dataComputer.value.processor.id}-${dataComputer.value.memory.id}-${dataComputer.value.hardDrive.id}-${dataComputer.value.graphicsCard.id}`\n          : '')\n        deviceData.product.name = device.value.product_name\n      }\n      if (dataGolf.value) {\n        deviceData.device.golf_specs = {\n          length: null,\n          loft: null,\n          gender: null,\n          shaft_model: null,\n          shaft_material: null,\n          custom_length: null,\n          custom_loft: null,\n          custom_gender: null,\n          custom_shaft_model: null,\n          custom_shaft_material: null\n        }\n        Object.entries(dataGolf.value).forEach(([key, spec]) => {\n          if (deviceData.device.golf_specs.hasOwnProperty(key)) {\n            if (spec.is_custom)\n              deviceData.device.golf_specs[`custom_${key}`] = spec.selected\n            else deviceData.device.golf_specs[key] = spec.selected\n          }\n        })\n      }\n\n      if(isCustomProduct && !data.value.category_id){\n        deviceData.device.condition.id = -1\n        deviceData.device.condition.name = data.value.condition\n        deviceData.device.is_mac = 0\n      } else {\n        deviceData.device.condition.id = condition.value.id\n        deviceData.device.condition.name = condition.value.name\n        deviceData.device.is_mac = device.value.is_mac\n\t\t\t\tdeviceData.device.questions = data.value.questions.filter((q) => q.answer)\n      }\n        deviceData.device.price = data.value.price\n        deviceData.device.qty = data.value.qty\n        deviceData.device.imei_sn = data.value.imei_sn\n        if(isCustomColor.value || (isCustomProduct && !data.value.category_id)) {\n          deviceData.device.custom_color = customColor.value\n        }else {\n          deviceData.device.color.id = data.value?.color?.id\n          deviceData.device.color.name = data.value?.color?.name\n        }\n        deviceData.device.details =\n        device?.value?.is_mac == 1\n        ? Object.entries(dataComputer.value)\n        .map(([_, spec]) => spec?.name || '')\n        .join(', ')\n        : ''\n        deviceData.device.notes = data.value.notes\n\n        return deviceData\n    }\n\n    const addDevices = (data = undefined) => {\n      if (data) {\n        const multiImei = JSON.parse(data.device.imei_sn)\n        const multiNotes = JSON.parse(data.device.notes)\n        for (let i = 0; i < Number(data.device.qty); i++) {\n          devices.value.push({\n            ...data,\n            device: {\n              ...data.device,\n              ...(multiImei && multiImei.length && {\n                imei_sn: multiImei[i],\n                notes: multiNotes[i]\n              }),\n              ...({\n                bbb_diagnostic_result: store.state.user.bbbScan && store.state.user.bbbScan.device\n              }),\n              qty: 1,\n              ...(refDeviceForm.value.dataForm &&\n                refDeviceForm.value.dataForm.imei_required && {\n                  imei_required: refDeviceForm.value.dataForm.imei_required\n                })\n            }\n          })\n        }\n      }\n\n      emit('update:data', devices.value)\n      removeScanQR()\n      unsetData()\n      unsetCustomColor()\n      modal.value = false\n    }\n\n    const addDevice = async () => {\n      const isValid = await validateForm()\n      if (isValid) {\n        const deviceData = makeDeviceData()\n        addDevices(deviceData)\n      }\n    }\n    const addCustomDevice = async () => {\n      try {\n        const isValid = await validateForm()\n        if (isValid) {\n          const deviceData = makeDeviceData(true)\n          addDevices(deviceData)\n        }\n      } catch (error) {\n        console.error('Error adding custom device:', error)\n      }\n    }\n    const removeDevice = (index) => {\n      devices.value.splice(index, 1)\n      emit('update:data', devices.value)\n    }\n    const unsetData = () => {\n      isCustomProduct.value = false\n      data.value = null\n      dataComputer.value = null\n      device.value = null\n      condition.value = null\n      resetScanQR()\n    }\n    const unsetCustomColor = () => {\n      isCustomColor.value = false\n      customColor.value = null\n    }\n    const onlyNumber = ($event) => {\n      let keyCode = $event.keyCode ? $event.keyCode : $event.which\n      if ((keyCode < 48 || keyCode > 57) && keyCode !== 46) {\n        $event.preventDefault()\n      }\n    }\n    const handleScan = (val) => {\n      refDeviceForm.value.stateSearch.query = val ? val.Name : null\n      refDeviceForm.value.stateSearch.product.query = val ? val.Name : null\n      if (val) {\n        refDeviceForm.value.imeiSnNotes[0] = {\n          imei_sn: val.UID,\n          imei_notes: ''\n        }\n        if (refDeviceForm.value.refDeviceSearch) {\n          refDeviceForm.value.refDeviceSearch.isCollapse = true\n        }\n      }\n      refDeviceForm.value.handleSearchProduct()\n    }\n\n    watch(\n      devices,\n      () => {\n        emit('update:data', devices.value)\n      },\n      {\n        deep: true\n      }\n    )\n\n    return {\n      data,\n      dataComputer,\n      condition,\n      device,\n      devices,\n      deviceScan,\n      modal,\n      isDisabledPrice,\n      refDeviceForm,\n      componentBind,\n      isCustomProduct,\n      addDevice,\n      addCustomDevice,\n      removeDevice,\n      unsetData,\n      onlyNumber,\n      handleScan,\n      colors,\n      isDisableCustomProduct,\n\t\t\tconditionalQuestionShown\n    }\n  }\n})\n</script>\n"],"names":["_sfc_main","defineComponent","components","Button","Input","Modal","SearchDeviceForm","DeviceScan","BBBScan","CancelAdd","Currency","Badge","Tab","GolfSpecBadge","props","data","type","Array","default","buybackType","String","emits","[object Object]","emit","store","useStore","ref","dataComputer","dataGolf","device","condition","devices","modal","refDeviceForm","colors","isCustomProduct","isCustomColor","customColor","me","isDisableCustomProduct","useUser","conditionStore","useCondition","componentBind","computed","value","onUpdate:data","onUpdate:dataComputer","onUpdate:dataGolf","onUpdate:device","is_custom","onUpdate:condition","onUpdate:colors","hide","imei_sn","multiImei","onUpdate:isCustomProduct","customProduct","onUpdate:isCustomColor","_isCustomColor","onUpdate:customColor","color","deviceScan","state","user","bbbScan","length","validateForm","Promise","resolve","nextTick","_b","_a","validate","call","makeDeviceData","isCustomProduct2","deviceData","product","id","name","price","qty","is_mac","golf_specs","loft","gender","shaft_model","shaft_material","custom_length","custom_loft","custom_gender","custom_shaft_model","custom_shaft_material","details","category_id","category_name","custom_color","questions","product_name","product_id","processor","memory","hardDrive","graphicsCard","Object","entries","forEach","key","spec","hasOwnProperty","selected","filter","q","answer","_c","_d","_e","map","_","join","notes","addDevices","data2","JSON","parse","multiNotes","i","Number","push","__spreadProps","__spreadValues","bbb_diagnostic_result","dataForm","imei_required","removeScanQR","unsetData","unsetCustomColor","resetScanQR","watch","deep","isDisabledPrice","addDevice","async","addCustomDevice","error","console","removeDevice","index","splice","onlyNumber","$event","keyCode","which","preventDefault","handleScan","val","stateSearch","query","Name","imeiSnNotes","UID","imei_notes","refDeviceSearch","isCollapse","handleSearchProduct","conditionalQuestionShown","item","getConditionalFormat","symbol","currency_symbol","_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_5","_hoisted_7","_hoisted_8","_hoisted_9","style","maxWidth","_hoisted_10","_hoisted_11","_openBlock","_createElementBlock","_Fragment","_createVNode","_component_Button","_withCtx","_cache","_component_Table","_ctx","_component_TableColumn","prop","row","_createElementVNode","_toDisplayString","_component_GolfSpecBadge","label","_hoisted_6","onUpdate:modelValue","block","placeholder","content","question","_hoisted_12","_renderList","_createTextVNode","_hoisted_13","min","disabled","onKeypress","icon","_component_Currency","only-symbol","scope","onClick","$index","title","_component_DeviceScan","show","_createBlock","_resolveDynamicComponent","_mergeProps","device-scan","is-disabled-custom-product","footer","_hoisted_14","onCancel","_createCommentVNode"],"mappings":"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"}