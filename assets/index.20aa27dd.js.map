{"version":3,"file":"index.20aa27dd.js","sources":["../../src/views/integration/easypost/activations/index.vue"],"sourcesContent":["<template>\n  <form autocomplete=\"off\" @submit.prevent=\"handleSubmit\">\n    <Modal\n      size=\"sm\"\n      :modelValue=\"true\"\n      class=\"modal--overflow-none\"\n      without-transition\n      @click-close=\"handleClose\">\n      <template #header>\n        Activate USPS Return Account\n      </template>\n      <template #default>\n        <div class=\"flex items-center gap-x-4 text-orange-03\">\n          <span class=\"material-icons text-4xl\">warning</span>\n          <p>Must match easypost account information</p>\n        </div>\n        <div v-loading=\"loading\" class=\"space-y-8 mt-8\">\n          <div>\n            <Input\n              v-model=\"data.company_email\"\n              :view=\"(validation.company_email.$invalid && 'danger') || 'default'\"\n              placeholder=\"Company Email\"\n              label=\"Company Email\"\n              autocomplete=\"none\"\n              class=\"w-full\"\n            />\n            <small\n              v-for=\"(error, errorIndex) of validation.company_email.$errors\"\n              :key=\"errorIndex\"\n              class=\"text-red-base block mt-1\">\n              {{ error.$message }}.\n            </small>\n          </div>\n          <!-- <div>\n            <Input\n              v-model=\"data.api_key\"\n              :view=\"(validation.api_key.$invalid && 'danger') || 'default'\"\n              placeholder=\"Easypost API Key\"\n              label=\"Easypost API Key\"\n              autocomplete=\"none\"\n              class=\"w-full\"\n            />\n            <small\n              v-for=\"(error, errorIndex) of validation.api_key.$errors\"\n              :key=\"errorIndex\"\n              class=\"text-red-base block mt-1\">\n              {{ error.$message }}.\n            </small>\n          </div> -->\n          <div>\n            <Input\n              v-model=\"data.address_text\"\n              v-gmap=\"address\"\n              :view=\"(viewValidAddress && 'danger') || 'default'\"\n              placeholder=\"Mail-in Address\"\n              label=\"Mail-in Address\"\n              autocomplete=\"none\"\n              class=\"w-full\"\n              icon-block\n              icon>\n              <template #icon>\n                <span class=\"material-icons\">location_on</span>\n              </template>\n            </Input>\n            <span\n              v-for=\"errorVal in errorAddress\"\n              :key=\"errorVal\"\n              class=\"block\">\n              <template v-if=\"validation[errorVal]\">\n                <small\n                  v-for=\"(error, errorIndex) of validation[errorVal].$errors\"\n                  :key=\"errorIndex\"\n                  class=\"text-red-base block mt-1\">\n                  {{ error.$message }}.\n                </small>\n              </template>\n            </span>\n          </div>\n          <div>\n            <InputPhone\n              ref=\"refPhone\"\n              v-model=\"data.phone\"\n              country-autofill-setting\n              placement=\"bottom\"\n              static-position\n              label=\"Phone\"\n              block\n            />\n            <small\n              v-for=\"(error, errorIndex) of validation.phone.$errors\"\n              :key=\"errorIndex\"\n              class=\"text-red-base block mt-1\">\n              {{ error.$message }}.\n            </small>\n          </div>\n        </div>\n      </template>\n      <template #footer>\n        <Button\n          v-loading=\"loading\"\n          color=\"teal\"\n          type=\"submit\">\n          Activate\n        </Button>\n      </template>\n    </Modal>\n  </form>\n</template>\n<script>\nimport { computed, defineComponent, ref, onActivated, onDeactivated } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useVuelidate } from '@vuelidate/core'\nimport { required, email, validAddress } from '@/validations/index'\nimport { helpers } from '@vuelidate/validators'\nimport { useActivation } from 'composable/integration/easypost'\nimport { useCompanyProfile } from 'composable/setting'\n\nimport Input from 'bbUi/components/input/input.vue'\nimport InputPhone from 'components/InputPhone.vue'\nimport Modal from 'bbUi/components/modal/modal.vue'\nimport Button from 'bbUi/components/button/button.vue'\n\nexport default defineComponent({\n  name: 'EasypostActivation',\n  components: {\n    Input,\n    Modal,\n    Button,\n    InputPhone\n  },\n  async setup() {\n    const { data: dataCompany, loading: loadingCompany, actionShow } = useCompanyProfile()\n    const { data, address, loading, fetch, create } = useActivation()\n    const router = useRouter()\n    const refPhone = ref()\n    const rules = {\n      // api_key: {}, // { required },\n      // valid: { validAddress },\n      company_email: { required, email },\n      address_text: {\n        required: helpers.withMessage(`Address is required`, required)\n      },\n      street: { required },\n      state: { required },\n      city: { required },\n      zip_code: { required },\n      phone: {\n        required,\n        invalidNumber: helpers.withMessage('Phone number is invalid', () =>\n          refPhone.value?.isValid\n        )\n      },\n    }\n    const errorAddress = [\n      'address_text',\n      'street',\n      'state',\n      'city',\n      'zip_code',\n    ]\n    const validation = useVuelidate(rules, data, {\n      $lazy: true\n    })\n    const viewValidAddress = computed(() => {\n      const results = []\n      errorAddress.map(item => {\n        validation.value[item].$invalid && results.push(validation.value[item].$invalid)\n      })\n      return (!results.length ? false : true)\n    })\n    const setData = (value, company = {}) => {\n      data.company_email = value.email || value.company_email || company.company_email || null\n      data.address_text = value.address_text || company.address_text || null\n      data.street = value.street || company.street || company.address || null\n      data.state = value.state || company.state || null\n      data.city = value.city || company.city || null\n      data.zip_code = value.zip || company.zip || null\n      data.phone = value.phone || company.phone || null\n    }\n\n    // await fetch((res) => setData(res))\n\n    const handleClose = () => {\n      router.go(-1)\n    }\n\n    const handleSubmit = async () => {\n      const isValid = await validation.value.$validate()\n      if (isValid) {\n        const payload = {}\n        const keys = ['company_email', /* 'api_key', */ 'phone'].concat(errorAddress)\n        keys.forEach(key => {\n          payload[key] = data[key]\n        })\n        await create(data, () => {\n          handleClose()\n        })\n      }\n    }\n\n    onActivated(async () => {\n      await actionShow({ is_store: 1 })\n      await fetch((res) => setData(res, dataCompany))\n    })\n    onDeactivated(() => {\n      validation.value.$reset()\n      setData({})\n    })\n\n    return {\n      data,\n      loading,\n      address,\n      refPhone,\n      validation,\n      dataCompany,\n      errorAddress,\n      loadingCompany,\n      viewValidAddress,\n      handleClose,\n      handleSubmit\n    }\n  }\n})\n</script>\n<style lang=\"scss\">\n.test-1trtrt::after {\n  content: '';\n  position: relative;\n}\n.test-1trtrt {\n  position: absolute;\n  background-color: red;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n}\n.modal--overflow-none {\n  .modal__content {\n    overflow-y: unset !important;\n  }\n}\n</style>\n"],"names":["_sfc_main","defineComponent","name","components","Input","Modal","Button","InputPhone","[object Object]","data","dataCompany","loading","loadingCompany","actionShow","useCompanyProfile","address","fetch","create","useActivation","router","useRouter","refPhone","ref","rules","company_email","required","email","address_text","helpers","withMessage","street","state","city","zip_code","phone","invalidNumber","_a","value","isValid","errorAddress","validation","useVuelidate","$lazy","viewValidAddress","computed","results","map","item","$invalid","push","length","setData","company","zip","handleClose","go","onActivated","async","is_store","res","onDeactivated","$reset","handleSubmit","$validate","concat","forEach","key","_openBlock","_createElementBlock","autocomplete","_createVNode","_component_Modal","size","modelValue","class","without-transition","_cache","_createElementVNode","_hoisted_1","_component_Input","_ctx","onUpdate:modelValue","$event","view","placeholder","label","_Fragment","_renderList","$errors","error","errorIndex","_withDirectives","_createBlock","icon-block","icon","_withCtx","errorVal","_component_InputPhone","country-autofill-setting","placement","static-position","_component_Button","color"],"mappings":"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"}