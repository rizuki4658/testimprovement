{"version":3,"file":"index.3fb717f2.js","sources":["../../src/components/CheckSettings/CompanyForm.vue","../../src/components/CheckSettings/BankForm.vue","../../src/views/setting/check-settings/local.vue","../../src/views/setting/check-settings/online.vue","../../src/views/setting/check-settings/index.vue","../../src/views/setting/check-settings/index.js"],"sourcesContent":["<template>\n  <div class=\"grid grid-cols-2 gap-4\">\n    <div class=\"col-span-2\">\n      <Input v-model=\"data.company_name\" type=\"text\" label=\"Company Name\" class=\"w-full\" :disabled=\"disabled\" :view=\"validation.company_name.$invalid && 'danger' || 'default'\" />\n      <small class=\"text-red-base block\" v-for=\"(error, errorIndex) of validation.company_name.$errors\" :key=\"errorIndex\">{{ error.$message }}. </small>\n    </div>\n    <div class=\"col-span-2\">\n      <Input v-model=\"data.address_text\" type=\"text\" label=\"Street Address\" class=\"w-full\" :disabled=\"disabled\" v-gmap=\"address\"  @focus-in=\"(e) => e.target.setAttribute('autocomplete', 'no')\" :view=\"validation.valid.$invalid && 'danger' || 'default'\" icon icon-block>\n        <template #icon>\n          <span class=\"material-icons\">location_on</span>\n        </template>\n      </Input>\n      <small class=\"text-red-base block\" v-for=\"(error, errorIndex) of validation.valid.$errors\" :key=\"errorIndex\">{{ error.$message }}. </small>\n      <small>Street address, P.O box, company name, c/o.</small>\n    </div>\n<!--    <div class=\"xl:col-span-1 lg:col-span-1 md:col-span-1 col-span-2\">-->\n<!--      <Input v-model=\"data.city\" type=\"text\" label=\"City\" class=\"w-full\" :disabled=\"disabled\" />-->\n<!--    </div>-->\n<!--    <div class=\"xl:col-span-1 lg:col-span-1 md:col-span-1 col-span-2\">-->\n<!--      <Input v-model=\"data.state\" type=\"text\" label=\"State\" class=\"w-full\" :disabled=\"disabled\" />-->\n<!--    </div>-->\n<!--    <div class=\"xl:col-span-1 lg:col-span-1 md:col-span-1 col-span-2\">-->\n<!--      <Input v-model=\"data.zip_code\" type=\"text\" label=\"Zip Code\" class=\"w-full\" :disabled=\"disabled\" />-->\n<!--    </div>-->\n    <div class=\"xl:col-span-1 lg:col-span-1 md:col-span-1 col-span-2\">\n      <!-- <Input v-model=\"data.phone\" type=\"text\" label=\"Phone\" class=\"w-full\" :disabled=\"disabled\" icon icon-block :view=\"validation.phone.$invalid && 'danger' || 'default'\">\n        <template #icon>\n            <span class=\"material-icons\">phone</span>\n        </template>\n      </Input> -->\n      <InputPhone ref=\"refCompanyPhone\" v-model=\"data.phone\" label=\"Phone\" :disabled=\"disabled\" block country-autofill-setting />\n      <small class=\"text-red-base block\" v-for=\"(error, errorIndex) of validation.phone.$errors\" :key=\"errorIndex\">{{ error.$message }}. </small>\n    </div>\n  </div>\n\n</template>\n\n<script>\nimport { defineComponent, reactive, watch, ref } from 'vue'\nimport Input from 'bbUi/components/input/input.vue'\nimport Checkbox from 'bbUi/components/checkbox/checkbox.vue'\nimport InputPhone from 'components/InputPhone.vue'\nimport { useVuelidate } from '@vuelidate/core'\nimport { required, validAddress } from '@/validations/index'\nimport { helpers } from '@vuelidate/validators'\n\nexport default defineComponent({\n  components: {\n    Input,\n    Checkbox,\n    InputPhone\n  },\n  props: {\n    data: {\n      type: Object,\n      default: () => ({\n        company_name: '',\n        street: '',\n        //street2: '',\n        city: '',\n        state: '',\n        zip_code: '',\n        phone: '',\n        country: '',\n        address_text: ''\n      })\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: [\n    'update:data',\n    'change'\n  ],\n  setup(props, { emit }) {\n    const data = reactive(props.data)\n    const refCompanyPhone = ref(null)\n\n    Object.assign(data, {\n      valid: data.address_text !== '' && data.address_text !== null\n    })\n\n    const rules = {\n      valid: {\n        sameAs: validAddress\n      },\n      company_name: {\n        required: helpers.withMessage('Company name is required', required)\n      },\n      phone: {\n        required: helpers.withMessage('Company phone is required', required),\n        invalidNumber: helpers.withMessage('Phone number is invalid', () => !data.phone ? true : refCompanyPhone.value?.isValid)\n      }\n    }\n    const validation = useVuelidate(rules, data, {\n      $lazy: true\n    })\n    const validate = () => {\n      validation.value.$validate()\n      return !validation.value.$invalid\n    }\n\n    watch(() => ({...data}), () => {\n      emit('update:data', data)\n      emit('change', data)\n    })\n\n    // Watch for props updated\n    watch(() => ({...props.data}), (newData) => {\n      Object.assign(data, {\n        ...newData,\n        valid: data.address_text !== '' && data.address_text !== null\n      })\n    })\n\n    return {\n      refCompanyPhone,\n      data,\n      validation,\n      address: {\n        valid: 'valid',\n        street_number: 'street',\n        locality: 'city',\n        administrative_area_level_1: 'state',\n        formatted_address: 'address_text',\n        postal_code: 'zip_code',\n        country: 'country'\n      },\n      validate\n    }\n  }\n})\n</script>","<template>\n  <div class=\"grid grid-cols-2 gap-4\">\n    <div class=\"col-span-2\">\n      <Input v-model=\"data.bank_name\" type=\"text\" label=\"Bank Name\" class=\"w-full\" :disabled=\"disabled\" :view=\"validation.bank_name.$invalid && 'danger' || 'default'\" />\n      <small class=\"text-red-base block\" v-for=\"(error, errorIndex) of validation.bank_name.$errors\" :key=\"errorIndex\">{{ error.$message }}. </small>\n    </div>\n    <div class=\"col-span-2\">\n      <Input v-model=\"data.address_text\"  type=\"text\" label=\"Bank Address\" class=\"w-full\" :disabled=\"disabled\" v-gmap=\"address\" @focus-in=\"(e) => e.target.setAttribute('autocomplete', 'no')\" icon icon-block :view=\"validation.bank_valid.$invalid && 'danger' || 'default'\">\n        <template #icon>\n          <span class=\"material-icons\">location_on</span>\n        </template>\n      </Input>\n      <small class=\"text-red-base block\" v-for=\"(error, errorIndex) of validation.bank_valid.$errors\" :key=\"errorIndex\">{{ error.$message }}. </small>\n      <small>Street address, P.O box, company name, c/o.</small>\n    </div>\n<!--    <div class=\"xl:col-span-1 lg:col-span-1 md:col-span-1 col-span-2\">-->\n<!--      <Input v-model=\"data.bank_city\" type=\"text\" label=\"City\" class=\"w-full\" :disabled=\"disabled\" />-->\n<!--    </div>-->\n<!--    <div class=\"xl:col-span-1 lg:col-span-1 md:col-span-1 col-span-2\">-->\n<!--      <Input v-model=\"data.bank_state\" type=\"text\" label=\"State\" class=\"w-full\" :disabled=\"disabled\" />-->\n<!--    </div>-->\n<!--    <div class=\"xl:col-span-1 lg:col-span-1 md:col-span-1 col-span-2\">-->\n<!--      <Input v-model=\"data.bank_zip_code\" type=\"text\" label=\"Zip Code\" class=\"w-full\" :disabled=\"disabled\" />-->\n<!--    </div>-->\n    <div class=\"xl:col-span-1 lg:col-span-1 md:col-span-1 col-span-2\">\n      <!-- <Input v-model=\"data.bank_phone\" type=\"tel\" label=\"Phone\" class=\"w-full\" :disabled=\"disabled\" icon icon-block :view=\"validation.bank_phone.$invalid && 'danger' || 'default'\">\n        <template #icon>\n          <span class=\"material-icons\">phone</span>\n        </template>\n      </Input> -->\n      <InputPhone ref=\"refBankPhone\" v-model=\"data.bank_phone\" label=\"Phone\" :disabled=\"disabled\" block country-autofill-setting />\n      <small class=\"text-red-base block\" v-for=\"(error, errorIndex) of validation.bank_phone.$errors\" :key=\"errorIndex\">{{ error.$message }}. </small>\n    </div> \n  </div>\n</template>\n\n<script>\nimport { defineComponent, reactive, watch, ref } from 'vue'\nimport Input from 'bbUi/components/input/input.vue'\nimport Checkbox from 'bbUi/components/checkbox/checkbox.vue'\nimport InputPhone from 'components/InputPhone.vue'\nimport { useVuelidate } from '@vuelidate/core'\nimport { helpers } from '@vuelidate/validators'\nimport { required, validAddress } from '@/validations/index'\n\n\nexport default defineComponent({\n  components: {\n    Input,\n    Checkbox,\n    InputPhone\n  },\n  props: {\n    data: {\n      type: Object,\n      default: () => ({\n        bank_name: '',\n        bank_street: '',\n        bank_city: '',\n        bank_state: '',\n        bank_zip_code: '',\n        bank_phone: '',\n        address_text: ''\n      })\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: [\n    'update:data',\n    'change',\n  ],\n  setup(props, { emit }) {\n    const data = reactive(props.data)\n    const refBankPhone = ref(null)\n\n    Object.assign(data, {\n      bank_valid: data.address_text !== '' && data.address_text !== null\n    })\n\n    const rules = {\n      bank_valid: {\n        sameAs: validAddress\n      },\n      bank_name: {\n        required: helpers.withMessage('Bank name is required', required)\n      },\n      bank_phone: {\n        required: helpers.withMessage('Bank phone  is required', required),\n        invalidNumber: helpers.withMessage('Phone number is invalid', () => !data.bank_phone ? true : refBankPhone.value?.isValid)\n      }\n    }\n    const validation = useVuelidate(rules, data, {\n      $lazy: true\n    })\n    const validate = () => {\n      validation.value.$validate()\n      return !validation.value.$invalid\n    }\n\n    watch(() => ({...data}), () => {\n      emit('update:data', data)\n      emit('change', data)\n    })\n\n    return {\n      data,\n      refBankPhone,\n      validation,\n      address: {\n        valid: 'bank_valid',\n        route: 'bank_street',\n        locality: 'bank_city',\n        administrative_area_level_1: 'bank_state',\n        formatted_address: 'address_text',\n        postal_code: 'bank_zip_code',\n        country: 'bank_country'\n      },\n      validate\n    }\n  }\n})\n</script>","<template>\n  <div>\n    <div class=\"grid grid-cols-12\">\n      <div class=\"col-span-12 my-6\">\n        <div class=\"flex\">\n          <div class=\"flex-grow-0 mr-4\">\n            <div class=\"inline-flex items-center justify-center w-1 h-1 p-5 box-border bg-teal-04 rounded-full text-white font-semibold\">\n              <span>1</span>\n            </div>\n          </div>\n          <div class=\"flex-grow\">\n            <h6 class=\"text-lg text-teal-04 mt-2 mb-6\">Check Number</h6>\n            <div class=\"grid grid-cols-12\">\n              <div class=\"lg:col-span-6 md:col-span-6 col-span-12\">\n                <div class=\"py-3 px-6 bg-grey-lighten rounded-lg text-3xl font-semibold text-teal-04 border border-grey-01\">\n                {{data.local_check_start_number}}\n                </div>\n                <Alert color=\"orange\" view=\"smooth\" class=\"my-4 text-sm\">\n                  <div class=\"flex items-center\">\n                    <div class=\"mr-6\">\n                      <span class=\"material-icons text-lg\">info</span>\n                    </div>\n                    <div class=\"flex-grow-1\">\n                      The display number shown above is an example that will be used in your paper check. All numbers will be sequential\n                    </div>\n                  </div>\n                </Alert>\n                <div class=\"grid grid-cols-2 gap-4\">\n                  <div class=\"2xl:col-span-1 xl:col-span-1 lg:col-span-1 col-span-2\">\n                    <Input label=\"Check Number Length\" block type=\"number\" v-model=\"data.local_check_start_length\" icon icon-block right @focus-out=\"onUpdateStartLength\" :view=\"validation.local_check_start_length.$invalid && 'danger' || 'default'\">\n                      <template #icon>\n                        <span class=\"text-sm\">Digits</span>\n                      </template>\n                    </Input>\n                    <small class=\"text-red-base block\" v-for=\"(error, errorIndex) of validation.local_check_start_length.$errors\" :key=\"errorIndex\">{{ error.$message }}. </small>\n                  </div>\n                  <div class=\"xl:col-span-1 lg:col-span-1 col-span-2\">\n                    <Input label=\"Check Starting Number\" block type=\"number\" v-model=\"data.local_check_start_number\" @focus-out=\"onUpdateStartNumber\" :view=\"validation.local_check_start_number.$invalid && 'danger' || 'default'\"/>\n                    <small class=\"text-red-base block\" v-for=\"(error, errorIndex) of validation.local_check_start_number.$errors\" :key=\"errorIndex\">{{ error.$message }}. </small>\n                  </div>\n                  <div class=\"xl:col-span-1 lg:col-span-1 col-span-2\">\n                    <Input :label=\"bankTransferConfig.routing_number.label\" block type=\"number\" v-model=\"data.local_check_routing_number\"  :view=\"validation.local_check_routing_number.$invalid && 'danger' || 'default'\"/>\n                    <small class=\"text-red-base block\" v-for=\"(error, errorIndex) of validation.local_check_routing_number.$errors\" :key=\"errorIndex\">{{ error.$message }}. </small>\n                  </div>\n                  <div class=\"xl:col-span-1 lg:col-span-1 col-span-2\">\n                    <Input :label=\"bankTransferConfig.account_number.label\" block type=\"number\" v-model=\"data.local_check_account_number\"  :view=\"validation.local_check_account_number.$invalid && 'danger' || 'default'\"/>\n                    <small class=\"text-red-base block\" v-for=\"(error, errorIndex) of validation.local_check_account_number.$errors\" :key=\"errorIndex\">{{ error.$message }}. </small>\n                  </div>\n                  <div class=\"xl:col-span-1 lg:col-span-1 col-span-2\">\n                    <Input label=\"Void Days\" block type=\"number\" v-model=\"data.local_check_void\" icon icon-block right :view=\"validation.local_check_void.$invalid && 'danger' || 'default'\">\n                      <template #icon>\n                        <span class=\"text-sm\">Days</span>\n                      </template>\n                    </Input>\n                    <small class=\"text-red-base block\" v-for=\"(error, errorIndex) of validation.local_check_void.$errors\" :key=\"errorIndex\">{{ error.$message }}. </small>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"flex my-6\">\n          <div class=\"flex-grow-0 mr-4\">\n            <div class=\"inline-flex items-center justify-center w-1 h-1 p-5 box-border bg-teal-04 rounded-full text-white font-semibold\">\n              <span>2</span>\n            </div>\n          </div>\n          <div class=\"flex-grow\">\n            <h6 class=\"text-lg text-teal-04 mt-2 mb-6\">Company Information</h6>\n            <div class=\"grid grid-cols-12\">\n              <div class=\"xl-col-span-8 lg-col-span-8 col-span-12\">\n                <Checkbox type=\"toggle\" class=\"mb-6\" v-model=\"data.is_local_check_use_company_data\" value=\"1\" value-off=\"0\">Use Company Profile Data</Checkbox>\n                <div class=\"grid grid-cols-5 gap-5\">\n                  <div class=\"xl:col-span-2 lg:col-span-2 col-span-12\">\n                    <p class=\"font-semibold mb-2\">Company Logo</p>\n                    <InputFile @input=\"setCheckLogo\" :file=\"data.local_check_logo\" />\n                    <small class=\"text-red-base block\" v-for=\"(error, errorIndex) of validation.local_check_logo.$errors\" :key=\"errorIndex\">{{ error.$message }}. </small>\n                  </div>\n                  <div class=\"xl:col-span-2 lg:col-span-2 col-span-12\">\n                    <CompanyForm ref=\"refCompanyForm\" :data=\"bindData.company\" :disabled=\"data.is_local_check_use_company_data == '1'\" @change=\"onCompanyFormUpdate\" />\n                  </div>\n                </div> \n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"flex my-6\">\n          <div class=\"flex-grow-0 mr-4\">\n            <div class=\"inline-flex items-center justify-center w-1 h-1 p-5 box-border bg-teal-04 rounded-full text-white font-semibold\">\n              <span>3</span>\n            </div>\n          </div>\n          <div class=\"flex-grow\">\n            <h6 class=\"text-lg text-teal-04 mt-2 mb-6\">Bank Information</h6>\n            <div class=\"grid grid-cols-12\">\n              <div class=\"xl:col-span-6 lg:col-span-6 col-span-12\">\n                <BankForm ref=\"refBankForm\" :data=\"bindData.bank\" @change=\"onBankFormUpdate\" />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"flex my-6\">\n          <div class=\"flex-grow-0 mr-4\">\n            <div class=\"inline-flex items-center justify-center w-1 h-1 p-5 box-border bg-teal-04 rounded-full text-white font-semibold\">\n              <span>4</span>\n            </div>\n          </div>\n          <div class=\"flex-grow\">\n            <h6 class=\"text-lg text-teal-04 mt-2 mb-6\">Preview</h6>\n            <slot name=\"preview\"></slot>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { computed, defineComponent, ref, reactive, watch } from 'vue'\nimport { useUser } from 'composable/user'\nimport Card from 'bbUi/components/card/card.vue'\nimport Checkbox from 'bbUi/components/checkbox/checkbox.vue'\nimport Input from 'bbUi/components/input/input.vue'\nimport Alert from 'bbUi/components/alert/alert.vue'\nimport Button from 'bbUi/components/button/button.vue'\nimport CompanyForm from 'components/CheckSettings/CompanyForm.vue'\nimport BankForm from 'components/CheckSettings/BankForm.vue'\nimport InputFile from 'components/InputFile.vue'\nimport { useVuelidate } from '@vuelidate/core'\nimport { required, numeric, minValue, maxValue, maxLength, helpers } from '@vuelidate/validators'\n\nexport default defineComponent({\n  components: {\n    Card,\n    Checkbox,\n    Input,\n    Alert,\n    Button,\n    CompanyForm,\n    BankForm,\n    InputFile\n  },\n  props: {\n    data: {\n      type: Object,\n      default: () => ({\n        local_check_account_number: null,\n        local_check_address_text: null,\n        local_check_bank_address_text: null,\n        local_check_bank_city: null,\n        local_check_bank_country: null,\n        local_check_bank_name: null,\n        local_check_bank_phone: null,\n        local_check_bank_state: null,\n        local_check_bank_street: null,\n        local_check_bank_zip_code: null,\n        local_check_city: null,\n        local_check_company_email: null,\n        local_check_company_name: null,\n        local_check_country: null,\n        local_check_logo: null,\n        local_check_phone: null,\n        local_check_routing_number: null,\n        local_check_start_length: null,\n        local_check_start_number: null,\n        local_check_state: null,\n        local_check_street: null,\n        local_check_street2: null,\n        local_check_void: null,\n        local_check_zip_code: null,\n        is_local_check_use_company_data: null,\n        is_ready: null\n      })\n    },\n    companyData: {\n      type: Object,\n      default: () => ({\n        name: null,\n        company_email: null,\n        address: null,\n        city: null,\n        state: null,\n        zip: null,\n        phone: null,\n        country: null,\n        address: null\n      })\n    }\n  },\n  setup(props, { emit }) {\n    const { bankTransferConfig } = useUser()\n    const data = reactive(props.data)\n    const companyData = reactive(props.companyData)\n\n    const currentData = reactive({...data})\n    const refCompanyForm = ref(null)\n    const refBankForm = ref(null)\n    const rules = {\n      local_check_logo: {\n        required: helpers.withMessage('Company logo is required',required),\n      },\n      local_check_start_length: {\n        required: helpers.withMessage('Check number length is required',required),\n        numeric,\n        minValue: minValue(1),\n        maxValue: maxValue(21)\n      },\n      local_check_start_number: {\n        required: helpers.withMessage('Check starting number is required',required),\n        numeric,\n        minValue: minValue(1),\n        maxLength: maxLength(21)\n      },\n      local_check_routing_number: {\n        required: helpers.withMessage(`${bankTransferConfig.value.routing_number.label} is required`,required),\n        numeric\n      },\n      local_check_account_number: {\n        required: helpers.withMessage(`${bankTransferConfig.value.account_number.label} is required`, required),\n        numeric\n      },\n      local_check_void: {\n        required: helpers.withMessage('Void days is required',required),\n        numeric\n      }\n    }\n    const validation = useVuelidate(rules, data, {\n      $lazy: true\n    })\n    const validate = () => {\n      validation.value.$validate()\n      return !validation.value.$invalid\n    }\n    const validateAll = () => {\n      const [ isFormValid, isCompanyValid, isBankValid ] = [validate(), refCompanyForm.value.validate(), refBankForm.value.validate()]\n      return isFormValid && isCompanyValid && isBankValid\n    }\n    const useCompanyData = async () => {\n      Object.assign(data, {\n        local_check_company_name: companyData.name,\n        local_check_company_email: companyData.company_email,\n        local_check_street: companyData.address,\n        local_check_city: companyData.city,\n        local_check_state: companyData.state,\n        local_check_zip_code: companyData.zip,\n        local_check_phone: companyData.phone,\n        local_check_country: companyData.country,\n        local_check_address_text: companyData.address_text\n      })\n    }\n    const resetCompanyInfo = async () => {\n      data.local_check_company_name = currentData.local_check_company_name\n      data.local_check_company_email = currentData.local_check_company_email\n      data.local_check_street = currentData.local_check_street\n      data.local_check_city = currentData.local_check_city\n      data.local_check_state = currentData.local_check_state\n      data.local_check_zip_code = currentData.local_check_zip_code\n      data.local_check_phone = currentData.local_check_phone\n      data.local_check_country = currentData.local_check_country\n      data.local_check_address_text = currentData.local_check_address_text\n    }\n    watch(() => ({\n      isCompanyData: data.is_local_check_use_company_data\n    }), ({ isCompanyData }) => {\n      if(isCompanyData == '1') useCompanyData()\n      else resetCompanyInfo()\n    })\n    const setCheckLogo = (file) => {\n      data.local_check_logo = file\n    }\n    const previewNumber = computed(() => {\n      const checkStartNumber = Number(data.local_check_start_number)\n      const checkStartLength = Number(data.local_check_start_length)\n      const checkCurrentDigit = checkStartNumber.toString().length\n      const diff = checkStartLength - checkCurrentDigit\n      const trimmedNumber =  Number(`${checkStartNumber.toString().substr(0,checkStartLength)}${diff > 0 && '0'.repeat(diff) || ''}`)\n      return checkStartNumber > 0 && checkStartLength > 0 ? trimmedNumber : 0\n    })\n    const onUpdateStartLength = $event => {\n      let startLength = Number($event.target.value) || 0\n      if( startLength > 21 ) startLength = 21\n\n      let startNumber = Number(data.local_check_start_number)\n      let startNumberDigits = String(startNumber).length\n      const diff = startLength - startNumberDigits\n      if( startLength > startNumberDigits ){\n        data.local_check_start_number = Number(String(startNumber) + '0'.repeat(diff))\n      }else{\n        data.local_check_start_number = startLength !== 0 && Number(String(startNumber).substr(0, startLength)) || startNumber\n      }\n    }\n     const bindData = computed(() => {\n       return {\n        bank: {\n          bank_name: data.local_check_bank_name,\n          bank_street: data.local_check_bank_street,\n          bank_city: data.local_check_bank_city,\n          bank_state: data.local_check_bank_state,\n          bank_zip_code: data.local_check_bank_zip_code,\n          bank_phone: data.local_check_bank_phone,\n          address_text: data.local_check_bank_address_text || ''\n        },\n        company: {\n          company_name: data.local_check_company_name,\n          street: data.local_check_street,\n          city: data.local_check_city,\n          state: data.local_check_state,\n          zip_code: data.local_check_zip_code,\n          phone: data.local_check_phone,\n          country: data.local_check_country,\n          address_text: data.local_check_address_text || ''\n        }\n      } \n     })\n    const onUpdateStartNumber = $event => {\n      const startNumber = Number($event.target.value) || 0\n      let startNumberDigits = String(startNumber).length\n      if( startNumberDigits > 21 ) startNumberDigits = 21\n      data.local_check_start_length = startNumberDigits\n    }\n    const onBankFormUpdate = (newData) => {\n      Object.assign(data, {\n        local_check_bank_name: newData.bank_name,\n        local_check_bank_street: newData.bank_street,\n        local_check_bank_city: newData.bank_city,\n        local_check_bank_state: newData.bank_state,\n        local_check_bank_zip_code: newData.bank_zip_code,\n        local_check_bank_phone: newData.bank_phone,\n        local_check_bank_address_text: newData.address_text\n      })\n    }\n    const onCompanyFormUpdate = (newData) => {\n      Object.assign(data, {\n        local_check_company_name: newData.company_name,\n        local_check_street: newData.street,\n        local_check_city: newData.city,\n        local_check_state: newData.state,\n        local_check_zip_code: newData.zip_code,\n        local_check_phone: newData.phone,\n        local_check_country: newData.country,\n        local_check_address_text: newData.address_text\n      })\n    }\n    \n    return {\n      data,\n      bindData,\n      validation,\n      previewNumber,\n      bankTransferConfig,\n      refCompanyForm,\n      refBankForm,\n      useCompanyData,\n      setCheckLogo,\n      onUpdateStartLength,\n      onUpdateStartNumber,\n      onBankFormUpdate,\n      onCompanyFormUpdate,\n      validate,\n      validateAll\n    }\n  }\n})\n</script>\n\n<style scoped>\n#the-canvas {\n  border: 1px solid black;\n  direction: ltr;\n}\n</style>","<template>\n  <div>\n    <div class=\"grid grid-cols-12\">\n      <div class=\"col-span-12 my-6\">\n        <div class=\"flex\">\n          <div class=\"flex-grow-0 mr-4\">\n            <div class=\"inline-flex items-center justify-center w-1 h-1 p-5 box-border bg-teal-04 rounded-full text-white font-semibold\">\n              <span>1</span>\n            </div>\n          </div>\n          <div class=\"flex-grow\">\n            <h6 class=\"text-lg text-teal-04 mt-2 mb-6\">Check Number</h6>\n            <div class=\"grid grid-cols-12\">\n              <div class=\"lg:col-span-6 md:col-span-6 col-span-12\">\n                <div class=\"py-3 px-6 bg-grey-lighten rounded-lg text-3xl font-semibold text-teal-04 border border-grey-01\">\n                {{data.check_start_number}}\n                </div>\n                <Alert color=\"orange\" view=\"smooth\" class=\"my-4 text-sm\">\n                  <div class=\"flex items-center\">\n                    <div class=\"mr-6\">\n                      <span class=\"material-icons text-lg\">info</span>\n                    </div>\n                    <div class=\"flex-grow-1\">\n                      The display number shown above is an example that will be used in your paper check. All numbers will be sequential\n                    </div>\n                  </div>\n                </Alert>\n                <div class=\"grid grid-cols-2 gap-4\">\n                  <div class=\"2xl:col-span-1 xl:col-span-1 lg:col-span-1 col-span-2\">\n                    <Input label=\"Check Number Length\" block type=\"number\" v-model=\"data.check_start_length\" icon icon-block right @focus-out=\"onUpdateStartLength\" :view=\"validation.check_start_length.$invalid && 'danger' || 'default'\">\n                      <template #icon>\n                        <span class=\"text-sm\">Digits</span>\n                      </template>\n                    </Input>\n                    <small class=\"text-red-base block\" v-for=\"(error, errorIndex) of validation.check_start_length.$errors\" :key=\"errorIndex\">{{ error.$message }}. </small>\n                  </div>\n                  <div class=\"xl:col-span-1 lg:col-span-1 col-span-2\">\n                    <Input label=\"Check Starting Number\" block type=\"number\" v-model=\"data.check_start_number\" @focus-out=\"onUpdateStartNumber\" :view=\"validation.check_start_number.$invalid && 'danger' || 'default'\"/>\n                    <small class=\"text-red-base block\" v-for=\"(error, errorIndex) of validation.check_start_number.$errors\" :key=\"errorIndex\">{{ error.$message }}. </small>\n                  </div>\n                  <div class=\"xl:col-span-1 lg:col-span-1 col-span-2\">\n                    <Input :label=\"bankTransferConfig.routing_number.label\" block type=\"number\" v-model=\"data.check_routing_number\"  :view=\"validation.check_routing_number.$invalid && 'danger' || 'default'\"/>\n                    <small class=\"text-red-base block\" v-for=\"(error, errorIndex) of validation.check_routing_number.$errors\" :key=\"errorIndex\">{{ error.$message }}. </small>\n                  </div>\n                  <div class=\"xl:col-span-1 lg:col-span-1 col-span-2\">\n                    <Input :label=\"bankTransferConfig.account_number.label\" block type=\"number\" v-model=\"data.check_account_number\"  :view=\"validation.check_account_number.$invalid && 'danger' || 'default'\"/>\n                    <small class=\"text-red-base block\" v-for=\"(error, errorIndex) of validation.check_account_number.$errors\" :key=\"errorIndex\">{{ error.$message }}. </small>\n                  </div>\n                  <div class=\"xl:col-span-1 lg:col-span-1 col-span-2\">\n                    <Input label=\"Void Days\" block type=\"number\" v-model=\"data.check_void\" icon icon-block right :view=\"validation.check_void.$invalid && 'danger' || 'default'\">\n                      <template #icon>\n                        <span class=\"text-sm\">Days</span>\n                      </template>\n                    </Input>\n                    <small class=\"text-red-base block\" v-for=\"(error, errorIndex) of validation.check_void.$errors\" :key=\"errorIndex\">{{ error.$message }}. </small>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"flex my-6\">\n          <div class=\"flex-grow-0 mr-4\">\n            <div class=\"inline-flex items-center justify-center w-1 h-1 p-5 box-border bg-teal-04 rounded-full text-white font-semibold\">\n              <span>2</span>\n            </div>\n          </div>\n          <div class=\"flex-grow\">\n            <h6 class=\"text-lg text-teal-04 mt-2 mb-6\">Company Information</h6>\n            <div class=\"grid grid-cols-12\">\n              <div class=\"xl-col-span-8 lg-col-span-8 col-span-12\">\n                <Checkbox type=\"toggle\" class=\"mb-6\" v-model=\"data.is_check_use_company_data\" value=\"1\" value-off=\"0\">Use Company Profile Data</Checkbox>\n                <div class=\"grid grid-cols-5 gap-5\">\n                  <div class=\"xl:col-span-2 lg:col-span-2 col-span-12\">\n                    <p class=\"font-semibold mb-2\">Company Logo</p>\n                    <InputFile @input=\"setCheckLogo\" :file=\"data.check_logo\" />\n                    <small class=\"text-red-base block\" v-for=\"(error, errorIndex) of validation.check_logo.$errors\" :key=\"errorIndex\">{{ error.$message }}. </small>\n                  </div>\n                  <div class=\"xl:col-span-2 lg:col-span-2 col-span-12\">\n                    <CompanyForm ref=\"refCompanyForm\" :data=\"bindData.company\" :disabled=\"data.is_check_use_company_data == '1'\" @change=\"onCompanyFormUpdate\" />\n                  </div>\n                </div> \n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"flex my-6\">\n          <div class=\"flex-grow-0 mr-4\">\n            <div class=\"inline-flex items-center justify-center w-1 h-1 p-5 box-border bg-teal-04 rounded-full text-white font-semibold\">\n              <span>3</span>\n            </div>\n          </div>\n          <div class=\"flex-grow\">\n            <h6 class=\"text-lg text-teal-04 mt-2 mb-6\">Bank Information</h6>\n            <div class=\"grid grid-cols-12\">\n              <div class=\"xl:col-span-6 lg:col-span-6 col-span-12\">\n                <BankForm ref=\"refBankForm\" :data=\"bindData.bank\" @change=\"onBankFormUpdate\" />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"flex my-6\">\n          <div class=\"flex-grow-0 mr-4\">\n            <div class=\"inline-flex items-center justify-center w-1 h-1 p-5 box-border bg-teal-04 rounded-full text-white font-semibold\">\n              <span>4</span>\n            </div>\n          </div>\n          <div class=\"flex-grow\">\n            <h6 class=\"text-lg text-teal-04 mt-2 mb-6\">Preview</h6>\n            <slot name=\"preview\"></slot>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { computed, defineComponent, ref, reactive, watch } from 'vue'\nimport { useUser } from 'composable/user'\nimport Card from 'bbUi/components/card/card.vue'\nimport Checkbox from 'bbUi/components/checkbox/checkbox.vue'\nimport Input from 'bbUi/components/input/input.vue'\nimport Alert from 'bbUi/components/alert/alert.vue'\nimport Button from 'bbUi/components/button/button.vue'\nimport CompanyForm from 'components/CheckSettings/CompanyForm.vue'\nimport BankForm from 'components/CheckSettings/BankForm.vue'\nimport InputFile from 'components/InputFile.vue'\nimport { useVuelidate } from '@vuelidate/core'\nimport { required, numeric, minValue, maxValue, maxLength, helpers } from '@vuelidate/validators'\n\nexport default defineComponent({\n  components: {\n    Card,\n    Checkbox,\n    Input,\n    Alert,\n    Button,\n    CompanyForm,\n    BankForm,\n    InputFile\n  },\n  props: {\n    data: {\n      type: Object,\n      default: () => ({\n        check_account_number: null,\n        check_address_text: null,\n        check_bank_address_text: null,\n        check_bank_city: null,\n        check_bank_country: null,\n        check_bank_name: null,\n        check_bank_phone: null,\n        check_bank_state: null,\n        check_bank_street: null,\n        check_bank_zip_code: null,\n        check_city: null,\n        check_company_email: null,\n        check_company_name: null,\n        check_country: null,\n        check_logo: null,\n        check_phone: null,\n        check_routing_number: null,\n        check_start_length: null,\n        check_start_number: null,\n        check_state: null,\n        check_street: null,\n        check_street2: null,\n        check_void: null,\n        check_zip_code: null,\n        is_check_use_company_data: null,\n        is_ready: null\n      })\n    },\n    companyData: {\n      type: Object,\n      default: () => ({\n        name: null,\n        company_email: null,\n        address: null,\n        city: null,\n        state: null,\n        zip: null,\n        phone: null,\n        country: null,\n        address: null\n      })\n    }\n  },\n  setup(props, { emit }) {\n    const { bankTransferConfig } = useUser()\n    const data = reactive(props.data)\n    const companyData = reactive(props.companyData)\n\n    const currentData = reactive({...data})\n    const refCompanyForm = ref(null)\n    const refBankForm = ref(null)\n    const rules = {\n      check_logo: {\n        required: helpers.withMessage('Company logo is required',required),\n      },\n      check_start_length: {\n        required: helpers.withMessage('Check number length is required',required),\n        numeric,\n        minValue: minValue(1),\n        maxValue: maxValue(21)\n      },\n      check_start_number: {\n        required: helpers.withMessage('Check starting number is required',required),\n        numeric,\n        minValue: minValue(1),\n        maxLength: maxLength(21)\n      },\n      check_routing_number: {\n        required: helpers.withMessage(`${bankTransferConfig.value.routing_number.label} is required`,required),\n        numeric\n      },\n      check_account_number: {\n        required: helpers.withMessage(`${bankTransferConfig.value.account_number.label} is required`, required),\n        numeric\n      },\n      check_void: {\n        required: helpers.withMessage('Void days is required',required),\n        numeric\n      }\n    }\n    const validation = useVuelidate(rules, data, {\n      $lazy: true\n    })\n    const validate = () => {\n      validation.value.$validate()\n      return !validation.value.$invalid\n    }\n    const validateAll = () => {\n      const [ isFormValid, isCompanyValid, isBankValid ] = [validate(), refCompanyForm.value.validate(), refBankForm.value.validate()]\n      return isFormValid && isCompanyValid && isBankValid\n    }\n    const useCompanyData = async () => {\n      data.check_company_name = companyData.name\n      data.check_company_email = companyData.company_email\n      data.check_street = companyData.address\n      data.check_city = companyData.city\n      data.check_state = companyData.state\n      data.check_zip_code = companyData.zip\n      data.check_phone = companyData.phone\n      data.check_country = companyData.country\n      data.check_address_text = companyData.address_text\n    }\n    const resetCompanyInfo = async () => {\n      data.check_company_name = currentData.check_company_name\n      data.check_company_email = currentData.check_company_email\n      data.check_street = currentData.check_street\n      data.check_city = currentData.check_city\n      data.check_state = currentData.check_state\n      data.check_zip_code = currentData.check_zip_code\n      data.check_phone = currentData.check_phone\n      data.check_country = currentData.check_country\n      data.check_address_text = currentData.check_address_text\n    }\n    watch(() => ({\n      isCompanyData: data.is_check_use_company_data\n    }), ({ isCompanyData }) => {\n      if(isCompanyData == '1') useCompanyData()\n      else resetCompanyInfo()\n    })\n    const setCheckLogo = (file) => {\n      data.check_logo = file\n    }\n    const previewNumber = computed(() => {\n      const checkStartNumber = Number(data.check_start_number)\n      const checkStartLength = Number(data.check_start_length)\n      const checkCurrentDigit = checkStartNumber.toString().length\n      const diff = checkStartLength - checkCurrentDigit\n      const trimmedNumber =  Number(`${checkStartNumber.toString().substr(0,checkStartLength)}${diff > 0 && '0'.repeat(diff) || ''}`)\n      return checkStartNumber > 0 && checkStartLength > 0 ? trimmedNumber : 0\n    })\n    const onUpdateStartLength = $event => {\n      let startLength = Number($event.target.value) || 0\n      if( startLength > 21 ) startLength = 21\n\n      let startNumber = Number(data.check_start_number)\n      let startNumberDigits = String(startNumber).length\n      const diff = startLength - startNumberDigits\n      if( startLength > startNumberDigits ){\n        data.check_start_number = Number(String(startNumber) + '0'.repeat(diff))\n      }else{\n        data.check_start_number = startLength !== 0 && Number(String(startNumber).substr(0, startLength)) || startNumber\n      }\n    }\n    const onUpdateStartNumber = $event => {\n      const startNumber = Number($event.target.value) || 0\n      let startNumberDigits = String(startNumber).length\n      if( startNumberDigits > 21 ) startNumberDigits = 21\n      data.check_start_length = startNumberDigits\n    }\n    const bindData = computed(() => ({\n      bank: {\n        bank_name: data.check_bank_name,\n        bank_street: data.check_bank_street,\n        bank_city: data.check_bank_city,\n        bank_state: data.check_bank_state,\n        bank_zip_code: data.check_bank_zip_code,\n        bank_phone: data.check_bank_phone,\n        address_text: data.check_bank_address_text || ''\n      },\n      company: {\n        company_name: data.check_company_name,\n        street: data.check_street,\n        city: data.check_city,\n        state: data.check_state,\n        zip_code: data.check_zip_code,\n        phone: data.check_phone,\n        country: data.check_country,\n        address_text: data.check_address_text || ''\n      }\n    }))\n    const onBankFormUpdate = (newData) => {\n      Object.assign(data, {\n        check_bank_name: newData.bank_name,\n        check_bank_street: newData.bank_street,\n        check_bank_city: newData.bank_city,\n        check_bank_state: newData.bank_state,\n        check_bank_zip_code: newData.bank_zip_code,\n        check_bank_phone: newData.bank_phone,\n        check_bank_address_text: newData.address_text\n      })\n    }\n    const onCompanyFormUpdate = (newData) => {\n      Object.assign(data, {\n        check_company_name: newData.company_name,\n        check_street: newData.street,\n        check_city: newData.city,\n        check_state: newData.state,\n        check_zip_code: newData.zip_code,\n        check_phone: newData.phone,\n        check_country: newData.country,\n        check_address_text: newData.address_text\n      })\n    }\n    \n    return {\n      data,\n      bindData,\n      validation,\n      previewNumber,\n      bankTransferConfig,\n      refCompanyForm,\n      refBankForm,\n      useCompanyData,\n      setCheckLogo,\n      onUpdateStartLength,\n      onUpdateStartNumber,\n      onBankFormUpdate,\n      onCompanyFormUpdate,\n      validate,\n      validateAll\n    }\n  }\n})\n</script>\n\n<style scoped>\n#the-canvas {\n  border: 1px solid black;\n  direction: ltr;\n}\n</style>","<template>\n  <div>\n    <div class=\"flex justify-between items-center mb-8\">\n      <!-- <div class=\"lg:flex lg:divide-x lg:divide-grey-01\">\n        <div class=\"flex items-center lg:pr-4 lg:mb-0 mb-4\">\n          <router-link :to=\"{ name: 'setting' }\" class=\"text-dark mr-4\"><span class=\"material-icons\">chevron_left</span></router-link>\n          <h5>Check Settings</h5>\n        </div>\n        <div class=\"lg:pl-4 flex-items-center\">\n          <Breadcrumb :items=\"breadcrumb\">\n            <span class=\"material-icons\">chevron_right</span>\n          </Breadcrumb>\n        </div>\n      </div> -->\n      <Breadcrumb pageTitle=\"Check Settings\" :backTo=\"{ name: 'setting' }\" :items=\"breadcrumb\" />\n    </div>\n    <Card>\n      <div class=\"grid grid-cols-12\">\n        <div class=\"col-span-12\">\n          <div class=\"grid grid-cols-12\">\n            <div class=\"col-span-12\">\n              <Checkbox type=\"toggle\" color=\"teal\" value=\"1\" value-off=\"0\" v-model=\"data.is_enable_check\">\n                Use system generated checks\n              </Checkbox>\n              \n              <div class=\"ml-16 text-sm w-7/12\">\n                Using system generated checks will allow you to automatically generate a paper check for your customer. You can print these checks with any printer when using standard check paper found\n                <a href=\"https://www.amazon.com/Check-Matic-Computer-Paper-Compatible/dp/B00L3NC8A8/ref=sr_1_18?dchild=1&keywords=check+printer&qid=1628054058&sr=8-18\" rel=\"noreferrer noopener\" target=\"_blank\">here</a>\n              </div>\n\n              <Checkbox type=\"toggle\" value=\"1\" value-off=\"0\" color=\"teal\" class=\"my-6\" v-model=\"data.use_both_check\" v-if=\"data.is_enable_check == true\">\n                Use seperate check accounts for In-Store and Mail-In\n              </Checkbox>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-span-12 my-6\" v-if=\"data.is_enable_check == true\">\n          <Tab v-model=\"tabSelected\" :items=\"tabItems\" component />\n          <component ref=\"refComponent\" :is=\"tabSelected\" v-model:data=\"data\" :company-data=\"companyData\">\n            <template #preview>\n              <div class=\"grid grid-cols-12\" v-loading=\"loading.preview\">\n                <div class=\"col-span-12\">\n                  <template v-if=\"tabSelected === 'LocalCheckSetting'\">\n                    <canvas v-if=\"isReadyLocalCheck\" id=\"the-canvas\" class=\"w-full\"></canvas>\n                      <div v-else class=\"flex items-center justify-start\">\n                        <p class=\"font-semibold\">Please fill in any information above to see the preview</p>\n                      </div>\n                  </template>\n                   <template v-else>\n                    <canvas v-if=\"isReadyOnlineCheck\" id=\"the-canvas\" class=\"w-full\"></canvas>\n                      <div v-else class=\"flex items-center justify-start\">\n                        <p class=\"font-semibold\">Please fill in any information above to see the preview</p>\n                      </div>\n                  </template>\n                </div>\n              </div>\n            </template>\n          </component>\n        </div>\n      </div>\n      <template #footer>\n        <div class=\"flex justify-end\">\n          <Button color=\"teal\" view=\"outlined\" class=\"mx-2\" @click=\"printTest\" :loading=\"loading.print\" v-if=\"data.is_enable_check\">Print Test</Button>\n          <Button color=\"teal\" view=\"smooth\" class=\"mx-2\" :loading=\"loading.update\" @click=\"updateCheckSetting\">Save</Button>\n        </div>\n      </template>\n    </Card>\n  </div>\n</template>\n\n<script>\nimport { computed, defineComponent, ref, watch } from 'vue'\nimport Card from 'bbUi/components/card/card.vue'\nimport Checkbox from 'bbUi/components/checkbox/checkbox.vue'\nimport Input from 'bbUi/components/input/input.vue'\nimport Alert from 'bbUi/components/alert/alert.vue'\nimport Button from 'bbUi/components/button/button.vue'\nimport Tab from 'bbUi/components/tab/tab.vue'\nimport CompanyForm from 'components/CheckSettings/CompanyForm.vue'\nimport BankForm from 'components/CheckSettings/BankForm.vue'\nimport InputFile from 'components/InputFile.vue'\nimport { useCheckSetting, useCompanyProfile } from 'composable/report'\nimport Breadcrumb from 'components/Breadcrumb.vue'\nimport { ElMessage } from 'element-plus'\nimport debounce from 'utils/debounce'\nimport LocalCheckSetting from './local.vue'\nimport OnlineCheckSetting from './online.vue'\n\nexport default defineComponent({\n  components: {\n    Card,\n    Checkbox,\n    Input,\n    Alert,\n    Button,\n    Tab,\n    CompanyForm,\n    BankForm,\n    InputFile,\n    Breadcrumb,\n    LocalCheckSetting,\n    OnlineCheckSetting\n  },\n  async setup(props, { emit }) {\n    const { data, actionShow, actionUpdate, actionPrintTest, actionCheckPreview, loading } = useCheckSetting()\n    const { data: companyData, actionShow: actionShowCompany } = useCompanyProfile()\n\n    const refComponent = ref(null)\n    const breadcrumb = [{\n      text: 'Settings',\n      to: {\n        name: 'setting'\n      }\n    }, {\n      text: 'Check Setting'\n    }]\n    const tabItems = computed(() => {\n      if(data.use_both_check == 0) return [{\n        name: 'In-Store & Mail-In Check',\n        component: 'OnlineCheckSetting'\n      }]\n      return [{\n        name: 'In-Store',\n        component: 'LocalCheckSetting'\n      },{\n        name: 'Mail-In',\n        component: 'OnlineCheckSetting'\n      }]\n    })\n    const tabSelected = ref(null)\n\n    await Promise.all([\n      actionShow(),\n      actionShowCompany()\n    ])\n\n    const isReadyLocalCheck = computed(() => data.is_ready_in_store == 1)\n    const isReadyOnlineCheck = computed(() => data.is_ready_mail_in == 1)\n\n    const updateCheckSetting = async () => {\n      if( data.is_enable_check == true ){\n        const isValid = refComponent.value.validateAll && refComponent.value.validateAll() || false\n        if( !isValid ) return false\n      }\n      let payload = {...data}\n      await actionUpdate(payload, async () => {\n        ElMessage({\n          message: 'Check settings has been updated!',\n          type: 'success'\n        })\n        await actionShow()\n        if( tabSelected.value === 'LocalCheckSetting' && isReadyLocalCheck.value ) await actionCheckPreview('local')\n        else if ( tabSelected.value === 'OnlineCheckSetting' && isReadyOnlineCheck.value ) await actionCheckPreview('online')\n      })\n    }\n    const printTest = async () => {\n      if(tabSelected.value === 'OnlineCheckSetting') await actionPrintTest('online')\n      else await actionPrintTest('local')\n    }\n    watch(() => data.use_both_check, (useBothCheck) => {\n      if(useBothCheck == 0) tabSelected.value = 'OnlineCheckSetting'\n      else tabSelected.value = 'LocalCheckSetting'\n    }, {\n      immediate: true\n    })\n\n    watch(() => tabSelected.value, debounce(async (selectedTab) => {\n      if( selectedTab === 'LocalCheckSetting' && isReadyLocalCheck.value ) await actionCheckPreview('local')\n      else if ( selectedTab === 'OnlineCheckSetting' && isReadyOnlineCheck.value ) await actionCheckPreview('online')\n    }, 800), {\n      immediate: true\n    })\n    return {\n      data,\n      companyData,\n      loading,\n      refComponent,\n      breadcrumb,\n      tabItems,\n      tabSelected,\n      isReadyLocalCheck,\n      isReadyOnlineCheck,\n      printTest,\n      updateCheckSetting\n    }\n  }\n})\n</script>\n\n<style scoped>\n#the-canvas {\n  border: 1px solid black;\n  direction: ltr;\n}\n</style>","import { defineComponent } from 'vue'\nimport { useSuspense } from 'composable/components'\nimport index from './index.vue'\n\nexport default defineComponent({\n  setup() {\n    const { genSuspense } = useSuspense()\n\n    return () => genSuspense(index)\n  }\n})"],"names":["_sfc_main","defineComponent","components","Input","Checkbox","InputPhone","props","data","type","Object","default","company_name","street","city","state","zip_code","phone","country","address_text","disabled","Boolean","emits","[object Object]","emit","reactive","refCompanyPhone","ref","assign","valid","rules","sameAs","validAddress","required","helpers","withMessage","invalidNumber","_a","value","isValid","validation","useVuelidate","$lazy","watch","__spreadValues","newData","address","street_number","locality","administrative_area_level_1","formatted_address","postal_code","validate","$validate","$invalid","_hoisted_1","class","_hoisted_2","_hoisted_3","_openBlock","_createElementBlock","_createVNode","_component_Input","modelValue","_ctx","onUpdate:modelValue","_cache","$event","label","_Fragment","_renderList","$errors","error","errorIndex","_withDirectives","_createBlock","onFocusIn","e","target","setAttribute","view","icon","_withCtx","_hoisted_4","_component_InputPhone","block","bank_name","bank_street","bank_city","bank_state","bank_zip_code","bank_phone","refBankPhone","bank_valid","route","icon-block","Card","Alert","Button","CompanyForm","BankForm","InputFile","local_check_account_number","local_check_address_text","local_check_bank_address_text","local_check_bank_city","local_check_bank_country","local_check_bank_name","local_check_bank_phone","local_check_bank_state","local_check_bank_street","local_check_bank_zip_code","local_check_city","local_check_company_email","local_check_company_name","local_check_country","local_check_logo","local_check_phone","local_check_routing_number","local_check_start_length","local_check_start_number","local_check_state","local_check_street","local_check_street2","local_check_void","local_check_zip_code","is_local_check_use_company_data","is_ready","companyData","name","company_email","zip","bankTransferConfig","useUser","currentData","refCompanyForm","refBankForm","numeric","minValue","maxValue","maxLength","routing_number","account_number","useCompanyData","async","isCompanyData","resetCompanyInfo","previewNumber","computed","checkStartNumber","Number","checkStartLength","diff","toString","length","trimmedNumber","substr","repeat","bindData","bank","company","setCheckLogo","file","onUpdateStartLength","startLength","startNumber","startNumberDigits","String","onUpdateStartNumber","onBankFormUpdate","onCompanyFormUpdate","validateAll","isFormValid","isCompanyValid","isBankValid","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_createElementVNode","_toDisplayString","_component_Alert","color","right","onFocusOut","_component_Checkbox","_component_InputFile","onInput","_component_CompanyForm","_component_BankForm","_hoisted_26","check_account_number","check_address_text","check_bank_address_text","check_bank_city","check_bank_country","check_bank_name","check_bank_phone","check_bank_state","check_bank_street","check_bank_zip_code","check_city","check_company_email","check_company_name","check_country","check_logo","check_phone","check_routing_number","check_start_length","check_start_number","check_state","check_street","check_street2","check_void","check_zip_code","is_check_use_company_data","Tab","Breadcrumb","LocalCheckSetting","OnlineCheckSetting","actionShow","actionUpdate","actionPrintTest","actionCheckPreview","loading","useCheckSetting","actionShowCompany","useCompanyProfile","refComponent","tabItems","use_both_check","component","tabSelected","Promise","all","isReadyLocalCheck","is_ready_in_store","isReadyOnlineCheck","is_ready_mail_in","useBothCheck","immediate","debounce","selectedTab","breadcrumb","text","to","printTest","updateCheckSetting","is_enable_check","payload","_u","message","key","id","_component_Breadcrumb","pageTitle","backTo","footer","onClick","_createCommentVNode","_component_Button","update","value-off","_createTextVNode","href","rel","items","_resolveDynamicComponent","onUpdate:data","preview","index","genSuspense","useSuspense"],"mappings":"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"}