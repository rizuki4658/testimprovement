{"version":3,"file":"BuybackNotes.1159864d.js","sources":["../../src/components/Features/Buyback/BuybackNotes/BuybackNotesForm.vue","../../src/components/Features/Buyback/BuybackNotes/BuybackNotesAdd.vue","../../src/components/Features/Buyback/BuybackNotes/BuybackNotesDelete.vue","../../src/components/Features/Buyback/BuybackNotes/BuybackNotesEdit.vue","../../src/components/Features/Buyback/BuybackNotes/BuybackNotesInternal.vue","../../src/components/Features/Buyback/BuybackNotes/BuybackNotesCustomer.vue","../../src/components/Features/Buyback/BuybackNotes/BuybackNotes.vue"],"sourcesContent":["<script setup>\nimport { defineExpose } from 'vue'\nimport { useBuybackNotes } from '@/store/pinia/buyback/notes'\nimport { useVuelidate } from '@vuelidate/core'\nimport { required } from '@vuelidate/validators'\n\nimport Tab from 'bbUi/components/tab/tab.vue'\nimport Input from 'bbUi/components/input/input.vue'\nimport Alert from 'bbUi/components/alert/alert.vue'\n\nconst store = useBuybackNotes()\n\nconst rules = {\n  note: { required }\n}\nconst validation = useVuelidate(rules, store.formNotes, {\n  $lazy: true\n})\n\nconst onSubmit = async () => {\n  await validation.value.$validate()\n  return !validation.value.$invalid\n}\nconst onReset = () => {\n  validation.value.$reset()\n}\n\ndefineExpose({\n  validation,\n  onSubmit,\n  onReset\n})\n</script>\n\n<template>\n  <div>\n    <Tab\n      v-model=\"store.formNotes.type\"\n      :items=\"store.formNotes.tabs\"\n      color=\"teal\"\n      view=\"smooth\"\n      component\n      disabledItems>\n      <template #title=\"{ item }\">\n        <Tooltip\n          placement=\"top\"\n          :disabled=\"!item.disabled\">\n          <template #content>\n            <p v-if=\"store.formNotes.mode === 'preview'\">This Tab is disabled because you are in preview mode.</p>\n            <p v-if=\"store.formNotes.mode === 'edit'\">This Tab is disabled because you are in edit mode.</p>\n          </template>\n          <p>{{ item.name }}</p>\n        </Tooltip>\n      </template>\n    </Tab>\n    <div class=\"space-y-4\">\n      <div>\n        <Input\n          v-if=\"store.formNotes.mode === 'preview'\"\n          v-model=\"store.formNotes.note\"\n          type=\"textarea\"\n          label=\"Notes\"\n          rows=\"6\"\n          class=\"w-full\"\n          readonly\n          :view=\"validation.note.$invalid && 'danger' || 'default'\"\n        />\n        <Input\n          v-else\n          v-model=\"store.formNotes.note\"\n          type=\"textarea\"\n          label=\"Notes\"\n          rows=\"6\"\n          class=\"w-full\"\n          :view=\"validation.note.$invalid && 'danger' || 'default'\"\n        />\n        <!-- :disabled=\"disabled\" -->\n        <span\n          v-for=\"(error, errorIndex) of validation.note.$errors\"\n          :key=\"errorIndex\"\n          class=\"text-red-base\">\n          {{ error.$message }}.\n        </span>\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup>\nimport { ref } from 'vue'\nimport { useBuybackNotes } from '@/store/pinia/buyback/notes'\n\nimport BuybackNotesForm from './BuybackNotesForm.vue'\nimport Button from 'bbUi/components/button/button.vue'\nimport Modal from 'bbUi/components/modal/modal.vue'\n\nconst store = useBuybackNotes()\nconst formAdd = ref()\n\nconst onAdd = () => {\n  store.addNotes.modal = true\n  store.addNotes.isLoading = false\n  store.resetForm()\n  store.formNotes.type = 'internal'\n  store.formNotes.mode = 'add'\n}\n\nconst onCancel = () => {\n  store.addNotes.modal = false\n  store.addNotes.isLoading = false\n  store.resetForm()\n}\n\nconst onSave = async () => {\n  const isValid = await formAdd.value.onSubmit()\n  if (isValid) {\n    await store.$addNotes()\n    formAdd.value.onReset()\n    onCancel()\n  }\n}\n</script>\n\n<template>\n  <Button\n    color=\"teal\"\n    dense\n    @click=\"onAdd\">\n    <span class=\"material-icons text-lg\">add</span>\n    Add Notes\n  </Button>\n  <Modal\n    v-model=\"store.addNotes.modal\"\n    :no-close=\"store.addNotes.isLoading\"\n    @close=\"onCancel\">\n    <template #header>\n      <h6 class=\"font-medium\">Create Note</h6>\n    </template>\n    <template #default>\n      <BuybackNotesForm ref=\"formAdd\" />\n    </template>\n    <template #footer>\n      <Button\n        color=\"teal\"\n        :loading=\"store.addNotes.isLoading\"\n        @click=\"onSave\">\n        Save Note\n      </Button>\n    </template>\n  </Modal>\n</template>\n","<script setup>\nimport { ref, watch } from 'vue'\nimport { useBuybackNotes } from '@/store/pinia/buyback/notes'\n\nimport Button from 'bbUi/components/button/button.vue'\nimport Modal from 'bbUi/components/modal/modal.vue'\n\nconst store = useBuybackNotes()\nconst item = ref({})\n\nconst onLoad = () => {\n  store.formNotes.mode = 'delete'\n  store.formNotes.type = item.value?.type\n  store.formNotes.note = item.value?.note\n  store.formNotes.id = item.value?.id\n}\n\nconst onCancel = () => {\n  item.value = {}\n  store.deleteNotes.item = undefined\n  store.deleteNotes.modal = false\n  store.deleteNotes.isLoading = false\n  store.resetForm()\n}\n\nconst onDelete = async () => {\n  await store.$deleteNotes()\n  store.deleteNotes.modal = false\n}\n\nwatch(() => store.deleteNotes.modal, (val) => {\n  if (val) {\n    item.value = store.deleteNotes?.item || {}\n    onLoad()\n  } else onCancel()\n})\n\n</script>\n\n<template>\n  <Modal\n    v-model=\"store.deleteNotes.modal\"\n    title=\"Delete Note\"\n    size=\"xs\"\n    @close=\"onCancel\">\n    <p>Are you sure want to delete this note?</p>\n    <template #footer>\n      <Button\n        color=\"teal\"\n        :loading=\"store.deleteNotes.isLoading\"\n        @click=\"onDelete\">\n        Delete Note\n      </Button>\n    </template>\n  </Modal>\n</template>\n","<script setup>\nimport { ref, watch } from 'vue'\nimport { useBuybackNotes } from '@/store/pinia/buyback/notes'\n\nimport BuybackNotesForm from './BuybackNotesForm.vue'\nimport Button from 'bbUi/components/button/button.vue'\nimport Modal from 'bbUi/components/modal/modal.vue'\n\nconst store = useBuybackNotes()\nconst formEdit = ref()\nconst title = ref('')\nconst item = ref({})\n\nconst onDisabledTab = () => {\n  const index = store.formNotes.tabs.findIndex(i => i.component !== item.value?.type)\n  store.formNotes.tabs[index].disabled = true\n}\n\nconst onEdit = () => {\n  title.value = 'Edit Note'\n  store.formNotes.mode = 'edit'\n  store.formNotes.id = item.value?.id\n  store.formNotes.type = item.value?.type\n  store.formNotes.note = item.value?.note\n  onDisabledTab()\n}\n\nconst onPreview = () => {\n  title.value = 'Preview Note'\n  store.formNotes.mode = 'preview'\n  store.formNotes.type = item.value?.type\n  store.formNotes.note = item.value?.note\n  onDisabledTab()\n}\n\nconst onCancel = () => {\n  title.value = ''\n  item.value = {}\n  store.editNotes.item = undefined\n  store.editNotes.modal = false\n  store.editNotes.isLoading = false\n  store.resetForm()\n}\n\nconst onUpdate = async () => {\n  const isValid = await formEdit.value.onSubmit()\n  if (isValid) {\n    await store.$editNotes()\n    formEdit.value?.onReset()\n    store.editNotes.modal = false\n  }\n}\n\nwatch(() => store.editNotes.modal, (val) => {\n  if (val) {\n    item.value = store.editNotes?.item || {}\n    store.editNotes?.item?.is_granted ? onEdit() : onPreview()\n  } else {\n    onCancel()\n  }\n})\n\n</script>\n\n<template>\n  <Modal\n    v-model=\"store.editNotes.modal\"\n    :no-close=\"store.editNotes.isLoading\"\n    hide-footer\n    @close=\"onCancel\">\n    <template #header>\n      <h6 class=\"font-medium\">\n        {{ title }}\n      </h6>\n    </template>\n    <template #default>\n      <div class=\"mb-10\">\n        <BuybackNotesForm ref=\"formEdit\" />\n      </div>\n      <div class=\"-mb-6 -mx-12 px-12 py-6 border-t border-grey-01 flex justify-end\">\n        <Tooltip\n          placement=\"top-end\"\n          :disabled=\"store.editNotes?.item?.is_granted\">\n          <template #content>\n            <p>You cannot edit or delete order notes created by other users.</p>\n          </template>\n          <div>\n            <Button\n              color=\"teal\"\n              :loading=\"store.editNotes.isLoading\"\n              :disabled=\"!store.editNotes?.item?.is_granted\"\n              @click=\"onUpdate\">\n              Update Note\n            </Button>\n          </div>\n        </Tooltip>\n      </div>\n    </template>\n  </Modal>\n</template>\n","<script setup>\nimport { sanitize } from 'utils/dom'\nimport { useBuybackNotes } from '@/store/pinia/buyback/notes'\n\nimport BuybackNotesDelete from './BuybackNotesDelete.vue'\nimport BuybackNotesEdit from './BuybackNotesEdit.vue'\nimport Button from 'bbUi/components/button/button.vue'\n\nconst store = useBuybackNotes()\n\nconst onAction = (item) => {\n  store.editNotes.item = item\n  store.editNotes.modal = true\n  store.editNotes.isLoading = false\n}\n\nconst onDelete = (item) => {\n  store.deleteNotes.item = item\n  store.deleteNotes.modal = true\n  store.deleteNotes.isLoading = false\n}\n\n</script>\n\n<template>\n  <div class=\"space-y-3\">\n    <p>Internal Notes</p>\n    <template v-if=\"store.getNotes?.internal?.length\">\n      <div\n        v-for=\"(item, n) in store.getNotes.internal\"\n        :key=\"n\">\n        <div class=\"notes space-y-4\">\n          <div class=\"flex items-center flex-wrap flex-row justify-between gap-2\">\n            <p class=\"small font-medium\">By {{ item.admin.name }} - {{ item.created_at }}</p>\n            <div class=\"flex items-center gap-x-2\">\n              <Button\n                v-if=\"item?.is_granted\"\n                color=\"teal\"\n                dense\n                @click=\"onAction(item)\">\n                <span class=\"material-icons text-lg\">edit</span>\n              </Button>\n              <Button\n                v-else\n                color=\"teal\"\n                dense\n                @click=\"onAction(item)\">\n                <span class=\"material-icons text-lg\">visibility</span>\n              </Button>\n              <Tooltip\n                placement=\"top\"\n                :disabled=\"item?.is_granted\">\n                <template #content>\n                  <p class=\"max-w-xs\">You cannot edit or delete order notes created by other users.</p>\n                </template>\n                <div>\n                  <Button\n                    color=\"red\"\n                    :disabled=\"!item?.is_granted\"\n                    dense\n                    @click=\"onDelete(item)\">\n                    <span class=\"material-icons text-lg\">delete</span>\n                  </Button>\n                </div>\n              </Tooltip>\n            </div>\n          </div>\n          <div class=\"block\" v-html=\"sanitize(item.note)\"></div>\n        </div>\n      </div>\n      <BuybackNotesEdit />\n      <BuybackNotesDelete />\n    </template>\n    <template v-else>\n      <div class=\"flex items-center justify-center p-12 bg-grey-lighten rounded-md\">\n        <span>Nothing to see here</span>\n      </div>\n    </template>\n  </div>\n</template>\n","<script setup>\nimport { sanitize } from 'utils/dom'\nimport { useBuybackNotes } from '@/store/pinia/buyback/notes'\n\nimport BuybackNotesDelete from './BuybackNotesDelete.vue'\nimport BuybackNotesEdit from './BuybackNotesEdit.vue'\nimport Button from 'bbUi/components/button/button.vue'\n\nconst store = useBuybackNotes()\n\nconst onAction = (item) => {\n  store.editNotes.item = item\n  store.editNotes.modal = true\n  store.editNotes.isLoading = false\n}\n\nconst onDelete = (item) => {\n  store.deleteNotes.item = item\n  store.deleteNotes.modal = true\n  store.deleteNotes.isLoading = false\n}\n\n</script>\n\n<template>\n  <div class=\"space-y-3\">\n    <p>Customer Notes</p>\n    <template v-if=\"store.getNotes?.customer?.length\">\n      <div\n        v-for=\"(item, n) in store.getNotes.customer\"\n        :key=\"n\">\n        <div class=\"notes space-y-4\">\n          <div class=\"flex items-center flex-wrap flex-row justify-between gap-2\">\n            <p class=\"small font-medium\">By {{ item.admin.name }} - {{ item.created_at }}</p>\n            <div class=\"flex items-center gap-x-2\">\n              <Button\n                v-if=\"item?.is_granted\"\n                color=\"teal\"\n                dense\n                @click=\"onAction(item)\">\n                <span class=\"material-icons text-lg\">edit</span>\n              </Button>\n              <Button\n                v-else\n                color=\"teal\"\n                dense\n                @click=\"onAction(item)\">\n                <span class=\"material-icons text-lg\">visibility</span>\n              </Button>\n              <Tooltip\n                placement=\"top\"\n                :disabled=\"item?.is_granted\">\n                <template #content>\n                  <p class=\"max-w-xs\">You cannot edit or delete order notes created by other users.</p>\n                </template>\n                <div>\n                  <Button\n                    color=\"red\"\n                    :disabled=\"!item?.is_granted\"\n                    dense\n                    @click=\"onDelete(item)\">\n                    <span class=\"material-icons text-lg\">delete</span>\n                  </Button>\n                </div>\n              </Tooltip>\n            </div>\n          </div>\n          <div class=\"block\" v-html=\"sanitize(item.note)\"></div>\n        </div>\n      </div>\n      <BuybackNotesEdit />\n      <BuybackNotesDelete />\n    </template>\n    <template v-else>\n      <div class=\"flex items-center justify-center p-12 bg-grey-lighten rounded-md\">\n        <span>Nothing to see here</span>\n      </div>\n    </template>\n  </div>\n</template>\n","<script setup>\nimport { defineProps } from 'vue'\nimport { useRoute } from 'vue-router'\nimport { useBuybackNotes } from '@/store/pinia/buyback/notes'\n\nimport Card from 'bbUi/components/card/card.vue'\nimport Button from 'bbUi/components/button/button.vue'\nimport BuybackNotesAdd from './BuybackNotesAdd.vue'\nimport BuybackNotesInternal from './BuybackNotesInternal.vue'\nimport BuybackNotesCustomer from './BuybackNotesCustomer.vue'\n\nconst route = useRoute()\nconst props = defineProps({\n  isReadonly: false,\n  isDeleted: false\n})\nconst store = useBuybackNotes()\nstore.$setRoute(route.params)\nawait store.$getNotes()\n\n</script>\n\n<template>\n  <Card>\n    <template #header>\n      <div class=\"flex items-center justify-between gap-4\">\n        <h6 class=\"font-medium\">Notes</h6>\n        <BuybackNotesAdd />\n      </div>\n    </template>\n    <div\n      v-loading=\"store.getNotes.isLoading\"\n      class=\"grid md:grid-cols-2 gap-4\">\n      <BuybackNotesInternal />\n      <BuybackNotesCustomer />\n    </div>\n  </Card>\n</template>"],"names":["store","useBuybackNotes","validation","useVuelidate","note","required","formNotes","$lazy","__expose","onSubmit","async","value","$validate","$invalid","onReset","$reset","formAdd","ref","onAdd","addNotes","modal","isLoading","resetForm","type","mode","onCancel","onSave","$addNotes","item","deleteNotes","onDelete","$deleteNotes","watch","val","_a","_b","id","_c","onLoad","formEdit","title","onDisabledTab","index","tabs","findIndex","i","component","disabled","editNotes","onUpdate","$editNotes","is_granted","onEdit","onPreview","onAction","route","useRoute","$setRoute","params","__temp","__restore","_withAsyncContext","$getNotes"],"mappings":"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"}