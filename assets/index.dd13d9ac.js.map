{"version":3,"file":"index.dd13d9ac.js","sources":["../../src/components/Integration/Fedex/Form.vue","../../src/views/integration/fedex/index.vue","../../src/views/integration/fedex/index.js"],"sourcesContent":["<template>\n  <!-- <Alert view=\"smooth\" color=\"orange\">\n    <div class=\"flex flex-row items-center\">\n      <i class=\"material-icons mr-5\">info</i>\n      <span class=\"text-yellow-1\">To change your shipping address please login to your FedEx Account and change your shipping address from the <a href=\"https://www.fedex.com/apps/myprofile/deliverymanager/?locale=en_US&cntry_code=us&wpro=true\">Shipping Address Settings</a> page.</span>\n    </div>\n  </Alert> -->\n  <div class=\"grid grid-cols-1 gap-6\">\n    <div>\n      <Fieldset class=\"w-full my-6\">\n        <template #label>Account Number</template>\n        <template #default>\n          <div class=\"p-2\">\n            <Input type=\"number\" label=\"Number\" v-model=\"data.billing_fedex_account_number\" :view=\"validation.billing_fedex_account_number.$invalid && 'danger' || 'default'\" />\n            <small class=\"text-red-base block\" v-for=\"(error, errorIndex) of validation.billing_fedex_account_number.$errors\" :key=\"errorIndex\">{{ error.$message }}. </small>\n          </div>\n        </template>\n      </Fieldset>\n      <Fieldset class=\"w-full my-6\">\n        <template #label>Billing Address</template>\n        <template #default>\n         <div class=\"grid grid-cols-3 p-2\">\n           <div class=\"col-span-2\">\n             <div class=\"grid grid-cols-2 gap-4\">\n               <div class=\"col-span-2\">\n                  <Checkbox v-model=\"data.is_billing_fedex_use_company_data\" class=\"font-normal\" type=\"toggle\">Auto fill from company location profile</Checkbox>\n               </div>\n               <div>\n                <Input label=\"First Name\" v-model=\"data.billing_fedex_first_name\" block :view=\"validation.billing_fedex_first_name.$invalid && 'danger' || 'default'\" />\n                <small class=\"text-red-base block\" v-for=\"(error, errorIndex) of validation.billing_fedex_first_name.$errors\" :key=\"errorIndex\">{{ error.$message }}. </small>\n                </div>\n                <div>\n                  <Input label=\"Last Name\" v-model=\"data.billing_fedex_last_name\" block :view=\"validation.billing_fedex_last_name.$invalid && 'danger' || 'default'\" />\n                  <small class=\"text-red-base block\" v-for=\"(error, errorIndex) of validation.billing_fedex_last_name.$errors\" :key=\"errorIndex\">{{ error.$message }}. </small>\n                </div>\n                <div class=\"col-span-2\">\n                  <Input label=\"Company Name\" v-model=\"data.billing_fedex_company\" block :view=\"validation.billing_fedex_company.$invalid && 'danger' || 'default'\" :disabled=\"data.is_billing_fedex_use_company_data == 1\" />\n                  <small class=\"text-red-base block\" v-for=\"(error, errorIndex) of validation.billing_fedex_company.$errors\" :key=\"errorIndex\">{{ error.$message }}. </small>\n                </div>\n                <div class=\"col-span-2\">\n                  <Input label=\"Email\" v-model=\"data.billing_fedex_email\" block :view=\"validation.billing_fedex_email.$invalid && 'danger' || 'default'\" :disabled=\"data.is_billing_fedex_use_company_data == 1\" />\n                  <small class=\"text-red-base block\" v-for=\"(error, errorIndex) of validation.billing_fedex_email.$errors\" :key=\"errorIndex\">{{ error.$message }}. </small>\n                </div>\n                <div class=\"col-span-2\">  \n                  <Input label=\"Street Address\" v-model=\"data.billing_fedex_address_text\" v-gmap=\"billing_address\" class=\"mb-2\" block icon icon-block :view=\"validation.valid_billing.$invalid && 'danger' || 'default'\" :disabled=\"data.is_billing_fedex_use_company_data == 1\" autocomplete=\"none\">\n                  <template #icon><span class=\"material-icons\">location_on</span></template>\n                  </Input>\n                  <small class=\"text-red-base block\" v-for=\"(error, errorIndex) of validation.valid_billing.$errors\" :key=\"errorIndex\">{{ error.$message }}. </small>\n                  <small class=\"text-grey-04 block\">Street address, P.O box, company name, c/o.</small>\n                </div>\n                <div class=\"col-span-2\">\n                 <Input class=\"mb-2\" v-model=\"data.billing_fedex_address2\" block :disabled=\"data.is_billing_fedex_use_company_data == 1\" />\n                 <small class=\"text-grey-04 block\">Apartment, suite, building, floor, etc.</small>\n                </div>\n                <div class=\"col-span-2\">\n                 <!-- <Input class=\"mb-2\" label=\"Phone\" v-model=\"data.billing_fedex_phone\" block icon icon-block :view=\"validation.billing_fedex_phone.$invalid && 'danger' || 'default'\" :disabled=\"data.is_billing_fedex_use_company_data == 1\">\n                  <template #icon><span class=\"material-icons\">phone</span></template>\n                 </Input> -->\n                 <InputPhone ref=\"refBillingPhone\" v-model=\"data.billing_fedex_phone\" label=\"Phone\" block :disabled=\"data.is_billing_fedex_use_company_data == 1\" country-autofill-setting />\n                 <small class=\"text-red-base block\" v-for=\"(error, errorIndex) of validation.billing_fedex_phone.$errors\" :key=\"errorIndex\">{{ error.$message }}. </small>\n                </div>  \n             </div>\n           </div>\n         </div>\n        </template>\n      </Fieldset>\n      <Fieldset class=\"w-full my-6\">\n        <template #label>Return Shipping</template>\n        <template #default>\n         <div class=\"grid grid-cols-3 p-2\">\n           <div class=\"col-span-2\">\n             <div class=\"grid grid-cols-2 gap-4\">\n               <div class=\"col-span-2\">\n                  <Checkbox v-model=\"data.is_fedex_use_company_data\" class=\"font-normal\" type=\"toggle\">Auto fill from company location profile</Checkbox>\n               </div>\n                <!-- <div>\n                  <Input label=\"First Name\" v-model=\"data.fedex_first_name\" block :view=\"validation.fedex_first_name.$invalid && 'danger' || 'default'\" />\n                  <small class=\"text-red-base block\" v-for=\"(error, errorIndex) of validation.fedex_first_name.$errors\" :key=\"errorIndex\">{{ error.$message }}. </small>\n                </div>\n                <div>\n                  <Input label=\"Last Name\" v-model=\"data.fedex_last_name\" block :view=\"validation.fedex_last_name.$invalid && 'danger' || 'default'\" />\n                  <small class=\"text-red-base block\" v-for=\"(error, errorIndex) of validation.fedex_last_name.$errors\" :key=\"errorIndex\">{{ error.$message }}. </small>\n                </div> -->\n                <div class=\"col-span-2\">\n                  <Input label=\"Company Name\" v-model=\"data.fedex_company\" block :view=\"validation.fedex_company.$invalid && 'danger' || 'default'\" :disabled=\"data.is_fedex_use_company_data == 1\" />\n                  <small class=\"text-red-base block\" v-for=\"(error, errorIndex) of validation.fedex_company.$errors\" :key=\"errorIndex\">{{ error.$message }}. </small>\n                </div>\n                <!-- <div class=\"col-span-2\">\n                  <Input label=\"Email\" v-model=\"data.fedex_email\" block :view=\"validation.fedex_email.$invalid && 'danger' || 'default'\" :disabled=\"data.is_fedex_use_company_data == 1\" />\n                  <small class=\"text-red-base block\" v-for=\"(error, errorIndex) of validation.fedex_email.$errors\" :key=\"errorIndex\">{{ error.$message }}. </small>\n                </div> -->\n                <div class=\"col-span-2\">\n                 <Input label=\"Street Address\" v-model=\"data.fedex_address_text\" v-gmap=\"address\" class=\"mb-2\" block icon icon-block :view=\"validation.valid.$invalid && 'danger' || 'default'\" :disabled=\"data.is_fedex_use_company_data == 1\" autocomplete=\"none\">\n                  <template #icon><span class=\"material-icons\">location_on</span></template>\n                 </Input>\n                  <small class=\"text-red-base block\" v-for=\"(error, errorIndex) of validation.valid.$errors\" :key=\"errorIndex\">{{ error.$message }}. </small>\n                 <small class=\"text-grey-04 block\">Street address, P.O box, company name, c/o.</small>\n                </div>\n                <div class=\"col-span-2\">\n                 <Input class=\"mb-2\" v-model=\"data.fedex_address2\" block :disabled=\"data.is_fedex_use_company_data == 1\" />\n                 <small class=\"text-grey-04 block\">Apartment, suite, building, floor, etc.</small>\n                </div>\n                <div class=\"col-span-2\">\n                 <!-- <Input class=\"mb-2\" label=\"Phone\" v-model=\"data.fedex_phone\" block icon icon-block :view=\"validation.fedex_phone.$invalid && 'danger' || 'default'\" :disabled=\"data.is_fedex_use_company_data == 1\">\n                  <template #icon><span class=\"material-icons\">phone</span></template>\n                 </Input> -->\n                 <InputPhone ref=\"refFedexPhone\" v-model=\"data.fedex_phone\" block label=\"Phone\" :disabled=\"data.is_fedex_use_company_data == 1\" country-autofill-setting />\n                 <small class=\"text-red-base block\" v-for=\"(error, errorIndex) of validation.fedex_phone.$errors\" :key=\"errorIndex\">{{ error.$message }}. </small>\n                </div>  \n             </div>\n           </div>\n         </div>\n        </template>\n      </Fieldset>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { defineComponent, reactive, watch, ref } from 'vue'\nimport Input from 'bbUi/components/input/input.vue'\nimport Fieldset from 'bbUi/components/fieldset/fieldset.vue'\nimport Checkbox from 'bbUi/components/checkbox/checkbox.vue'\nimport Alert from 'bbUi/components/alert/alert.vue'\nimport { useVuelidate } from '@vuelidate/core'\nimport { required, email, validAddress } from '@/validations/index'\nimport { helpers } from '@vuelidate/validators'\nimport InputPhone from 'components/InputPhone.vue'\n\n\nexport default defineComponent({\n  components: {\n    Input,\n    Fieldset,\n    Checkbox,\n    Alert,\n    InputPhone\n  },\n  props: {\n    data: {\n      type: Object,\n      default: () => ({\n        fedex_address1: null,\n        fedex_address2: null,\n        fedex_carrier_id: null,\n        fedex_city: null,\n        fedex_company: null,\n        fedex_country_code: null,\n        // fedex_email: null,\n        // fedex_first_name: null,\n        // fedex_last_name: null,\n        fedex_nickname: null,\n        fedex_phone: null,\n        fedex_postal_code: null,\n        fedex_state: null,\n        fedex_address_text: null,\n        is_fedex_use_company_data: false,\n        billing_fedex_account_number: null,\n        billing_fedex_address1: null,\n        billing_fedex_address2: null,\n        billing_fedex_city: null,\n        billing_fedex_company: null,\n        billing_fedex_country_code: null,\n        billing_fedex_email: null,\n        billing_fedex_first_name: null,\n        billing_fedex_last_name: null,\n        billing_fedex_phone: null,\n        billing_fedex_postal_code: null,\n        billing_fedex_state: null,\n        billing_fedex_address_text: null,\n        is_billing_fedex_use_company_data: false\n      })\n    },\n    companyData: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: ['update:data'],\n  setup(props, {emit}) {\n    const data = reactive(props.data)\n    const companyData = reactive(props.companyData)\n    const refBillingPhone = ref(null)\n    const refFedexPhone = ref(null)\n\n    // const currentData = Object.assign({}, {\n    //   address: data.fedex_address1,\n    //   suite: data.fedex_address2,\n    //   city: data.fedex_city,\n    //   country: data.fedex_country_code,\n    //   zip: data.fedex_postal_code,\n    //   state: data.fedex_state,\n    //   address_text: data.fedex_address_text,\n    //   // email: data.fedex_email,\n    //   phone: data.fedex_phone,\n    //   company: data.fedex_company,\n    //   billing_address: data.billing_fedex_address1,\n    //   billing_suite: data.billing_fedex_address2,\n    //   billing_city: data.billing_fedex_city,\n    //   billing_country: data.billing_fedex_country_code,\n    //   billing_zip: data.billing_fedex_postal_code,\n    //   billing_state: data.billing_fedex_state,\n    //   billing_address_text: data.billing_fedex_address_text,\n    //   billing_email: data.billing_fedex_email,\n    //   billing_phone: data.billing_fedex_phone,\n    //   billing_company: data.billing_fedex_company\n    // })\n\n    Object.assign(data, {\n      valid: data.fedex_address_text !== '' && data.fedex_address_text !== null,\n      valid_billing: data.billing_fedex_address_text !== '' && data.billing_fedex_address_text !== null,\n      is_fedex_use_company_data: data.is_fedex_use_company_data == true,\n      is_billing_fedex_use_company_data: data.is_billing_fedex_use_company_data == true\n    })\n\n    // Object.assign(currentData, {\n    //   valid: data.valid,\n    //   valid_billing: data.valid_billing\n    // })\n    \n    const rules = {\n      fedex_company: {\n        required\n      },\n      // fedex_email: {\n        //   required,\n      //   email\n      // },\n      // fedex_first_name: {\n        //   required\n      // },\n      // fedex_last_name: {\n        //   required\n      // },\n      fedex_phone: {\n        required,\n        invalidNumber: helpers.withMessage('Phone number is invalid', () => !data.fedex_phone ? true : refFedexPhone.value?.isValid)\n      },\n      valid: {\n        sameAs: validAddress\n      },\n      billing_fedex_account_number: {\n        required\n      },\n      billing_fedex_company: {\n        required\n      },\n      billing_fedex_email: {\n        required,\n        email\n      },\n      billing_fedex_first_name: {\n        required\n      },\n      billing_fedex_last_name: {\n        required\n      },\n      billing_fedex_phone: {\n        required,\n        invalidNumber: helpers.withMessage('Phone number is invalid', () => !data.billing_fedex_phone ? true : refBillingPhone.value?.isValid)\n      },\n      valid_billing: {\n        sameAs: validAddress\n      }\n    }\n    const validation = useVuelidate(rules, data, {\n      $lazy: true\n    })\n    const validate = () => {\n      validation.value.$validate()\n      return !validation.value.$invalid\n    }\n    watch(() => ({isUseCompanyData: data.is_fedex_use_company_data, isBillingUseCompanyData: data.is_billing_fedex_use_company_data}), (useCompanyData) => {\n      const { isUseCompanyData, isBillingUseCompanyData } = useCompanyData\n      if( isUseCompanyData ){\n        Object.assign(data, {\n          fedex_address1: companyData.address,\n          fedex_address2: companyData.suite,\n          fedex_city: companyData.city,\n          fedex_country_code: companyData.country,\n          fedex_postal_code: companyData.zip,\n          fedex_state: companyData.state,\n          fedex_address_text: companyData.address_text,\n          // fedex_email: companyData.company_email,\n          fedex_phone: companyData.phone,\n          fedex_company: companyData.name,\n          valid: true\n        })\n      }else {\n        // Object.assign(data, {\n        //   fedex_address1: currentData.address,\n        //   fedex_address2: currentData.suite,\n        //   fedex_city: currentData.city,\n        //   fedex_country_code: currentData.country,\n        //   fedex_postal_code: currentData.zip,\n        //   fedex_state: currentData.state,\n        //   fedex_address_text: currentData.address_text,\n        //   // fedex_email: currentData.email,\n        //   fedex_phone: currentData.phone,\n        //   fedex_company: currentData.company,\n        //   valid: currentData.valid\n        // })\n\n        // Billing use company data\n      if( isBillingUseCompanyData ){\n        Object.assign(data, {\n          billing_fedex_address1: companyData.address,\n          billing_fedex_address2: companyData.suite,\n          billing_fedex_city: companyData.city,\n          billing_fedex_country_code: companyData.country,\n          billing_fedex_postal_code: companyData.zip,\n          billing_fedex_state: companyData.state,\n          billing_fedex_address_text: companyData.address_text,\n          billing_fedex_email: companyData.company_email,\n          billing_fedex_phone: companyData.phone,\n          billing_fedex_company: companyData.name,\n          valid_billing: true\n        })\n      }\n      // else {\n      //   Object.assign(data, {\n      //     billing_fedex_address1: currentData.billing_address,\n      //     billing_fedex_address2: currentData.billing_suite,\n      //     billing_fedex_city: currentData.billing_city,\n      //     billing_fedex_country_code: currentData.billing_country,\n      //     billing_fedex_postal_code: currentData.billing_zip,\n      //     billing_fedex_state: currentData.billing_state,\n      //     billing_fedex_address_text: currentData.billing_address_text,\n      //     billing_fedex_email: currentData.billing_email,\n      //     billing_fedex_phone: currentData.billing_phone,\n      //     billing_fedex_company: currentData.billing_company,\n      //     valid_billing: currentData.valid_billing\n      //   })\n      // }\n    }\n  })\n\n    return {\n      data,\n      refBillingPhone,\n      refFedexPhone,\n      validation,\n      validate,\n      address: {\n        valid: 'valid',\n        route: 'fedex_address1',\n        locality: 'fedex_city',\n        administrative_area_level_1: 'fedex_state',\n        formatted_address: 'fedex_address_text',\n        postal_code: 'fedex_postal_code',\n        country: 'fedex_country_code',\n        disallowCustomAddress: true\n      },\n      billing_address: {\n        valid: 'valid_billing',\n        route: 'billing_fedex_address1',\n        locality: 'billing_fedex_city',\n        administrative_area_level_1: 'billing_fedex_state',\n        formatted_address: 'billing_fedex_address_text',\n        postal_code: 'billing_fedex_postal_code',\n        country: 'billing_fedex_country_code',\n        disallowCustomAddress: true\n      },\n    }\n  },\n})\n</script>\n","<template>\n  <div v-loading=\"loading.all\">\n    <Tab v-model=\"tab.current\" :items=\"tab.items\" component />\n    <keep-alive>\n      <component v-bind=\"componentBind\" ref=\"refTabComponent\" :is=\"tab.current\"></component>\n    </keep-alive>\n  </div>\n</template>\n\n<script>\nimport { useShowFedex } from 'composable/integration'\nimport { useCompanyProfile } from 'composable/setting'\nimport { computed, defineComponent, reactive, ref } from 'vue'\nimport Tab from 'bbUi/components/tab/tab.vue'\nimport SettingForm from 'components/Integration/Fedex/Form.vue'\nimport ShippingKitForm from 'components/Integration/ShippingKitForm.vue'\nimport { ElMessage } from 'element-plus'\nimport { isFunction } from '@/utils/is'\n\nexport default defineComponent({\n  components: {\n    Tab,\n    SettingForm,\n    ShippingKitForm\n  },\n  async setup(props) {\n    const { state, loading, data, actionAll, actionUpdateConfig, actionUpdateShippingKit } = useShowFedex()\n    const { data: companyData, actionShow: actionCompanyProfile } = useCompanyProfile()\n    const refTabComponent = ref(null)\n    const tab = reactive({\n      items: [{\n        name: 'Settings',\n        component: 'SettingForm'\n      }, \n      // {\n      //   name: 'Edit Shipping Kit',\n      //   component: 'ShippingKitForm'\n      // }\n    ],\n      current: 'SettingForm'\n    })\n    const componentBind = computed(() => {\n      if( tab.current === 'SettingForm' ) return Object.assign({}, {\n        data: data.config,\n        companyData: companyData\n      })\n      if( tab.current === 'ShippingKitForm' ) return Object.assign({}, {\n        data: data.shipping_kit\n      })\n    })\n    const updateData = async (callback=()=>{}) => {\n      loading.update = true\n      const isValid = refTabComponent.value.validate && await refTabComponent.value.validate()\n      if(isValid){\n        switch(tab.current){\n          case 'SettingForm':\n            await actionUpdateConfig(() => {\n              ElMessage({\n                type: 'success',\n                message: 'FedEx config updated!'\n              })\n              isFunction(callback) && callback()\n            })\n            break\n          case 'ShippingKitForm':\n            await actionUpdateShippingKit(() => {\n              ElMessage({\n                type: 'success',\n                message: 'FedEx shipping kit updated'\n              })\n              isFunction(callback) && callback()\n            })\n            break\n        }\n      }else {\n        loading.update = false\n      }\n    }\n    await Promise.all([\n      actionAll(),\n      actionCompanyProfile()\n    ])\n    return {\n      state,\n      data,\n      loading,\n      tab,\n      refTabComponent,\n      componentBind,\n      actionUpdateShippingKit,\n      updateData\n    }\n  }\n})\n</script>","import { defineComponent, h, ref, reactive } from 'vue'\nimport { useSuspense } from 'composable/components'\nimport { useRoute, useRouter } from 'vue-router'\nimport Modal from 'bbUi/components/modal/modal.vue'\nimport Button from 'bbUi/components/button/button.vue'\nimport Index from './index.vue'\nimport ButtonLearnMore from 'components/Integration/ButtonLearnMore.vue'\n\nexport default defineComponent({\n  async setup() {\n    const { genSuspense } = useSuspense()\n    const refComponent = ref(null)\n    const route = useRoute()\n    const router = useRouter()\n\n    const saveChanges = async () => {\n      await refComponent.value.updateData(() => {\n        if (refComponent.value.tab?.current == 'SettingForm') {\n          router.push({\n            name: 'integration',\n            query: {\n              enable: route.query?.id || ''\n            }\n          })\n        } else {\n          router.push({\n            name: 'integration'\n          })\n        }\n      })\n    }\n\n    const genSaveButton = () =>\n      h(\n        Button,\n        {\n          color: 'teal',\n          loading: refComponent.value && refComponent.value?.loading?.update,\n          onClick: saveChanges\n        },\n        {\n          default: () => 'Save'\n        }\n      )\n\n    // const genLearnMoreButton = () =>\n    //   h(ButtonLearnMore, {\n    //     href: 'https://help.reusely.com/en/articles/5824095-fedex',\n    //     rel: 'noreferrer noopener'\n    //   })\n\n    const genComponent = () =>\n      genSuspense(\n        h(Index, {\n          ref: refComponent\n        })\n      )\n\n    const modalProps = reactive({\n      modelValue: true,\n      closeTo: {\n        name: 'integration',\n        query: {\n          reload: 1\n        }\n      },\n      size: 'sm'\n    })\n\n    const modalSlots = reactive({\n      header: () => 'FedEx Config',\n      headerRight: () => genLearnMoreButton(),\n      default: () => genComponent(),\n      footer: () => genSaveButton()\n    })\n\n    return () => h(Modal, modalProps, modalSlots)\n  }\n})\n"],"names":["_sfc_main","defineComponent","components","Input","Fieldset","Checkbox","Alert","InputPhone","props","data","type","Object","default","fedex_address1","fedex_address2","fedex_carrier_id","fedex_city","fedex_company","fedex_country_code","fedex_nickname","fedex_phone","fedex_postal_code","fedex_state","fedex_address_text","is_fedex_use_company_data","billing_fedex_account_number","billing_fedex_address1","billing_fedex_address2","billing_fedex_city","billing_fedex_company","billing_fedex_country_code","billing_fedex_email","billing_fedex_first_name","billing_fedex_last_name","billing_fedex_phone","billing_fedex_postal_code","billing_fedex_state","billing_fedex_address_text","is_billing_fedex_use_company_data","companyData","emits","[object Object]","emit","reactive","refBillingPhone","ref","refFedexPhone","assign","valid","valid_billing","rules","required","invalidNumber","helpers","withMessage","_a","value","isValid","sameAs","validAddress","email","validation","useVuelidate","$lazy","watch","isUseCompanyData","isBillingUseCompanyData","useCompanyData","address","suite","city","country","zip","state","address_text","phone","name","company_email","validate","$validate","$invalid","route","locality","administrative_area_level_1","formatted_address","postal_code","disallowCustomAddress","billing_address","_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","Tab","SettingForm","_openBlock","_createElementBlock","_createVNode","_cache","_withCtx","_component_Input","label","modelValue","_ctx","onUpdate:modelValue","$event","_Fragment","_renderList","$errors","error","errorIndex","_createElementVNode","_component_Checkbox","block","view","_withDirectives","_createBlock","icon","icon-block","disabled","_component_InputPhone","_hoisted_19","ShippingKitForm","loading","actionAll","actionUpdateConfig","actionUpdateShippingKit","useShowFedex","actionShow","actionCompanyProfile","useCompanyProfile","refTabComponent","tab","items","component","current","componentBind","computed","config","shipping_kit","Promise","all","updateData","async","callback","update","_u","message","isFunction","_component_Tab","_KeepAlive","index","genSuspense","useSuspense","refComponent","useRoute","router","useRouter","saveChanges","push","query","enable","_b","id","modalProps","closeTo","reload","size","modalSlots","header","headerRight","genLearnMoreButton","h","Index","footer","genSaveButton","Button","color","onClick","Modal"],"mappings":"44BAkIA,MAAKA,EAAaC,EAAa,CAC7BC,WAAY,OACVC,EACAC,SAAAA,EACAC,SAAAA,QACAC,EACAC,WAAAA,GAEFC,MAAO,CACLC,KAAM,CACJC,KAAMC,OACNC,QAAS,KAAO,CACdC,eAAgB,KAChBC,eAAgB,KAChBC,iBAAkB,KAClBC,WAAY,KACZC,cAAe,KACfC,mBAAoB,KAIpBC,eAAgB,KAChBC,YAAa,KACbC,kBAAmB,KACnBC,YAAa,KACbC,mBAAoB,KACpBC,2BAA2B,EAC3BC,6BAA8B,KAC9BC,uBAAwB,KACxBC,uBAAwB,KACxBC,mBAAoB,KACpBC,sBAAuB,KACvBC,2BAA4B,KAC5BC,oBAAqB,KACrBC,yBAA0B,KAC1BC,wBAAyB,KACzBC,oBAAqB,KACrBC,0BAA2B,KAC3BC,oBAAqB,KACrBC,2BAA4B,KAC5BC,mCAAmC,KAGvCC,YAAa,CACX7B,KAAMC,OACNC,QAAS,KAAO,MAGpB4B,MAAO,CAAC,eACRC,MAAMjC,GAAOkC,KAACA,IACN,MAAAjC,EAAOkC,EAASnC,EAAMC,MACtB8B,EAAcI,EAASnC,EAAM+B,aAC7BK,EAAkBC,EAAI,MACtBC,EAAgBD,EAAI,MAyB1BlC,OAAOoC,OAAOtC,EAAM,CAClBuC,MAAmC,KAA5BvC,EAAKc,oBAAyD,OAA5Bd,EAAKc,mBAC9C0B,cAAmD,KAApCxC,EAAK4B,4BAAyE,OAApC5B,EAAK4B,2BAC9Db,0BAA6D,GAAlCf,EAAKe,0BAChCc,kCAA6E,GAA1C7B,EAAK6B,oCAQ1C,MAAMY,EAAQ,CACZjC,cAAe,CACbkC,SAAAA,GAYF/B,YAAa,CACX+B,SAAAA,EACAC,cAAeC,EAAQC,YAAY,2BAA2B,WAAM,OAAC7C,EAAKW,cAAqB,OAAAmC,EAAAT,EAAcU,YAAO,EAAAD,EAAAE,aAEtHT,MAAO,CACLU,OAAQC,GAEVlC,6BAA8B,CAC5B0B,SAAAA,GAEFtB,sBAAuB,CACrBsB,SAAAA,GAEFpB,oBAAqB,CACnBoB,SAAAA,EACAS,MAAAA,GAEF5B,yBAA0B,CACxBmB,SAAAA,GAEFlB,wBAAyB,CACvBkB,SAAAA,GAEFjB,oBAAqB,CACnBiB,SAAAA,EACAC,cAAeC,EAAQC,YAAY,2BAA2B,WAAM,OAAC7C,EAAKyB,sBAA6B,OAAAqB,EAAAX,EAAgBY,YAAO,EAAAD,EAAAE,aAEhIR,cAAe,CACbS,OAAQC,IAGNE,EAAaC,EAAaZ,EAAOzC,EAAM,CAC3CsD,OAAO,IAuEF,OAjEDC,GAAA,KAAO,CAACC,iBAAkBxD,EAAKe,0BAA2B0C,wBAAyBzD,EAAK6B,sCAAsC6B,IAC5H,MAAAF,iBAAEA,0BAAkBC,GAA4BC,EAClDF,EACFtD,OAAOoC,OAAOtC,EAAM,CAClBI,eAAgB0B,EAAY6B,QAC5BtD,eAAgByB,EAAY8B,MAC5BrD,WAAYuB,EAAY+B,KACxBpD,mBAAoBqB,EAAYgC,QAChClD,kBAAmBkB,EAAYiC,IAC/BlD,YAAaiB,EAAYkC,MACzBlD,mBAAoBgB,EAAYmC,aAEhCtD,YAAamB,EAAYoC,MACzB1D,cAAesB,EAAYqC,KAC3B5B,OAAO,IAkBPkB,GACFvD,OAAOoC,OAAOtC,EAAM,CAClBiB,uBAAwBa,EAAY6B,QACpCzC,uBAAwBY,EAAY8B,MACpCzC,mBAAoBW,EAAY+B,KAChCxC,2BAA4BS,EAAYgC,QACxCpC,0BAA2BI,EAAYiC,IACvCpC,oBAAqBG,EAAYkC,MACjCpC,2BAA4BE,EAAYmC,aACxC3C,oBAAqBQ,EAAYsC,cACjC3C,oBAAqBK,EAAYoC,MACjC9C,sBAAuBU,EAAYqC,KACnC3B,eAAe,OAqBd,CACLxC,KAAAA,EACAmC,gBAAAA,EACAE,cAAAA,EACAe,WAAAA,EACAiB,SA1Ee,KACfjB,EAAWL,MAAMuB,aACTlB,EAAWL,MAAMwB,UAyEzBZ,QAAS,CACPpB,MAAO,QACPiC,MAAO,iBACPC,SAAU,aACVC,4BAA6B,cAC7BC,kBAAmB,qBACnBC,YAAa,oBACbd,QAAS,qBACTe,uBAAuB,GAEzBC,gBAAiB,CACfvC,MAAO,gBACPiC,MAAO,yBACPC,SAAU,qBACVC,4BAA6B,sBAC7BC,kBAAmB,6BACnBC,YAAa,4BACbd,QAAS,6BACTe,uBAAuB,OA7VhBE,EAAA,CAAAC,MAAM,0BASPC,EAAA,CAAAD,MAAM,OACJE,EAAA,CAAAF,MAAM,wBACJG,EAAA,CAAAH,MAAM,cACJI,EAAA,CAAAJ,MAAM,0BAWLK,EAAA,CAAAL,MAAM,cAINM,EAAA,CAAAN,MAAM,cAINO,EAAA,CAAAP,MAAM,cAONQ,EAAA,CAAAR,oBAIAS,GAAA,CAAAT,MAAM,cAebU,GAAA,CAAAV,MAAM,cACJW,GAAA,CAAAX,MAAM,wBACJY,GAAA,CAAAZ,MAAM,cACJa,GAAA,CAAAb,MAAM,0BAWLc,GAAA,CAAAd,MAAM,cAQNe,GAAA,CAAAf,MAAM,cAONgB,GAAA,CAAAhB,MAAM,cAINiB,GAAA,CAAAjB,MAAM,+CCnFTxF,EAAa,CAC7BC,WAAY,CACVyG,IAAAA,EACAC,kID4FMC,OAAAA,IAAAC,EAAA,MAAAtB,EAAA,GAjGO,MAAA,KAAA,CAPEuB,IAAoB,CAAAtB,MAAA,eAAA,cAAAuB,EAAA,QAAA,IAAA,yBAE7BpG,QAAAqG,GAAA,OACsK,MAAAvB,EAAA,CAA7JqB,EAAaG,EAAA,CAACxG,cAAwByG,MAAA,SAAAC,WAAAC,EAAA5G,KAAAgB,6BAAoC6F,sBAAiBN,EAAA,KAAAA,EAAA,GAAqCO,GAAAF,EAAA5G,KAAAgB,6BAAA8F,oGAC2B,kBAAAC,EAAA,KAAAC,EAAAJ,EAAAxD,WAAApC,6BAAAiG,SAAA,CAAAC,EAAAC,SAAhId,EAAA,QAAA,CAAiFrB,MAAe,uEAK3HsB,IAAqB,CAAAtB,MAAA,eAAA,cAAAuB,EAAA,QAAA,IAAA,0BAE/BpG,QAAAqG,GAAA,KACEY,EAAA,QAwCM,CAvCJA,EAAA,QAsCM,CArCJA,EAAA,QAEM,GAD4I,MAAA/B,EAAA,CAA5HiB,EAAAe,EAAsC,CAAtCV,WAAAC,EAAA5G,KAAA6B,kCAAwCgF,sBAAmBN,EAAA,KAAAA,EAAA,GAAAO,GAAAF,EAAA5G,KAAA6B,kCAAAiF,GAAC9B,MAAa,6CAAwCuB,EAAA,QAAA,IAAA,6EAGkB,MAAA,KAAA,CAAjJD,EAAkBG,EAAA,CAAUC,MAAA,aAAAC,WAAAC,EAAA5G,KAAAuB,yBAA+BsF,sBAAKN,EAAA,KAAAA,EAAA,GAAAO,GAAAF,EAAA5G,KAAAuB,yBAAAuF,GAAEQ,MAAM,gGAC+E,kBAAAP,EAAA,KAAAC,EAAAJ,EAAAxD,WAAA7B,yBAAA0F,SAAA,CAAAC,EAAAC,SAA5Hd,EAAA,QAAA,CAA6ErB,MAAe,gEAGyB,MAAA,KAAA,CAA9IsB,EAAiBG,EAAA,CAAUC,MAAA,YAAAC,WAAAC,EAAA5G,KAAAwB,wBAA8BqF,sBAAKN,EAAA,KAAAA,EAAA,GAAAO,GAAAF,EAAA5G,KAAAwB,wBAAAsF,GAAEQ,MAAM,+FACgF,kBAAAP,EAAA,KAAAC,EAAAJ,EAAAxD,WAAA5B,wBAAAyF,SAAA,CAAAC,EAAAC,SAA3Hd,EAAA,QAAA,CAA4ErB,MAAe,gEAG+E,MAAAM,EAAA,CAArMgB,EAAoBG,EAAA,CAAUC,MAAA,eAAAC,WAAAC,EAAA5G,KAAAoB,sBAA4ByF,sBAAKN,EAAA,KAAAA,EAAA,GAAAO,GAAAF,EAAA5G,KAAAoB,sBAAA0F,GAAEQ,MAAM,GAAqEC,KAAQX,EAAMxD,WAAkChC,sBAAAmD,SAAA,SAAA,qFACxC,OAAA,sBAAAwC,EAAA,KAAAC,EAAAJ,EAAAxD,WAAAhC,sBAAA6F,SAAA,CAAAC,EAAAC,SAAzHd,EAAA,QAAA,CAA0ErB,MAAe,gEAGsE,MAAAO,EAAA,CAA1Le,EAAaG,EAAA,CAAUC,MAAA,QAAAC,WAAAC,EAAA5G,KAAAsB,oBAA0BuF,sBAAKN,EAAA,KAAAA,EAAA,GAAAO,GAAAF,EAAA5G,KAAAsB,oBAAAwF,GAAEQ,MAAM,GAAmEC,KAAQX,EAAMxD,WAAkC9B,oBAAAiD,SAAA,SAAA,qFAC/B,OAAA,sBAAAwC,EAAA,KAAAC,EAAAJ,EAAAxD,WAAA9B,oBAAA2F,SAAA,CAAAC,EAAAC,SAAvHd,EAAA,QAAA,CAAwErB,MAAe,wEAKjH,CAFDwC,GAAsBC,IAAAA,EAAAhB,EAAA,CAAUC,MAAA,iBAAAC,WAAAC,EAAA5G,KAAA4B,2BAA0DiF,sBAAYN,EAAA,KAAAA,EAAA,GAAAO,GAAAF,EAAA5G,KAAA4B,2BAAAkF,GAAC9B,MAAA,OAAMsC,MAAI,GAACI,KAAA,GAAYC,aAAM,GAA6DJ,KAAQX,EAAMxD,WAAkCZ,cAAA+B,SAAA,SAAA,UAAOqD,SAAmB,GAAnBhB,EAAmB5G,KAAA6B,uDACvQ,CAAK6F,KAAAlB,GAAA,IAAAD,EAAM,QAAM,IAAA,8EADmE,OAAA,cAAA,kCAGoDQ,EAAA,KAAAC,EAAAJ,EAAAxD,WAAAZ,cAAAyE,SAAA,CAAAC,EAAAC,SAAjHd,EAAA,QAAA,CAAkErB,MAAe,sDACnH,kHAGyH,MAAAS,GAAA,CAAnHa,EAAYG,EAAA,CAAUzB,MAAA,OAAA2B,WAAAC,EAAA5G,KAAAkB,uBAA6B2F,sBAAKN,EAAA,KAAAA,EAAA,GAAAO,GAAAF,EAAA5G,KAAAkB,uBAAA4F,GAAEQ,MAAQ,yDACzE,KAAA,EAAA,CAAA,aAAA,qHAM4K,MAAA5B,GAAA,CAAhKY,EAAqBuB,EAAA,CAAUzF,IAAA,kBAAAuE,WAAAC,EAAA5G,KAAAyB,oBAA0BoF,sBAAaN,EAAA,KAAAA,EAAA,GAAAO,GAAAF,EAAA5G,KAAAyB,oBAAAqF,GAACJ,MAAA,QAAOY,MAAQ,GAA+CM,SAAwB,GAAxBhB,EAAA5G,KAAA6B,sFACQ,sBAAAkF,EAAA,KAAAC,EAAAJ,EAAAxD,WAAA3B,oBAAAwF,SAAA,CAAAC,EAAAC,SAAvHd,EAAA,QAAA,CAAwErB,MAAe,6EAQvHsB,IAAqB,CAAAtB,MAAA,eAAA,cAAAuB,EAAA,QAAA,IAAA,0BAE/BpG,QAAAqG,GAAA,KACEY,EAAA,SAwCM,CAvCJA,EAAA,SAsCM,CArCJA,EAAA,SAEM,GADoI,MAAAtB,GAAA,CAApHQ,EAAAe,EAA8B,CAA9BV,WAAAC,EAAA5G,KAAAe,0BAAgC8F,sBAAmBN,EAAA,KAAAA,EAAA,GAAAO,GAAAF,EAAA5G,KAAAe,0BAAA+F,GAAC9B,MAAa,6CAAwCuB,EAAA,QAAA,IAAA,6EAWwD,MAAAR,GAAA,CAA7KO,EAAoBG,EAAA,CAAUC,MAAA,eAAAC,WAAAC,EAAA5G,KAAAQ,cAAoBqG,sBAAKN,EAAA,MAAAA,EAAA,IAAAO,GAAAF,EAAA5G,KAAAQ,cAAAsG,GAAEQ,MAAM,GAA6DC,KAAQX,EAAMxD,WAA0B5C,cAAA+D,SAAA,SAAA,6EACxB,OAAA,sBAAAwC,EAAA,KAAAC,EAAAJ,EAAAxD,WAAA5C,cAAAyG,SAAA,CAAAC,EAAAC,SAAjHd,EAAA,QAAA,CAAkErB,MAAe,yEAS5G,CAFDwC,GAAsBC,IAAAA,EAAAhB,EAAA,CAAUC,MAAA,iBAAAC,WAAAC,EAAA5G,KAAAc,mBAA0C+F,sBAAYN,EAAA,MAAAA,EAAA,IAAAO,GAAAF,EAAA5G,KAAAc,mBAAAgG,GAAC9B,MAAA,OAAMsC,MAAI,GAACI,KAAA,GAAYC,aAAM,GAAqDJ,KAAQX,EAAMxD,WAA0Bb,MAAAgC,SAAA,SAAA,UAAOqD,SAAmB,GAAnBhB,EAAmB5G,KAAAe,+CACtO,CAAK2G,KAAAlB,GAAA,IAAAD,EAAM,QAAM,IAAA,8EADkD,OAAA,cAAA,0BAG6DQ,EAAA,KAAAC,EAAAJ,EAAAxD,WAAAb,MAAA0E,SAAA,CAAAC,EAAAC,SAAzGd,EAAA,QAAA,CAA0DrB,MAAe,sDAC5G,kHAG0G,MAAAiB,GAAA,CAAnGK,EAAYG,EAAA,CAAUzB,MAAA,OAAA2B,WAAAC,EAAA5G,KAAAK,eAAqBwG,sBAAKN,EAAA,MAAAA,EAAA,IAAAO,GAAAF,EAAA5G,KAAAK,eAAAyG,GAAEQ,MAAQ,iDACjE,KAAA,EAAA,CAAA,aAAA,qHAM0J,MAAAQ,GAAA,CAA9IxB,EAAmBuB,EAAA,CAAUzF,IAAA,gBAAAuE,WAAAC,EAAA5G,KAAAW,YAAkBkG,sBAAKN,EAAA,MAAAA,EAAA,IAAAO,GAAAF,EAAA5G,KAAAW,YAAAmG,GAACQ,MAAM,GAASZ,MAAQ,QAAuCkB,SAAwB,GAAxBhB,EAAA5G,KAAAe,8EACkB,sBAAAgG,EAAA,KAAAC,EAAAJ,EAAAxD,WAAAzC,YAAAsG,SAAA,CAAAC,EAAAC,SAA/Gd,EAAA,QAAA,CAAgErB,MAAe,qFCpF9H+C,gBAAAA,GAAA/F,YAEUjC,GACV,MAAMiE,MAAEA,EAAOgE,QAAAA,EAAAhI,KAASA,EAAMiI,UAAAA,EAAAC,mBAAWA,0BAAoBC,GAA4BC,KACjFpI,KAAM8B,EAAauG,WAAYC,GAAyBC,IAC1DC,EAAkBpG,EAAI,MACtBqG,EAAMvG,EAAS,CACnBwG,MAAO,CAAC,CACNvE,KAAM,WACNwE,UAAW,gBAObC,QAAS,gBAELC,EAAgBC,GAAS,IACT,gBAAhBL,EAAIG,QAAmC1I,OAAOoC,OAAO,GAAI,CAC3DtC,KAAMA,EAAK+I,OACXjH,YAAAA,IAEkB,oBAAhB2G,EAAIG,QAAuC1I,OAAOoC,OAAO,GAAI,CAC/DtC,KAAMA,EAAKgJ,oBADb,IAoCK,aAJDC,QAAQC,IAAI,CAChBjB,IACAK,MAEK,CACLtE,MAAAA,EACAhE,KAAAA,EACAgI,QAAAA,EACAS,IAAAA,EACAD,gBAAAA,EACAK,cAAAA,EACAV,wBAAAA,EACAgB,WAxCiBC,MAAOC,EAAS,YACjCrB,EAAQsB,QAAS,EAEjB,GADgBd,EAAgBzF,MAAMsB,gBAAkBmE,EAAgBzF,MAAMsB,WAE5E,OAAOoE,EAAIG,SACJ,IAAA,oBACGV,GAAmB,KACbqB,EAAA,CACRtJ,KAAM,UACNuJ,QAAS,0BAEXC,EAAWJ,IAAaA,OAE1B,MACG,IAAA,wBACGlB,GAAwB,KAClBoB,EAAA,CACRtJ,KAAM,UACNuJ,QAAS,+BAEXC,EAAWJ,IAAaA,YAK9BrB,EAAQsB,QAAS,+EAzEqC9B,GAAApB,IAAAC,EAAA,MAAA,KAAA,CAA5CC,EAAAoD,EAAW,CAAX/C,WAAAC,EAAA6B,IAAAG,QAAc/B,sBAAgBN,EAAA,KAAAA,EAAA,GAAAO,GAAAF,EAAA6B,IAAAG,QAAA9B,GAAE4B,MAAA9B,EAAS6B,IAAAC,yCAG1C,iBAD2EiB,EAAA,KAAA,yFAH1E,yBCOlBC,GAAepK,EAAgB,CAAAwC,cAE3B,MAAM6H,YAAEA,GAAgBC,IAClBC,EAAe3H,EAAI,MACnBoC,EAAQwF,IACRC,EAASC,IAETC,EAAcf,gBACZW,EAAahH,MAAMoG,YAAW,aACK,gBAAnC,OAAarG,EAAAiH,EAAAhH,MAAM0F,UAAnB,EAAA3F,EAAwB8F,SAC1BqB,EAAOG,KAAK,CACVjG,KAAM,cACNkG,MAAO,CACLC,QAAQ,OAAAC,EAAA/F,EAAM6F,YAAN,EAAAE,EAAaC,KAAM,MAI/BP,EAAOG,KAAK,CACVjG,KAAM,oBAgCRsG,EAAavI,EAAS,CAC1ByE,YAAY,EACZ+D,QAAS,CACPvG,KAAM,cACNkG,MAAO,CACLM,OAAQ,IAGZC,KAAM,OAGFC,EAAa3I,EAAS,CAC1B4I,OAAQ,IAAM,eACdC,YAAa,IAAMC,qBACnB7K,QAAS,IApBT0J,EACEoB,EAAEC,GAAO,CACP9I,IAAK2H,KAmBToB,OAAQ,KAAMC,OAxCdH,EACEI,EACA,CACEC,MAAO,OACPtD,QAAS+B,EAAahH,QAAS,SAAA,WAAaA,YAAb,EAAAD,EAAoBkF,cAAS,EAAAuC,EAAAjB,QAC5DiC,QAASpB,GAEX,CACEhK,QAAS,IAAM,SATC,WA4Cf,MAAA,IAAM8K,EAAEO,EAAOf,EAAYI"}