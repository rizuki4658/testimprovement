{"version":3,"file":"bulkquote.38ab78f5.js","sources":["../../src/composable/bulkquote.js"],"sourcesContent":["import { computed, reactive, ref } from 'vue'\nimport store from 'store'\nimport moment from 'moment'\nimport { useRoute } from 'vue-router'\nimport { useUser } from 'composable/user'\n\nconst confirmManuallyPricedModal = ref(false)\n\nconst transformItem = (item) => {\n  return {\n    ...item,\n    conditions: item.conditions.data.map((condition) => ({\n      name: condition.name,\n      price: condition.price,\n      rule: condition.rule,\n      original_price: condition.original_price,\n      is_manually_priced: condition.is_manually_priced\n    }))\n  }\n}\nconst transformItemGroup = (items) => {\n  return items\n    .map((productGroup) => productGroup?.items)\n    .flat()\n    .map((item) => transformItem(item))\n}\nconst parsePrice = (price) => {\n  const parsedPrice = typeof price === 'string' ? parseFloat(price) : price\n  if (isNaN(parsedPrice)) return 0\n  return parsedPrice\n}\nconst transformItemConditionPrices = (itemConditions, percentage = 100) => {\n  return itemConditions.map((itemCondition) => ({\n    ...itemCondition,\n    price: parsePrice(itemCondition.price) * (percentage / 100),\n    original_price: parsePrice(itemCondition.price),\n    is_manually_priced: false\n  }))\n}\nconst checkHasManuallyPricedItems = (items) => {\n  const itemGroups = [...(items || [])]\n  for (const itemGroup of itemGroups) {\n    const items = itemGroup.items\n    for (const item of items) {\n      const { conditions = {} } = item\n      const { data: conditionData = [] } = conditions\n      for (const condition of conditionData) {\n        if (condition.is_manually_priced) return true\n      }\n    }\n  }\n  return false\n}\nconst resetManuallyPricedItemCondition = (itemCondition, percentage = 100) => {\n  if (!itemCondition.is_manually_priced) return itemCondition\n  return {\n    ...itemCondition,\n    price: parsePrice(itemCondition.original_price) * (percentage / 100),\n    is_manually_priced: false\n  }\n}\nconst resetManuallyPricedItem = (item = {}, percentage = 100) => {\n  return {\n    ...item,\n    conditions: {\n      ...(item.conditions ? item.conditions : {}),\n      data: [...(item.conditions?.data ? item.conditions.data : [])].map(\n        (itemCondition) => {\n          return resetManuallyPricedItemCondition(itemCondition, percentage)\n        }\n      )\n    }\n  }\n}\nconst _resetManuallyPricedItems = (items = [], percentage = 100) => {\n  const itemGroup = [...(Array.isArray(items) ? items : [])]\n  return itemGroup.map((itemGroup) => {\n    return {\n      ...itemGroup,\n      items: [...(Array.isArray(itemGroup.items) ? itemGroup.items : [])].map(\n        (item) => {\n          return resetManuallyPricedItem(item, percentage)\n        }\n      )\n    }\n  })\n}\n\nexport const useBulkQuote = () => {\n  const route = useRoute()\n\n  const selectedTab = ref('active_item')\n\n  const isBulkQuote = computed(() => ['bulkQuoteDetail'].includes(route.name))\n  const tabBulkQuote = computed(() => {\n    return [\n      {\n        name: 'Active',\n        value: 'active_item'\n      },\n      {\n        name: 'Reconciled',\n        value: 'reconciled_item'\n      }\n    ]\n  })\n  return {\n    isBulkQuote,\n    tabBulkQuote,\n    selectedTab\n  }\n}\n\nexport const useBulkQuoteItem = () => {\n  const items = ref([])\n  const loading = reactive({\n    getBulkQuoteItems: false,\n    getBulkQuoteItemInfo: false,\n    updateQuotePercentage: false,\n    deleteQuoteItem: false\n  })\n  const quotePercentage = ref(100)\n  const totalItems = ref(0)\n  const requestController = reactive({\n    updateQuoteItem: null,\n    updateQuotePercentage: null\n  })\n  const hasManuallyPricedItems = computed(() =>\n    checkHasManuallyPricedItems(items.value)\n  )\n\n  const parseItems = (items = []) => {\n    const itemGroup = {}\n    Object.entries(items).forEach(([key, items]) => {\n      items.forEach((item) => {\n        const isExistKey = itemGroup.hasOwnProperty(key)\n        if (isExistKey) {\n          itemGroup[key].items.push({\n            ...item,\n            conditions: {\n              data: item.condition || []\n            }\n          })\n        } else {\n          itemGroup[key] = {\n            id: item.top_category_id,\n            name: item.group_name,\n            is_mac: item.is_mac,\n            items: [\n              {\n                ...item,\n                conditions: {\n                  data: item.condition || []\n                }\n              }\n            ]\n          }\n        }\n      })\n    })\n    return Object.entries(itemGroup)\n      .map(([_, item]) => item)\n      .flat()\n  }\n  const getBulkQuoteItems = async (payload) => {\n    const { quoteId = null } = payload || {}\n    if (!quoteId) return\n    try {\n      loading.getBulkQuoteItems = true\n      const bulkQuoteItems = await store.dispatch(\n        'bulkQuote/getBulkQuoteItems',\n        {\n          id: quoteId\n        }\n      )\n      items.value = parseItems(bulkQuoteItems)\n    } catch (err) {\n      console.error(err)\n    } finally {\n      loading.getBulkQuoteItems = false\n    }\n  }\n  const getBulkQuoteItemInfo = async (payload) => {\n    const { quoteId = null } = payload || {}\n    if (!quoteId) return\n    try {\n      loading.getBulkQuoteItemInfo = true\n      const response = await store.dispatch('bulkQuote/getBulkQuoteItemInfo', {\n        id: quoteId\n      })\n      const { quote_price: quotePrice, total_item: totalItem } = response\n      quotePercentage.value = quotePrice\n      totalItems.value = totalItem\n    } catch (err) {\n      console.error(err)\n    } finally {\n      loading.getBulkQuoteItemInfo = false\n    }\n  }\n  const updateQuotePercentage = async (payload = { quoteId: '' }) => {\n    const { quoteId = '' } = payload || {}\n    if (requestController.updateQuotePercentage)\n      requestController.updateQuotePercentage.abort()\n    requestController.updateQuotePercentage = new AbortController()\n\n    try {\n      loading.updateQuotePercentage = true\n      await store.dispatch('bulkQuote/updateQuotePercentage', {\n        id: quoteId,\n        data: {\n          quote_price: quotePercentage.value\n        },\n        signal: requestController.updateQuotePercentage.signal\n      })\n      loading.updateQuotePercentage = false\n      return true\n    } catch (err) {\n      if (err.message === 'cancelled') return false\n      console.error(err)\n      loading.updateQuotePercentage = false\n      return false\n    } finally {\n      loading.updateQuotePercentage = false\n    }\n  }\n  const updateQuoteItem = async (payload = { quoteId: '', item: {} }) => {\n    const { quoteId = '', item = {} } = payload || {}\n    if (requestController.updateQuoteItem)\n      requestController.updateQuoteItem.abort()\n    requestController.updateQuoteItem = new AbortController()\n\n    try {\n      loading.updateQuotePercentage = true\n      await store.dispatch('bulkQuote/updateQuoteItem', {\n        id: quoteId,\n        data: transformItem(item),\n        signal: requestController.updateQuoteItem.signal\n      })\n      loading.updateQuotePercentage = false\n      return true\n    } catch (err) {\n      if (err.message === 'cancelled') return false\n      console.error(err)\n      loading.updateQuotePercentage = false\n      return false\n    }\n  }\n  const deleteQuoteItem = async (payload = { quoteId: '', itemId: '' }) => {\n    const { quoteId = '', itemId = '' } = payload || {}\n    try {\n      loading.deleteQuoteItem = true\n      await store.dispatch('bulkQuote/deleteQuoteItem', {\n        id: quoteId,\n        data: {\n          id: itemId\n        }\n      })\n      return true\n    } catch (err) {\n      return false\n    } finally {\n      loading.deleteQuoteItem = false\n    }\n  }\n  const resetManuallyPricedItems = () => {\n    const updatedItems = _resetManuallyPricedItems(items.value)\n    items.value = updatedItems\n  }\n\n  return {\n    items,\n    loading,\n    quotePercentage,\n    totalItems,\n    confirmManuallyPricedModal,\n    hasManuallyPricedItems,\n    resetManuallyPricedItems,\n    getBulkQuoteItems,\n    getBulkQuoteItemInfo,\n    updateQuotePercentage,\n    updateQuoteItem,\n    deleteQuoteItem\n  }\n}\n\nexport const useSearchItem = () => {\n  const querySearch = ref()\n  const products = ref([])\n  const categories = ref([])\n  const loading = ref(false)\n  const isProductActiveButNoPrice = ref(false)\n  const searchController = ref(null)\n  const setCategories = (items = []) => (categories.value = items)\n  const setProducts = (items = []) => (products.value = items)\n  const searchItems = async (searchQuery = '') => {\n    unsetItems()\n    const query = searchQuery || querySearch.value\n    if (!query) return\n    if (searchController.value) searchController.value.abort()\n    searchController.value = new AbortController()\n    try {\n      loading.value = true\n      const searchResult = await store.dispatch('bulkQuote/searchItems', {\n        params: {\n          search: query\n        },\n        signal: searchController.value.signal\n      })\n      const { product: categories = {}, ...products } = searchResult.data\n      isProductActiveButNoPrice.value = searchResult?.product_active_but_no_price == 1 ? true : false\n      const parsedCategories = Object.entries(categories).map(\n        ([_, category]) => ({\n          name: category.product_name,\n          ...category\n        })\n      ) || []\n      const parsedProducts = Object.entries(products).map(\n        ([categoryName, items]) => ({\n          category_name: categoryName,\n          products: items\n        })\n      ) || []\n      setCategories(parsedCategories)\n      setProducts(parsedProducts)\n      loading.value = false\n    } catch (err) {\n      if (err.message === 'canceled') return\n      console.error(err)\n      loading.value = false\n    }\n  }\n  const unsetItems = () => {\n    products.value = []\n    categories.value = []\n  }\n  return {\n    querySearch,\n    products,\n    categories,\n    loading,\n    isProductActiveButNoPrice,\n    searchItems,\n    unsetItems\n  }\n}\n\nexport const useCreateBulkQuoteItem = (options = { multiple: false }) => {\n  const selectedItems = ref([])\n  const loading = ref(false)\n  const isSingleInput = computed(() => {\n    const { multiple: isMultiple = false } = options\n    return !isMultiple\n  })\n  const addItem = (item, options = {}) => {\n    if (isSingleInput.value) selectedItems.value = []\n    const {\n      top_category_id: parentCategoryId,\n      parent_category_name: parentCategoryName\n    } = item\n    const isInvalidParentCategory = !(parentCategoryId && parentCategoryName)\n    if (isInvalidParentCategory) return\n    const matchedExistingGroupNameIndex = selectedItems.value.findIndex(\n      (productGroup) =>\n        productGroup.id === parentCategoryId &&\n        productGroup.is_mac === item.is_mac\n    )\n    const hasMatchedExistingGroup = matchedExistingGroupNameIndex > -1\n    const quotePercentage = options.quotePercentage || 0\n    const transformedConditionPrices = transformItemConditionPrices(\n      (item.conditions && item.conditions.data) || [],\n      quotePercentage\n    )\n    const itemConditions = {\n      ...item.conditions,\n      data: transformedConditionPrices\n    }\n    const selectedItem = {\n      ...item,\n      conditions: itemConditions,\n      qty: 1\n    }\n\n    if (!hasMatchedExistingGroup) {\n      selectedItems.value.push({\n        id: parentCategoryId,\n        name: parentCategoryName,\n        is_mac: selectedItem.is_mac,\n        items: [selectedItem]\n      })\n      return\n    }\n\n    const matchedExistingItemIndex = selectedItems.value[\n      matchedExistingGroupNameIndex\n    ].items.findIndex((item) => {\n      return selectedItem.is_custom === 0\n        ? item?.product_id === selectedItem.product_id\n        : item.category_id === selectedItem.category_id &&\n            item.is_mac === selectedItem.is_mac\n    })\n    const hasMatchedExistingItem = matchedExistingItemIndex > -1\n    if (!hasMatchedExistingItem) {\n      selectedItems.value[matchedExistingGroupNameIndex].items.push(\n        selectedItem\n      )\n      return\n    }\n    selectedItems.value[matchedExistingGroupNameIndex].items[\n      matchedExistingItemIndex\n    ].qty++\n  }\n  const createSingleItem = async (payload = { items: [], quoteId: null }) => {\n    try {\n      const { quoteId, items } = payload || {}\n      loading.value = true\n      const parsedItems = transformItemGroup(items)\n      const selectedItem = parsedItems[0]\n      await store.dispatch('bulkQuote/createQuoteItem', {\n        id: quoteId,\n        data: selectedItem\n      })\n      return true\n    } catch (err) {\n      console.error(err)\n      return false\n    } finally {\n      loading.value = false\n    }\n  }\n  const createMultipleItems = async (\n    payload = { items: [], quoteId: null }\n  ) => {\n    try {\n      const { quoteId, items } = payload || {}\n      loading.value = true\n      throw new Error('not implemented yet')\n    } catch (err) {\n      console.error(err)\n      return false\n    } finally {\n      loading.value = false\n    }\n  }\n  const createItem = async (payload = { quoteId }) => {\n    const { quoteId } = payload || {}\n    if (!quoteId) return false\n    if (isSingleInput.value) {\n      return await createSingleItem({ items: selectedItems.value, quoteId })\n    }\n    return await createMultipleItems({ items: selectedItems.value, quoteId })\n  }\n  return {\n    selectedItems,\n    loading,\n    addItem,\n    createItem\n  }\n}\n\nexport const useCreateBulkQuote = () => {\n  const { me } = useUser()\n  const loading = ref(false)\n  const data = reactive({\n    customer: {\n      id: null,\n      full_name: null,\n      email: null,\n      company: null,\n      shipping_address1: null,\n      shipping_address2: null,\n      shipping_address_text: null,\n      shipping_suite: null,\n      shipping_city: null,\n      shipping_phone: null,\n      shipping_state: null,\n      shipping_zip: null,\n      shipping_country: null,\n      shipping_expected_date_quote: null\n    },\n    sales_person: {\n      name: [me.value.first_name || '', me.value.last_name || ''].join(' '),\n      email: me.value.email\n    },\n    additional_options: {\n      memo: null,\n      custom_fields: []\n    },\n    is_use_memo: false,\n    is_use_custom_fields: false,\n    products: [],\n    selected_products: [],\n    quote_price_percentage: 100\n  })\n  const isEmptyCustomField = computed(\n    () => data.additional_options.custom_fields.length === 0\n  )\n  const hasEmptyCustomFieldValue = computed(\n    () =>\n      data.additional_options.custom_fields.filter((field) => !field.value)\n        .length > 0\n  )\n  const isInvalidMemo = computed(\n    () => data.is_use_memo && !data.additional_options.memo\n  )\n  const isInvalidCustomFields = computed(\n    () =>\n      data.is_use_custom_fields &&\n      (hasEmptyCustomFieldValue.value || isEmptyCustomField.value)\n  )\n  const isInvalidProducts = computed(() => data.selected_products.length === 0)\n  const isInvalidSalesPerson = computed(\n    () => !data.sales_person.name || !data.sales_person\n  )\n  const isInvalidCustomer = computed(() => {\n    return (\n      !data.customer.full_name ||\n      !data.customer.email ||\n      !data.customer.company ||\n      !data.customer.shipping_address_text ||\n      !data.customer.shipping_expected_date_quote\n    )\n  })\n  const isSubmitQuoteDisabled = computed(() => {\n    return (\n      isInvalidCustomer.value ||\n      isInvalidProducts.value ||\n      isInvalidSalesPerson.value ||\n      isInvalidMemo.value ||\n      isInvalidCustomFields.value\n    )\n  })\n  const hasManuallyPricedItems = computed(() =>\n    checkHasManuallyPricedItems(data.selected_products)\n  )\n\n  const addProduct = (item) => {\n    const {\n      top_category_id: parentCategoryId,\n      parent_category_name: parentCategoryName\n    } = item\n    const isInvalidParentCategory = !(parentCategoryId && parentCategoryName)\n    if (isInvalidParentCategory) return\n    const matchedExistingGroupNameIndex = data.selected_products.findIndex(\n      (productGroup) =>\n        productGroup.id === parentCategoryId &&\n        productGroup.is_mac === item.is_mac\n    )\n    const hasMatchedExistingGroup = matchedExistingGroupNameIndex > -1\n    const transformedConditionPrices = transformItemConditionPrices(\n      (item.conditions && item.conditions.data) || [],\n      data.quote_price_percentage\n    )\n    const itemConditions = {\n      ...item.conditions,\n      data: transformedConditionPrices\n    }\n    const selectedItem = {\n      ...item,\n      conditions: itemConditions,\n      qty: 1\n    }\n    if (!hasMatchedExistingGroup) {\n      data.selected_products.push({\n        id: parentCategoryId,\n        name: parentCategoryName,\n        is_mac: selectedItem.is_mac,\n        items: [selectedItem]\n      })\n      return\n    }\n\n    const matchedExistingItemIndex = data.selected_products[\n      matchedExistingGroupNameIndex\n    ].items.findIndex((item) => {\n      return selectedItem.is_custom === 0\n        ? item?.product_id === selectedItem.product_id\n        : item.category_id === selectedItem.category_id &&\n            item.is_mac === selectedItem.is_mac &&\n            item.is_custom === selectedItem.is_custom &&\n            item.product_name === selectedItem.product_name\n    })\n    const hasMatchedExistingItem = matchedExistingItemIndex > -1\n    if (!hasMatchedExistingItem) {\n      data.selected_products[matchedExistingGroupNameIndex].items.push(\n        selectedItem\n      )\n      return\n    }\n    data.selected_products[matchedExistingGroupNameIndex].items[\n      matchedExistingItemIndex\n    ].qty++\n  }\n  const createBulkQuote = async () => {\n    try {\n      loading.value = true\n      const customFields = {}\n      data.additional_options.custom_fields.forEach(\n        (field) => (customFields[field.name] = field.value)\n      )\n      const payload = {\n        customer: {\n          ...data.customer,\n          shipping_expected_date_quote: moment(\n            data.customer.shipping_expected_date_quote\n          ).format('DD/MM/YYYY')\n        },\n        sales_person: data.sales_person,\n        additional_options: {\n          memo: data.additional_options.memo,\n          custom_fields: customFields,\n          add_shipping_label_number: data.additional_options.add_shipping_label_number\n        },\n        item_details: {\n          quote_price: data.quote_price_percentage,\n          item: transformItemGroup(data.selected_products)\n        }\n      }\n      return await store.dispatch('bulkQuote/createBulkQuote', payload)\n    } catch (err) {\n      return null\n    } finally {\n      loading.value = false\n    }\n  }\n  const resetManuallyPricedItems = () => {\n    const itemGroup = [...data.selected_products]\n    data.selected_products = _resetManuallyPricedItems(\n      itemGroup,\n      data.quote_price_percentage\n    )\n  }\n  return {\n    data,\n    loading,\n    isSubmitQuoteDisabled,\n    hasManuallyPricedItems,\n    confirmManuallyPricedModal,\n    addProduct,\n    createBulkQuote,\n    resetManuallyPricedItems\n  }\n}\n\nexport const useBulkQuoteStatus = () => {\n  const loading = ref(false)\n  const statuses = ref([])\n  const getQuoteStatuses = async () => {\n    try {\n      loading.value = true\n      statuses.value = await store.dispatch('bulkQuote/getQuoteStatuses')\n    } catch (err) {\n      console.error(err)\n    } finally {\n      loading.value = false\n    }\n  }\n  const updateQuoteStatus = async (payload = { quoteId, status }) => {\n    const { quoteId = null, status = {} } = payload || {}\n    const { id: statusId, step: statusStep } = status\n    try {\n      loading.value = true\n      await store.dispatch('bulkQuote/updateQuoteStatus', {\n        id: quoteId,\n        data: {\n          status_id: statusId,\n          new_step: statusStep\n        }\n      })\n      return true\n    } catch (err) {\n      console.error(err)\n      return false\n    } finally {\n      loading.value = false\n    }\n  }\n  return {\n    loading,\n    statuses,\n    getQuoteStatuses,\n    updateQuoteStatus\n  }\n}\n\nexport const useReconcileQuoteItem = () => {\n  const selectedItem = reactive({\n    id: null,\n    category_id: null,\n    top_category_id: null,\n    is_custom: 0,\n    is_mac: 0,\n    product_id: null,\n    product_name: null,\n    qty: 1,\n    imei_required: 0\n  })\n  const specs = reactive({\n    mac: {\n      Processor: {\n        id: null,\n        name: null,\n        options: []\n      },\n      Memory: {\n        id: null,\n        name: null,\n        options: []\n      },\n      'Hard Drive': {\n        id: null,\n        name: null,\n        options: []\n      },\n      'Graphics Card': {\n        id: null,\n        name: null,\n        options: []\n      }\n    },\n    color: {\n      id: null,\n      name: null,\n      options: []\n    },\n    condition: {\n      id: null,\n      name: null,\n      price: 0,\n      rule: [],\n      options: []\n    }\n  })\n  const itemDetail = reactive({\n    qty: 1,\n    price: 0,\n    imeiNotes: [\n      {\n        imei: null,\n        notes: null\n      }\n    ]\n  })\n  const loading = reactive({\n    getSpecs: {\n      Processor: false,\n      'Hard Drive': false,\n      Memory: false,\n      'Graphics Card': false,\n      color: false,\n      condition: false\n    },\n    reconcile: false\n  })\n\n  const isCustomItem = computed(() => selectedItem.is_custom == 1)\n  const isMacItem = computed(() => selectedItem.is_mac == 1)\n  const isValid = computed(() => {\n    const isValidItemDetail =\n      Number(itemDetail.qty) > 0 && Number(itemDetail.price) > 0\n    const isValidColor = !!specs.color.id\n    const isValidCondition = !!specs.condition.id || !!specs.condition.name\n    const isValidMacSpec = isMacItem.value\n      ? Object.entries(specs.mac).filter(([_, value]) => {\n          return !value.id\n        }).length === 0\n      : true\n    const isValidSpecs = isValidColor && isValidCondition && isValidMacSpec\n    return isValidItemDetail && isValidSpecs\n  })\n  const emptySpecs = computed(() => {\n    return Object.entries(specs.mac).filter(\n      ([key, value]) => key !== 'product_id' && !value.id\n    )\n  })\n  const nextSpec = computed(() => {\n    if (emptySpecs.value.length === 0) return null\n    const [key, value] = emptySpecs.value[0]\n    return {\n      key,\n      value\n    }\n  })\n  const specValues = computed(() =>\n    Object.entries(specs.mac).reduce((acc, [key, value]) => {\n      acc[key] = value.id || null\n      return acc\n    }, {})\n  )\n\n  const setSpecMac = async (payload = { key: null, item: {} }) => {\n    const { key = null, item = {} } = payload\n    if (!key) return console.warn(`Unable to set spec with null key`)\n    const hasInvalidKey = !Object.keys(specs.mac).includes(key)\n    if (hasInvalidKey) return console.warn(`${key} is invalid spec key`)\n\n    const { id = null, name = null } = item\n    specs.mac[key].id = id\n    specs.mac[key].name = name\n\n    // unset spec value that have greater index than updated spec key\n    const updatedSpecKeyIndex = Object.keys(specs.mac).indexOf(key)\n    Object.keys(specs.mac).forEach((key, specIndex) => {\n      if (specIndex > updatedSpecKeyIndex) {\n        specs.mac[key].id = null\n        specs.mac[key].name = null\n        specs.mac[key].options = []\n      }\n    })\n\n    await getNextSpec()\n  }\n  const unsetSpecs = () => {\n    Object.entries(specs.mac).forEach(([specKey, specValue]) => {\n      specs.mac[specKey].id = null\n      specs.mac[specKey].name = null\n      specs.mac[specKey].options = []\n    })\n    specs.color.id = null\n    specs.color.name = null\n    specs.color.options = []\n  }\n  const unsetSelectedItem = () => {\n    Object.assign(selectedItem, {\n      id: null,\n      category_id: null,\n      top_category_id: null,\n      is_custom: 0,\n      is_mac: 0,\n      product_id: null,\n      product_name: null,\n      imei_required: 0,\n      qty: 1\n    })\n  }\n  const unsetConditions = () => {\n    specs.condition.id = null\n    specs.condition.name = null\n    specs.condition.options = []\n  }\n  const unsetItemDetail = () => {\n    itemDetail.qty = 1\n    itemDetail.price = 0\n    itemDetail.imeiNotes = [\n      {\n        imei: '',\n        notes: ''\n      }\n    ]\n  }\n  const unsetAll = () => {\n    unsetSpecs()\n    unsetSelectedItem()\n    unsetConditions()\n  }\n  const setSelectedItem = (item = {}) => {\n    if (!item) return\n    unsetAll()\n    Object.entries(selectedItem).forEach(([key, _]) => {\n      const hasMatchedKey = item.hasOwnProperty(key)\n      if (hasMatchedKey) {\n        selectedItem[key] = item[key]\n        return\n      }\n      console.warn(\n        `Property \"${key}\" does not exist in the selected item, it may cause an error`\n      )\n    })\n  }\n  const setConditionOptions = (newConditions = []) => {\n    specs.condition.options = newConditions\n  }\n  const setColorOptions = (colors = []) => {\n    specs.color.options = colors\n  }\n  const getConditionsByCategoryId = async (payload = {}) => {\n    const { categoryId, quoteId } = payload || {}\n    try {\n      loading.getSpecs.condition = true\n      const conditions = await store.dispatch(\n        'bulkQuote/getConditionsByCategoryId',\n        {\n          params: {\n            category_id: categoryId,\n            is_mac: selectedItem.is_mac,\n            box_id: quoteId\n          }\n        }\n      )\n      setConditionOptions(conditions)\n    } catch (err) {\n      console.error(err)\n    } finally {\n      loading.getSpecs.condition = false\n    }\n  }\n  const getConditionsByProductId = async (payload = {}) => {\n    const { productId, quoteId } = payload || {}\n    try {\n      loading.getSpecs.condition = true\n      const conditions = await store.dispatch(\n        'bulkQuote/getConditionsByProductId',\n        {\n          params: {\n            product_id: productId,\n            is_mac: selectedItem.is_mac,\n            buyback_type: 'mailin',\n            is_editable: 0,\n            condition: 1,\n            box_id: quoteId\n          }\n        }\n      )\n      setConditionOptions(conditions)\n    } catch (err) {\n      console.error(err)\n    } finally {\n      loading.getSpecs.condition = false\n    }\n  }\n  const getConditions = async (payload = { quoteId: null }) => {\n    const { product_id: productId = null, category_id: categoryId = null } =\n      selectedItem || {}\n    const { quoteId = null } = payload || {}\n    const isEmptyQuoteId = !quoteId\n    if (isEmptyQuoteId)\n      return console.warn('Unable to get condition, missing quote ID')\n\n    if (isCustomItem.value) {\n      const isEmptyCategoryId = !categoryId\n      if (isEmptyCategoryId)\n        return console.warn('Unable to get condition, missing category ID')\n      await getConditionsByCategoryId({ categoryId, quoteId })\n      return\n    }\n    const isEmptyProductId = !productId\n    if (isEmptyProductId)\n      return console.warn('Unable to get condition, missing product ID')\n    await getConditionsByProductId({ productId, quoteId })\n  }\n\n  const getColors = async () => {\n    try {\n      loading.getSpecs.color = true\n      const colorSpecs = await store.dispatch('bulkQuote/getItemColors')\n      setColorOptions(colorSpecs)\n    } catch (err) {\n      console.error(err)\n    } finally {\n      loading.getSpecs.color = false\n    }\n  }\n\n  const checkEligibleSpecs = (productId) => {\n    const isEmptyProductId = !productId\n    if (isEmptyProductId) {\n      console.warn('Unable to get specs, missing product ID')\n      return false\n    }\n    const isNonMacItem = !isMacItem.value\n    const hasNoSpecs = isNonMacItem || isCustomItem.value\n    if (hasNoSpecs) {\n      console.warn('No specs available for non-mac item or custom item')\n      return false\n    }\n    return true\n  }\n\n  const getNextSpec = async () => {\n    let { product_id: productId } = selectedItem\n    const isEmptyProductId = !productId\n    if (isEmptyProductId)\n      return console.warn('Unable to get specs, missing product ID')\n    productId =\n      String(productId || '').split('-').length > 0\n        ? String(productId).split('-')[0]\n        : productId\n\n    const nextSpecKey = nextSpec.value ? nextSpec.value.key : 'condition'\n    const currentFilledSpecs = specValues.value\n    try {\n      loading.getSpecs[nextSpecKey] = true\n      const response = await store.dispatch('bulkQuote/getSpecs', {\n        params: {\n          product_id: productId,\n          ...currentFilledSpecs,\n          type: nextSpecKey,\n          buyback_type: 'mailin',\n          is_editable: 1,\n          is_mac: 1,\n          condition: nextSpecKey === 'condition' ? 1 : 0\n        }\n      })\n      const isConditionSpec = nextSpecKey === 'condition'\n      if (isConditionSpec) {\n        specs.condition.options = response\n        return\n      }\n      specs.mac[nextSpecKey].options = response\n    } catch (err) {\n      console.error(err)\n    } finally {\n      loading.getSpecs[nextSpecKey] = false\n    }\n  }\n\n  // get all specs by product ID\n  const getSpecsByProductId = async () => {\n    const { product_id: productId } = selectedItem\n    const isEligibleItem = checkEligibleSpecs(productId)\n    if (!isEligibleItem) return\n\n    const [productNumberId, processorId, memoryId, hardDriveId, graphicCardId] =\n      String(productId || '').split('-')\n\n    await getNextSpec()\n    specs.mac.Processor.id = processorId\n    await getNextSpec()\n    specs.mac.Memory.id = memoryId\n    await getNextSpec()\n    specs.mac['Hard Drive'].id = hardDriveId\n    await getNextSpec()\n    specs.mac['Graphics Card'].id = graphicCardId\n    await getNextSpec()\n\n    Object.keys(specs.mac).forEach((key) => {\n      const selectedSpec = specs.mac[key].options.find(\n        (option) => option.id == specs.mac[key].id\n      )\n      if (selectedSpec) specs.mac[key].name = selectedSpec.name\n    })\n  }\n\n  const transformReconcileItem = (\n    payload = { items: {}, specs: {}, detail: {} }\n  ) => {\n    const { item = {}, specs = {}, detail = {} } = payload || {}\n\n    const data = {\n      product_id: item.product_id,\n      product_name: item.product_name,\n      category_id: item.category_id,\n      category_name: null,\n      condition_id: specs.condition.id,\n      color_id: specs.color.id,\n      top_category_id: item.top_category_id,\n      is_custom: item.is_custom,\n      is_mac: item.is_mac,\n      qty: Number(detail.qty),\n      price: detail.price,\n      imei_sn: null,\n      buyback_type: 'bulkquote',\n      is_editable: 0,\n      notes: null,\n      imei_required: item.imei_required,\n      condition: specs.condition.name,\n      item_id: item.id\n    }\n\n    const isMacItem = item.is_mac && !item.is_custom\n    if (isMacItem) {\n      const isIncorrectlyFormattedMacId =\n        data.product_id.split('-').length !== 5\n      if (isIncorrectlyFormattedMacId) {\n        const correctedMacId = [\n          item.product_id,\n          specs.mac.Processor.id,\n          specs.mac.Memory.id,\n          specs.mac['Hard Drive'].id,\n          specs.mac['Graphics Card']\n        ].join('-')\n        data.product_id = correctedMacId\n      }\n    }\n    const parsedIMEI = JSON.stringify(\n      detail.imeiNotes.map((item) => item.imei || '')\n    )\n    const parsedNotes = JSON.stringify(\n      detail.imeiNotes.map((item) => item.notes || '')\n    )\n\n    data.imei_sn = parsedIMEI\n    data.notes = parsedNotes\n\n    return data\n  }\n\n  const reconcileQuoteItem = async (payload = { quoteId: '' }) => {\n    const { quoteId = '' } = payload || {}\n    if (!quoteId) {\n      console.warn('Unable to reconcile quote item, missing quote ID')\n      return false\n    }\n    try {\n      loading.reconcile = true\n      const data = transformReconcileItem({\n        item: selectedItem,\n        specs: specs,\n        detail: itemDetail\n      })\n      return await store.dispatch('bulkQuote/reconcileItem', {\n        id: quoteId,\n        data\n      })\n    } catch (err) {\n      console.error(err)\n      return null\n    } finally {\n      loading.reconcile = false\n    }\n  }\n\n  return {\n    selectedItem,\n    specs,\n    loading,\n    isMacItem,\n    isCustomItem,\n    itemDetail,\n    isValid,\n    setSelectedItem,\n    setSpecMac,\n    getConditions,\n    getSpecsByProductId,\n    getColors,\n    reconcileQuoteItem\n  }\n}\n"],"names":["confirmManuallyPricedModal","ref","transformItem","item","__spreadProps","conditions","data","map","condition","name","price","rule","original_price","is_manually_priced","transformItemGroup","items","productGroup","flat","parsePrice","parsedPrice","parseFloat","isNaN","transformItemConditionPrices","itemConditions","percentage","itemCondition","checkHasManuallyPricedItems","itemGroups","itemGroup","items2","conditionData","resetManuallyPricedItem","__spreadValues","_a","resetManuallyPricedItemCondition","_resetManuallyPricedItems","Array","isArray","itemGroup2","useBulkQuote","route","useRoute","selectedTab","isBulkQuote","computed","includes","tabBulkQuote","value","useBulkQuoteItem","loading","reactive","getBulkQuoteItems","getBulkQuoteItemInfo","updateQuotePercentage","deleteQuoteItem","quotePercentage","totalItems","requestController","updateQuoteItem","hasManuallyPricedItems","resetManuallyPricedItems","updatedItems","async","payload","quoteId","quoteId2","bulkQuoteItems","store","dispatch","id","Object","entries","forEach","key","items3","hasOwnProperty","push","top_category_id","group_name","is_mac","_","parseItems","err","console","error","response","quote_price","quotePrice","total_item","totalItem","abort","AbortController","signal","message","itemId","useSearchItem","querySearch","products","categories","isProductActiveButNoPrice","searchController","unsetItems","searchItems","searchQuery","query","searchResult","params","search","product","categories2","products2","__objRest","product_active_but_no_price","parsedCategories","category","product_name","parsedProducts","categoryName","category_name","setCategories","setProducts","useCreateBulkQuoteItem","options","multiple","selectedItems","isSingleInput","isMultiple","addItem","options2","parentCategoryId","parent_category_name","parentCategoryName","matchedExistingGroupNameIndex","findIndex","hasMatchedExistingGroup","transformedConditionPrices","selectedItem","qty","matchedExistingItemIndex","item2","is_custom","product_id","category_id","createItem","createSingleItem","Error","createMultipleItems","useCreateBulkQuote","me","useUser","customer","full_name","email","company","shipping_address1","shipping_address2","shipping_address_text","shipping_suite","shipping_city","shipping_phone","shipping_state","shipping_zip","shipping_country","shipping_expected_date_quote","sales_person","first_name","last_name","join","additional_options","memo","custom_fields","is_use_memo","is_use_custom_fields","selected_products","quote_price_percentage","isEmptyCustomField","length","hasEmptyCustomFieldValue","filter","field","isInvalidMemo","isInvalidCustomFields","isInvalidProducts","isInvalidSalesPerson","isInvalidCustomer","isSubmitQuoteDisabled","addProduct","createBulkQuote","customFields","moment","format","add_shipping_label_number","item_details","useBulkQuoteStatus","statuses","getQuoteStatuses","updateQuoteStatus","status","status2","statusId","step","statusStep","status_id","new_step","useReconcileQuoteItem","imei_required","specs","mac","Processor","Memory","Hard Drive","Graphics Card","color","itemDetail","imeiNotes","imei","notes","getSpecs","reconcile","isCustomItem","isMacItem","isValid","isValidItemDetail","Number","isValidColor","isValidCondition","isValidMacSpec","emptySpecs","nextSpec","specValues","reduce","acc","unsetAll","specKey","specValue","assign","setConditionOptions","newConditions","getNextSpec","productId","warn","String","split","nextSpecKey","currentFilledSpecs","type","buyback_type","is_editable","setSelectedItem","setSpecMac","keys","updatedSpecKeyIndex","indexOf","key2","specIndex","getConditions","categoryId","box_id","getConditionsByCategoryId","getConditionsByProductId","getSpecsByProductId","checkEligibleSpecs","productNumberId","processorId","memoryId","hardDriveId","graphicCardId","selectedSpec","find","option","getColors","colors","setColorOptions","reconcileQuoteItem","detail","condition_id","specs2","color_id","imei_sn","item_id","correctedMacId","parsedIMEI","JSON","stringify","parsedNotes","transformReconcileItem"],"mappings":"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"}