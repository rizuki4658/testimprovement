var i=Object.defineProperty,n=Object.getOwnPropertySymbols,e=Object.prototype.hasOwnProperty,t=Object.prototype.propertyIsEnumerable,r=(n,e,t)=>e in n?i(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;import{N as a,r as s,g as o}from"./vendor.9695fe57.js";import{r as g}from"./index.54844a74.js";import{v as p}from"./index.67cab78b.js";const c=()=>{const i=a();return{rules:s({api_key:{required:g}}),loading:o((()=>i.state.integration.shipengine.loading.connect)),setCredential:(n=null)=>i.commit("integration/shipengine/SET_CREDENTIAL",n),connect:async()=>{try{i.commit("integration/shipengine/SET_CONNECT_LOADING",!0),await i.dispatch("integration/shipengine/connect")}finally{i.commit("integration/shipengine/SET_CONNECT_LOADING",!1)}}}},h=()=>{const i=a(),s=o((()=>i.state.integration.shipengine.loading.shippingKit)),g=o({get:()=>((i,a)=>{for(var s in a||(a={}))e.call(a,s)&&r(i,s,a[s]);if(n)for(var s of n(a))t.call(a,s)&&r(i,s,a[s]);return i})({},i.state.integration.shipengine.shippingKit),set:n=>{i.commit("integration/shipengine/SET_SHIPPING_KIT",n)}});return{store:i,loading:s,shippingKit:g,fetchShippingKit:async()=>{try{i.commit("integration/shipengine/SET_LOADING_FETCH_SHIPPING_KIT",!0)}finally{i.commit("integration/shipengine/SET_LOADING_FETCH_SHIPPING_KIT",!1)}},updateShippingKit:async()=>{try{i.commit("integration/shipengine/SET_LOADING_UPDATE_SHIPPING_KIT",!0)}finally{i.commit("integration/shipengine/SET_LOADING_UPDATE_SHIPPING_KIT",!1)}}}},l=()=>{const i=a(),n=o((()=>i.state.integration.shipengine.shippingProvider.carriers)),e=o((()=>i.state.integration.shipengine.shippingProvider.filters)),t=o((()=>i.getters["integration/shipengine/selectedCarrier"]));return{loading:o((()=>i.state.integration.shipengine.loading)),carriers:n,carrierFilters:e,selectedCarrier:t,fetchCarriers:async()=>{try{return i.commit("integration/shipengine/SET_LOADING_FETCH_CARRIERS",!0),await i.dispatch("integration/shipengine/fetchCarriers"),null}catch(n){return n}finally{i.commit("integration/shipengine/SET_LOADING_FETCH_CARRIERS",!1)}},updateCarrier:async(n=(()=>{}))=>{try{i.commit("integration/shipengine/SET_LOADING_UPDATE_CARRIER",!0),await i.dispatch("integration/shipengine/updateCarrier"),p(n)&&n(null,null)}catch(e){p(n)&&n(e,null)}finally{i.commit("integration/shipengine/SET_LOADING_UPDATE_CARRIER",!1)}},selectCarrier:n=>i.commit("integration/shipengine/SET_SELECTED_CARRIER",n),resetSelectedCarrier:()=>i.commit("integration/shipengine/RESET_SELECTED_CARRIER")}},_=()=>{const i=a(),n=o((()=>i.state.integration.shipengine.loading));return{tabs:o((()=>[{id:1,name:"Shipping Provider",to:{name:"integrationShipengineConfigShippingProvider"}}])),loading:n,checkIntegrationStatus:async()=>{try{i.commit("integration/shipengine/SET_LOADING_INTEGRATION_CHECKS",!0);const n=(await i.dispatch("integration/all")).find((i=>18==i.id));return 1==(null==n?void 0:n.is_ready)}finally{i.commit("integration/shipengine/SET_LOADING_INTEGRATION_CHECKS",!1)}}}},E=()=>{const i=a(),n=o((()=>i.state.integration.shipengine));return{status:o((()=>i.state.integration.shipengine.status)),loading:n,fetchStatus:async()=>{try{i.commit("integration/shipengine/SET_LOADING_FETCH_STATUS",!0),await i.dispatch("integration/shipengine/fetchStatus")}finally{i.commit("integration/shipengine/SET_LOADING_FETCH_STATUS",!1)}}}};export{E as a,l as b,h as c,_ as d,c as u};
