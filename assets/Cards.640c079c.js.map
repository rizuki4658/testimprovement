{"version":3,"file":"Cards.640c079c.js","sources":["../../src/components/Features/Dashboard/DashboardCardItem.vue","../../src/components/Features/Dashboard/DashboardCardList.vue"],"sourcesContent":["<script setup>\nimport { ref, watch } from 'vue'\n\nimport Card from 'bbUi/components/card/card.vue'\nimport Currency from 'components/Currency.vue'\nimport ExpeditedIcon from 'components/ExpeditedPayout/ExpeditedIcon.vue'\n\nconst props = defineProps({\n  item: {\n    type: Object,\n    default: () => ({\n      id: null,\n      shortName: null,\n      name: null,\n      isLoading: true,\n      totalDevices: 0,\n      totalOrders: 0,\n      orders: []\n    })\n  }\n})\nconst state = ref(props.item)\n\nconst onMouseEnter = (e, order) => {\n  const el = e.target\n  if (el.scrollWidth > el.clientWidth) {\n    order.tooltip = true\n  } else order.tooltip = false\n}\nconst onMouseLeave = (order) => {\n  order.tooltip = false\n}\n\nwatch(() => props.item, async (val) => {\n  state.value = val\n})\n\n</script>\n\n<template>\n  <Card v-loading=\"item?.isLoading\" class=\"h-full\">\n    <template v-if=\"!$slots.header\" #header>\n      <div class=\"flex\">\n        <div class=\"flex items-center gap-x-2\">\n          <router-link to=\"#\" class=\"hover:underline transition-all ease-out duration-300\">\n            <p class=\"text-xl font-medium text-teal-04\">{{ state.name }}</p>\n          </router-link>\n          <div class=\"bg-teal-04 rounded-full px-2 py-0.5 text-sm inline-block text-center text-white flex items-center font-medium\">{{ state.totalOrders }}</div>\n        </div>\n      </div>\n    </template>\n    <template v-else #header>\n      <slot name=\"header\" v-bind=\"{ name: state.name, total: state.totalOrders }\"></slot>\n    </template>\n    <template #default>\n      <div v-if=\"state?.orders?.length\" class=\"space-y-2\">\n        <div\n          v-for=\"(order, index) in state.orders\"\n          :key=\"index\">\n          <router-link\n            class=\"block cursor-pointer transition duration-200 rounded-lg hover:bg-grey-lighten\"\n            :to=\"{\n              name: order.buyback_type == 1 ? 'buybackOnlineDetail' : 'buybackLocalDetail',\n              params: {\n                buybackId: order.box_id, box_id_link: order.box_id_link\n              }\n            }\">\n            <div class=\"w-full space-y-1 p-3\">\n              <div\n                class=\"flex justify-between gap-x-1 relative\"\n                @mouseleave=\"onMouseLeave(order)\">\n                <div class=\"flex items-center gap-4\">\n                  <Transition name=\"fade\">\n                    <div v-if=\"order.tooltip\" class=\"absolute bottom-full pb-1\">\n                      <div\n                      :class=\"!order?.customer_name?.trim() ? 'lowercase' : 'capitalize'\"\n                      class=\"bg-teal-04 px-4 py-2 text-sm rounded-lg left-0 text-white\">\n                      {{ !order?.customer_name?.trim() ? order?.customer?.email : order?.customer_name }}\n                      </div>\n                    </div>\n                  </Transition>\n                  <div\n                    :class=\"!order?.customer_name?.trim() ? 'lowercase' : 'capitalize'\"\n                    class=\"text-teal-04 font-medium overflow-hidden break-all whitespace-nowrap overflow-ellipsis\"\n                    @mouseenter=\"onMouseEnter($event, order)\">\n                    {{ !order?.customer_name?.trim() ? order?.customer?.email : order?.customer_name }}\n                  </div>\n                  <div\n                    v-if=\"order?.expedited_payout_price\"\n                    class=\"w-max flex items-center gap-2 bg-green-lighten text-green-04 py-1 px-4 rounded-full text-sm\"\n                    >\n                    <ExpeditedIcon class=\"text-green-04\" />\n                    <span>Expedited Payout</span>\n                  </div>\n                </div>\n                <p class=\"font-medium text-teal-04 whitespace-nowrap\">\n                  <Currency :value=\"parseFloat(order.sub_total).toFixed(2).toLocaleString()\" />\n                </p>\n              </div>\n              <p class=\"text-dark text-xs\">{{ order.order_datetimes }}</p>\n            </div>\n          </router-link>\n        </div>\n      </div>\n      <div v-else class=\"flex items-center justify-center h-full\">\n        <span class=\"text-teal-02\">Nothing to see here</span>\n      </div>\n    </template>\n  </Card>\n</template>\n","<script setup>\nimport { ref, onMounted } from 'vue'\nimport debounce from 'utils/debounce'\nimport { useDashboard } from 'store/pinia/dashboard'\n\nimport { VueDraggableNext as DashboardContainerDrag } from 'vue-draggable-next'\n\nimport DashboardCardItem from './DashboardCardItem.vue'\n\nconst store = useDashboard()\nconst list = ref([])\nconst limit = ref(10)\n\nconst onUpdate = debounce(async () => {\n  store.$updatePersonalize({\n    limit: limit.value,\n    data: list.value.map(i => ({\n      id: i.id,\n      parent_id: i.parent_id,\n      name: i.name\n    }))\n  })\n}, 300)\n\nonMounted(async () => {\n  const res = await store.$getPersonalize()\n  list.value = res.data || []\n  limit.value = res.limit || 10\n  if (list.value.length) {\n    list.value.map(async (i) => {\n      i.isLoading = true\n      const res = await store.$getItem(i.id, limit.value)\n      i.orders = res?.data?.data?.map(j => ({ ...j, tooltip: false })) || []\n      i.totalDevices = res?.data?.total_devices || 0\n      i.totalOrders = res?.data?.total || 0\n      i.isLoading = false\n      i.link = !!i.parent_id\n        ? `/${store.buybackType === 'mailin' ? 'order' : 'order-local'}/active/${i.parent_id}/${i.id}`\n        : `/${store.buybackType === 'mailin' ? 'order' : 'order-local'}/active/${i.id}`\n    })\n  }\n})\n\n</script>\n\n<template>\n  <DashboardContainerDrag\n    :list=\"list\"\n    handle=\".dragable__icon\"\n    :class=\"[\n      'grid gap-4',\n      list.length === 1 && 'grid-cols-1',\n      list.length === 2 && 'md:grid-cols-2 grid-cols-1',\n      list.length >= 3 && 'md:grid-cols-3 sm:grid-cols-2 grid-cols-1'\n    ]\"\n    @update=\"onUpdate\">\n    <transition-group name=\"slide-fade\">\n      <div\n        v-for=\"(item, n) in list\"\n        :key=\"n\"\n        class=\"h-full\">\n        <DashboardCardItem :item=\"item\">\n          <template #header=\"{ name, total }\">\n            <div class=\"flex justify-between\">\n              <div class=\"flex items-center gap-x-2\">\n                <router-link :to=\"item?.link || '#'\" class=\"hover:underline transition-all ease-out duration-300\">\n                  <p class=\"text-xl font-medium text-teal-04\">{{ name }}</p>\n                </router-link>\n                <div class=\"bg-teal-04 rounded-full px-2 py-0.5 text-sm inline-block text-center text-white flex items-center font-medium\">{{ total > 99 ? `99+` : total }}</div>\n              </div>\n              <a href=\"#\" class=\"dragable__icon hover:text-teal-04 text-teal-01 transition-all ease-in-out duration-300 cursor-pointer\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n                  <path d=\"M7.08341 4.58341L10.0001 1.66675M10.0001 1.66675L12.9167 4.58341M10.0001 1.66675V18.3334M18.3334 10.0001H1.66675M18.3334 10.0001L15.4167 12.9167M18.3334 10.0001L15.4167 7.08341M1.66675 10.0001L4.58341 7.08341M1.66675 10.0001L4.58341 12.9167M10.0001 18.3334L7.08341 15.4167M10.0001 18.3334L12.9167 15.4167\" stroke=\"currentColor\" stroke-width=\"2\"/>\n                </svg>\n              </a>\n            </div>\n          </template>\n        </DashboardCardItem>\n      </div>\n    </transition-group>\n  </DashboardContainerDrag>\n</template>\n"],"names":["props","__props","state","ref","item","watch","async","val","value","order","tooltip","e","el","target","scrollWidth","clientWidth","store","useDashboard","list","limit","onUpdate","debounce","$updatePersonalize","data","map","i","id","parent_id","name","onMounted","res","$getPersonalize","length","isLoading","res2","$getItem","orders","_b","_a","j","__spreadProps","__spreadValues","totalDevices","_c","total_devices","totalOrders","_d","total","link","buybackType"],"mappings":"wjDAOA,MAAMA,EAAQC,EAcRC,EAAQC,EAAIH,EAAMI,aAYxBC,GAAM,IAAML,EAAMI,OAAME,MAAOC,IAC7BL,EAAMM,MAAQD,0lBALK,CAACE,IACpBA,EAAMC,SAAU,soBAPG,EAACC,EAAGF,KACvB,MAAMG,EAAKD,EAAEE,OACTD,EAAGE,YAAcF,EAAGG,YACtBN,EAAMC,SAAU,EACXD,EAAMC,SAAU,svCClBzB,MAAMM,EAAQC,IACRC,EAAOf,EAAI,IACXgB,EAAQhB,EAAI,IAEZiB,EAAWC,GAASf,UACxBU,EAAMM,mBAAmB,CACvBH,MAAOA,EAAMX,MACbe,KAAML,EAAKV,MAAMgB,KAAUC,IAAA,CACzBC,GAAID,EAAEC,GACNC,UAAWF,EAAEE,UACbC,KAAMH,EAAEG,aAGX,YAEHC,GAAUvB,UACF,MAAAwB,QAAYd,EAAMe,kBACnBb,EAAAV,MAAQsB,EAAIP,MAAQ,GACnBJ,EAAAX,MAAQsB,EAAIX,OAAS,GACvBD,EAAKV,MAAMwB,QACRd,EAAAV,MAAMgB,KAAIlB,MAAOmB,gBACpBA,EAAEQ,WAAY,EACd,MAAMC,QAAYlB,EAAMmB,SAASV,EAAEC,GAAIP,EAAMX,OAC7CiB,EAAEW,QAAS,OAAAC,EAAA,OAAAC,EAAA,MAAAJ,OAAA,EAAAA,EAAKX,WAAL,EAAAe,EAAWf,WAAX,EAAAc,EAAiBb,KAAIe,IAAMC,4HAAKC,CAAA,GAAAF,SAAL,CAAQ7B,SAAS,gBAAa,GACpEe,EAAEiB,cAAe,OAAAC,EAAA,MAAAT,OAAA,EAAAA,EAAKX,WAAL,EAAAoB,EAAWC,gBAAiB,EAC7CnB,EAAEoB,aAAc,OAAAC,EAAA,MAAAZ,OAAA,EAAAA,EAAKX,WAAL,EAAAuB,EAAWC,QAAS,EACpCtB,EAAEQ,WAAY,EACZR,EAAAuB,KAASvB,EAAEE,UACT,IAA0B,WAAtBX,EAAMiC,YAA2B,QAAU,wBAAwBxB,EAAEE,aAAaF,EAAEC,KACxF,IAA0B,WAAtBV,EAAMiC,YAA2B,QAAU,wBAAwBxB,EAAEC"}