var t=Object.defineProperty,e=Object.defineProperties,s=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable,r=(e,s,o)=>s in e?t(e,s,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[s]=o,n=(t,e)=>{for(var s in e||(e={}))i.call(e,s)&&r(t,s,e[s]);if(o)for(var s of o(e))a.call(e,s)&&r(t,s,e[s]);return t},d=(t,o)=>e(t,s(o));import{j as l}from"./vendor.9695fe57.js";import{z as m,s as u}from"./index.73ae30fa.js";const g=l("buybackNotes",{state:()=>({routeParams:null,getNotes:{isLoading:!1,internal:[],customer:[]},formNotes:{mode:"add",note:null,id:null,type:"internal",tabs:[{name:"Internal Note",component:"internal",disabled:!1},{name:"Customer Note",component:"customer",disabled:!1}]},addNotes:{modal:!1,isLoading:!1},editNotes:{item:void 0,modal:!1,isLoading:!1},deleteNotes:{item:void 0,modal:!1,isLoading:!1},warningNotes:{ids:[],page:1,lastPage:1,isReviewed:!1,isLoading:!1,modal:!1,notes:[]}}),getters:{},actions:{async $setRoute(t={}){this.routeParams=t},async $getNotes(t={}){var e,s,o,i,a,r,n;this.getNotes.isLoading=!0;try{const d=await m({url:`/v1/pos/order-notes/${null==(e=this.routeParams)?void 0:e.buybackId}`,params:t,method:"get"});this.setNotesCustomer(d.customer,null==(i=null==(o=null==(s=u.state)?void 0:s.user)?void 0:o.me)?void 0:i.id),this.setNotesInternal(d.internal,null==(n=null==(r=null==(a=u.state)?void 0:a.user)?void 0:r.me)?void 0:n.id)}finally{this.getNotes.isLoading=!1}},async $getNotesUnread(){this.warningNotes.isLoading=!0,this.warningNotes.isReviewed=!1;try{const t=await m({url:"/v1/pos/order-notes/unread",params:{admin_id:u.state.user.me.id,order_ids:this.warningNotes.ids,page:this.warningNotes.page},method:"get"}),e=u.state.user.me.id,s=Array.isArray(t.data)?t.data.map((t=>d(n({},t),{order_notes:t.order_notes.filter((t=>t.admin_id!==e))}))):[];if(this.warningNotes.lastPage=t.last_page,this.warningNotes.page=t.current_page,1===this.warningNotes.page)this.warningNotes.notes=s;else{const t=[...this.warningNotes.notes];s.forEach((e=>{const s=t.findIndex((t=>t.box_id===e.box_id));if(-1!==s){const o=t[s].order_notes,i=[...o,...e.order_notes.filter((t=>!o.some((e=>e.id===t.id))))];t[s].order_notes=i}else t.push(e)})),this.warningNotes.notes=t}}catch(t){console.error("Failed to fetch unread notes:",t)}finally{this.warningNotes.isLoading=!1}},async $updateNotesUnread(){this.warningNotes.isLoading=!0;try{return await m({url:"/v1/pos/order-notes/read-status",data:{admin_id:u.state.user.me.id,order_ids:this.warningNotes.ids},method:"post"}),!0}catch(t){return console.error("Failed to update unread notes:",t),!1}finally{this.warningNotes.isLoading=!1}},async $addNotes(){var t;this.addNotes.isLoading=!0;try{await m({url:"/v1/pos/order-notes",data:{admin_id:u.state.user.me.id,box_id:null==(t=this.routeParams)?void 0:t.buybackId,note:this.formNotes.note,type:this.formNotes.type},method:"post"}),await this.$getNotes()}finally{this.addNotes.isLoading=!1}},async $editNotes(){this.editNotes.isLoading=!0;try{await m({url:`/v1/pos/order-notes/update/${this.formNotes.id}`,data:{admin_id:u.state.user.me.id,note:this.formNotes.note,_method:"PUT"},method:"post"}),await this.$getNotes()}finally{this.editNotes.isLoading=!1}},async $deleteNotes(){this.deleteNotes.isLoading=!0;try{await m({url:`/v1/pos/order-notes/delete/${this.formNotes.id}`,data:{_method:"DELETE"},method:"post"}),await this.$getNotes()}finally{this.deleteNotes.isLoading=!1}},setNotesCustomer(t,e){var s;this.getNotes.customer=null!=(s=null==t?void 0:t.map((t=>d(n({},t),{type:"customer",is_granted:e===t.admin_id}))))?s:[]},setNotesInternal(t,e){var s;this.getNotes.internal=null!=(s=null==t?void 0:t.map((t=>d(n({},t),{type:"internal",is_granted:e===t.admin_id}))))?s:[]},resetGetNotes(){this.getNotes.internal=[],this.getNotes.customer=[]},resetForm(){this.formNotes.mode="add",this.formNotes.note=null,this.formNotes.id=null,this.formNotes.type="internal",this.formNotes.tabs=this.formNotes.tabs.map((t=>d(n({},t),{disabled:!1})))}}});export{g as u};
