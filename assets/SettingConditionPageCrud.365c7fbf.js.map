{"version":3,"file":"SettingConditionPageCrud.365c7fbf.js","sources":["../../src/store/pinia/setting/condition.js","../../src/components/Features/Setting/SettingCondition/SettingConditionForm/SettingConditionFormCategory.vue","../../src/components/Features/Setting/SettingCondition/SettingConditionForm/SettingConditionFormModal/SettingConditionFormModalDelete.vue","../../src/components/Features/Setting/SettingCondition/SettingConditionForm/SettingConditionFormModal/SettingConditionFormModalCondition/SettingConditionFormModalConditionActive.vue","../../src/components/Features/Setting/SettingCondition/SettingConditionForm/SettingConditionFormModal/SettingConditionFormModalCondition/SettingConditionFormModalConditionQuestion.vue","../../src/components/Features/Setting/SettingCondition/SettingConditionForm/SettingConditionFormPreview/SettingConditionFormPreviewConditional.vue","../../src/components/Features/Setting/SettingCondition/SettingConditionForm/SettingConditionFormPreview/SettingConditionFormPreview.vue","../../src/components/Features/Setting/SettingCondition/SettingConditionForm/SettingConditionFormModal/SettingConditionFormModalUpgradePlan.vue","../../../../../../../images/setting-condition-conditional-questions-upgrade-plan.png","../../src/utils/createContext.js","../../src/components/Features/Setting/SettingCondition/SettingConditionForm/SettingConditionFormModal/SettingConditionFormModalCondition/SettingConditionFormModalCondition.vue","../../src/components/Features/Setting/SettingCondition/SettingConditionForm/SettingConditionFormModal/SettingConditionFormModalBulkQuestion/SettingConditionFormModalBulkQuestion.vue","../../src/components/Features/Setting/SettingCondition/SettingConditionForm/SettingConditionFormModal/SettingConditionFormModalBulkQuestion/SettingConditionFormModalBulkQuestionWarning.vue","../../src/components/Features/Setting/SettingCondition/SettingConditionForm/SettingConditionFormMapping/SettingConditionFormMappingList.vue","../../src/components/Features/Setting/SettingCondition/SettingConditionForm/SettingConditionFormModal/SettingConditionFormModalDuplicate.vue","../../src/components/Features/Setting/SettingCondition/SettingConditionForm/SettingConditionFormMapping/SettingConditionFormMappingSource.vue","../../src/components/Features/Setting/SettingCondition/SettingConditionForm/SettingConditionFormMapping/SettingConditionFormMapping.vue","../../src/components/Features/Setting/SettingCondition/SettingConditionForm/SettingConditionForm.vue","../../src/components/Features/Setting/SettingCondition/SettingConditionPage/SettingConditionPageCrud.vue"],"sourcesContent":["import { useRoute } from 'vue-router'\nimport { defineStore } from 'pinia'\nimport request from 'utils/request'\n\nexport const useSettingConditionGroupStore = defineStore('settingConditionGroup', {\n\tstate: () => {\n\t\treturn {\n\t\t\tform: {\n\t\t\t\tgroup_name: undefined,\n\t\t\t\tconditions: [],\n\t\t\t\tcategories: [],\n\t\t\t\tis_price_sync: 0\n\t\t\t},\n\t\t\tpriceSyncCompanySource: undefined,\n\t\t\tgetSettingConditionGroup: {\n\t\t\t\tresult: undefined,\n\t\t\t\tisLoading: false\n\t\t\t},\n\t\t\tcreateSettingConditionGroup: {\n\t\t\t\tisLoading: false\n\t\t\t},\n\t\t\tupdateSettingConditionGroup: {\n\t\t\t\tisLoading: false\n\t\t\t},\n\t\t\tdeleteSettingConditionGroup: {\n\t\t\t\tisLoading: false\n\t\t\t},\n\t\t\tgetSettingConditionGroupDevices: {\n\t\t\t\tresult: undefined\n\t\t\t}\n\t\t}\n\t},\n\tgetters: {\n\t\tcompanyName(state) {\n\t\t\treturn state.priceSyncCompanySource\n\t\t},\n\t\tisFormLoading(state) {\n\t\t\treturn (\n\t\t\t\tstate.createSettingConditionGroup.isLoading || state.updateSettingConditionGroup.isLoading\n\t\t\t)\n\t\t},\n\t\tisMac(state) {\n\t\t\treturn state.form.categories.findIndex(category => category.is_mac)\n\t\t},\n\t\tisUniqueAndMacDisabled(state) {\n\t\t\tif (!state.form.categories.length > 0) return false\n\n\t\t\tconst route = useRoute()\n\n\t\t\treturn route?.query?.unique_id && this.isMac.value >= 0\n\t\t}\n\t},\n\tactions: {\n\t\tresetSettingConditionGroupForm() {\n\t\t\tthis.$state.form = {\n\t\t\t\tgroup_name: undefined,\n\t\t\t\tconditions: [],\n\t\t\t\tcategories: []\n\t\t\t}\n\t\t},\n\t\tasync $getSettingConditionGroup(payload) {\n\t\t\tconst settingConditionStore = useSettingConditionStore()\n\t\t\tconst response = await request({\n\t\t\t\turl: `/v1/pos/condition/edit-category/${payload.id}`,\n\t\t\t\tmethod: 'GET',\n\t\t\t\tparams: payload.params\n\t\t\t})\n\n\t\t\tthis.$state.getSettingConditionGroup.result = response\n\t\t\tthis.$state.form.group_name = response.group_name\n\t\t\tthis.$state.form.conditions = response.conditions\n\t\t\tthis.$state.form.categories = response.categories.filter(category => !!category.is_checked)\n\t\t\tthis.$state.form.is_price_sync = response.is_price_sync\n\t\t\tsettingConditionStore.$state.form.activeConditions = response.conditions\n\n\t\t\tif (response.price_sync_source)\n\t\t\t\tthis.$state.priceSyncCompanySource = response.price_sync_source\n\n\t\t\treturn response\n\t\t},\n\t\tasync $createSettingConditionGroup() {\n\t\t\tconst data = {\n\t\t\t\tgroup_name: this.$state.form.group_name,\n\t\t\t\tcategories: JSON.stringify(this.$state.form.categories),\n\t\t\t\tconditions: this.$state.form.conditions.map(condition => ({\n\t\t\t\t\t...condition,\n\t\t\t\t\tterms: [condition.term, ...condition.terms]\n\t\t\t\t}))\n\t\t\t}\n\n\t\t\treturn request({\n\t\t\t\turl: `/v1/pos/condition/add-category`,\n\t\t\t\tmethod: 'post',\n\t\t\t\tdata: data\n\t\t\t})\n\t\t},\n\t\tasync $updateSettingConditionGroup(payload) {\n\t\t\tconst data = {\n\t\t\t\tgroup_name: this.$state.form.group_name,\n\t\t\t\tcategories: JSON.stringify(this.$state.form.categories),\n\t\t\t\tconditions: this.$state.form.conditions\n\t\t\t}\n\n\t\t\treturn request({\n\t\t\t\turl: `/v1/pos/condition/edit-category/${payload.id}`,\n\t\t\t\tmethod: 'post',\n\t\t\t\tdata: data\n\t\t\t})\n\t\t},\n\t\tasync $deleteSettingConditionGroup(payload) {\n\t\t\treturn request({\n\t\t\t\turl: `/v1/pos/condition/delete-category/${payload.id}`,\n\t\t\t\tmethod: 'post',\n\t\t\t\tdata: {\n\t\t\t\t\t_method: 'DELETE'\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t\tasync $getSettingConditionGroupDevices() {\n\t\t\tconst response = await request({\n\t\t\t\turl: '/v1/pos/condition/devices',\n\t\t\t\tmethod: 'get'\n\t\t\t})\n\n\t\t\tthis.$state.getSettingConditionGroupDevices.result = response\n\n\t\t\treturn response\n\t\t}\n\t}\n})\n\nexport const useSettingConditionStore = defineStore('settingCondition', {\n\tstate: () => {\n\t\treturn {\n\t\t\tform: {\n\t\t\t\tsub_domain: undefined,\n\t\t\t\tconditions: [],\n\t\t\t\tactiveConditions: [],\n\t\t\t\tsources: [],\n\t\t\t\tselectedSource: undefined,\n\t\t\t\tselectedConditions: []\n\t\t\t},\n\t\t\tgetSettingConditions: {\n\t\t\t\tresult: undefined,\n\t\t\t\tisLoading: false\n\t\t\t},\n\t\t\tgetSettingConditionSources: {\n\t\t\t\tresult: undefined,\n\t\t\t\tisLoading: false\n\t\t\t},\n\t\t\tcreateSettingCondition: {\n\t\t\t\tisLoading: false\n\t\t\t},\n\t\t\tupdateSettingCondition: {\n\t\t\t\tisLoading: false\n\t\t\t},\n\t\t\tdeleteSettingCondition: {\n\t\t\t\tisLoading: false\n\t\t\t},\n\t\t\tsortSettingCondition: {\n\t\t\t\tisLoading: false\n\t\t\t},\n\t\t\tcreateSettingConditionQuestionBulk: {\n\t\t\t\tisLoading: false\n\t\t\t}\n\t\t}\n\t},\n\tgetters: {\n\t\tisMappingSourceLoading(state) {\n\t\t\treturn (\n\t\t\t\tstate.getSettingConditions.isLoading ||\n\t\t\t\tstate.getSettingConditionSources.isLoading ||\n\t\t\t\tstate.deleteSettingCondition.isLoading\n\t\t\t)\n\t\t},\n\t\tisMappingListLoading(state) {\n\t\t\treturn (\n\t\t\t\tstate.createSettingCondition.isLoading ||\n\t\t\t\tstate.updateSettingCondition.isLoading ||\n\t\t\t\tstate.deleteSettingCondition.isLoading ||\n\t\t\t\tstate.sortSettingCondition.isLoading ||\n\t\t\t\tstate.createSettingConditionQuestionBulk.isLoading\n\t\t\t)\n\t\t}\n\t},\n\tactions: {\n\t\tisConditionActive(condition) {\n\t\t\tconst activeConditions = this.$state.form.activeConditions\n\n\t\t\treturn (\n\t\t\t\tactiveConditions &&\n\t\t\t\tactiveConditions.findIndex(activeCondition => {\n\t\t\t\t\tconst sourceName = condition.name.split(' ').join('')\n\t\t\t\t\tconst activeName = activeCondition.name.split(' ').join('')\n\n\t\t\t\t\treturn activeName.toLowerCase() === sourceName.toLowerCase()\n\t\t\t\t}) !== -1\n\t\t\t)\n\t\t},\n\t\tresetSettingConditionForm() {\n\t\t\tthis.$state.form.sub_domain = undefined\n\t\t\tthis.$state.form.conditions = []\n\t\t\tthis.$state.form.activeConditions = []\n\t\t\tthis.$state.form.sources = []\n\t\t\tthis.$state.form.selectedSource = undefined\n\t\t\tthis.$state.form.selectedConditions = []\n\t\t},\n\t\tasync $getSettingConditions(payload) {\n\t\t\tconst response = await request({\n\t\t\t\turl: `/v1/pos/pricing/pricesync-conditions`,\n\t\t\t\tmethod: 'get',\n\t\t\t\tparams: payload.params\n\t\t\t})\n\n\t\t\tthis.$state.getSettingConditions.result = response\n\t\t\tthis.$state.form.conditions = response.conditions.map(condition => ({\n\t\t\t\t...condition,\n\t\t\t\tgroup_name: response.name,\n\t\t\t\tsub_domain: payload.params.sub_domain || payload.sub_domain\n\t\t\t}))\n\n\t\t\treturn response\n\t\t},\n\t\tasync $createSettingCondition(payload) {\n\t\t\tpayload.data.terms = JSON.stringify([payload.data.term, ...payload.data.terms])\n\n\t\t\tconst response = await request({\n\t\t\t\turl: `/v1/pos/condition/add/${payload.id}`,\n\t\t\t\tmethod: 'post',\n\t\t\t\tdata: payload.data\n\t\t\t})\n\n\t\t\treturn response\n\t\t},\n\t\tasync $updateSettingCondition(payload) {\n\t\t\tpayload.data.terms = JSON.stringify([payload.data.term, ...payload.data.terms])\n\n\t\t\treturn await request({\n\t\t\t\turl: `/v1/pos/condition/edit/${payload.id}`,\n\t\t\t\tmethod: 'post',\n\t\t\t\tdata: payload.data\n\t\t\t})\n\t\t},\n\t\tasync $deleteSettingCondition(payload) {\n\t\t\treturn await request({\n\t\t\t\turl: `/v1/pos/condition/delete/${payload.id}`,\n\t\t\t\tmethod: 'post',\n\t\t\t\tdata: {\n\t\t\t\t\t_method: 'DELETE'\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t\tasync $sortSettingCondition(payload) {\n\t\t\tpayload.data.sorting = JSON.stringify([...payload.data.sorting])\n\n\t\t\treturn await request({\n\t\t\t\turl: `/v1/pos/condition/sort`,\n\t\t\t\tmethod: 'post',\n\t\t\t\tdata: payload.data\n\t\t\t})\n\t\t},\n\t\tasync $getSettingConditionSources(payload) {\n\t\t\tconst filteredCategoryId = payload.category_id?.toString().includes('8084') \n\t\t\t\t? null \n\t\t\t\t: payload.category_id\n\n\t\t\tif (payload.category_id?.toString().includes('8084')) {\n\t\t\t\tconst emptyResponse = []\n\t\t\t\tthis.$state.getSettingConditionSources.result = emptyResponse\n\t\t\t\tthis.$state.form.sources = emptyResponse\n\t\t\t\treturn emptyResponse\n\t\t\t}\n\t\t\tconst response = await request({\n\t\t\t\turl: `/v1/pos/pricing/syncable-sources`,\n\t\t\t\tmethod: 'get',\n\t\t\t\tparams: {\n\t\t\t\t\tcategory_id: filteredCategoryId,\n\t\t\t\t\tlogo: true\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis.$state.getSettingConditionSources.result = response\n\t\t\tthis.$state.form.sources = response\n\n\t\t\treturn response\n\t\t},\n\t\tasync $createSettingConditionQuestionBulk(payload) {\n\t\t\treturn await request({\n\t\t\t\turl: `/v1/pos/condition/bulk/questions`,\n\t\t\t\tmethod: 'post',\n\t\t\t\tdata: payload.data\n\t\t\t})\n\t\t}\n\t}\n})","<script setup>\nimport { computed, defineExpose, onMounted } from 'vue'\nimport { useVuelidate } from '@vuelidate/core'\nimport { required } from '@/validations/index'\nimport { useSettingConditionGroupStore } from '@/store/pinia/setting/condition'\nimport { injectSettingConditionFormContext } from './SettingConditionForm.vue'\nimport { useRoute } from 'vue-router'\n\n// Components\nimport MultiSelect from 'vue-multiselect'\nimport Input from 'bbUi/components/input/input.vue'\n\nconst route = useRoute()\nconst settingConditionFormContext = injectSettingConditionFormContext()\nconst settingConditionGroupStore = useSettingConditionGroupStore()\nconst validation = useVuelidate(\n\t{\n\t\tgroup_name: { required },\n\t\tcategories: { required }\n\t},\n\tsettingConditionGroupStore.$state.form,\n\t{\n\t\t$lazy: true\n\t}\n)\n\nconst multiSelectClass = computed(() => ({\n\t'multiselect--invalid': validation.value.categories.$invalid\n}))\nconst isCategoriesExist = computed(\n\t() => settingConditionGroupStore.$state.form.categories.length > 0\n)\nconst devicesFiltered = computed(() => {\n\tif (isCategoriesExist.value) {\n\t\tconst devices = settingConditionGroupStore.$state.getSettingConditionGroupDevices.result\n\n\t\treturn settingConditionGroupStore.isMac >= 0\n\t\t\t? devices.filter(device => device.is_mac === 1)\n\t\t\t: devices.filter(device => device.is_mac === 0)\n\t}\n\n\treturn settingConditionGroupStore.$state.getSettingConditionGroupDevices.result\n})\n\nconst onSubmit = async () => {\n\tawait validation.value.$validate()\n\n\treturn !validation.value.$error\n}\n\nif (settingConditionFormContext.priceEditor)\n\tsettingConditionGroupStore.$state.form.categories =\n\t\tsettingConditionGroupStore.$state.getSettingConditionGroupDevices.result.filter(\n\t\t\tdevice =>\n\t\t\t\tdevice.category_id == settingConditionFormContext.priceEditorCategory.id &&\n\t\t\t\tdevice.name?.toLowerCase() ==\n\t\t\t\t\tsettingConditionFormContext.priceEditorCategory?.name?.toLowerCase()\n\t\t)\n\ndefineExpose({\n\tonSubmit\n})\n\nawait settingConditionGroupStore.$getSettingConditionGroupDevices()\n\nonMounted(() => {\n  const modelFromUrl = route.query.model\n  \n  if (modelFromUrl && devicesFiltered.value.length > 0) {\n    const deviceToSelect = devicesFiltered.value.find(device => \n      device.name === modelFromUrl || \n      device.name.toLowerCase() === modelFromUrl.toLowerCase()\n    )\n    \n    if (deviceToSelect) {\n      settingConditionGroupStore.$state.form.categories = [deviceToSelect]\n    }\n  }\n})\n</script>\n\n<template>\n\t<div class=\"lg:w-2/5 space-y-4\">\n\t\t<div>\n\t\t\t<div class=\"flex items-center gap-x-1\">\n\t\t\t\t<label for=\"CategoryName\">Category Name</label>\n\t\t\t\t<Tooltip placement=\"top\">\n\t\t\t\t\t<template #content>\n\t\t\t\t\t\t<div class=\"w-64 text-sm\">\n\t\t\t\t\t\t\tThe category names are internal only and not customer-facing.\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</template>\n\t\t\t\t\t<template #default>\n\t\t\t\t\t\t<i class=\"material-icons text-teal-04\">info</i>\n\t\t\t\t\t</template>\n\t\t\t\t</Tooltip>\n\t\t\t</div>\n\t\t\t<div class=\"flex gap-x-4 items-center\">\n\t\t\t\t<div class=\"flex-1\">\n\t\t\t\t\t<Input\n\t\t\t\t\t\tv-model=\"settingConditionGroupStore.$state.form.group_name\"\n\t\t\t\t\t\tname=\"CategoryName\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Category name\"\n\t\t\t\t\t\tclass=\"w-full\"\n\t\t\t\t\t\t:view=\"(validation.group_name.$invalid && 'danger') || 'default'\"\n\t\t\t\t\t\t:disabled=\"settingConditionFormContext.isSynced.value\" />\n\t\t\t\t\t<span\n\t\t\t\t\t\tv-for=\"n in validation.group_name.$errors.length\"\n\t\t\t\t\t\tclass=\"text-red-base mt-2 block\"\n\t\t\t\t\t\t:key=\"n\">\n\t\t\t\t\t\tCategory name is required\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div v-if=\"settingConditionFormContext.isSynced.value\" whitelabel=\"remove\">\n\t\t\t\t\t<Tooltip placement=\"right\">\n\t\t\t\t\t\t<template #content>\n\t\t\t\t\t\t\t<div class=\"xl:max-w-lg max-w-sm\" style=\"word-wrap: break-word\">\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tThis product's category name is locked because you are using price sync\n\t\t\t\t\t\t\t\t\t<template v-if=\"settingConditionGroupStore.companyName\">\n\t\t\t\t\t\t\t\t\t\tfrom\n\t\t\t\t\t\t\t\t\t\t<b>{{ settingConditionGroupStore.companyName }}</b>\n\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t\t.\n\t\t\t\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\thref=\"https://help.reusely.com/en/articles/9176424-how-price-sync-works\"\n\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\t\tnoreferrer\n\t\t\t\t\t\t\t\t\t\t\tnoopener\n\t\t\t\t\t\t\t\t\t\t\tclass=\"mx-2 text-white underline\">\n\t\t\t\t\t\t\t\t\t\t\tRead More\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</b>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t<template #default>\n\t\t\t\t\t\t\t<i class=\"material-icons icon-md select-none\">lock</i>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div>\n\t\t\t<label>Assign Your Condition Item</label>\n\t\t\t<div class=\"flex gap-x-4 items-center\">\n\t\t\t\t<div class=\"flex-1\">\n\t\t\t\t\t<MultiSelect\n\t\t\t\t\t\tv-model=\"settingConditionGroupStore.$state.form.categories\"\n\t\t\t\t\t\tplaceholder=\"Search items\"\n\t\t\t\t\t\tlabel=\"name\"\n\t\t\t\t\t\ttrack-by=\"category_id\"\n\t\t\t\t\t\t:options=\"devicesFiltered\"\n\t\t\t\t\t\t:multiple=\"true\"\n\t\t\t\t\t\t:hide-selected=\"false\"\n\t\t\t\t\t\t:show-labels=\"false\"\n\t\t\t\t\t\t:show-no-results=\"true\"\n\t\t\t\t\t\t:show-no-options=\"true\"\n\t\t\t\t\t\t:class=\"multiSelectClass\"\n\t\t\t\t\t\t:disabled=\"\n\t\t\t\t\t\t\tsettingConditionFormContext.isSynced.value ||\n\t\t\t\t\t\t\tsettingConditionFormContext.priceEditor ||\n\t\t\t\t\t\t\tsettingConditionGroupStore.isUniqueAndMacDisabled\n\t\t\t\t\t\t\"\n\t\t\t\t\t\trequired>\n\t\t\t\t\t\t<template #option=\"props\">\n\t\t\t\t\t\t\t<p class=\"text-sm text-grey-03 mb-1\">\n\t\t\t\t\t\t\t\t{{ props.option.brand }}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p>{{ props.option.name }}</p>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</MultiSelect>\n\t\t\t\t\t<span\n\t\t\t\t\t\tv-for=\"o in validation.categories.$errors.length\"\n\t\t\t\t\t\t:key=\"o\"\n\t\t\t\t\t\tclass=\"text-red-base mt-2 block\">\n\t\t\t\t\t\tItem is required\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div v-if=\"settingConditionFormContext.isSynced.value\" whitelabel=\"remove\">\n\t\t\t\t\t<Tooltip placement=\"right\">\n\t\t\t\t\t\t<template #content>\n\t\t\t\t\t\t\t<div class=\"xl:max-w-lg max-w-sm\" style=\"word-wrap: break-word\">\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tThis product's category name is locked because you are using price sync\n\t\t\t\t\t\t\t\t\t<template v-if=\"settingConditionGroupStore.$state.form.companyName\">\n\t\t\t\t\t\t\t\t\t\tfrom\n\t\t\t\t\t\t\t\t\t\t<b>{{ settingConditionGroupStore.$state.form.companyName }}</b>\n\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t\t.\n\t\t\t\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\thref=\"https://help.reusely.com/en/articles/9176424-how-price-sync-works\"\n\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\t\tnoreferrer\n\t\t\t\t\t\t\t\t\t\t\tnoopener\n\t\t\t\t\t\t\t\t\t\t\tclass=\"mx-2 text-white underline\">\n\t\t\t\t\t\t\t\t\t\t\tRead More\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</b>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t<template #default>\n\t\t\t\t\t\t\t<i class=\"material-icons icon-md select-none\">lock</i>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n","<script setup>\nimport { defineModel } from 'vue'\n\n// Components\nimport Modal from 'bbUi/components/modal/modal.vue'\nimport Button from 'bbUi/components/button/button.vue'\n\ndefineProps({\n\tloading: {\n\t\ttype: Boolean,\n\t\tdefault: false\n\t},\n\tis_price_sync: {\n\t\ttype: Boolean,\n\t\tdefault: false\n\t}\n})\nconst emit = defineEmits(['delete', 'cancel'])\nconst modelShow = defineModel({\n\ttype: Boolean,\n\tdefault: false\n})\n</script>\n\n<template>\n\t<Modal size=\"xs\" :hide-header=\"$props.is_price_sync\" :hide-footer=\"$props.is_price_sync\" v-model=\"modelShow\" title=\"Delete Condition\" @close=\"$emit('cancel')\">\n\t\t<template #default>\n\t\t\t<div v-if=\"$props.is_price_sync\" class=\"py-12 flex flex-col items-center\">\n\t\t\t\t<img src=\"@/assets/icon/attention-warning.svg\" alt=\"\">\n\t\t\t\t<h2 class=\"font-semibold text-2xl mt-6\">Delete Conditions?</h2>\n\t\t\t\t<p class=\"mt-3 text-center text-teal-03\">Deleting conditions will remove all items under these conditions from your widget and remove their price. You can always recreate conditions, set price manually, or enable price sync at any time. Are you sure you want to proceed?</p>\n\t\t\t\t<div class=\"w-full flex justify-between mt-8\">\n\t\t\t\t\t<Button color=\"white\" view=\"smooth\" @click=\"$emit('cancel')\">Cancel</Button>\n\t\t\t\t\t<Button color=\"teal\" :loading=\"$props.loading\" @click=\"$emit('delete')\">Confirm</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<h6 v-else class=\"font-normal mb-5 text-lg\">Are you sure want to delete this condition?</h6>\n\t\t</template>\n\t\t<template #footer>\n\t\t\t<Button color=\"red\" :loading=\"$props.loading\" @click=\"$emit('delete')\">Delete</Button>\n\t\t</template>\n\t</Modal>\n</template>\n","<script setup>\nimport { injectSettingConditionFormModalConditionContext } from './SettingConditionFormModalCondition.vue'\n\n// Components\nimport Input from 'bbUi/components/input'\nimport Button from 'bbUi/components/button'\nimport { VueDraggableNext as Draggable } from 'vue-draggable-next'\n\nconst settingConditionFormModalConditionContext = injectSettingConditionFormModalConditionContext()\n\nconst onAddTerm = () => {\n\tsettingConditionFormModalConditionContext.state.isSubmitting = false\n\tsettingConditionFormModalConditionContext.form.value.terms.push('')\n}\nconst onDeleteTerm = index => {\n\tsettingConditionFormModalConditionContext.state.isSubmitting = false\n\tsettingConditionFormModalConditionContext.form.value.terms.splice(index, 1)\n}\n</script>\n\n<template>\n\t<div class=\"space-y-3\">\n\t\t<div>\n\t\t\t<Input\n\t\t\t\tv-model=\"settingConditionFormModalConditionContext.form.value.name\"\n\t\t\t\ttype=\"text\"\n\t\t\t\tlabel=\"Condition Name\"\n\t\t\t\tplaceholder=\"e.g., Broken, Normal, New, etc.\"\n\t\t\t\tclass=\"w-full\"\n\t\t\t\tmaxlength=\"32\"\n\t\t\t\t:view=\"\n\t\t\t\t\t(settingConditionFormModalConditionContext.validation.value.name.$invalid && 'danger') ||\n\t\t\t\t\t'default'\n\t\t\t\t\" />\n\t\t\t<span class=\"text-xs text-grey-04 mt-2 block\">Maximum 32 Character</span>\n\t\t\t<span\n\t\t\t\tclass=\"text-red-base mt-2 block\"\n\t\t\t\tv-for=\"(error, n) of settingConditionFormModalConditionContext.validation.value.name\n\t\t\t\t\t.$errors\"\n\t\t\t\t:key=\"n\">\n\t\t\t\t{{ error.$message }}.\n\t\t\t</span>\n\t\t</div>\n\t\t<div>\n\t\t\t<Input\n\t\t\t\tv-model=\"settingConditionFormModalConditionContext.form.value.term\"\n\t\t\t\t:disabled=\"!settingConditionFormModalConditionContext.form.value.name\"\n\t\t\t\ttype=\"text\"\n\t\t\t\tlabel=\"Condition Guideline\"\n\t\t\t\tplaceholder=\"e.g., Choose if All of the following are true:\"\n\t\t\t\tmaxlength=\"200\"\n\t\t\t\tclass=\"w-full\"\n\t\t\t\t:view=\"\n\t\t\t\t\t(settingConditionFormModalConditionContext.validation.value.term.$invalid && 'danger') ||\n\t\t\t\t\t'default'\n\t\t\t\t\" />\n\t\t\t<span class=\"text-xs text-grey-04 mt-2 block\">\n\t\t\t\tMaximum 200 character\n\t\t\t</span>\n\t\t\t<p\n\t\t\t\tv-for=\"(error, n) of settingConditionFormModalConditionContext.validation.value.term\n\t\t\t\t\t.$errors\"\n\t\t\t\t:key=\"n\">\n\t\t\t\t<span v-if=\"error && error.$validator === 'minLength'\" class=\"text-red-base mt-2 block\">\n\t\t\t\t\tTitle is required\n\t\t\t\t</span>\n\t\t\t\t<span v-else class=\"text-red-base mt-2 block\">\n\t\t\t\t\t{{ error.$message }}\n\t\t\t\t</span>\n\t\t\t</p>\n\t\t</div>\n\t\t<div class=\"block\">\n\t\t\t<label class=\"mb-2\">Terms</label>\n\t\t\t<Draggable\n\t\t\t\t:list=\"settingConditionFormModalConditionContext.form.value.terms\"\n\t\t\t\thandle=\".dragable__icon\">\n\t\t\t\t<div\n\t\t\t\t\tv-for=\"(term, index) in settingConditionFormModalConditionContext.form.value.terms\"\n\t\t\t\t\t:key=\"index\"\n\t\t\t\t\tclass=\"condition__draggable py-2\">\n\t\t\t\t\t<div class=\"flex justify-between items-center -mx-2\">\n\t\t\t\t\t\t<div class=\"pb-2\">\n\t\t\t\t\t\t\t<span class=\"material-icons text-grey-04 text-2xl mr-3 cursor-move dragable__icon\">\n\t\t\t\t\t\t\t\tdrag_handle\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"px-2 flex-1\">\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tv-model=\"settingConditionFormModalConditionContext.form.value.terms[index]\"\n\t\t\t\t\t\t\t\t:disabled=\"!settingConditionFormModalConditionContext.form.value.name\"\n\t\t\t\t\t\t\t\tplaceholder=\"e.g., Activation Locked, Device Power On, etc.\"\n\t\t\t\t\t\t\t\tmaxlength=\"200\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tclass=\"mb-2\"\n\t\t\t\t\t\t\t\tblock\n\t\t\t\t\t\t\t\t:view=\"\n\t\t\t\t\t\t\t\t\t(settingConditionFormModalConditionContext.validation.value.terms.$model[index]\n\t\t\t\t\t\t\t\t\t\t.length < 1 &&\n\t\t\t\t\t\t\t\t\t\tsettingConditionFormModalConditionContext.state.isSubmitting &&\n\t\t\t\t\t\t\t\t\t\t'danger') ||\n\t\t\t\t\t\t\t\t\t'default'\n\t\t\t\t\t\t\t\t\" />\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tv-if=\"\n\t\t\t\t\t\t\t\t\tsettingConditionFormModalConditionContext.validation.value.terms.$model[index]\n\t\t\t\t\t\t\t\t\t\t.length < 1 && settingConditionFormModalConditionContext.state.isSubmitting\n\t\t\t\t\t\t\t\t\">\n\t\t\t\t\t\t\t\t<span class=\"text-red-base mt-2 block\">\n\t\t\t\t\t\t\t\t\tIt must be at least one characters in length\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"pb-2 flex items-center -mx-1\">\n\t\t\t\t\t\t\t<div class=\"px-1 mx-6\">\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t:disabled=\"\n\t\t\t\t\t\t\t\t\t\tsettingConditionFormModalConditionContext.form.value.terms.length === 1\n\t\t\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\t\t\tcolor=\"red\"\n\t\t\t\t\t\t\t\t\tdense\n\t\t\t\t\t\t\t\t\t@click=\"onDeleteTerm(index)\">\n\t\t\t\t\t\t\t\t\t<span class=\"material-icons text-sm\">delete</span>\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Draggable>\n\t\t\t<span class=\"text-xs text-grey-04 block\">\n\t\t\t\tMaximum 200 character\n\t\t\t</span>\n\t\t\t<Button class=\"mt-4\" view=\"outlined\" color=\"teal\" dense @click=\"onAddTerm\">\n\t\t\t\t<span class=\"mx-2\">Add Terms</span>\n\t\t\t</Button>\n\t\t</div>\n\t\t<span\n\t\t\tv-if=\"settingConditionFormModalConditionContext.validation.value.questions.$error\"\n\t\t\tclass=\"text-red-base mt-2 block\">\n\t\t\tThere's required field on Conditional Questions Tab\n\t\t</span>\n\t</div>\n</template>\n","<script setup>\nimport { computed, reactive, defineModel } from 'vue'\nimport { deepClone } from 'utils/deep-clone'\nimport { injectSettingConditionFormContext } from '../../SettingConditionForm.vue'\n\n// Components\nimport { VueDraggableNext as Draggable } from 'vue-draggable-next'\nimport { ElMessage } from 'element-plus'\nimport Button from 'bbUi/components/button'\nimport Checkbox from 'bbUi/components/checkbox'\nimport Fieldset from 'bbUi/components/fieldset'\nimport Input from 'bbUi/components/input'\nimport Select from 'bbUi/components/select'\nimport SettingConditionWarningQuestion from '../../../SettingConditionWarningQuestion.vue'\n\nconst props = defineProps({\n\tvalidation: Object,\n\tisBulk: {\n\t\ttype: Boolean,\n\t\tdefault: false\n\t}\n})\nconst modelForm = defineModel('form', {\n\ttype: Object,\n\tdefault: {\n\t\tquestions: [\n\t\t\t{\n\t\t\t\tid: undefined,\n\t\t\t\taction: 'edit',\n\t\t\t\tquestion: '',\n\t\t\t\tis_required: false,\n\t\t\t\tanswer_type: 'Single',\n\t\t\t\tanswers: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: undefined,\n\t\t\t\t\t\taction: 'edit',\n\t\t\t\t\t\tanswer: '',\n\t\t\t\t\t\ttype: 'Do Nothing',\n\t\t\t\t\t\tamount_type: 'Fixed',\n\t\t\t\t\t\tamount_price: 0\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t},\n\trequired: true\n})\n\nconst settingConditionFormContext = injectSettingConditionFormContext()\nconst state = reactive({\n\ttempQuestions: []\n})\n\nconst filteredQuestions = computed(() =>\n\tmodelForm.value.questions.filter(question => question.action !== 'delete')\n)\n\nconst filteredAnswers = answers => answers.filter(answer => answer.action !== 'delete')\nconst onQuestionToggle = () => {\n\tif (modelForm.value.has_question) {\n\t\tstate.tempQuestions = deepClone(modelForm.value.questions)\n\n\t\tif (modelForm.value.questions.length < 1) onAddQuestion()\n\t} else {\n\t\tmodelForm.value.questions = deepClone(state.tempQuestions)\n\t\tstate.tempQuestions = []\n\t}\n}\nconst onAddQuestion = () => {\n\tif (filteredQuestions.value.length >= 3) {\n\t\tElMessage({\n\t\t\ttype: 'warning',\n\t\t\tmessage: 'Only 3 questions are allowed per condition'\n\t\t})\n\t} else\n\t\tmodelForm.value.questions.push({\n\t\t\tid: undefined,\n\t\t\taction: 'edit',\n\t\t\tquestion: '',\n\t\t\tis_required: false,\n\t\t\tanswer_type: 'Single',\n\t\t\tanswers: [\n\t\t\t\t{\n\t\t\t\t\tid: undefined,\n\t\t\t\t\taction: 'edit',\n\t\t\t\t\tanswer: '',\n\t\t\t\t\ttype: 'Do Nothing',\n\t\t\t\t\tamount_type: 'Fixed',\n\t\t\t\t\tamount_price: 0\n\t\t\t\t}\n\t\t\t]\n\t\t})\n}\nconst onAddAnswer = questionIndex => {\n\tif (filteredAnswers(modelForm.value.questions[questionIndex].answers).length >= 10) {\n\t\tElMessage({\n\t\t\ttype: 'warning',\n\t\t\tmessage: 'Only 10 answers are allowed per question'\n\t\t})\n\t} else\n\t\tmodelForm.value.questions[questionIndex].answers.push({\n\t\t\tid: undefined,\n\t\t\taction: 'edit',\n\t\t\tanswer: '',\n\t\t\ttype: 'Do Nothing',\n\t\t\tamount_type: 'Fixed',\n\t\t\tamount_price: 0\n\t\t})\n}\nconst onRemoveQuestion = questionIndex => {\n\tif (settingConditionFormContext.conditionId.value)\n\t\tmodelForm.value.questions[questionIndex].action = 'delete'\n\telse modelForm.value.questions.splice(questionIndex, 1)\n}\nconst onRemoveAnswer = (question, answerIndex) => {\n\tif (settingConditionFormContext.conditionId.value) question.answers[answerIndex].action = 'delete'\n\telse question.answers.splice(answerIndex, 1)\n}\n</script>\n\n<template>\n\t<template v-if=\"!$props.isBulk\">\n\t\t<p class=\"font-semibold mb-2\">Conditional Questions</p>\n\t\t<Checkbox\n\t\t\tv-model=\"modelForm.has_question\"\n\t\t\tcolor=\"teal\"\n\t\t\tview=\"smooth\"\n\t\t\ttype=\"toggle\"\n\t\t\tclass=\"mb-2\"\n\t\t\t@input=\"onQuestionToggle\"\n\t\t\tblock>\n\t\t\t&nbsp;\n\t\t</Checkbox>\n\t</template>\n\t<SettingConditionWarningQuestion v-else />\n\t<div v-if=\"modelForm.has_question\" class=\"space-y-4 mb-4\">\n\t\t<Fieldset v-for=\"(question, questionIndex) in filteredQuestions\">\n\t\t\t<template #label>Question {{ questionIndex + 1 }}</template>\n\t\t\t<template #default>\n\t\t\t\t<div class=\"mb-4\">\n\t\t\t\t\t<div class=\"flex gap-2\">\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tv-model=\"question.question\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t:view=\"\n\t\t\t\t\t\t\t\t(validation.questions.$error &&\n\t\t\t\t\t\t\t\t\tvalidation.questions.$each.$response.$errors[questionIndex].question.length > 0 &&\n\t\t\t\t\t\t\t\t\t'danger') ||\n\t\t\t\t\t\t\t\t'default'\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\tblock />\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\tv-if=\"filteredQuestions.length > 1\"\n\t\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\t\tclass=\"p-2\"\n\t\t\t\t\t\t\t@click.prevent=\"onRemoveQuestion(questionIndex)\">\n\t\t\t\t\t\t\t<span class=\"material-icons text-red-04\">close</span>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<span\n\t\t\t\t\t\tv-if=\"validation.questions.$error\"\n\t\t\t\t\t\tclass=\"text-red-base mt-2 block\"\n\t\t\t\t\t\tv-for=\"(error, n) of validation.questions.$each.$response.$errors[questionIndex]\n\t\t\t\t\t\t\t.question\"\n\t\t\t\t\t\t:key=\"n\">\n\t\t\t\t\t\t{{ error.$message }}.\n\t\t\t\t\t</span>\n\t\t\t\t\t<div class=\"mt-2\">\n\t\t\t\t\t\t<Checkbox v-model=\"question.is_required\" value-off=\"false\">\n\t\t\t\t\t\t\t<span class=\"font-medium\">Required</span>\n\t\t\t\t\t\t</Checkbox>\n\t\t\t\t\t\t<Checkbox v-model=\"question.answer_type\" value=\"Multiple\" value-off=\"Single\">\n\t\t\t\t\t\t\t<span class=\"font-medium\">Multiple Answers</span>\n\t\t\t\t\t\t</Checkbox>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<p class=\"font-semibold mb-4\">Answers</p>\n\t\t\t\t<Draggable\n\t\t\t\t\t:list=\"filteredAnswers(question.answers)\"\n\t\t\t\t\thandle=\".dragable__icon\"\n\t\t\t\t\tclass=\"space-y-4 mb-4\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tv-for=\"(answer, answerIndex) in filteredAnswers(question.answers)\"\n\t\t\t\t\t\t:key=\"answer\"\n\t\t\t\t\t\tclass=\"condition__draggable border border-grey-01 border-solid rounded-md px-6 py-4\">\n\t\t\t\t\t\t<div class=\"flex justify-start gap-x-4\">\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<span class=\"material-icons text-grey-04 text-2xl cursor-move dragable__icon\">\n\t\t\t\t\t\t\t\t\tdrag_handle\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"flex-1\">\n\t\t\t\t\t\t\t\t<div class=\"flex justify-between items-center mb-2\">\n\t\t\t\t\t\t\t\t\t<p class=\"font-semibold\">Answer {{ answerIndex + 1 }}</p>\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\tv-if=\"filteredAnswers(question.answers).length > 1\"\n\t\t\t\t\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\t\t\t\t\t@click.prevent=\"onRemoveAnswer(question, answerIndex)\">\n\t\t\t\t\t\t\t\t\t\t<span class=\"material-icons text-red-04\">close</span>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"grid grid-cols-3 gap-2\">\n\t\t\t\t\t\t\t\t\t<div class=\"col-span-3\">\n\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\tv-model=\"answer.answer\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t:view=\"\n\t\t\t\t\t\t\t\t\t\t\t\t(!!validation.questions.$error &&\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidation.questions.$each.$response.$errors[questionIndex].answers[0] &&\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidation.questions.$each.$response.$errors[questionIndex].answers[0]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.$response.$errors[answerIndex].answer.length > 0 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t'danger') ||\n\t\t\t\t\t\t\t\t\t\t\t\t'default'\n\t\t\t\t\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\t\t\t\t\tblock />\n\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\tv-if=\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalidation.questions.$error &&\n\t\t\t\t\t\t\t\t\t\t\t\tvalidation.questions.$each.$response.$errors[questionIndex].answers[0]\n\t\t\t\t\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\t\t\t\t\tclass=\"text-red-base mt-2 block\"\n\t\t\t\t\t\t\t\t\t\t\tv-for=\"(error, n) of validation.questions.$each.$response.$errors[\n\t\t\t\t\t\t\t\t\t\t\t\tquestionIndex\n\t\t\t\t\t\t\t\t\t\t\t].answers[0].$response.$errors[answerIndex].answer\"\n\t\t\t\t\t\t\t\t\t\t\t:key=\"n\">\n\t\t\t\t\t\t\t\t\t\t\t{{ error.$message }}.\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\tv-model=\"answer.type\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Please Select\"\n\t\t\t\t\t\t\t\t\t\t\tclass=\"w-full max-w-lg\"\n\t\t\t\t\t\t\t\t\t\t\t:items=\"['Do Nothing', 'Mark Up', 'Mark Down']\" />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\tv-model=\"answer.amount_type\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Please Select\"\n\t\t\t\t\t\t\t\t\t\t\tclass=\"w-full max-w-lg\"\n\t\t\t\t\t\t\t\t\t\t\t:disabled=\"answer.type === 'Do Nothing'\"\n\t\t\t\t\t\t\t\t\t\t\t:items=\"['Fixed', 'Percentage']\" />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\tv-model=\"answer.amount_price\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\t:disabled=\"answer.type === 'Do Nothing'\"\n\t\t\t\t\t\t\t\t\t\t\tblock />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Draggable>\n\t\t\t\t<Button color=\"teal\" @click=\"onAddAnswer(questionIndex)\" dense>Add Answer</Button>\n\t\t\t</template>\n\t\t</Fieldset>\n\t\t<Button color=\"teal\" @click=\"onAddQuestion\" dense>Add Question</Button>\n\t</div>\n\t<span\n\t\tv-if=\"\n\t\t\t!$props.isBulk &&\n\t\t\t(validation.name.$error || validation.term.$error || validation.terms.$error)\n\t\t\"\n\t\tclass=\"text-red-base mt-2 block\">\n\t\tThere's required field on Active Conditions Tab\n\t</span>\n</template>\n","<script setup>\nimport { computed } from 'vue'\n\nconst props = defineProps({\n\tquestions: {\n\t\ttype: Array,\n\t\tdefault: () => []\n\t}\n})\n\nconst filteredQuestions = computed(() =>\n\tprops.questions.filter(question => question.action !== 'delete')\n)\n\nconst setAnswerPrice = answer => {\n\tlet answerPrice = ''\n\n\tif (answer.type === 'Do Nothing') return 0\n\telse if (answer.type === 'Mark Up') answerPrice += '+'\n\telse if (answer.type === 'Mark Down') answerPrice += '-'\n\n\tif (answer.amount_type === 'Fixed') answerPrice += `$${answer.amount_price}`\n\telse if (answer.amount_type === 'Percentage') answerPrice += `${answer.amount_price}%`\n\n\treturn answerPrice\n}\n\nconst filteredAnswers = answers => answers.filter(answer => answer.action !== 'delete')\n</script>\n\n<template>\n\t<div v-if=\"filteredQuestions && filteredQuestions.length > 0\">\n\t\t<div class=\"mb-2\">Conditional Questions:</div>\n\t\t<ol class=\"list-decimal pl-4\">\n\t\t\t<template v-for=\"(question, questionIndex) in filteredQuestions\" :key=\"questionIndex\">\n\t\t\t\t<li v-if=\"question.question\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{{ question.question }}\n\t\t\t\t\t\t<template v-if=\"question.is_required\">(Required)</template>\n\t\t\t\t\t</p>\n\t\t\t\t\t<ul v-if=\"question.answers && question.answers.length > 0\" class=\"list\">\n\t\t\t\t\t\t<template v-for=\"(answer, answerIndex) in filteredAnswers(question.answers)\" :key=\"answerIndex\">\n\t\t\t\t\t\t\t<li v-if=\"answer.answer\">\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t{{ answer.answer }}\n\t\t\t\t\t\t\t\t\t<span class=\"text-grey-02\">({{ setAnswerPrice(answer) }})</span>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</ul>\n\t\t\t\t</li>\n\t\t\t</template>\n\t\t</ol>\n\t</div>\n</template>\n","<script setup>\nimport { computed } from 'vue'\nimport { sanitize } from 'utils/dom'\n\n// Components\nimport Fieldset from 'bbUi/components/fieldset'\nimport SettingConditionFormPreviewConditional from './SettingConditionFormPreviewConditional.vue'\n\nconst props = defineProps({\n\tconditionName: {\n\t\ttype: String,\n\t\tdefault: ''\n\t},\n\tconditionGuideline: {\n\t\ttype: String,\n\t\tdefault: ''\n\t},\n\tconditionTerms: {\n\t\ttype: Array,\n\t\tdefault: () => []\n\t},\n\tquestions: {\n\t\ttype: Array,\n\t\tdefault: () => []\n\t}\n})\n\nconst sanitizedConditionTerms = computed(() =>\n\tprops.conditionTerms.map(term => {\n\t\treturn sanitize(term || '')\n\t})\n)\nconst sanitizedConditionGuideline = computed(() => sanitize(props.conditionGuideline || ''))\n</script>\n\n<template>\n\t<div class=\"h-full\">\n\t\t<Fieldset class=\"h-full\">\n\t\t\t<template #label>\n\t\t\t\t<span class=\"text-grey-04\">Preview Condition</span>\n\t\t\t</template>\n\t\t\t<template #default>\n\t\t\t<div class=\"mb-4 p-4 max-w-md break-words\">\n\t\t\t\t<h2 class=\"text-lg mb-4 break-words\">{{ $props.conditionName }}</h2>\n\t\t\t\t<div v-html=\"sanitizedConditionGuideline\" class=\"mb-2 break-words\"/>\n\t\t\t\t<ul class=\"list mb-4 break-words\">\n\t\t\t\t\t<template\n\t\t\t\t\t\tv-for=\"(condition, conditionKey) of sanitizedConditionTerms\"\n\t\t\t\t\t\t:key=\"conditionKey\">\n\t\t\t\t\t\t<li v-if=\"condition\" v-html=\"condition\" class=\"break-words\"></li>\n\t\t\t\t\t</template>\n\t\t\t\t</ul>\n\t\t\t\t<div class=\"max-w-md break-words\">\n\t\t\t\t\t<SettingConditionFormPreviewConditional :questions=\"$props.questions\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t</template>\n\t\t</Fieldset>\n\t</div>\n</template>\n","<script setup>\nimport { defineModel, ref } from 'vue'\n\n// Components\nimport Button from 'bbUi/components/button'\nimport Badge from 'bbUi/components/badge'\nimport Modal from 'bbUi/components/modal/modal.vue'\n\nconst modelShow = defineModel({\n\ttype: Boolean,\n\tdefault: false\n})\n</script>\n\n<template>\n\t<Modal v-model=\"modelShow\" title=\"Preview Condition\" size=\"sm\" no-padding hide-header>\n\t\t<template #default>\n\t\t\t<img\n\t\t\t\tsrc=\"/images/setting-condition-conditional-questions-upgrade-plan.png\"\n\t\t\t\talt=\"Conditional Questions\" />\n\t\t\t<div class=\"px-12 py-6\">\n\t\t\t\t<div class=\"text-3xl flex items-center gap-4 mb-4\">\n\t\t\t\t\t<p class=\"font-semibold\">Conditional Questions</p>\n\t\t\t\t\t<Badge color=\"green\" style=\"font-size: 1rem\">Growth</Badge>\n\t\t\t\t</div>\n\t\t\t\t<p class=\"text-xl\">\n\t\t\t\t\tSet conditional questions that determine item prices based on the customer's answers. You\n\t\t\t\t\tcan add up to three conditional questions per condition and up to ten answers per question\n\t\t\t\t\tfor each category or condition group.\n\t\t\t\t</p>\n\t\t\t\t<p class=\"text-xl\">\n\t\t\t\t\tFor example: Is the battery below 80%? If the customer answers yes, $10 is automatically\n\t\t\t\t\tdeducted. Be creative and fine-tune every single condition with detailed answers and\n\t\t\t\t\tpredefined price adjustments for each question.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</template>\n\t\t<template #footer>\n\t\t\t<div class=\"flex justify-between\">\n\t\t\t\t<Button color=\"teal\" view=\"outlined\" @click=\"modelShow = false\">Close</Button>\n\t\t\t\t<Button tag=\"a\" target=\"_blank\" href=\"/setting/plan\" color=\"teal\">Upgrade Plan</Button>\n\t\t\t</div>\n\t\t</template>\n\t</Modal>\n</template>\n","export default \"/images/setting-condition-conditional-questions-upgrade-plan.png\"","import { inject, provide } from 'vue'\n\nexport function createContext(contextName) {\n\tconst symbolDescription = `${contextName}Context`\n\tconst injectionKey = Symbol(symbolDescription)\n\n\tconst injectContext = (fallback) => {\n\t\tconst context = inject(injectionKey, fallback)\n\n\t\treturn context\n\t}\n\tconst provideContext = context => {\n\t\tprovide(injectionKey, context)\n\n\t\treturn context\n\t}\n\n\treturn [injectContext, provideContext]\n}\n","<script>\nimport { createContext } from 'utils/createContext'\n\nexport const [\n\tinjectSettingConditionFormModalConditionContext,\n\tprovideSettingConditionFormModalConditionContext\n] = createContext('SettingConditionFormModalCondition')\n</script>\n\n<script setup>\nimport { ref, watch, reactive } from 'vue'\nimport { useVuelidate } from '@vuelidate/core'\nimport { required } from '@/validations'\nimport { helpers, minLength, requiredIf } from '@vuelidate/validators'\nimport { isEmpty } from '@/utils/is'\nimport { deepClone } from '@/utils/deep-clone'\nimport { useUser } from '@/composable/user'\nimport { injectSettingConditionFormContext } from '../../SettingConditionForm.vue'\n\n// Components\nimport { ElMessage } from 'element-plus'\nimport Badge from 'bbUi/components/badge'\nimport Tab from 'bbUi/components/tab'\nimport Modal from 'bbUi/components/modal'\nimport Button from 'bbUi/components/button'\nimport SettingConditionFormModalConditionActive from './SettingConditionFormModalConditionActive.vue'\nimport SettingConditionFormModalConditionQuestion from './SettingConditionFormModalConditionQuestion.vue'\nimport SettingConditionFormPreview from '../../SettingConditionFormPreview/SettingConditionFormPreview.vue'\nimport SettingConditionFormModalUpgradePlan from '../SettingConditionFormModalUpgradePlan.vue'\nimport SettingConditionWarningQuestion from '../../../SettingConditionWarningQuestion.vue'\n\nconst props = defineProps({\n\tconditions: {\n\t\ttype: Array,\n\t\tdefault: undefined\n\t},\n\tselectedCondition: {\n\t\ttype: Object,\n\t\tdefault: undefined\n\t},\n\tisEdit: {\n\t\ttype: Boolean,\n\t\tdefault: false\n\t},\n\tselectedTab: {\n\t\ttype: String,\n\t\tdefault: 'Active'\n\t}\n})\nconst emit = defineEmits(['save', 'cancel'])\nconst modelShow = defineModel({\n\ttype: Boolean,\n\tdefault: false\n})\n\nconst settingConditionFormContext = injectSettingConditionFormContext()\nconst { me } = useUser()\nconst state = reactive({\n\tisLoading: false,\n\tisError: false,\n\tisSubmitting: false,\n\tisModalUpgradePlan: false,\n\tselectedTab: SettingConditionFormModalConditionActive,\n\ttabs: [\n\t\t{\n\t\t\tname: 'Active Conditions',\n\t\t\tcomponent: SettingConditionFormModalConditionActive\n\t\t},\n\t\t{\n\t\t\tname: 'Conditional Questions',\n\t\t\tcomponent: SettingConditionFormModalConditionQuestion\n\t\t}\n\t]\n})\nconst form = ref({\n\tname: '',\n\tterm: '',\n\tterms: [],\n\thas_question: false,\n\tquestions: []\n})\nconst validation = useVuelidate(\n\t{\n\t\tname: { required },\n\t\tterm: { required },\n\t\tterms: {\n\t\t\trequired: data => data.every(v => v.length > 0)\n\t\t\t// minLength: minLength(1),\n\t\t\t// $each: {\n\t\t\t// \trequired: requiredIf((data) => {\n\t\t\t// \t\tconsole.log(data)\n\t\t\t// \t\treturn !!data\n\t\t\t// \t}),\n\t\t\t// \tminLength: minLength(1)\n\t\t\t// }\n\t\t},\n\t\tquestions: {\n\t\t\trequired: requiredIf((_, sibling) => sibling.has_question),\n\t\t\t$each: helpers.forEach({\n\t\t\t\tquestion: { required: requiredIf((_, sibling) => sibling.action !== 'delete') },\n\t\t\t\tis_required: { required },\n\t\t\t\tanswer_type: { required },\n\t\t\t\tanswers: {\n\t\t\t\t\trequired,\n\t\t\t\t\t$each: helpers.forEach({\n\t\t\t\t\t\tanswer: { required: requiredIf((_, sibling) => sibling.action !== 'delete') },\n\t\t\t\t\t\ttype: { required },\n\t\t\t\t\t\tamount_type: {\n\t\t\t\t\t\t\trequired: requiredIf(\n\t\t\t\t\t\t\t\t(_, sibling) => sibling.type === 'Mark Up' || sibling.type === 'Mark Down'\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t},\n\t\t\t\t\t\tamount_price: {\n\t\t\t\t\t\t\trequired: requiredIf(\n\t\t\t\t\t\t\t\t(_, sibling) => sibling.type === 'Mark Up' || sibling.type === 'Mark Down'\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t},\n\tform,\n\t{ $stopPropagation: true, $lazy: true }\n)\n\nconst validateCondition = () => {\n\tvalidation.value.$validate()\n\n\treturn !validation.value.$invalid\n}\nconst checkTermsValue = () => {\n\tconst model = validation.value.terms.$model\n\n\tif (model.length <= 0) {\n\t\treturn false\n\t}\n\n\tfor (let i = 0; i < model.length; i++) {\n\t\tif (isEmpty(model[i]) || model[i].length < 1) {\n\t\t\treturn false\n\t\t}\n\t}\n\n\treturn true\n}\nconst onSaveModal = () => {\n\tif (form.value.has_question && me.value.package_id < 17) {\n\t\tstate.isModalUpgradePlan = true\n\n\t\treturn\n\t}\n\n\tstate.isSubmitting = true\n\n\tif (validateCondition() && checkTermsValue()) {\n\t\tconst conditionIndex = props.conditions.findIndex(\n\t\t\tcondition =>\n\t\t\t\tcondition.name.split(' ').join('').toLowerCase() ===\n\t\t\t\tform.value.name.split(' ').join('').toLowerCase()\n\t\t)\n\n\t\t// TODO: Check this later\n\t\tif (conditionIndex !== -1 && !settingConditionFormContext.conditionId.value && !props.isEdit) {\n\t\t\treturn ElMessage({\n\t\t\t\ttype: 'warning',\n\t\t\t\tmessage: 'Condition name is already taken!'\n\t\t\t})\n\t\t}\n\n\t\tstate.isError = false\n\t\tstate.isSubmitting = false\n\n\t\temit('save', form.value)\n\t}\n}\nconst onCloseModal = () => {\n\tstate.isSubmitting = false\n\temit('cancel')\n}\n\nwatch(\n\t() => [modelShow.value, props.isEdit],\n\t() => {\n\t\tif (!!modelShow.value) {\n\t\t\tstate.isSubmitting = false\n\t\t\tvalidation.value.$reset()\n\t\t}\n\n\t\tif (!!modelShow.value && !!props.isEdit) {\n\t\t\tform.value = deepClone(props.selectedCondition)\n\n\t\t\tif (props.selectedTab === 'Question')\n\t\t\t\tstate.selectedTab = SettingConditionFormModalConditionQuestion\n\t\t} else {\n\t\t\tstate.selectedTab = SettingConditionFormModalConditionActive\n\n\t\t\tform.value = {\n\t\t\t\tname: '',\n\t\t\t\tterm: '',\n\t\t\t\tterms: [''],\n\t\t\t\thas_question: false,\n\t\t\t\tquestions: []\n\t\t\t}\n\t\t}\n\t}\n)\n\nprovideSettingConditionFormModalConditionContext({\n\tform,\n\tvalidation,\n\tstate\n})\n</script>\n\n<template>\n\t<Modal\n\t\tv-model=\"modelShow\"\n\t\tsize=\"lg\"\n\t\t:title=\"$props.selectedCondition ? 'Edit Condition' : 'Add Condition'\"\n\t\t@close=\"onCloseModal\">\n\t\t<div>\n\t\t\t<Tab v-model=\"state.selectedTab\" :items=\"state.tabs\" color=\"teal\" view=\"smooth\" component>\n\t\t\t\t<template #title=\"{ item }\">\n\t\t\t\t\t<div class=\"flex items-center gap-2\">\n\t\t\t\t\t\t<span>{{ item.name }}</span>\n\n\t\t\t\t\t\t<Badge v-if=\"item.name === 'Conditional Questions'\" color=\"blue\">\n\t\t\t\t\t\t\t<div class=\"font-normal flex items-center gap-1\">\n\t\t\t\t\t\t\t\tBeta\n\t\t\t\t\t\t\t\t<Tooltip placement=\"top\">\n\t\t\t\t\t\t\t\t\t<span class=\"material-icons\" style=\"font-size: 0.9rem !important\">info</span>\n\t\t\t\t\t\t\t\t\t<template #content>\n\t\t\t\t\t\t\t\t\t\t<div class=\"w-60\">\n\t\t\t\t\t\t\t\t\t\t\tCurrently, Conditional Questions are supported only on the API and not on the\n\t\t\t\t\t\t\t\t\t\t\tWidget.\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Badge>\n\t\t\t\t\t</div>\n\t\t\t\t</template>\n\t\t\t</Tab>\n\t\t\t<div v-if=\"state.isError\" class=\"mb-4 bg-red-01 rounded-lg px-6 py-4\">Condition</div>\n\t\t\t<div class=\"grid md:grid-cols-5 grid-cols-1 gap-6\">\n\t\t\t\t<div\n\t\t\t\t\tv-if=\"state.selectedTab.__name === 'SettingConditionFormModalConditionQuestion'\"\n\t\t\t\t\tclass=\"col-span-5\">\n\t\t\t\t\t<SettingConditionWarningQuestion />\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-span-5 md:col-span-3\">\n\t\t\t\t\t<component v-model:form=\"form\" :is=\"state.selectedTab\" :validation=\"validation\" />\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-span-5 md:col-span-2\">\n\t\t\t\t\t<SettingConditionFormPreview\n\t\t\t\t\t\t:condition-name=\"form.name\"\n\t\t\t\t\t\t:condition-guideline=\"form.term\"\n\t\t\t\t\t\t:condition-terms=\"form.terms\"\n\t\t\t\t\t\t:questions=\"form.questions\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<template #footer>\n\t\t\t<Button\n\t\t\t\t:loading=\"state.isLoading\"\n\t\t\t\t:disabled=\"state.isLoading || validation.$invalid\"\n\t\t\t\tcolor=\"teal\"\n\t\t\t\t@click=\"onSaveModal\">\n\t\t\t\tSave\n\t\t\t</Button>\n\t\t</template>\n\t</Modal>\n\t<SettingConditionFormModalUpgradePlan v-model=\"state.isModalUpgradePlan\" />\n</template>\n","<script setup>\nimport { ref, reactive, watch } from 'vue'\nimport { useVuelidate } from '@vuelidate/core'\nimport { required } from '@/validations'\nimport { helpers, requiredIf } from '@vuelidate/validators'\nimport { useUser } from '@/composable/user'\n\n// Components\nimport Modal from 'bbUi/components/modal'\nimport Button from 'bbUi/components/button'\nimport SettingConditionFormModalUpgradePlan from '../SettingConditionFormModalUpgradePlan.vue'\nimport SettingConditionFormModalConditionQuestion from '../SettingConditionFormModalCondition/SettingConditionFormModalConditionQuestion.vue'\n\nconst emit = defineEmits(['save'])\nconst modelShow = defineModel({\n\ttype: Boolean,\n\tdefault: false\n})\n\nconst { me } = useUser()\nconst state = reactive({\n\tisModalUpgradePlan: false\n})\nconst form = ref({\n\thas_question: true,\n\tquestions: [\n\t\t{\n\t\t\tid: undefined,\n\t\t\taction: 'edit',\n\t\t\tquestion: '',\n\t\t\tis_required: false,\n\t\t\tanswer_type: 'Single',\n\t\t\tanswers: [\n\t\t\t\t{\n\t\t\t\t\tid: undefined,\n\t\t\t\t\taction: 'edit',\n\t\t\t\t\tanswer: '',\n\t\t\t\t\ttype: 'Do Nothing',\n\t\t\t\t\tamount_type: 'Fixed',\n\t\t\t\t\tamount_price: 0\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n})\nconst validation = useVuelidate(\n\t{\n\t\tquestions: {\n\t\t\trequired: requiredIf((_, sibling) => sibling.has_question),\n\t\t\t$each: helpers.forEach({\n\t\t\t\tquestion: { required: requiredIf((_, sibling) => sibling.action !== 'delete') },\n\t\t\t\tis_required: { required },\n\t\t\t\tanswer_type: { required },\n\t\t\t\tanswers: {\n\t\t\t\t\trequired,\n\t\t\t\t\t$each: helpers.forEach({\n\t\t\t\t\t\tanswer: { required: requiredIf((_, sibling) => sibling.action !== 'delete') },\n\t\t\t\t\t\ttype: { required },\n\t\t\t\t\t\tamount_type: {\n\t\t\t\t\t\t\trequired: requiredIf(\n\t\t\t\t\t\t\t\t(_, sibling) => sibling.type === 'Mark Up' || sibling.type === 'Mark Down'\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t},\n\t\t\t\t\t\tamount_price: {\n\t\t\t\t\t\t\trequired: requiredIf(\n\t\t\t\t\t\t\t\t(_, sibling) => sibling.type === 'Mark Up' || sibling.type === 'Mark Down'\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t},\n\tform,\n\t{ $stopPropagation: true, $lazy: true }\n)\n\nconst validateCondition = () => {\n\tvalidation.value.$validate()\n\n\treturn !validation.value.$invalid\n}\nconst onSaveModal = () => {\n\tif (form.value.has_question && me.value.package_id < 17) {\n\t\tstate.isModalUpgradePlan = true\n\n\t\treturn\n\t}\n\n\tif (validateCondition()) {\n\t\temit('save', form.value)\n\t}\n}\n\nwatch(\n\t() => modelShow.value,\n\t() => {\n\t\tif (modelShow.value)\n\t\t\tform.value = {\n\t\t\t\thas_question: true,\n\t\t\t\tquestions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: undefined,\n\t\t\t\t\t\taction: 'edit',\n\t\t\t\t\t\tquestion: '',\n\t\t\t\t\t\tis_required: false,\n\t\t\t\t\t\tanswer_type: 'Single',\n\t\t\t\t\t\tanswers: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tid: undefined,\n\t\t\t\t\t\t\t\taction: 'edit',\n\t\t\t\t\t\t\t\tanswer: '',\n\t\t\t\t\t\t\t\ttype: 'Do Nothing',\n\t\t\t\t\t\t\t\tamount_type: 'Fixed',\n\t\t\t\t\t\t\t\tamount_price: 0\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t}\n)\n</script>\n\n<template>\n\t<Modal v-model=\"modelShow\" size=\"lg\" title=\"Add Condition Questions\">\n\t\t<SettingConditionFormModalConditionQuestion\n\t\t\tv-model:form=\"form\"\n\t\t\t:validation=\"validation\"\n\t\t\tis-bulk />\n\t\t<template #footer>\n\t\t\t<Button :disabled=\"validation.$invalid\" color=\"teal\" @click=\"onSaveModal\">Save</Button>\n\t\t</template>\n\t</Modal>\n\t<SettingConditionFormModalUpgradePlan v-model=\"state.isModalUpgradePlan\" />\n</template>\n","<script setup>\nimport { defineModel } from 'vue'\n\n// Components\nimport Modal from 'bbUi/components/modal'\nimport Button from 'bbUi/components/button'\n\nconst emit = defineEmits(['cancel', 'continue'])\nconst modelShow = defineModel({\n\ttype: Boolean,\n\tdefault: false\n})\n\nconst onCancel = () => {\n\tmodelShow.value = false\n\temit('cancel')\n}\nconst onConfirm = () => {\n\tmodelShow.value = false\n\temit('continue')\n}\n</script>\n\n<template>\n\t<Modal v-model=\"modelShow\" hide-header hide-footer size=\"xs\">\n\t\t<div class=\"space-y-8 text-center my-8\">\n\t\t\t<span\n\t\t\t\t:style=\"{\n\t\t\t\t\tfontSize: '8rem !important',\n\t\t\t\t\tlineHeight: '1'\n\t\t\t\t}\"\n\t\t\t\tclass=\"material-icons text-orange-03\">\n\t\t\t\terror_outline\n\t\t\t</span>\n\t\t\t<p class=\"text-xl font-semibold mb-4\">One or more Conditional Questions Exist!</p>\n\t\t\t<div class=\"font-normal text-grey-03\">\n\t\t\t\t<p>\n\t\t\t\t\tIf you proceed, the existing conditional questions data will be overridden, and changes\n\t\t\t\t\tcannot be undone. We recommend unchecking the conditions that already have conditional\n\t\t\t\t\tquestions before proceeding with the bulk add, unless you intend to override all existing\n\t\t\t\t\tconditional questions.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div class=\"flex items-center justify-center gap-x-4\">\n\t\t\t\t<Button color=\"grey\" view=\"outlined\" @click=\"onCancel\">Cancel</Button>\n\t\t\t\t<Button color=\"teal\" @click=\"onConfirm\">Continue</Button>\n\t\t\t</div>\n\t\t</div>\n\t</Modal>\n</template>\n","<script>\nimport { createContext } from 'utils/createContext'\n\nexport const [\n\tinjectSettingConditionFormMappingListContext,\n\tprovideSettingConditionFormMappingListContext\n] = createContext('SettingConditionFormMappingList')\n</script>\n\n<script setup>\nimport { reactive, defineExpose } from 'vue'\nimport { useRoute } from 'vue-router'\nimport { useVuelidate } from '@vuelidate/core'\nimport { minLength } from '@vuelidate/validators'\nimport { sanitize } from '@/utils/dom'\nimport { tryCatchRequest } from '@/utils/request'\nimport { deepClone } from 'utils/deep-clone'\nimport { required } from '@/validations/index'\nimport { injectSettingConditionFormContext } from '../SettingConditionForm.vue'\nimport {\n\tuseSettingConditionStore,\n\tuseSettingConditionGroupStore\n} from '@/store/pinia/setting/condition'\n\n// Components\nimport Button from 'bbUi/components/button/button.vue'\nimport Checkbox from 'bbUi/components/checkbox'\nimport { VueDraggableNext as Draggable } from 'vue-draggable-next'\nimport SettingConditionFormModalDelete from '../SettingConditionFormModal/SettingConditionFormModalDelete.vue'\nimport SettingConditionFormModalCondition from '../SettingConditionFormModal/SettingConditionFormModalCondition/SettingConditionFormModalCondition.vue'\nimport SettingConditionFormPreviewConditional from '../../SettingConditionForm/SettingConditionFormPreview/SettingConditionFormPreviewConditional.vue'\nimport SettingConditionFormModalBulkQuestion from '../SettingConditionFormModal/SettingConditionFormModalBulkQuestion/SettingConditionFormModalBulkQuestion.vue'\nimport SettingConditionFormModalBulkQuestionWarning from '../SettingConditionFormModal/SettingConditionFormModalBulkQuestion/SettingConditionFormModalBulkQuestionWarning.vue'\n\nconst route = useRoute()\nconst settingConditionFormContext = injectSettingConditionFormContext()\nconst settingConditionGroupStore = useSettingConditionGroupStore()\nconst settingConditionStore = useSettingConditionStore()\nconst state = reactive({\n\tisEdit: false,\n\tselected: undefined,\n\tisModalOpen: {\n\t\tedit: false,\n\t\tdelete: false,\n\t\tbulkQuestion: false,\n\t\tbulkQuestionWarning: false\n\t},\n\tselectedTab: 'Active',\n\tselectedConditionsBulk: []\n})\nconst validation = useVuelidate(\n\t{\n\t\tactiveConditions: { required, minLength: minLength(1) }\n\t},\n\tsettingConditionStore.$state.form,\n\t{ $lazy: true }\n)\n\nconst relabelingConditions = () => {\n\tsettingConditionStore.$state.form.conditions = settingConditionStore.$state.form.conditions.map(\n\t\tcondition => {\n\t\t\tcondition = deepClone(condition)\n\n\t\t\tif (condition.added) return condition\n\n\t\t\treturn {\n\t\t\t\t...condition,\n\t\t\t\texist: settingConditionStore.isConditionActive(condition)\n\t\t\t}\n\t\t}\n\t)\n}\nconst deleteActiveCondition = () => {\n\tconst conditions = settingConditionStore.$state.form.conditions\n\tconst index = conditions.findIndex(condition => {\n\t\tconst sourceName = condition.name.split(' ').join('')\n\t\tconst selectedName = state.selected.name.split(' ').join('')\n\n\t\treturn selectedName.toLowerCase() === sourceName.toLowerCase()\n\t})\n\n\tif (conditions[index]) {\n\t\tsettingConditionStore.$state.form.conditions[index].added = false\n\t\tsettingConditionStore.$state.form.conditions[index].exist = false\n\t}\n}\nconst onSubmit = async () => {\n\tawait validation.value.$validate()\n\n\treturn !validation.value.$error\n}\nconst onClickModalAdd = () => {\n\tstate.isEdit = false\n\tstate.selected = null\n\tstate.isModalOpen.edit = true\n}\nconst onClickModalEdit = (condition, index) => {\n\tstate.isEdit = true\n\tstate.selected = { ...deepClone(condition), index }\n\tstate.isModalOpen.edit = true\n}\nconst onClickModalDelete = (condition, index) => {\n\tstate.isEdit = true\n\tstate.selected = { ...deepClone(condition), index }\n\tstate.isModalOpen.delete = true\n}\nconst onClickModalEditQuestion = (condition, index) => {\n\tstate.isEdit = true\n\tstate.selected = { ...deepClone(condition), index }\n\tstate.isModalOpen.edit = true\n\tstate.selectedTab = 'Question'\n}\nconst onClickModalBulkQuestion = () => {\n\tconst isQuestionExist =\n\t\tstate.selectedConditionsBulk.findIndex(\n\t\t\tid =>\n\t\t\t\tsettingConditionStore.$state.form.activeConditions.find(\n\t\t\t\t\tactiveCondition => activeCondition.id === id\n\t\t\t\t).questions.length > 0\n\t\t) !== -1\n\n\tif (isQuestionExist) state.isModalOpen.bulkQuestionWarning = true\n\telse state.isModalOpen.bulkQuestion = true\n}\nconst onBulkQuestionWarningContinue = () => {\n\tstate.isModalOpen.bulkQuestion = true\n}\nconst onBulkQuestionSave = async data => {\n\tstate.isModalOpen.bulkQuestion = false\n\n\tif (settingConditionFormContext.conditionId.value) {\n\t\tawait tryCatchRequest(\n\t\t\tsettingConditionStore.$state.createSettingConditionQuestionBulk,\n\t\t\tasync () => {\n\t\t\t\tawait settingConditionStore\n\t\t\t\t\t.$createSettingConditionQuestionBulk({\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tcondition_ids: state.selectedConditionsBulk,\n\t\t\t\t\t\t\tquestions: data.questions\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tstate.selectedConditionsBulk = []\n\t\t\t\t\t})\n\t\t\t\tawait settingConditionGroupStore.$getSettingConditionGroup({\n\t\t\t\t\tid: settingConditionFormContext.conditionId.value,\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tunique_id: route.query.unique_id,\n\t\t\t\t\t\tis_price_sync: route.query.price_sync\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t)\n\n\t\thandleInitEdit()\n\t}\n}\nconst onCancelModal = () => {\n\tstate.isEdit = false\n\tstate.selected = null\n\tstate.selectedTab = 'Active'\n\n\tObject.keys(state.isModalOpen).forEach(item => {\n\t\tstate.isModalOpen[item] = false\n\t})\n}\nconst onSaveCondition = async (condition, source = false) => {\n\tcondition = deepClone(condition)\n\n\tstate.isModalOpen.edit = false\n\n\tif (state.isEdit) {\n\t\tif (settingConditionFormContext.conditionId.value && condition.id) {\n\t\t\tawait tryCatchRequest(settingConditionStore.$state.updateSettingCondition, async () => {\n\t\t\t\tawait settingConditionStore.$updateSettingCondition({ id: condition.id, data: condition })\n\t\t\t\tawait settingConditionGroupStore.$getSettingConditionGroup({\n\t\t\t\t\tid: settingConditionFormContext.conditionId.value,\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tunique_id: route.query.unique_id,\n\t\t\t\t\t\tis_price_sync: route.query.price_sync\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\n\t\t\thandleInitEdit()\n\t\t} else {\n\t\t\tsettingConditionStore.$state.form.activeConditions[condition.index] = {\n\t\t\t\t...deepClone(settingConditionStore.$state.form.activeConditions[condition.index]),\n\t\t\t\t...condition\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif (settingConditionFormContext.conditionId.value) {\n\t\t\tawait tryCatchRequest(settingConditionStore.$state.createSettingCondition, async () => {\n\t\t\t\tawait settingConditionStore.$createSettingCondition({\n\t\t\t\t\tid: settingConditionFormContext.conditionId.value,\n\t\t\t\t\tdata: condition\n\t\t\t\t})\n\t\t\t\tawait settingConditionGroupStore.$getSettingConditionGroup({\n\t\t\t\t\tid: settingConditionFormContext.conditionId.value,\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tunique_id: route.query.unique_id,\n\t\t\t\t\t\tis_price_sync: route.query.price_sync\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\n\t\t\thandleInitEdit()\n\t\t} else settingConditionStore.$state.form.activeConditions.push(condition)\n\t}\n\n\tif (!source) {\n\t\t// Refresh source list here\n\t\trelabelingConditions()\n\t}\n\n\tonCancelModal()\n}\nconst onDeleteCondition = async () => {\n\tstate.isModalOpen.delete = false\n\n\tdeleteActiveCondition()\n\n\tif (settingConditionFormContext.conditionId.value) {\n\t\tawait tryCatchRequest(settingConditionStore.$state.deleteSettingCondition, async () => {\n\t\t\tawait settingConditionStore.$deleteSettingCondition({\n\t\t\t\tid: state.selected.id\n\t\t\t})\n\t\t\tawait settingConditionGroupStore.$getSettingConditionGroup({\n\t\t\t\tid: settingConditionFormContext.conditionId.value,\n\t\t\t\tpriceSync: {\n\t\t\t\t\tuniqueId: route.query.unique_id,\n\t\t\t\t\tsync: route.query.price_sync\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\n\t\thandleInitEdit()\n\t} else settingConditionStore.form.activeConditions.splice(state.selected.index, 1)\n\n\tonCancelModal()\n}\nconst onDraggedCondition = async () => {\n\tconst sorting = settingConditionStore.form.activeConditions.map((item, index) => ({\n\t\tid: item.id,\n\t\tsort: index\n\t}))\n\n\tif (settingConditionFormContext.conditionId.value)\n\t\tawait tryCatchRequest(settingConditionStore.$state.sortSettingCondition, () =>\n\t\t\tsettingConditionStore.$sortSettingCondition({\n\t\t\t\tdata: { sorting }\n\t\t\t})\n\t\t)\n}\nconst handleInitEdit = () => {\n\tsettingConditionStore.form.activeConditions =\n\t\tsettingConditionGroupStore.$state.form.conditions.map(condition => {\n\t\t\tlet terms = []\n\n\t\t\tconst parsedTerms = condition.condition_term ? JSON.parse(condition.condition_term) : []\n\n\t\t\tterms = Array.isArray(parsedTerms) ? parsedTerms : []\n\n\t\t\treturn {\n\t\t\t\t// ...deepClone(settingConditionStore.$state.form.activeConditions[condition.index]),\n\t\t\t\t...deepClone(condition),\n\t\t\t\tterms: terms ? terms.splice(1, terms.length - 1) : [''],\n\t\t\t\tterm: terms ? terms[0] : condition.condition_term\n\t\t\t}\n\t\t})\n}\n\nif (settingConditionFormContext?.conditionId?.value) {\n\thandleInitEdit()\n}\n\nprovideSettingConditionFormMappingListContext({\n\tstate,\n\tonSaveCondition\n})\n\ndefineExpose({\n\tonSubmit,\n\tonSaveCondition,\n\tvalidation,\n\tstate\n})\n</script>\n\n<template>\n\t<div>\n\t\t<div v-loading=\"settingConditionStore.isMappingListLoading\">\n\t\t\t<template v-if=\"settingConditionStore.$state.form.activeConditions.length > 0\">\n\t\t\t\t<Button\n\t\t\t\t\tv-if=\"state.selectedConditionsBulk.length > 0\"\n\t\t\t\t\tcolor=\"teal\"\n\t\t\t\t\tclass=\"mb-4\"\n\t\t\t\t\t@click=\"onClickModalBulkQuestion\">\n\t\t\t\t\tBulk Conditional Questions\n\t\t\t\t</Button>\n\t\t\t\t<Draggable\n\t\t\t\t\tv-model=\"settingConditionStore.$state.form.activeConditions\"\n\t\t\t\t\thandle=\".drag_indicator\"\n\t\t\t\t\t:disabled=\"settingConditionGroupStore.isUniqueAndMacDisabled\"\n\t\t\t\t\t@change=\"onDraggedCondition\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tv-for=\"(condition, indexCondition) in settingConditionStore.$state.form\n\t\t\t\t\t\t\t.activeConditions\"\n\t\t\t\t\t\t:class=\"[\n\t\t\t\t\t\t\t!settingConditionFormContext.isSynced.value ? 'bg-opacity-10' : 'bg-opacity-50',\n\t\t\t\t\t\t\t'border rounded-lg mb-4',\n\t\t\t\t\t\t\t'border-grey-01 border-opacity-50 bg-grey-01',\n\t\t\t\t\t\t\t'py-4 px-6',\n\t\t\t\t\t\t\t'condition__draggable group',\n\t\t\t\t\t\t\t'hover:border-opacity-80 transition-all ease-in-out duration-300'\n\t\t\t\t\t\t]\"\n\t\t\t\t\t\t:key=\"indexCondition\">\n\t\t\t\t\t\t<div v-if=\"condition\" class=\"flex w-full\">\n\t\t\t\t\t\t\t<div class=\"flex items-start\">\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\tv-if=\"!settingConditionFormContext.isSynced.value\"\n\t\t\t\t\t\t\t\t\t:class=\"\n\t\t\t\t\t\t\t\t\t\tsettingConditionGroupStore.isUniqueAndMacDisabled &&\n\t\t\t\t\t\t\t\t\t\t'opacity-30 cursor-not-allowed'\n\t\t\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\t\t\tclass=\"material-icons text-grey-04 text-4xl cursor-move drag_indicator mr-4\">\n\t\t\t\t\t\t\t\t\tdrag_indicator\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\tv-if=\"settingConditionFormContext.conditionId.value\"\n\t\t\t\t\t\t\t\t\tv-model=\"state.selectedConditionsBulk\"\n\t\t\t\t\t\t\t\t\t:value=\"condition.id\">\n\t\t\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t\t</Checkbox>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"flex-1 mt-1\">\n\t\t\t\t\t\t\t\t<p class=\"font-semibold mb-4\">\n\t\t\t\t\t\t\t\t\t{{ condition.name }}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<div v-html=\"condition.term\" class=\"mb-2 2xl:max-w-7xl xl:max-w-5xl lg:max-w-2xl md:max-w-2xl max-w-xl break-words\" />\n\t\t\t\t\t\t\t\t<ul class=\"list mb-4 2xl:max-w-7xl xl:max-w-5xl lg:max-w-2xl md:max-w-2xl max-w-xl break-words\">\n\t\t\t\t\t\t\t\t\t<template v-for=\"(term, indexTerm) in condition.terms || []\" :key=\"indexTerm\">\n\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\tv-if=\"!!term && !!term.length\"\n\t\t\t\t\t\t\t\t\t\t\tclass=\"text-grey-04\"\n\t\t\t\t\t\t\t\t\t\t\tv-html=\"sanitize(term)\" />\n\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t<SettingConditionFormPreviewConditional\n\t\t\t\t\t\t\t\t\tv-if=\"condition.has_question\"\n\t\t\t\t\t\t\t\t\t:questions=\"condition.questions\" class=\"2xl:max-w-7xl xl:max-w-5xl lg:max-w-2xl md:max-w-2xl max-w-xl break-words\" />\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tv-else\n\t\t\t\t\t\t\t\t\tcolor=\"teal\"\n\t\t\t\t\t\t\t\t\tview=\"outlined\"\n\t\t\t\t\t\t\t\t\t@click=\"onClickModalEditQuestion(condition, indexCondition)\"\n\t\t\t\t\t\t\t\t\tdense>\n\t\t\t\t\t\t\t\t\t<span class=\"flex items-center justify-center\">\n\t\t\t\t\t\t\t\t\t\t<i class=\"material-icons icon-xxs mr-2\">add</i>\n\t\t\t\t\t\t\t\t\t\tConditional Questions\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tv-if=\"!settingConditionGroupStore.isUniqueAndMacDisabled\"\n\t\t\t\t\t\t\t\tclass=\"lg:opacity-0 group-hover:opacity-100 transition-opacity\">\n\t\t\t\t\t\t\t\t<div class=\"flex items-center justify-end\">\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tcolor=\"teal\"\n\t\t\t\t\t\t\t\t\t\tclass=\"mr-3 text-sm\"\n\t\t\t\t\t\t\t\t\t\tdense\n\t\t\t\t\t\t\t\t\t\ticon\n\t\t\t\t\t\t\t\t\t\t@click=\"onClickModalEdit(condition, indexCondition)\">\n\t\t\t\t\t\t\t\t\t\t<span class=\"material-icons text-sm\">edit</span>\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tv-if=\"!settingConditionFormContext.isSynced.value\"\n\t\t\t\t\t\t\t\t\t\tcolor=\"red\"\n\t\t\t\t\t\t\t\t\t\tdense\n\t\t\t\t\t\t\t\t\t\t@click=\"onClickModalDelete(condition, indexCondition)\">\n\t\t\t\t\t\t\t\t\t\t<span class=\"material-icons text-sm\">delete</span>\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Draggable>\n\t\t\t</template>\n\t\t\t<template v-else>\n\t\t\t\t<div class=\"text-center border-2 border-grey-01 border-dashed px-6 py-8 rounded-lg\">\n\t\t\t\t\t<p class=\"text-grey-02 max-w-lg mx-auto w-full text-sm\">\n\t\t\t\t\t\tUse the \"Add New Condition\" button below to create your item conditions from scratch, or\n\t\t\t\t\t\tsave time and use our Preset Conditions\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t\t<div v-if=\"!settingConditionFormContext.isSynced.value\" class=\"my-4\">\n\t\t\t\t<Button\n\t\t\t\t\tclass=\"block w-full\"\n\t\t\t\t\tcolor=\"teal\"\n\t\t\t\t\t:disabled=\"\n\t\t\t\t\t\t!settingConditionGroupStore.form.categories ||\n\t\t\t\t\t\t!settingConditionGroupStore.form.categories.length ||\n\t\t\t\t\t\t!settingConditionGroupStore.form.group_name ||\n\t\t\t\t\t\tsettingConditionGroupStore.isUniqueAndMacDisabled\n\t\t\t\t\t\"\n\t\t\t\t\t@click=\"onClickModalAdd\">\n\t\t\t\t\t<span class=\"flex items-center justify-center\">\n\t\t\t\t\t\t<i class=\"material-icons mr-2\">add</i>\n\t\t\t\t\t\tAdd New Condition\n\t\t\t\t\t</span>\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</div>\n\t\t<SettingConditionFormModalCondition\n\t\t\tv-model=\"state.isModalOpen.edit\"\n\t\t\t:selected-condition=\"state.selected\"\n\t\t\t:selected-tab=\"state.selectedTab\"\n\t\t\t:conditions=\"settingConditionStore.$state.form.activeConditions\"\n\t\t\t:is-edit=\"state.isEdit\"\n\t\t\t@save=\"onSaveCondition\"\n\t\t\t@cancel=\"onCancelModal\" />\n\t\t<SettingConditionFormModalBulkQuestion\n\t\t\tv-model=\"state.isModalOpen.bulkQuestion\"\n\t\t\t@save=\"onBulkQuestionSave\" />\n\t\t<SettingConditionFormModalBulkQuestionWarning\n\t\t\tv-model=\"state.isModalOpen.bulkQuestionWarning\"\n\t\t\t@cancel=\"onCancelModal\"\n\t\t\t@continue=\"onBulkQuestionWarningContinue\" />\n\t\t<SettingConditionFormModalDelete\n\t\t\tv-model=\"state.isModalOpen.delete\"\n\t\t\t:is_price_sync=\"settingConditionGroupStore.$state.form.is_price_sync ? true : false\"\n\t\t\t@cancel=\"onCancelModal\"\n\t\t\t@delete=\"onDeleteCondition\" />\n\t</div>\n\t<div\n\t\tv-for=\"n in validation.activeConditions.$errors.length\"\n\t\t:key=\"n\"\n\t\tclass=\"bg-red-lighten rounded-lg py-4 px-6 my-6\">\n\t\t<span class=\"text-red-base block\">Please add at least 1 condition</span>\n\t</div>\n</template>\n","<script setup>\nimport { defineModel } from 'vue'\n\n// Components\nimport Modal from 'bbUi/components/modal/modal.vue'\nimport Button from 'bbUi/components/button/button.vue'\n\nconst emit = defineEmits(['cancel', 'continue'])\nconst modelShow = defineModel({\n\ttype: Boolean,\n\tdefault: false\n})\n\nconst onCancel = () => {\n\tmodelShow.value = false\n\temit('cancel')\n}\nconst onConfirm = () => {\n\tmodelShow.value = false\n\temit('continue')\n}\n</script>\n\n<template>\n\t<Modal v-model=\"modelShow\" hide-header hide-footer size=\"xs\">\n\t\t<div class=\"space-y-8 text-center my-8\">\n\t\t\t<span\n\t\t\t\t:style=\"{\n\t\t\t\t\tfontSize: '8rem !important',\n\t\t\t\t\tlineHeight: '1'\n\t\t\t\t}\"\n\t\t\t\tclass=\"material-icons text-orange-03\">\n\t\t\t\terror_outline\n\t\t\t</span>\n\t\t\t<div class=\"font-normal text-grey-03\">\n\t\t\t\t<p>\n\t\t\t\t\tYou have conditions with the same title already in the active conditions. If you continue,\n\t\t\t\t\tit will replace the existing condition.\n\t\t\t\t</p>\n\t\t\t\t<p>Are you sure you want to proceed?</p>\n\t\t\t</div>\n\t\t\t<div class=\"flex items-center justify-center gap-x-4\">\n\t\t\t\t<Button color=\"grey\" view=\"outlined\" @click=\"onCancel\">Cancel</Button>\n\t\t\t\t<Button color=\"teal\" @click=\"onConfirm\">Continue</Button>\n\t\t\t</div>\n\t\t</div>\n\t</Modal>\n</template>\n","<script setup>\nimport { reactive, computed, watch } from 'vue'\nimport { sanitize } from '@/utils/dom'\nimport { deepClone } from '@/utils/deep-clone'\nimport { tryCatchRequest } from '@/utils/request'\nimport {\n\tuseSettingConditionGroupStore,\n\tuseSettingConditionStore\n} from '@/store/pinia/setting/condition'\nimport { injectSettingConditionFormContext } from '../SettingConditionForm.vue'\nimport { injectSettingConditionFormMappingListContext } from './SettingConditionFormMappingList.vue'\n\n// Components\nimport SettingConditionFormModalDuplicate from '../SettingConditionFormModal/SettingConditionFormModalDuplicate.vue'\nimport Select from '@/components/Select.vue'\nimport Button from 'bbUi/components/button/button.vue'\n\nconst settingConditionGroupStore = useSettingConditionGroupStore()\nconst settingConditionStore = useSettingConditionStore()\nconst settingConditionFormContext = injectSettingConditionFormContext()\nconst settingConditionFormMappingListContext = injectSettingConditionFormMappingListContext()\nconst state = reactive({\n\treplacer: undefined,\n\tisAddAll: false,\n\tisModalOpen: false\n})\n\nconst emits = defineEmits([\n\t'onSaveCondition',\n\t'onEditCondition'\n])\n\nconst selectedCategories = computed(() => {\n\tif (\n\t\t!settingConditionGroupStore.$state.form.categories ||\n\t\t!settingConditionGroupStore.$state.form.categories.length\n\t)\n\t\treturn undefined\n\n\treturn settingConditionGroupStore.$state.form.categories\n})\nconst isSourceDisable = computed(() => {\n\tif (\n\t\t!settingConditionGroupStore.$state.form.group_name ||\n\t\t!selectedCategories.value ||\n\t\tselectedCategories.value.length > 1 ||\n\t\tsettingConditionStore.isMappingSourceLoading ||\n\t\tsettingConditionFormContext.isSynced.value\n\t)\n\t\treturn true\n\n\treturn false\n})\nconst showCondition = async () => {\n\tconst data = settingConditionStore.$state.form.selectedSource\n\tconst category = selectedCategories.value ? selectedCategories.value[0] : []\n\n\tif (data.sub_domain && category) {\n\t\tawait tryCatchRequest(settingConditionStore.$state.getSettingConditions, () =>\n\t\t\tsettingConditionStore.$getSettingConditions({\n\t\t\t\tparams: {\n\t\t\t\t\tsub_domain: data.sub_domain,\n\t\t\t\t\tcategory_id: category.category_id,\n\t\t\t\t\tis_mac: category.is_mac\n\t\t\t\t}\n\t\t\t})\n\t\t)\n\t\tinitCondition()\n\t}\n}\nconst replaceCondition = () => {\n\tconst activeConditions = settingConditionStore.$state.form.activeConditions\n\tconst conditions = settingConditionStore.$state.form.conditions\n\tconst replaceIndex = activeConditions.findIndex(condition => {\n\t\tconst replaceName = state.replacer.name.split(' ').join('')\n\t\tconst sourceName = condition.name.split(' ').join('')\n\n\t\treturn replaceName.toLowerCase() === sourceName.toLowerCase()\n\t})\n\n\tif (replaceIndex > -1) {\n\t\tconst condition = deepClone(conditions[state.replacer.index])\n\n\t\tsettingConditionStore.$state.form.selectedConditions = [\n\t\t\t...new Set([...deepClone(settingConditionStore.$state.form.selectedConditions), condition])\n\t\t]\n\t\tsettingConditionStore.$state.form.conditions[state.replacer.index].added = true\n\t\tsettingConditionStore.$state.form.activeConditions[replaceIndex] = {\n\t\t\t...condition\n\t\t}\n\t}\n\n\tonDuplicateCancel()\n}\nconst replaceAllCondition = () => {\n\tconst conditions = deepClone(settingConditionStore.$state.form.conditions)\n\tconst activeConditions = deepClone(settingConditionStore.$state.form.activeConditions)\n\n\tsettingConditionStore.$state.form.conditions = conditions.map(condition => ({\n\t\t...condition,\n\t\tadded: true\n\t}))\n\tsettingConditionStore.$state.form.selectedConditions = conditions\n\tsettingConditionStore.$state.form.selectedConditions.forEach(selectedCondition => {\n\t\tconst activeConditionIndex = activeConditions.findIndex(activeCondition => {\n\t\t\tconst activeName = activeCondition.name.split(' ').join('')\n\t\t\tconst selectedName = selectedCondition.name.split(' ').join('')\n\n\t\t\treturn activeName.toLowerCase() === selectedName.toLowerCase()\n\t\t})\n\n\t\tif (activeConditionIndex > -1) {\n\t\t\temits('onEditCondition', true)\n\n\t\t\tif (\n\t\t\t\tsettingConditionFormContext.conditionId.value &&\n\t\t\t\tactiveConditions[activeConditionIndex].id\n\t\t\t) {\n\t\t\t\temits('onSaveCondition', {\n\t\t\t\t\tcondition: {\n\t\t\t\t\t\tid: settingConditionStore.$state.form.activeConditions[activeConditionIndex].id,\n\t\t\t\t\t\tname: selectedCondition.name,\n\t\t\t\t\t\tterm: selectedCondition.term,\n\t\t\t\t\t\tterms: selectedCondition.terms\n\t\t\t\t\t},\n\t\t\t\t\tsource: true\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tsettingConditionStore.$state.form.activeConditions[activeConditionIndex] = {\n\t\t\t\t\t...activeConditions[activeConditionIndex],\n\t\t\t\t\t...selectedCondition\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\temits('onEditCondition', false)\n\n\t\t\tif (settingConditionFormContext.conditionId.value) {\n\t\t\t\temits('onSaveCondition', {\n\t\t\t\t\tcondition: {\n\t\t\t\t\t\tid: settingConditionStore.$state.form.activeConditions[activeConditionIndex].id,\n\t\t\t\t\t\tname: selectedCondition.name,\n\t\t\t\t\t\tterm: selectedCondition.term,\n\t\t\t\t\t\tterms: selectedCondition.terms\n\t\t\t\t\t},\n\t\t\t\t\tsource: true\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// TODO: API should handle this?\n\t\t\t\tsettingConditionStore.$state.form.activeConditions.push({\n\t\t\t\t\t...selectedCondition,\n\t\t\t\t\thas_question: false,\n\t\t\t\t\tquestions: []\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t})\n}\nconst initCondition = () => {\n\tlet terms = []\n\tconst conditions = settingConditionStore.$state.form.conditions\n\n\tsettingConditionStore.$state.form.conditions = conditions.map(condition => {\n\t\tconst parsedTerms = JSON.parse(condition.condition_term)\n\n\t\tterms = Array.isArray(parsedTerms) ? parsedTerms : []\n\n\t\treturn {\n\t\t\t...condition,\n\t\t\tterm: terms ? terms[0] : condition.condition_term,\n\t\t\tterms: terms ? terms.splice(1, terms.length - 1) : [''],\n\t\t\tadded: false,\n\t\t\texist: settingConditionStore.isConditionActive(condition)\n\t\t}\n\t})\n}\nconst onAddCondition = (condition = undefined, index = -1) => {\n\tcondition = deepClone(condition)\n\n\tif (!condition || index === -1) return\n\n\tif (condition.exist) {\n\t\tstate.replacer = { ...condition, index }\n\t\tstate.isModalOpen = true\n\n\t\treturn\n\t}\n\n\tsettingConditionStore.$state.form.selectedConditions.push(condition)\n\tsettingConditionStore.$state.form.conditions[index].added = true\n\n\tif (settingConditionFormMappingListContext)\n\t\temits('onEditCondition', false)\n\n\tconst payload = condition\n\tdelete payload.id\n\n\tif (settingConditionFormContext.conditionId.value)\n\t\temits('onSaveCondition', {\n\t\t\tcondition: payload,\n\t\t\tsource: true\n\t\t})\n\telse\n\t\tsettingConditionStore.$state.form.activeConditions.push({\n\t\t\t...payload,\n\t\t\thas_question: false,\n\t\t\tquestions: []\n\t\t})\n}\nconst onAddAllCondition = () => {\n\tconst duplicateConditions =\n\t\t(settingConditionStore.$state.form.conditions.length &&\n\t\t\tsettingConditionStore.$state.form.conditions.filter(condition => condition.exist)) ||\n\t\t[]\n\n\tif (duplicateConditions.length) {\n\t\tstate.replacer = deepClone(duplicateConditions)\n\t\tstate.isAddAll = true\n\t\tstate.isModalOpen = true\n\n\t\treturn\n\t}\n\n\tsettingConditionStore.$state.form.conditions.forEach((condition, key) => {\n\t\tif (!condition.added) onAddCondition(condition, key)\n\t})\n}\nconst onSelectSource = async subdomain => {\n\tif (settingConditionStore.$state.form.sources) {\n\t\tsettingConditionStore.$state.form.selectedSource =\n\t\t\tsettingConditionStore.$state.form.sources.find(source => source.sub_domain === subdomain)\n\n\t\treturn await showCondition()\n\t}\n\n\tsettingConditionStore.$state.form.selectedSource = {}\n}\nconst onDuplicateContinue = () => {\n\tif (state.isAddAll) return replaceAllCondition()\n\n\treturn replaceCondition()\n}\nconst onDuplicateCancel = () => {\n\tstate.isModalOpen = false\n\tstate.isAddAll = false\n\tstate.replacer = undefined\n}\n\nwatch(\n\t() => [selectedCategories.value, settingConditionFormContext.isSynced.value],\n\tasync () => {\n\t\tif (selectedCategories.value && !settingConditionFormContext.isSynced.value)\n\t\t\tawait tryCatchRequest(settingConditionStore.$state.getSettingConditionSources, () =>\n\t\t\t\tsettingConditionStore.$getSettingConditionSources(selectedCategories.value[0])\n\t\t\t)\n\t\telse settingConditionStore.resetSettingConditionForm()\n\t},\n\t{\n\t\tdeep: true,\n\t\timmediate: true\n\t}\n)\n</script>\n\n<template>\n\t<div class=\"flex flex-col gap-y-8 py-4 px-2\">\n\t\t<div class=\"space-y-2\">\n\t\t\t<div>\n\t\t\t\t<div\n\t\t\t\t\tclass=\"bg-green-04 rounded-full text-white inline-flex px-4 items-center justify-center gap-1 text-sm\">\n\t\t\t\t\t<span class=\"material-icons\">verified</span>\n\t\t\t\t\tRecomended\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<p>\n\t\t\t\tSave time by using these presets to define your conditions without having to start from\n\t\t\t\tscratch.\n\t\t\t</p>\n\t\t\t<Select\n\t\t\t\tv-model=\"settingConditionStore.$state.form.selectedSource\"\n\t\t\t\t:items=\"settingConditionStore.$state.form.sources\"\n\t\t\t\t:style=\"{\n\t\t\t\t\twidth: '100%',\n\t\t\t\t\tboxShadow: 'unset'\n\t\t\t\t}\"\n\t\t\t\t:disabled=\"isSourceDisable\"\n\t\t\t\t:loading=\"settingConditionStore.isMappingSourceLoading\"\n\t\t\t\tplaceholder=\"Choose Preset Condition\"\n\t\t\t\tmax-height=\"200px\"\n\t\t\t\tby=\"sub_domain\"\n\t\t\t\tname=\"name\"\n\t\t\t\tno-border\n\t\t\t\t@update:modelValue=\"onSelectSource\">\n\t\t\t\t<template #item=\"{ item }\">\n\t\t\t\t\t<div class=\"flex items-center gap-x-4\">\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t:style=\"{ backgroundImage: `url(${item.logo})` }\"\n\t\t\t\t\t\t\tclass=\"w-28 h-7 flex items-center justify-center bg-center bg-contain bg-no-repeat\" />\n\t\t\t\t\t\t<div class=\"flex-1 flex items-center gap-x-1\">\n\t\t\t\t\t\t\t{{ item.name }}\n\t\t\t\t\t\t\t<template v-if=\"settingConditionStore.$state.form.selectedSource\">\n\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\tv-if=\"\n\t\t\t\t\t\t\t\t\t\titem?.sub_domain === settingConditionStore.$state.form.selectedSource.sub_domain\n\t\t\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\t\t\tclass=\"material-icons text-green-04\">\n\t\t\t\t\t\t\t\t\tcheck_circle\n\t\t\t\t\t\t\t\t</i>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</template>\n\t\t\t</Select>\n\t\t</div>\n\t\t<template v-if=\"settingConditionStore.$state.form.selectedSource\">\n\t\t\t<div v-loading=\"settingConditionStore.isMappingSourceLoading\" class=\"space-y-6\">\n\t\t\t\t<div\n\t\t\t\t\tv-for=\"(condition, index) in settingConditionStore.$state.form.conditions\"\n\t\t\t\t\t:key=\"index\"\n\t\t\t\t\t:class=\"[\n\t\t\t\t\t\t'condition-source-outline',\n\t\t\t\t\t\t!condition.added && !!condition.exist && 'condition-source-outline--warning',\n\t\t\t\t\t\t!!condition.added && 'condition-source-outline--success'\n\t\t\t\t\t]\">\n\t\t\t\t\t<div class=\"space-y-4\">\n\t\t\t\t\t\t<div class=\"font-semibold title\">\n\t\t\t\t\t\t\t{{ condition.name }}\n\t\t\t\t\t\t\t<template v-if=\"!!condition.added || !!condition.exist\">\n\t\t\t\t\t\t\t\t<Tooltip placement=\"top\">\n\t\t\t\t\t\t\t\t\t<template #content>\n\t\t\t\t\t\t\t\t\t\t<p class=\"w-80 text-sm\">\n\t\t\t\t\t\t\t\t\t\t\tA condition with this name is already exists. To use this condition please\n\t\t\t\t\t\t\t\t\t\t\trename the existing one or delete it first.\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t\t<template #default>\n\t\t\t\t\t\t\t\t\t\t<span class=\"material-icons\">\n\t\t\t\t\t\t\t\t\t\t\t{{ (condition.added && 'check_circle') || 'info' }}\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<div v-html=\"condition.term\" />\n\t\t\t\t\t\t\t<ul class=\"list-outside list-disc ml-6\">\n\t\t\t\t\t\t\t\t<template v-for=\"(term, indexTerm) in condition.terms || []\" :key=\"indexTerm\">\n\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\tv-if=\"!!term && !!term?.length\"\n\t\t\t\t\t\t\t\t\t\tclass=\"text-grey-04\"\n\t\t\t\t\t\t\t\t\t\tv-html=\"sanitize(term)\" />\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tv-if=\"!condition.added\"\n\t\t\t\t\t\t\tview=\"outlined\"\n\t\t\t\t\t\t\t:color=\"condition.exist ? 'orange' : 'teal'\"\n\t\t\t\t\t\t\tblock\n\t\t\t\t\t\t\tdense\n\t\t\t\t\t\t\t@click=\"onAddCondition(condition, index)\">\n\t\t\t\t\t\t\t<div class=\"flex items-center justify-center gap-2\">\n\t\t\t\t\t\t\t\t<span>Add to Active Conditions</span>\n\t\t\t\t\t\t\t\t<span class=\"material-icons\">arrow_forward</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<Button\n\t\t\t\t\tv-if=\"\n\t\t\t\t\t\tsettingConditionStore.$state.form.conditions &&\n\t\t\t\t\t\tsettingConditionStore.$state.form.conditions.length >= 2 &&\n\t\t\t\t\t\tsettingConditionStore.$state.form.conditions.length !==\n\t\t\t\t\t\t\tsettingConditionStore.$state.form.selectedConditions.length\n\t\t\t\t\t\"\n\t\t\t\t\tcolor=\"teal\"\n\t\t\t\t\tblock\n\t\t\t\t\tdense\n\t\t\t\t\t@click=\"onAddAllCondition\">\n\t\t\t\t\t<div class=\"flex items-center justify-center gap-2\">\n\t\t\t\t\t\t<span>Add All To Active Conditions</span>\n\t\t\t\t\t\t<span class=\"material-icons\">arrow_forward</span>\n\t\t\t\t\t</div>\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</template>\n\t</div>\n\t<SettingConditionFormModalDuplicate\n\t\tv-model=\"state.isModalOpen\"\n\t\t@continue=\"onDuplicateContinue\"\n\t\t@cancel=\"onDuplicateCancel\" />\n</template>\n\n<style lang=\"scss\" scoped>\n.condition-source-outline {\n\t@apply rounded-lg bg-teal-01 bg-opacity-25 p-4;\n\n\tbox-shadow: 0 0 2px 1px rgba(66, 66, 66, 0.2);\n\n\t.title {\n\t\t@apply text-teal-04 flex items-center gap-x-2;\n\t}\n\n\t&--warning,\n\t&--success {\n\t\tbox-shadow: unset;\n\t}\n\t&--warning {\n\t\t@apply border border-orange-04;\n\n\t\t.title {\n\t\t\t@apply text-orange-04;\n\t\t}\n\t}\n\t&--success {\n\t\t@apply border border-green-04;\n\n\t\t.title {\n\t\t\t@apply text-green-04;\n\t\t}\n\t}\n}\n</style>\n","<script setup>\nimport { useTemplateRef, onMounted } from 'vue'\n\n// Components\nimport SettingConditionFormMappingList from './SettingConditionFormMappingList.vue'\nimport SettingConditionFormMappingSource from './SettingConditionFormMappingSource.vue'\nimport Fieldset from 'bbUi/components/fieldset/fieldset.vue'\n\nconst refMappingList = useTemplateRef('refMappingList')\n\ndefineExpose({\n\tonSubmit: () => refMappingList.value.onSubmit(),\n})\n\nconst onSaveMappingSource = (payload) => refMappingList.value.onSaveCondition(payload.condition , payload.source)\nconst onEditStateMappingSource = (value) => refMappingList.value.state.isEdit = value\n\n</script>\n\n<template>\n\t<div class=\"flex flex-col lg:flex-row gap-4\">\n\t\t<div class=\"lg:w-1/4\">\n\t\t\t<Fieldset class=\"rounded-lg\">\n\t\t\t\t<template #label>Preset Condition</template>\n\t\t\t\t<SettingConditionFormMappingSource @onEditCondition=\"onEditStateMappingSource\" @onSaveCondition=\"onSaveMappingSource\" />\n\t\t\t</Fieldset>\n\t\t</div>\n\t\t<div class=\"flex-1\">\n\t\t\t<Fieldset class=\"rounded-lg\">\n\t\t\t\t<template #label>Active Conditions and Conditional Questions</template>\n\t\t\t\t<suspense>\n\t\t\t\t\t<SettingConditionFormMappingList ref=\"refMappingList\" />\n\t\t\t\t</suspense>\n\t\t\t</Fieldset>\n\t\t</div>\n\t</div>\n</template>\n","<script>\nimport { createContext } from 'utils/createContext'\n\nexport const [injectSettingConditionFormContext, provideSettingConditionFormContext] =\n\tcreateContext('SettingConditionForm')\n</script>\n\n<script setup async>\nimport { ref, reactive, computed, toRefs, useTemplateRef } from 'vue'\nimport { useRouter, useRoute } from 'vue-router'\nimport {\n\tuseSettingConditionGroupStore,\n\tuseSettingConditionStore\n} from '@/store/pinia/setting/condition'\nimport { tryCatchRequest } from '@/utils/request'\n\n// Components\nimport SettingConditionCategory from './SettingConditionFormCategory.vue'\nimport SettingConditionMapping from './SettingConditionFormMapping/SettingConditionFormMapping.vue'\nimport Button from 'bbUi/components/button/button.vue'\nimport Modal from 'bbUi/components/modal/modal.vue'\n\nconst props = defineProps({\n\tisPriceSync: {\n\t\ttype: Boolean,\n\t\tdefault: false\n\t},\n\tcompanySource: {\n\t\ttype: String,\n\t\tdefault: ''\n\t},\n\tpriceEditor: {\n\t\ttype: Boolean,\n\t\tdefault: false\n\t},\n\tpriceEditorCategory: Object\n})\n\nconst route = useRoute()\nconst router = useRouter()\nconst settingConditionGroupStore = useSettingConditionGroupStore()\nconst settingConditionStore = useSettingConditionStore()\nconst state = reactive({\n\tisModalDelete: false\n})\nconst refMapping = useTemplateRef('refMapping')\nconst refCategory = useTemplateRef('refCategory')\n\nconst conditionId = computed(() => route.params && route.params.conditionId)\nconst isSynced = computed(() => !!route.query.unique_id && route.query.sync == 1)\n\nconst is_price_sync = computed(() => {\n\treturn settingConditionGroupStore.$state.form.is_price_sync == '1' ? true : false\n})\n\nconst onSubmit = async () => {\n\tconst validCategory = await refCategory.value.onSubmit()\n\tconst validCondition = await refMapping.value.onSubmit()\n\n\tsettingConditionGroupStore.$state.form.conditions =\n\t\tsettingConditionStore.$state.form.activeConditions\n\n\tif (!validCategory || !validCondition) return\n\n\tif (conditionId.value)\n\t\tawait tryCatchRequest(settingConditionGroupStore.$state.updateSettingConditionGroup, () =>\n\t\t\tsettingConditionGroupStore\n\t\t\t\t.$updateSettingConditionGroup({ id: conditionId.value })\n\t\t\t\t.then(() => {\n\t\t\t\t\tif (!props.priceEditor) router.push({ name: 'settingCondition' })\n\t\t\t\t})\n\t\t)\n\telse\n\t\tawait tryCatchRequest(settingConditionGroupStore.$state.createSettingConditionGroup, () =>\n\t\t\tsettingConditionGroupStore.$createSettingConditionGroup().then(() => {\n\t\t\t\tif (!props.priceEditor) router.push({ name: 'settingCondition' })\n\t\t\t})\n\t\t)\n}\nconst onDelete = async () => {\n\tif (!conditionId.value) return\n\n\tstate.isModalDelete = false\n\n\tawait tryCatchRequest(settingConditionGroupStore.$state.deleteSettingConditionGroup, () =>\n\t\tsettingConditionGroupStore.$deleteSettingConditionGroup({ id: conditionId.value }).then(() => {\n\t\t\trouter.push({ name: 'settingCondition' })\n\t\t})\n\t)\n}\n\nconst { priceEditor, priceEditorCategory } = toRefs(props)\n\nprovideSettingConditionFormContext({\n\tpriceEditor: priceEditor.value,\n\tpriceEditorCategory: priceEditorCategory.value,\n\tconditionId,\n\tisSynced\n})\n\ndefineExpose({\n\tonSubmit\n})\n\nif (conditionId.value)\n\tawait settingConditionGroupStore.$getSettingConditionGroup({\n\t\tid: conditionId.value,\n\t\tparams: {\n\t\t\tunique_id: route.query.unique_id,\n\t\t\tis_price_sync: route.query.price_sync\n\t\t}\n\t})\n</script>\n\n<template>\n\t<div>\n\t\t<div class=\"flex flex-col gap-6\">\n\t\t\t<div class=\"space-y-4\">\n\t\t\t\t<div class=\"flex items-center gap-6\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass=\"flex items-center justify-center bg-teal-04 rounded-full text-white font-semibold w-8 h-8\">\n\t\t\t\t\t\t<span>1</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<h6 class=\"text-lg text-teal-04\">Set Category</h6>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"lg:ml-14 flex items-center text-left border-l-4 border-orange-02 px-4 py-2 gap-2 mb-2 info-warning\">\n\t\t\t\t\t<i class=\"material-icons\">info_outline</i>\n\t\t\t\t\t<p>To assign a Preset Condition to more than one item in a group, first select one item, apply a preset, and then add more items as needed.</p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"lg:ml-14\">\n\t\t\t\t\t<SettingConditionCategory ref=\"refCategory\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"space-y-4\">\n\t\t\t\t<div class=\"flex items-center gap-6\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass=\"flex items-center justify-center bg-teal-04 rounded-full text-white font-semibold w-8 h-8\">\n\t\t\t\t\t\t<span>2</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<h6 class=\"text-lg text-teal-04\">Set Condition</h6>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"lg:ml-14\">\n\t\t\t\t\t<SettingConditionMapping ref=\"refMapping\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div\n\t\t\tv-if=\"!isSynced && !$props.priceEditor\"\n\t\t\tclass=\"mt-10 -mx-6 -mb-6 px-10 py-6 border-t border-grey-01\">\n\t\t\t<div :class=\"['flex items-center justify-end']\">\n\t\t\t\t<a\n\t\t\t\t\tv-if=\"conditionId\"\n\t\t\t\t\tv-loading=\"settingConditionGroupStore.isFormLoading\"\n\t\t\t\t\thref=\"#\"\n\t\t\t\t\tclass=\"text-red-04 hover:text-red-02 focus:text-red-02\"\n\t\t\t\t\t@click.prevent=\"state.isModalDelete = true\">\n\t\t\t\t\tDelete\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</div>\n\t\t<template v-if=\"conditionId && !isSynced\">\n\t\t\t<Modal v-model=\"state.isModalDelete\" title=\"Delete Category\" size=\"xs\" :hide-footer=\"is_price_sync\" :hide-header=\"is_price_sync\">\n\t\t\t\t<template #default>\n\t\t\t\t\t<div v-if=\"is_price_sync\" class=\"py-12 flex flex-col items-center\">\n\t\t\t\t\t\t<img src=\"@/assets/icon/attention-warning.svg\" alt=\"\">\n\t\t\t\t\t\t<h2 class=\"font-semibold text-2xl mt-6\">Delete Category?</h2>\n\t\t\t\t\t\t<p class=\"mt-3 text-center text-teal-03\">Deleting conditions will remove all items under these conditions from your widget and remove their price. You can always recreate conditions, set price manually, or enable price sync at any time. Are you sure you want to proceed?</p>\n\t\t\t\t\t\t<div class=\"w-full flex justify-between mt-8\">\n\t\t\t\t\t\t\t<Button color=\"white\" view=\"smooth\" :disabled=\"settingConditionGroupStore.$state.deleteSettingConditionGroup.isLoading\" @click=\"state.isModalDelete = false\">Cancel</Button>\n\t\t\t\t\t\t\t<Button color=\"teal\" :loading=\"settingConditionGroupStore.$state.deleteSettingConditionGroup.isLoading\" @click=\"onDelete\">Confirm</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<h6 v-else class=\"text-lg font-normal mb-5\">Are you sure want to delete this category?</h6>\n\t\t\t\t</template>\n\t\t\t\t<template #footer>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tview=\"outlined\"\n\t\t\t\t\t\tcolor=\"teal\"\n\t\t\t\t\t\tclass=\"mr-5\"\n\t\t\t\t\t\t:disabled=\"settingConditionGroupStore.$state.deleteSettingConditionGroup.isLoading\"\n\t\t\t\t\t\t@click=\"state.isModalDelete = false\">\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tview=\"smooth\"\n\t\t\t\t\t\tcolor=\"red\"\n\t\t\t\t\t\t:loading=\"settingConditionGroupStore.$state.deleteSettingConditionGroup.isLoading\"\n\t\t\t\t\t\t@click=\"onDelete\">\n\t\t\t\t\t\tDelete\n\t\t\t\t\t</Button>\n\t\t\t\t</template>\n\t\t\t</Modal>\n\t\t</template>\n\t</div>\n</template>\n\n<style scoped>\n  .info-warning {\n    background: #fef9c2;\n    color: #b07929\n  }\n</style>","<script setup>\nimport { useSettingConditionGroupStore } from 'store/pinia/setting/condition'\n\n// Components\nimport SettingConditionForm from '../SettingConditionForm/SettingConditionForm.vue'\nimport Loading from '@/components/Base/Loading/Loading.vue'\nimport Breadcrumb from '@/components/Breadcrumb.vue'\nimport Card from 'bbUi/components/card/card.vue'\nimport Button from 'bbUi/components/button/button.vue'\nimport { useTemplateRef } from 'vue'\n\ndefineProps({\n\tbreadcrumb: { type: Array, default: () => [] },\n\ttitle: String,\n\tbackTo: Object\n})\n\nconst refForm = useTemplateRef('form')\n\nconst settingConditionGroupStore = useSettingConditionGroupStore()\n</script>\n\n<template>\n\t<div>\n\t\t<div class=\"flex justify-between items-center mt-2 mb-8\">\n\t\t\t<Breadcrumb\n\t\t\t\t:pageTitle=\"$props.title\"\n\t\t\t\t:backTo=\"$props.backTo\"\n\t\t\t\t:items=\"$props.breadcrumb\"\n\t\t\t\tclass=\"w-full\">\n\t\t\t\t<template #right>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tcolor=\"teal\"\n\t\t\t\t\t\t:loading=\"settingConditionGroupStore.isFormLoading\"\n\t\t\t\t\t\t@click=\"refForm.onSubmit()\">\n\t\t\t\t\t\tSave Changes\n\t\t\t\t\t</Button>\n\t\t\t\t</template>\n\t\t\t</Breadcrumb>\n\t\t</div>\n\t\t<Card class=\"mb-24\">\n\t\t\t<suspense>\n\t\t\t\t<SettingConditionForm ref=\"form\" />\n\t\t\t\t<template #fallback>\n\t\t\t\t\t<Loading />\n\t\t\t\t</template>\n\t\t\t</suspense>\n\t\t</Card>\n\t</div>\n</template>\n"],"names":["useSettingConditionGroupStore","defineStore","state","form","group_name","conditions","categories","is_price_sync","priceSyncCompanySource","getSettingConditionGroup","result","isLoading","createSettingConditionGroup","updateSettingConditionGroup","deleteSettingConditionGroup","getSettingConditionGroupDevices","getters","companyName","isFormLoading","isMac","findIndex","category","is_mac","[object Object]","length","route","useRoute","query","_a","unique_id","this","value","actions","$state","payload","settingConditionStore","useSettingConditionStore","response","request","url","id","method","params","filter","is_checked","activeConditions","price_sync_source","data","JSON","stringify","map","condition","__spreadProps","terms","term","$deleteSettingConditionGroup","_method","sub_domain","sources","selectedSource","selectedConditions","getSettingConditions","getSettingConditionSources","createSettingCondition","updateSettingCondition","deleteSettingCondition","sortSettingCondition","createSettingConditionQuestionBulk","isMappingSourceLoading","isMappingListLoading","activeCondition","sourceName","name","split","join","toLowerCase","$updateSettingCondition","$deleteSettingCondition","$sortSettingCondition","sorting","filteredCategoryId","category_id","toString","includes","_b","emptyResponse","logo","$createSettingConditionQuestionBulk","settingConditionFormContext","injectSettingConditionFormContext","settingConditionGroupStore","validation","useVuelidate","required","$lazy","multiSelectClass","computed","multiselect--invalid","$invalid","isCategoriesExist","devicesFiltered","devices","device","priceEditor","priceEditorCategory","_c","__expose","onSubmit","async","$validate","$error","__temp","__restore","_withAsyncContext","$getSettingConditionGroupDevices","onMounted","modelFromUrl","model","deviceToSelect","find","modelShow","_useModel","__props","settingConditionFormModalConditionContext","injectSettingConditionFormModalConditionContext","onAddTerm","isSubmitting","push","index","splice","modelForm","reactive","tempQuestions","filteredQuestions","questions","question","action","filteredAnswers","answers","answer","onQuestionToggle","has_question","deepClone","onAddQuestion","_u","type","message","is_required","answer_type","amount_type","amount_price","questionIndex","conditionId","answerIndex","props","setAnswerPrice","answerPrice","sanitizedConditionTerms","conditionTerms","sanitize","sanitizedConditionGuideline","conditionGuideline","createContext","contextName","injectionKey","Symbol","fallback","inject","context","provide","provideSettingConditionFormModalConditionContext","emit","__emit","me","useUser","isError","isModalUpgradePlan","selectedTab","SettingConditionFormModalConditionActive","tabs","component","SettingConditionFormModalConditionQuestion","ref","every","v","requiredIf","_","sibling","$each","helpers","forEach","$stopPropagation","onSaveModal","package_id","$model","i","isEmpty","checkTermsValue","isEdit","ElMessage","onCloseModal","watch","$reset","selectedCondition","onCancel","onConfirm","injectSettingConditionFormMappingListContext","provideSettingConditionFormMappingListContext","selected","isModalOpen","edit","delete","bulkQuestion","bulkQuestionWarning","selectedConditionsBulk","minLength","onClickModalAdd","onClickModalBulkQuestion","onBulkQuestionWarningContinue","onBulkQuestionSave","tryCatchRequest","condition_ids","then","$getSettingConditionGroup","price_sync","handleInitEdit","onCancelModal","Object","keys","item","onSaveCondition","source","__spreadValues","$createSettingCondition","added","exist","isConditionActive","onDeleteCondition","deleteActiveCondition","priceSync","uniqueId","sync","onDraggedCondition","sort","parsedTerms","condition_term","parse","Array","isArray","settingConditionFormMappingListContext","replacer","isAddAll","emits","selectedCategories","isSourceDisable","isSynced","initCondition","onAddCondition","onAddAllCondition","duplicateConditions","key","onSelectSource","subdomain","$getSettingConditions","showCondition","onDuplicateContinue","activeConditionIndex","activeName","selectedName","replaceAllCondition","replaceIndex","replaceName","Set","onDuplicateCancel","replaceCondition","$getSettingConditionSources","resetSettingConditionForm","deep","immediate","refMappingList","useTemplateRef","onSaveMappingSource","onEditStateMappingSource","provideSettingConditionFormContext","router","useRouter","isModalDelete","refMapping","refCategory","onDelete","toRefs","validCategory","validCondition","$updateSettingConditionGroup","$createSettingConditionGroup","refForm"],"mappings":"k7CAIY,MAACA,GAAgCC,EAAY,wBAAyB,CACjFC,MAAO,KACC,CACNC,KAAM,CACLC,gBAAY,EACZC,WAAY,GACZC,WAAY,GACZC,cAAe,GAEhBC,4BAAwB,EACxBC,yBAA0B,CACzBC,YAAQ,EACRC,WAAW,GAEZC,4BAA6B,CAC5BD,WAAW,GAEZE,4BAA6B,CAC5BF,WAAW,GAEZG,4BAA6B,CAC5BH,WAAW,GAEZI,gCAAiC,CAChCL,YAAQ,KAIXM,QAAS,CACRC,YAAYf,GACJA,EAAMM,uBAEdU,cAAchB,GAEZA,EAAMU,4BAA4BD,WAAaT,EAAMW,4BAA4BF,UAGnFQ,MAAMjB,GACEA,EAAMC,KAAKG,WAAWc,cAAsBC,EAASC,SAE7DC,uBAAuBrB,SACtB,IAAKA,EAAMC,KAAKG,WAAWkB,OAAS,EAAU,OAAA,EAE9C,MAAMC,EAAQC,IAEd,OAAO,0BAAOC,YAAP,EAAAC,EAAcC,YAAaC,KAAKX,MAAMY,OAAS,IAGxDC,QAAS,CACRT,iCACCO,KAAKG,OAAO9B,KAAO,CAClBC,gBAAY,EACZC,WAAY,GACZC,WAAY,KAAAiB,gCAGkBW,GAC/B,MAAMC,EAAwBC,KACxBC,QAAiBC,EAAQ,CAC9BC,IAAK,mCAAmCL,EAAQM,KAChDC,OAAQ,MACRC,OAAQR,EAAQQ,SAaV,OAVFZ,KAAAG,OAAOxB,yBAAyBC,OAAS2B,EACzCP,KAAAG,OAAO9B,KAAKC,WAAaiC,EAASjC,WAClC0B,KAAAG,OAAO9B,KAAKE,WAAagC,EAAShC,WAClCyB,KAAAG,OAAO9B,KAAKG,WAAa+B,EAAS/B,WAAWqC,QAAOtB,KAAcA,EAASuB,aAC3Ed,KAAAG,OAAO9B,KAAKI,cAAgB8B,EAAS9B,cACpB4B,EAAAF,OAAO9B,KAAK0C,iBAAmBR,EAAShC,WAE1DgC,EAASS,oBACPhB,KAAAG,OAAOzB,uBAAyB6B,EAASS,mBAExCT,GAAAd,qCAGP,MAAMwB,EAAO,CACZ3C,WAAY0B,KAAKG,OAAO9B,KAAKC,WAC7BE,WAAY0C,KAAKC,UAAUnB,KAAKG,OAAO9B,KAAKG,YAC5CD,WAAYyB,KAAKG,OAAO9B,KAAKE,WAAW6C,KAAIC,GAAcC,OACtDD,GADsD,CAEzDE,MAAO,CAACF,EAAUG,QAASH,EAAUE,YAIvC,OAAOf,EAAQ,CACdC,IAAK,iCACLE,OAAQ,OACRM,KAAAA,KAAAxB,mCAGiCW,GAClC,MAAMa,EAAO,CACZ3C,WAAY0B,KAAKG,OAAO9B,KAAKC,WAC7BE,WAAY0C,KAAKC,UAAUnB,KAAKG,OAAO9B,KAAKG,YAC5CD,WAAYyB,KAAKG,OAAO9B,KAAKE,YAG9B,OAAOiC,EAAQ,CACdC,IAAK,mCAAmCL,EAAQM,KAChDC,OAAQ,OACRM,KAAAA,KAAAQ,mCAGiCrB,GAC3BI,EAAQ,CACdC,IAAK,qCAAqCL,EAAQM,KAClDC,OAAQ,OACRM,KAAM,CACLS,QAAS,YAAAjC,yCAKL,MAAAc,QAAiBC,EAAQ,CAC9BC,IAAK,4BACLE,OAAQ,QAKF,OAFFX,KAAAG,OAAOlB,gCAAgCL,OAAS2B,EAE9CA,MAKGD,GAA2BnC,EAAY,mBAAoB,CACvEC,MAAO,KACC,CACNC,KAAM,CACLsD,gBAAY,EACZpD,WAAY,GACZwC,iBAAkB,GAClBa,QAAS,GACTC,oBAAgB,EAChBC,mBAAoB,IAErBC,qBAAsB,CACrBnD,YAAQ,EACRC,WAAW,GAEZmD,2BAA4B,CAC3BpD,YAAQ,EACRC,WAAW,GAEZoD,uBAAwB,CACvBpD,WAAW,GAEZqD,uBAAwB,CACvBrD,WAAW,GAEZsD,uBAAwB,CACvBtD,WAAW,GAEZuD,qBAAsB,CACrBvD,WAAW,GAEZwD,mCAAoC,CACnCxD,WAAW,KAIdK,QAAS,CACRoD,uBAAuBlE,GAErBA,EAAM2D,qBAAqBlD,WAC3BT,EAAM4D,2BAA2BnD,WACjCT,EAAM+D,uBAAuBtD,UAG/B0D,qBAAqBnE,GAEnBA,EAAM6D,uBAAuBpD,WAC7BT,EAAM8D,uBAAuBrD,WAC7BT,EAAM+D,uBAAuBtD,WAC7BT,EAAMgE,qBAAqBvD,WAC3BT,EAAMiE,mCAAmCxD,WAI5CqB,QAAS,CACRT,kBAAkB4B,GACX,MAAAN,EAAmBf,KAAKG,OAAO9B,KAAK0C,iBAGzC,OAAAA,IAMO,IALPA,EAAiBzB,WAA6BkD,IAC7C,MAAMC,EAAapB,EAAUqB,KAAKC,MAAM,KAAKC,KAAK,IAG3C,OAFYJ,EAAgBE,KAAKC,MAAM,KAAKC,KAAK,IAEtCC,gBAAkBJ,EAAWI,kBAIlDpD,4BACMO,KAAAG,OAAO9B,KAAKsD,gBAAa,EACzB3B,KAAAG,OAAO9B,KAAKE,WAAa,GACzByB,KAAAG,OAAO9B,KAAK0C,iBAAmB,GAC/Bf,KAAAG,OAAO9B,KAAKuD,QAAU,GACtB5B,KAAAG,OAAO9B,KAAKwD,oBAAiB,EAC7B7B,KAAAG,OAAO9B,KAAKyD,mBAAqB,IAAArC,4BAEXW,GACrB,MAAAG,QAAiBC,EAAQ,CAC9BC,IAAK,uCACLE,OAAQ,MACRC,OAAQR,EAAQQ,SAUV,OAPFZ,KAAAG,OAAO4B,qBAAqBnD,OAAS2B,EACrCP,KAAAG,OAAO9B,KAAKE,WAAagC,EAAShC,WAAW6C,KAAIC,GAAcC,OAChED,GADgE,CAEnE/C,WAAYiC,EAASmC,KACrBf,WAAYvB,EAAQQ,OAAOe,YAAcvB,EAAQuB,eAG3CpB,GAAAd,8BAEsBW,GACrBA,EAAAa,KAAKM,MAAQL,KAAKC,UAAU,CAACf,EAAQa,KAAKO,QAASpB,EAAQa,KAAKM,QAQjE,aANgBf,EAAQ,CAC9BC,IAAK,yBAAyBL,EAAQM,KACtCC,OAAQ,OACRM,KAAMb,EAAQa,QAGR6B,8BAEsB1C,IACrBA,EAAAa,KAAKM,MAAQL,KAAKC,UAAU,CAACf,EAAQa,KAAKO,QAASpB,EAAQa,KAAKM,cAE3Df,EAAQ,CACpBC,IAAK,0BAA0BL,EAAQM,KACvCC,OAAQ,OACRM,KAAMb,EAAQa,QAAA8B,8BAGc3C,SAChBI,EAAQ,CACpBC,IAAK,4BAA4BL,EAAQM,KACzCC,OAAQ,OACRM,KAAM,CACLS,QAAS,YAAAsB,4BAIgB5C,IAC3BA,EAAQa,KAAKgC,QAAU/B,KAAKC,UAAU,IAAIf,EAAQa,KAAKgC,gBAE1CzC,EAAQ,CACpBC,IAAK,yBACLE,OAAQ,OACRM,KAAMb,EAAQa,QAAAxB,kCAGkBW,WAC3B,MAAA8C,GAAqB,WAAQC,kBAAR,EAAArD,EAAqBsD,WAAWC,SAAS,SACjE,KACAjD,EAAQ+C,YAEX,GAAI,OAAQG,EAAAlD,EAAA+C,kBAAa,EAAAG,EAAAF,WAAWC,SAAS,QAAS,CACrD,MAAME,EAAgB,GAGf,OAFFvD,KAAAG,OAAO6B,2BAA2BpD,OAAS2E,EAC3CvD,KAAAG,OAAO9B,KAAKuD,QAAU2B,EACpBA,EAEF,MAAAhD,QAAiBC,EAAQ,CAC9BC,IAAK,mCACLE,OAAQ,MACRC,OAAQ,CACPuC,YAAaD,EACbM,MAAM,KAOD,OAHFxD,KAAAG,OAAO6B,2BAA2BpD,OAAS2B,EAC3CP,KAAAG,OAAO9B,KAAKuD,QAAUrB,EAEpBA,GAAAkD,0CAEkCrD,SAC5BI,EAAQ,CACpBC,IAAK,mCACLE,OAAQ,OACRM,KAAMb,EAAQa,8fCtRlB,MAAMtB,EAAQC,IACR8D,EAA8BC,KAC9BC,EAA6B1F,KAC7B2F,EAAaC,GAClB,CACCxF,WAAY,CAAEyF,SAAAA,IACdvF,WAAY,CAAEuF,SAAAA,KAEfH,EAA2BzD,OAAO9B,KAClC,CACC2F,OAAO,IAIHC,EAAmBC,GAAS,KAAO,CACxCC,uBAAwBN,EAAW5D,MAAMzB,WAAW4F,aAE/CC,EAAoBH,GACzB,IAAMN,EAA2BzD,OAAO9B,KAAKG,WAAWkB,OAAS,IAE5D4E,EAAkBJ,GAAS,KAChC,GAAIG,EAAkBpE,MAAO,CACtB,MAAAsE,EAAUX,EAA2BzD,OAAOlB,gCAAgCL,OAElF,OAAOgF,EAA2BvE,OAAS,EACxCkF,EAAQ1D,QAAO2D,GAA4B,IAAlBA,EAAOhF,SAChC+E,EAAQ1D,QAAO2D,GAA4B,IAAlBA,EAAOhF,SAG7B,OAAAoE,EAA2BzD,OAAOlB,gCAAgCL,iBAStE8E,EAA4Be,cACJb,EAAAzD,OAAO9B,KAAKG,WACtCoF,EAA2BzD,OAAOlB,gCAAgCL,OAAOiC,QAClE2D,cACL,OAAAA,EAAOrB,aAAeO,EAA4BgB,oBAAoBhE,KACtE,OAAOZ,EAAA0E,EAAA9B,WAAM,EAAA5C,EAAA+C,iBACZ,OAA4B8B,EAA5B,OAA4BrB,EAAAI,EAAAgB,0BAAqB,EAAApB,EAAAZ,WAAM,EAAAiC,EAAA9B,mBAG/C+B,EAAA,CACZC,SAhBgBC,gBACVjB,EAAW5D,MAAM8E,aAEflB,EAAW5D,MAAM+E,WAgBpBC,EAAAC,GAAAC,GAAA,IAAAvB,EAA2BwB,iDAEjCC,GAAU,KACF,MAAAC,EAAe3F,EAAME,MAAM0F,MAEjC,GAAID,GAAgBhB,EAAgBrE,MAAMP,OAAS,EAAG,CAC9C,MAAA8F,EAAiBlB,EAAgBrE,MAAMwF,MAAKjB,GAChDA,EAAO9B,OAAS4C,GAChBd,EAAO9B,KAAKG,gBAAkByC,EAAazC,gBAGzC2C,IACyB5B,EAAAzD,OAAO9B,KAAKG,WAAa,CAACgH,yzGCzDrD,MAAAE,EAAYC,EAGjBC,EAAA,krDCbD,MAAMC,EAA4CC,KAE5CC,EAAY,KACjBF,EAA0CzH,MAAM4H,cAAe,EACrBH,EAAAxH,KAAK4B,MAAMsB,MAAM0E,KAAK,+1EAE5C,CAASC,IAC7BL,EAA0CzH,MAAM4H,cAAe,EAC/DH,EAA0CxH,KAAK4B,MAAMsB,MAAM4E,OAAOD,EAAO,2oDCMpE,MAAAE,EAAYT,EAAWC,EAAC,QA0BxBlC,EAA8BC,KAC9BvF,EAAQiI,EAAS,CACtBC,cAAe,KAGVC,EAAoBrC,GAAS,IAClCkC,EAAUnG,MAAMuG,UAAU3F,QAAmB4F,GAAoB,WAApBA,EAASC,WAGjDC,EAA6BC,GAAAA,EAAQ/F,QAAOgG,GAA4B,WAAlBA,EAAOH,SAC7DI,EAAmB,KACpBV,EAAUnG,MAAM8G,cACb3I,EAAAkI,cAAgBU,EAAUZ,EAAUnG,MAAMuG,WAE5CJ,EAAUnG,MAAMuG,UAAU9G,OAAS,GAAGuH,MAEhCb,EAAAnG,MAAMuG,UAAYQ,EAAU5I,EAAMkI,eAC5ClI,EAAMkI,cAAgB,KAGlBW,EAAgB,KACjBV,EAAkBtG,MAAMP,QAAU,EAC3BwH,EAAA,CACTC,KAAM,UACNC,QAAS,+CAGAhB,EAAAnG,MAAMuG,UAAUP,KAAK,CAC9BvF,QAAI,EACJgG,OAAQ,OACRD,SAAU,GACVY,aAAa,EACbC,YAAa,SACbV,QAAS,CACR,CACClG,QAAI,EACJgG,OAAQ,OACRG,OAAQ,GACRM,KAAM,aACNI,YAAa,QACbC,aAAc,s5BAqBM,CAAiBC,IACrC/D,EAA4BgE,YAAYzH,MACjCmG,EAAAnG,MAAMuG,UAAUiB,GAAef,OAAS,SACpCN,EAAAnG,MAAMuG,UAAUL,OAAOsB,EAAe,81CAE/B,EAAChB,EAAUkB,KAC7BjE,EAA4BgE,YAAYzH,MAAgBwG,EAAAG,QAAQe,GAAajB,OAAS,SAC5ED,EAAAG,QAAQT,OAAOwB,EAAa,mhDAvBvB,CAAiBF,IAChCd,EAAgBP,EAAUnG,MAAMuG,UAAUiB,GAAeb,SAASlH,QAAU,GACrEwH,EAAA,CACTC,KAAM,UACNC,QAAS,6CAGVhB,EAAUnG,MAAMuG,UAAUiB,GAAeb,QAAQX,KAAK,CACrDvF,QAAI,EACJgG,OAAQ,OACRG,OAAQ,GACRM,KAAM,aACNI,YAAa,QACbC,aAAc,ynBCvGjB,MAAMI,EAAQhC,EAORW,EAAoBrC,GAAS,IAClC0D,EAAMpB,UAAU3F,QAAO4F,GAAgC,WAApBA,EAASC,WAGvCmB,EAA2BhB,IAChC,IAAIiB,EAAc,GAElB,MAAoB,eAAhBjB,EAAOM,KAA8B,GAChB,YAAhBN,EAAOM,KAAmCW,GAAA,IAC1B,cAAhBjB,EAAOM,OAAqCW,GAAA,KAE1B,UAAvBjB,EAAOU,YAAyBO,GAAe,IAAIjB,EAAOW,eAC9B,eAAvBX,EAAOU,cAA8BO,GAAe,GAAGjB,EAAOW,iBAEhEM,mYAG2BlB,YAAAA,EAAQ/F,QAAOgG,GAA4B,WAAlBA,EAAOH,sLAA3C,IAAWE,qcCnBnC,MAAMgB,EAAQhC,EAmBRmC,EAA0B7D,GAAS,IACxC0D,EAAMI,eAAe5G,KAAYI,GACzByG,EAASzG,GAAQ,QAGpB0G,EAA8BhE,GAAS,IAAM+D,EAASL,EAAMO,oBAAsB,kxBCxBlF,MAAAzC,EAAYC,EAGjBC,EAAA,wNCXc,0nCCER,SAAAwC,GAAuBC,GAC7B,MACMC,EAAeC,OADK,GAAGF,YAc7B,MAAO,CAXgBG,GACNC,EAAOH,EAAcE,GAIJE,IACjCC,EAAQL,EAAcI,GAEfA,qTCVR5C,GACA8C,IACGR,GAAc,+XAyBlB,MAAMR,EAAQhC,EAkBRiD,EAAOC,EACPpD,EAAYC,EAGjBC,EAAA,cAEKlC,EAA8BC,MAC9BoF,GAAEA,GAAOC,KACT5K,EAAQiI,EAAS,CACtBxH,WAAW,EACXoK,SAAS,EACTjD,cAAc,EACdkD,oBAAoB,EACpBC,YAAaC,GACbC,KAAM,CACL,CACC3G,KAAM,oBACN4G,UAAWF,IAEZ,CACC1G,KAAM,wBACN4G,UAAWC,OAIRlL,EAAOmL,EAAI,CAChB9G,KAAM,GACNlB,KAAM,GACND,MAAO,GACPwF,cAAc,EACdP,UAAW,KAEN3C,EAAaC,GAClB,CACCpB,KAAM,CAAEqB,SAAAA,IACRvC,KAAM,CAAEuC,SAAAA,IACRxC,MAAO,CACNwC,SAAkB9C,GAAAA,EAAKwI,OAAMC,GAAKA,EAAEhK,OAAS,KAU9C8G,UAAW,CACVzC,SAAU4F,IAAW,CAACC,EAAGC,IAAYA,EAAQ9C,eAC7C+C,MAAOC,GAAQC,QAAQ,CACtBvD,SAAU,CAAE1C,SAAU4F,IAAW,CAACC,EAAGC,IAA+B,WAAnBA,EAAQnD,UACzDW,YAAa,CAAEtD,SAAAA,IACfuD,YAAa,CAAEvD,SAAAA,IACf6C,QAAS,CACR7C,SAAAA,GACA+F,MAAOC,GAAQC,QAAQ,CACtBnD,OAAQ,CAAE9C,SAAU4F,IAAW,CAACC,EAAGC,IAA+B,WAAnBA,EAAQnD,UACvDS,KAAM,CAAEpD,SAAAA,IACRwD,YAAa,CACZxD,SAAU4F,IACT,CAACC,EAAGC,IAA6B,YAAjBA,EAAQ1C,MAAuC,cAAjB0C,EAAQ1C,QAGxDK,aAAc,CACbzD,SAAU4F,IACT,CAACC,EAAGC,IAA6B,YAAjBA,EAAQ1C,MAAuC,cAAjB0C,EAAQ1C,eAQ7D9I,EACA,CAAE4L,kBAAkB,EAAMjG,OAAO,IAuB5BkG,EAAc,KACnB,GAAI7L,EAAK4B,MAAM8G,cAAgBgC,EAAG9I,MAAMkK,WAAa,GACpD/L,EAAM8K,oBAAqB,OAO5B,GAFA9K,EAAM4H,cAAe,EA1BrBnC,EAAW5D,MAAM8E,aAETlB,EAAW5D,MAAMmE,UAEF,MACjB,MAAAmB,EAAQ1B,EAAW5D,MAAMsB,MAAM6I,OAEjC,GAAA7E,EAAM7F,QAAU,EACZ,OAAA,EAGR,IAAA,IAAS2K,EAAI,EAAGA,EAAI9E,EAAM7F,OAAQ2K,IACjC,GAAIC,GAAQ/E,EAAM8E,KAAO9E,EAAM8E,GAAG3K,OAAS,EACnC,OAAA,EAIF,OAAA,GAWoB6K,GAAmB,CAQzC,QAPmB3C,EAAMrJ,WAAWe,WAEtC+B,GAAAA,EAAUqB,KAAKC,MAAM,KAAKC,KAAK,IAAIC,gBACnCxE,EAAK4B,MAAMyC,KAAKC,MAAM,KAAKC,KAAK,IAAIC,kBAIRa,EAA4BgE,YAAYzH,QAAU2H,EAAM4C,OACrF,OAAOC,EAAU,CAChBtD,KAAM,UACNC,QAAS,qCAIXhJ,EAAM6K,SAAU,EAChB7K,EAAM4H,cAAe,EAErB6C,EAAK,OAAQxK,EAAK4B,SAGdyK,EAAe,KACpBtM,EAAM4H,cAAe,EAChB6C,EAAA,kBAGN8B,GACC,IAAM,CAACjF,EAAUzF,MAAO2H,EAAM4C,UAC9B,KACO9E,EAAUzF,QACf7B,EAAM4H,cAAe,EACrBnC,EAAW5D,MAAM2K,UAGZlF,EAAUzF,OAAW2H,EAAM4C,QAC3BnM,EAAA4B,MAAQ+G,EAAUY,EAAMiD,mBAEH,aAAtBjD,EAAMuB,cACT/K,EAAM+K,YAAcI,MAErBnL,EAAM+K,YAAcC,GAEpB/K,EAAK4B,MAAQ,CACZyC,KAAM,GACNlB,KAAM,GACND,MAAO,CAAC,IACRwF,cAAc,EACdP,UAAW,QAMkCoC,GAAA,CAChDvK,KAAAA,EACAwF,WAAAA,EACAzF,MAAAA,27DCtMD,MAAMyK,EAAOC,EACPpD,EAAYC,EAGjBC,EAAA,eAEKmD,GAAEA,GAAOC,KACT5K,EAAQiI,EAAS,CACtB6C,oBAAoB,IAEf7K,EAAOmL,EAAI,CAChBzC,cAAc,EACdP,UAAW,CACV,CACC9F,QAAI,EACJgG,OAAQ,OACRD,SAAU,GACVY,aAAa,EACbC,YAAa,SACbV,QAAS,CACR,CACClG,QAAI,EACJgG,OAAQ,OACRG,OAAQ,GACRM,KAAM,aACNI,YAAa,QACbC,aAAc,QAMb3D,EAAaC,GAClB,CACC0C,UAAW,CACVzC,SAAU4F,IAAW,CAACC,EAAGC,IAAYA,EAAQ9C,eAC7C+C,MAAOC,GAAQC,QAAQ,CACtBvD,SAAU,CAAE1C,SAAU4F,IAAW,CAACC,EAAGC,IAA+B,WAAnBA,EAAQnD,UACzDW,YAAa,CAAEtD,SAAAA,IACfuD,YAAa,CAAEvD,SAAAA,IACf6C,QAAS,CACR7C,SAAAA,GACA+F,MAAOC,GAAQC,QAAQ,CACtBnD,OAAQ,CAAE9C,SAAU4F,IAAW,CAACC,EAAGC,IAA+B,WAAnBA,EAAQnD,UACvDS,KAAM,CAAEpD,SAAAA,IACRwD,YAAa,CACZxD,SAAU4F,IACT,CAACC,EAAGC,IAA6B,YAAjBA,EAAQ1C,MAAuC,cAAjB0C,EAAQ1C,QAGxDK,aAAc,CACbzD,SAAU4F,IACT,CAACC,EAAGC,IAA6B,YAAjBA,EAAQ1C,MAAuC,cAAjB0C,EAAQ1C,eAQ7D9I,EACA,CAAE4L,kBAAkB,EAAMjG,OAAO,IAQ5BkG,EAAc,KACf7L,EAAK4B,MAAM8G,cAAgBgC,EAAG9I,MAAMkK,WAAa,GACpD/L,EAAM8K,oBAAqB,GAN5BrF,EAAW5D,MAAM8E,YAETlB,EAAW5D,MAAMmE,UAUxByE,EAAK,OAAQxK,EAAK4B,gBAKnB0K,GAAA,IAAMjF,EAAUzF,QAChB,KACKyF,EAAUzF,QACb5B,EAAK4B,MAAQ,CACZ8G,cAAc,EACdP,UAAW,CACV,CACC9F,QAAI,EACJgG,OAAQ,OACRD,SAAU,GACVY,aAAa,EACbC,YAAa,SACbV,QAAS,CACR,CACClG,QAAI,EACJgG,OAAQ,OACRG,OAAQ,GACRM,KAAM,aACNI,YAAa,QACbC,aAAc,q2BC3GtB,MAAMqB,EAAOC,EACPpD,EAAYC,EAGjBC,EAAA,cAEKkF,EAAW,KAChBpF,EAAUzF,OAAQ,EACb4I,EAAA,WAEAkC,EAAY,KACjBrF,EAAUzF,OAAQ,EACb4I,EAAA,s9CCfLmC,GACAC,IACG7C,GAAc,0GA4BlB,MAAMzI,EAAQC,IACR8D,EAA8BC,KAC9BC,EAA6B1F,KAC7BmC,EAAwBC,KACxBlC,EAAQiI,EAAS,CACtBmE,QAAQ,EACRU,cAAU,EACVC,YAAa,CACZC,MAAM,EACNC,QAAQ,EACRC,cAAc,EACdC,qBAAqB,GAEtBpC,YAAa,SACbqC,uBAAwB,KAEnB3H,EAAaC,GAClB,CACC/C,iBAAkB,CAAEgD,SAAAA,GAAU0H,UAAWA,GAAU,KAEpDpL,EAAsBF,OAAO9B,KAC7B,CAAE2F,OAAO,IAoCJ0H,EAAkB,KACvBtN,EAAMoM,QAAS,EACfpM,EAAM8M,SAAW,KACjB9M,EAAM+M,YAAYC,MAAO,GAkBpBO,EAA2B,MAOzB,IALNvN,EAAMoN,uBAAuBlM,WAC5BoB,GACCL,EAAsBF,OAAO9B,KAAK0C,iBAAiB0E,SAC/BjD,EAAgB9B,KAAOA,IACzC8F,UAAU9G,OAAS,IAGHtB,EAAM+M,YAAYI,qBAAsB,EACxDnN,EAAM+M,YAAYG,cAAe,GAEjCM,EAAgC,KACrCxN,EAAM+M,YAAYG,cAAe,GAE5BO,EAAqB/G,MAAM7D,IAChC7C,EAAM+M,YAAYG,cAAe,EAE7B5H,EAA4BgE,YAAYzH,cACrC6L,GACLzL,EAAsBF,OAAOkC,oCAC7ByC,gBACOzE,EACJoD,oCAAoC,CACpCxC,KAAM,CACL8K,cAAe3N,EAAMoN,uBACrBhF,UAAWvF,EAAKuF,aAGjBwF,MAAK,KACL5N,EAAMoN,uBAAyB,YAE3B5H,EAA2BqI,0BAA0B,CAC1DvL,GAAIgD,EAA4BgE,YAAYzH,MAC5CW,OAAQ,CACPb,UAAWJ,EAAME,MAAME,UACvBtB,cAAekB,EAAME,MAAMqM,iBAM/BC,MAGIC,EAAgB,KACrBhO,EAAMoM,QAAS,EACfpM,EAAM8M,SAAW,KACjB9M,EAAM+K,YAAc,SAEpBkD,OAAOC,KAAKlO,EAAM+M,aAAanB,SAAgBuC,IAC9CnO,EAAM+M,YAAYoB,IAAQ,MAGtBC,EAAkB1H,MAAOzD,EAAWoL,GAAS,KAClDpL,EAAY2F,EAAU3F,GAEtBjD,EAAM+M,YAAYC,MAAO,EAErBhN,EAAMoM,OACL9G,EAA4BgE,YAAYzH,OAASoB,EAAUX,UACxDoL,GAAgBzL,EAAsBF,OAAO+B,wBAAwB4C,gBACpEzE,EAAsByC,wBAAwB,CAAEpC,GAAIW,EAAUX,GAAIO,KAAMI,UACxEuC,EAA2BqI,0BAA0B,CAC1DvL,GAAIgD,EAA4BgE,YAAYzH,MAC5CW,OAAQ,CACPb,UAAWJ,EAAME,MAAME,UACvBtB,cAAekB,EAAME,MAAMqM,iBAK9BC,KAEA9L,EAAsBF,OAAO9B,KAAK0C,iBAAiBM,EAAU6E,OAASwG,EAAAA,EAAA,GAClE1F,EAAU3G,EAAsBF,OAAO9B,KAAK0C,iBAAiBM,EAAU6E,SACvE7E,GAIDqC,EAA4BgE,YAAYzH,aACrC6L,GAAgBzL,EAAsBF,OAAO8B,wBAAwB6C,gBACpEzE,EAAsBsM,wBAAwB,CACnDjM,GAAIgD,EAA4BgE,YAAYzH,MAC5CgB,KAAMI,UAEDuC,EAA2BqI,0BAA0B,CAC1DvL,GAAIgD,EAA4BgE,YAAYzH,MAC5CW,OAAQ,CACPb,UAAWJ,EAAME,MAAME,UACvBtB,cAAekB,EAAME,MAAMqM,iBAK9BC,KAC4B9L,EAAAF,OAAO9B,KAAK0C,iBAAiBkF,KAAK5E,GAG3DoL,IAxJiBpM,EAAAF,OAAO9B,KAAKE,WAAa8B,EAAsBF,OAAO9B,KAAKE,WAAW6C,KAC9EC,IACZA,EAAY2F,EAAU3F,IAERuL,MAAcvL,EAErBC,OACHD,GADG,CAENwL,MAAOxM,EAAsByM,kBAAkBzL,QAqJlD+K,KAEKW,EAAoBjI,UACzB1G,EAAM+M,YAAYE,QAAS,EAnJE,MACvB,MAAA9M,EAAa8B,EAAsBF,OAAO9B,KAAKE,WAC/C2H,EAAQ3H,EAAWe,WAAuB+B,IAC/C,MAAMoB,EAAapB,EAAUqB,KAAKC,MAAM,KAAKC,KAAK,IAG3C,OAFcxE,EAAM8M,SAASxI,KAAKC,MAAM,KAAKC,KAAK,IAErCC,gBAAkBJ,EAAWI,iBAG9CtE,EAAW2H,KACd7F,EAAsBF,OAAO9B,KAAKE,WAAW2H,GAAO0G,OAAQ,EAC5DvM,EAAsBF,OAAO9B,KAAKE,WAAW2H,GAAO2G,OAAQ,IA0I7DG,GAEItJ,EAA4BgE,YAAYzH,aACrC6L,GAAgBzL,EAAsBF,OAAOgC,wBAAwB2C,gBACpEzE,EAAsB0C,wBAAwB,CACnDrC,GAAItC,EAAM8M,SAASxK,WAEdkD,EAA2BqI,0BAA0B,CAC1DvL,GAAIgD,EAA4BgE,YAAYzH,MAC5CgN,UAAW,CACVC,SAAUvN,EAAME,MAAME,UACtBoN,KAAMxN,EAAME,MAAMqM,iBAKrBC,KACM9L,EAAsBhC,KAAK0C,iBAAiBoF,OAAO/H,EAAM8M,SAAShF,MAAO,GAEhFkG,KAEKgB,EAAqBtI,UAC1B,MAAM7B,EAAU5C,EAAsBhC,KAAK0C,iBAAiBK,KAAI,CAACmL,EAAMrG,KAAW,CACjFxF,GAAI6L,EAAK7L,GACT2M,KAAMnH,MAGHxC,EAA4BgE,YAAYzH,aACrC6L,GAAgBzL,EAAsBF,OAAOiC,sBAAsB,IACxE/B,EAAsB2C,sBAAsB,CAC3C/B,KAAM,CAAEgC,QAAAA,QAINkJ,EAAiB,KACtB9L,EAAsBhC,KAAK0C,iBAC1B6C,EAA2BzD,OAAO9B,KAAKE,WAAW6C,KAAiBC,IAClE,IAAIE,EAAQ,GAEZ,MAAM+L,EAAcjM,EAAUkM,eAAiBrM,KAAKsM,MAAMnM,EAAUkM,gBAAkB,GAI/E,OAFChM,EAAAkM,MAAMC,QAAQJ,GAAeA,EAAc,GAE5ChM,EAAAoL,EAAA,GAEH1F,EAAU3F,IAFP,CAGNE,MAAOA,EAAQA,EAAM4E,OAAO,EAAG5E,EAAM7B,OAAS,GAAK,CAAC,IACpD8B,KAAMD,EAAQA,EAAM,GAAKF,EAAUkM,4BAKnC,OAAAzN,EAAA,MAAA4D,OAAA,EAAAA,EAA6BgE,kBAA7B,EAAA5H,EAA0CG,QAC7CkM,IAG6ClB,GAAA,CAC7C7M,MAAAA,EACAoO,gBAAAA,IAGY5H,EAAA,CACZC,SArMgBC,gBACVjB,EAAW5D,MAAM8E,aAEflB,EAAW5D,MAAM+E,QAmMzBwH,gBAAAA,EACA3I,WAAAA,EACAzF,MAAAA,+2DApLgC,EAACiD,EAAW6E,KAC5C9H,EAAMoM,QAAS,EACfpM,EAAM8M,SAAW5J,EAAAoL,EAAA,GAAK1F,EAAU3F,IAAf,CAA2B6E,MAAAA,IAC5C9H,EAAM+M,YAAYC,MAAO,EACzBhN,EAAM+K,YAAc,uWAdI,EAAC9H,EAAW6E,KACpC9H,EAAMoM,QAAS,EACfpM,EAAM8M,SAAW5J,EAAAoL,EAAA,GAAK1F,EAAU3F,IAAf,CAA2B6E,MAAAA,IAC5C9H,EAAM+M,YAAYC,MAAO,oMAEC,EAAC/J,EAAW6E,KACtC9H,EAAMoM,QAAS,EACfpM,EAAM8M,SAAW5J,EAAAoL,EAAA,GAAK1F,EAAU3F,IAAf,CAA2B6E,MAAAA,IAC5C9H,EAAM+M,YAAYE,QAAS,mrECjG5B,MAAMxC,EAAOC,EACPpD,EAAYC,EAGjBC,EAAA,cAEKkF,EAAW,KAChBpF,EAAUzF,OAAQ,EACb4I,EAAA,WAEAkC,EAAY,KACjBrF,EAAUzF,OAAQ,EACb4I,EAAA,sxCCFN,MAAMjF,EAA6B1F,KAC7BmC,EAAwBC,KACxBoD,EAA8BC,KAC9BgK,EAAyC3C,KACzC5M,EAAQiI,EAAS,CACtBuH,cAAU,EACVC,UAAU,EACV1C,aAAa,IAGR2C,EAAQhF,EAKRiF,EAAqB7J,GAAS,KAElC,GAACN,EAA2BzD,OAAO9B,KAAKG,YACvCoF,EAA2BzD,OAAO9B,KAAKG,WAAWkB,OAI7C,OAAAkE,EAA2BzD,OAAO9B,KAAKG,cAEzCwP,EAAkB9J,GAAS,QAE9BN,EAA2BzD,OAAO9B,KAAKC,aACvCyP,EAAmB9N,OACpB8N,EAAmB9N,MAAMP,OAAS,GAClCW,EAAsBiC,wBACtBoB,EAA4BuK,SAAShO,SA8GjCiO,EAAgB,KACrB,IAAI3M,EAAQ,GACN,MAAAhD,EAAa8B,EAAsBF,OAAO9B,KAAKE,WAErD8B,EAAsBF,OAAO9B,KAAKE,WAAaA,EAAW6C,KAAiBC,IACpE,MAAAiM,EAAcpM,KAAKsM,MAAMnM,EAAUkM,gBAIzC,OAFQhM,EAAAkM,MAAMC,QAAQJ,GAAeA,EAAc,GAE5ChM,OACHD,GADG,CAENG,KAAMD,EAAQA,EAAM,GAAKF,EAAUkM,eACnChM,MAAOA,EAAQA,EAAM4E,OAAO,EAAG5E,EAAM7B,OAAS,GAAK,CAAC,IACpDkN,OAAO,EACPC,MAAOxM,EAAsByM,kBAAkBzL,SAI5C8M,EAAiB,CAAC9M,EAAuB6E,GAAQ,KAGlD,KAFJ7E,EAAY2F,EAAU3F,MAEM,IAAV6E,EAAc,OAEhC,GAAI7E,EAAUwL,MAIb,OAHMzO,EAAAwP,SAAWtM,EAAKoL,EAAA,GAAArL,GAAL,CAAgB6E,MAAAA,SACjC9H,EAAM+M,aAAc,GAKC9K,EAAAF,OAAO9B,KAAKyD,mBAAmBmE,KAAK5E,GAC1DhB,EAAsBF,OAAO9B,KAAKE,WAAW2H,GAAO0G,OAAQ,EAExDe,GACHG,EAAM,mBAAmB,GAE1B,MAAM1N,EAAUiB,SACTjB,EAAQM,GAEXgD,EAA4BgE,YAAYzH,MAC3C6N,EAAM,kBAAmB,CACxBzM,UAAWjB,EACXqM,QAAQ,IAGTpM,EAAsBF,OAAO9B,KAAK0C,iBAAiBkF,KAAK3E,OACpDlB,GADoD,CAEvD2G,cAAc,EACdP,UAAW,OAGR4H,EAAoB,KACzB,MAAMC,EACJhO,EAAsBF,OAAO9B,KAAKE,WAAWmB,QAC7CW,EAAsBF,OAAO9B,KAAKE,WAAWsC,QAAOQ,GAAaA,EAAUwL,SAC5E,GAED,GAAIwB,EAAoB3O,OAKvB,OAJAtB,EAAMwP,SAAW5G,EAAUqH,GAC3BjQ,EAAMyP,UAAW,OACjBzP,EAAM+M,aAAc,GAKrB9K,EAAsBF,OAAO9B,KAAKE,WAAWyL,SAAQ,CAAC3I,EAAWiN,KAC3DjN,EAAUuL,OAAOuB,EAAe9M,EAAWiN,OAG5CC,EAAiBzJ,MAAM0J,IACxB,GAAAnO,EAAsBF,OAAO9B,KAAKuD,QAIrC,OAHsBvB,EAAAF,OAAO9B,KAAKwD,eACjCxB,EAAsBF,OAAO9B,KAAKuD,QAAQ6D,MAAegH,GAAAA,EAAO9K,aAAe6M,SAhL5D1J,WACf,MAAA7D,EAAOZ,EAAsBF,OAAO9B,KAAKwD,eACzCtC,EAAWwO,EAAmB9N,MAAQ8N,EAAmB9N,MAAM,GAAK,GAEtEgB,EAAKU,YAAcpC,UAChBuM,GAAgBzL,EAAsBF,OAAO4B,sBAAsB,IACxE1B,EAAsBoO,sBAAsB,CAC3C7N,OAAQ,CACPe,WAAYV,EAAKU,WACjBwB,YAAa5D,EAAS4D,YACtB3D,OAAQD,EAASC,YAIpB0O,MAoKaQ,GAGQrO,EAAAF,OAAO9B,KAAKwD,eAAiB,IAE9C8M,EAAsB,IACvBvQ,EAAMyP,SA/IiB,MAC3B,MAAMtP,EAAayI,EAAU3G,EAAsBF,OAAO9B,KAAKE,YACzDwC,EAAmBiG,EAAU3G,EAAsBF,OAAO9B,KAAK0C,kBAErEV,EAAsBF,OAAO9B,KAAKE,WAAaA,EAAW6C,KAAIC,GAAcC,OACxED,GADwE,CAE3EuL,OAAO,MAEcvM,EAAAF,OAAO9B,KAAKyD,mBAAqBvD,EACvD8B,EAAsBF,OAAO9B,KAAKyD,mBAAmBkI,SAA6Ba,IAC3E,MAAA+D,EAAuB7N,EAAiBzB,WAA6BkD,IAC1E,MAAMqM,EAAarM,EAAgBE,KAAKC,MAAM,KAAKC,KAAK,IAClDkM,EAAejE,EAAkBnI,KAAKC,MAAM,KAAKC,KAAK,IAErD,OAAAiM,EAAWhM,gBAAkBiM,EAAajM,iBAG9C+L,GAA2B,GAC9Bd,EAAM,mBAAmB,GAGxBpK,EAA4BgE,YAAYzH,OACxCc,EAAiB6N,GAAsBlO,GAEvCoN,EAAM,kBAAmB,CACxBzM,UAAW,CACVX,GAAIL,EAAsBF,OAAO9B,KAAK0C,iBAAiB6N,GAAsBlO,GAC7EgC,KAAMmI,EAAkBnI,KACxBlB,KAAMqJ,EAAkBrJ,KACxBD,MAAOsJ,EAAkBtJ,OAE1BkL,QAAQ,IAGTpM,EAAsBF,OAAO9B,KAAK0C,iBAAiB6N,GAAwBlC,EAAAA,EAAA,GACvE3L,EAAiB6N,IACjB/D,KAILiD,EAAM,mBAAmB,GAErBpK,EAA4BgE,YAAYzH,MAC3C6N,EAAM,kBAAmB,CACxBzM,UAAW,CACVX,GAAIL,EAAsBF,OAAO9B,KAAK0C,iBAAiB6N,GAAsBlO,GAC7EgC,KAAMmI,EAAkBnI,KACxBlB,KAAMqJ,EAAkBrJ,KACxBD,MAAOsJ,EAAkBtJ,OAE1BkL,QAAQ,IAITpM,EAAsBF,OAAO9B,KAAK0C,iBAAiBkF,KAAK3E,OACpDuJ,GADoD,CAEvD9D,cAAc,EACdP,UAAW,WAsFYuI,GAvKH,MAClB,MAAAhO,EAAmBV,EAAsBF,OAAO9B,KAAK0C,iBACrDxC,EAAa8B,EAAsBF,OAAO9B,KAAKE,WAC/CyQ,EAAejO,EAAiBzB,WAAuB+B,IAC5D,MAAM4N,EAAc7Q,EAAMwP,SAASlL,KAAKC,MAAM,KAAKC,KAAK,IAClDH,EAAapB,EAAUqB,KAAKC,MAAM,KAAKC,KAAK,IAE3C,OAAAqM,EAAYpM,gBAAkBJ,EAAWI,iBAGjD,GAAImM,GAAmB,EAAA,CACtB,MAAM3N,EAAY2F,EAAUzI,EAAWH,EAAMwP,SAAS1H,QAEhC7F,EAAAF,OAAO9B,KAAKyD,mBAAqB,IACnD,IAAIoN,IAAI,IAAIlI,EAAU3G,EAAsBF,OAAO9B,KAAKyD,oBAAqBT,KAEjFhB,EAAsBF,OAAO9B,KAAKE,WAAWH,EAAMwP,SAAS1H,OAAO0G,OAAQ,EAC3EvM,EAAsBF,OAAO9B,KAAK0C,iBAAiBiO,GAAgBtC,EAC/D,GAAArL,GAIL8N,KAmJOC,GAEFD,EAAoB,KACzB/Q,EAAM+M,aAAc,EACpB/M,EAAMyP,UAAW,EACjBzP,EAAMwP,cAAW,UAGlBjD,GACC,IAAM,CAACoD,EAAmB9N,MAAOyD,EAA4BuK,SAAShO,SACtE6E,UACKiJ,EAAmB9N,QAAUyD,EAA4BuK,SAAShO,YAC/D6L,GAAgBzL,EAAsBF,OAAO6B,4BAA4B,IAC9E3B,EAAsBgP,4BAA4BtB,EAAmB9N,MAAM,MAElDI,EAAAiP,8BAE5B,CACCC,MAAM,EACNC,WAAW,wsGC1Pb,MAAMC,EAAiBC,EAAe,kBAEzB9K,EAAA,CACZC,SAAU,IAAM4K,EAAexP,MAAM4E,aAGhC,MAAA8K,EAAuBvP,GAAYqP,EAAexP,MAAMuM,gBAAgBpM,EAAQiB,UAAYjB,EAAQqM,QACpGmD,EAA4B3P,GAAUwP,EAAexP,MAAM7B,MAAMoM,OAASvK,6zBCZlE0D,GAAmCkM,IAChDzH,GAAc,yPAkBf,MAAMR,EAAQhC,EAgBRjG,EAAQC,IACRkQ,EAASC,IACTnM,EAA6B1F,KAC7BmC,EAAwBC,KACxBlC,EAAQiI,EAAS,CACtB2J,eAAe,IAEVC,EAAaP,EAAe,cAC5BQ,EAAcR,EAAe,eAE7BhI,EAAcxD,GAAS,IAAMvE,EAAMiB,QAAUjB,EAAMiB,OAAO8G,cAC1DuG,EAAW/J,GAAS,MAAQvE,EAAME,MAAME,WAAiC,GAApBJ,EAAME,MAAMsN,OAEjE1O,EAAgByF,GAAS,IACiC,KAAxDN,EAA2BzD,OAAO9B,KAAKI,gBA2BzC0R,EAAWrL,UACX4C,EAAYzH,QAEjB7B,EAAM4R,eAAgB,QAEhBlE,GAAgBlI,EAA2BzD,OAAOnB,6BAA6B,IACpF4E,EAA2BnC,6BAA6B,CAAEf,GAAIgH,EAAYzH,QAAS+L,MAAK,KAChF8D,EAAA7J,KAAK,CAAEvD,KAAM,6BAKjB+B,YAAEA,EAAaC,oBAAAA,GAAwB0L,EAAOxI,UAEjBiI,GAAA,CAClCpL,YAAaA,EAAYxE,MACzByE,oBAAqBA,EAAoBzE,MACzCyH,YAAAA,EACAuG,SAAAA,IAGYrJ,EAAA,CACZC,SA9CgBC,UACV,MAAAuL,QAAsBH,EAAYjQ,MAAM4E,WACxCyL,QAAuBL,EAAWhQ,MAAM4E,WAE9CjB,EAA2BzD,OAAO9B,KAAKE,WACtC8B,EAAsBF,OAAO9B,KAAK0C,iBAE9BsP,GAAkBC,IAEnB5I,EAAYzH,YACT6L,GAAgBlI,EAA2BzD,OAAOpB,6BAA6B,IACpF6E,EACE2M,6BAA6B,CAAE7P,GAAIgH,EAAYzH,QAC/C+L,MAAK,KACApE,EAAMnD,aAAoBqL,EAAA7J,KAAK,CAAEvD,KAAM,gCAIzCoJ,GAAgBlI,EAA2BzD,OAAOrB,6BAA6B,IACpF8E,EAA2B4M,+BAA+BxE,MAAK,KACzDpE,EAAMnD,aAAoBqL,EAAA7J,KAAK,CAAEvD,KAAM,8BA6B5CgF,EAAYzH,SACTgF,EAAAC,GAAAC,GAAA,IAAAvB,EAA2BqI,0BAA0B,CAC1DvL,GAAIgH,EAAYzH,MAChBW,OAAQ,CACPb,UAAWJ,EAAME,MAAME,UACvBtB,cAAekB,EAAME,MAAMqM,0pGC5F9B,MAAMuE,EAAUf,EAAe,QAEzB9L,EAA6B1F"}