{"version":3,"file":"Form.7a132e01.js","sources":["../../src/store/pinia/condition.js","../../src/composable/product.js","../../src/components/SelectCheckbox.vue","../../src/components/Device/Form.vue"],"sourcesContent":["import { defineStore } from 'pinia'\nimport request from 'utils/request'\n\nexport const useCondition = defineStore('item', {\n\tstate: () => {\n\t\treturn {\n\t\t\tgetQuestions: {\n\t\t\t\tisLoading: false,\n\t\t\t\tresult: undefined\n\t\t\t}\n\t\t}\n\t},\n\tgetters: {},\n\tactions: {\n\t\tgetConditionalFormat(payload) {\n\t\t\tlet priceShown = payload.amount_price\n\n\t\t\tif (payload.type === 'Mark Down') priceShown = '-' + priceShown\n\t\t\tif (payload.amount_type === 'Percentage') priceShown = parseInt(priceShown).toString() + '%'\n\t\t\telse priceShown = payload.symbol + priceShown\n\n\t\t\treturn priceShown\n\t\t},\n\t\tasync $getQuestions(payload) {\n\t\t\tconst response = await request({\n\t\t\t\turl: `/v1/pos/condition/${payload.id}/questions`,\n\t\t\t\tmethod: 'get'\n\t\t\t})\n\n\t\t\tthis.$state.getQuestions.result = response\n\n\t\t\treturn response\n\t\t}\n\t}\n})\n","import { reactive, ref } from 'vue'\nimport { isFunction } from 'utils/is'\nimport store from 'store'\nimport { default as axios } from 'axios'\n\n\nconst cancelTokenSearch = ref(null)\nconst state = reactive({\n  search: {\n    product: {\n      query: null,\n      result: {\n        products: [],\n        categories: []\n      }\n    }\n  },\n  loading: {\n    search: {\n      product: false\n    }\n  }\n})\n\nconst useSearchProduct = () => {\n  const unsetResult = () => {\n    state.search.product.result.categories = []\n    state.search.product.result.products = []\n  }\n  const setResult = (items) => {\n    unsetResult()\n    Object.keys(items).forEach((key) => {\n      if (key === 'product') {\n        state.search.product.result.categories = items[key]\n      } else {\n        state.search.product.result.products.push({\n          category_name: key,\n          products: items[key]\n        })\n      }\n    })\n  }\n  const searchProduct = async (\n    payload = { query: null, buyback_type: null },\n    callback = () => {}\n  ) => {\n    if (cancelTokenSearch.value) cancelTokenSearch.value.cancel()\n    cancelTokenSearch.value = axios.CancelToken.source()\n\n    try {\n      state.loading.search.product = true\n      const response = await store.dispatch('product/search', {\n        q: payload.query || state.search.product.query || null,\n        buyback_type: payload.buyback_type || null,\n        cancelToken: cancelTokenSearch.value && cancelTokenSearch.value.token,\n      })\n      await Promise.all([\n        setResult(response),\n        isFunction(callback) && callback()\n      ]).then(() => {\n        state.loading.search.product = false\n      }).catch(() => {\n        state.loading.search.product = false\n      })\n    } catch (err) {\n      console.error(err)\n      state.loading.search.product = false\n    }\n  }\n  return {\n    searchProduct,\n    unsetResult\n  }\n}\n\nexport const useSearch = () => {\n  const { searchProduct, unsetResult: unsetProductSearchResult } = useSearchProduct()\n  return {\n    state: state.search,\n    loading: state.loading.search,\n    searchProduct,\n    unsetProductSearchResult\n  }\n}","<script setup>\nimport { computed, nextTick, reactive, ref, useTemplateRef, watch } from 'vue'\n\n// Components\nimport Loading from 'bbUi/components/loading'\nimport Checkbox from 'bbUi/components/checkbox/checkbox.vue'\nimport Badge from 'bbUi/components/badge'\n\nconst props = defineProps({\n\tmodelValue: {\n\t\ttype: Array,\n\t\tdefault: () => []\n\t},\n\titems: {\n\t\ttype: Array,\n\t\tdefault: () => []\n\t},\n\tby: String,\n\tname: String,\n\tplaceholder: String\n})\ndefineEmits([\n\t'update:modelValue'\n])\n\nconst modelValue = ref()\nconst elParent = useTemplateRef('parent')\nconst elList = useTemplateRef('list')\nconst state = reactive({\n\tisShow: false\n})\n\nmodelValue.value = props.modelValue\n\nconst selectedValue = computed(() => {\n\tif (!props.by) return modelValue.value\n\telse return props.items.filter(selected => modelValue.value.includes(selected[props.by]))\n})\n\nconst calculateSheetPosition = (e) => {\n\tif (elParent.value && elList.value) {\n\t\tconst {\n\t\t\tleft: parentLeft,\n\t\t\ttop: parentTop,\n\t\t\theight: parentHeight,\n\t\t\twidth: parentWidth\n\t\t} = elParent.value.getBoundingClientRect()\n\t\tconst { height: sheetHeight } = elList.value.getBoundingClientRect()\n\t\tconst viewportHeight = window.innerHeight\n\n\t\tconst isOutsideViewportY = (parentTop + sheetHeight + 80) < 0 || (parentTop + sheetHeight + 80) > viewportHeight\n\n\t\tlet calculatedSheetPositionY = ''\n\n\t\tcalculatedSheetPositionY = `${\n\t\t\tisOutsideViewportY\n\t\t\t\t? parentTop - sheetHeight - 10\n\t\t\t\t: parentTop + parentHeight + 10\n\t\t}px`\n\n\t\tconst calculatedSheetPositionX = `${\n\t\t\twindow.scrollX + parentLeft + parentWidth / 2\n\t\t}px`\n\n\t\telList.value.style.width = `${parentWidth}px`\n\t\telList.value.style.top = calculatedSheetPositionY\n\t\telList.value.style.left = calculatedSheetPositionX\n\t}\n}\nconst onClick = () => {\n\tif (props.loading) return\n\n\tstate.isShow = !state.isShow\n\n\tnextTick(() => {\n\t\tcalculateSheetPosition()\n\t})\n}\nconst onClickOutside = (ev) => {\n\tif (props.loading) return\n\n\tif (elList.value?.contains?.(ev?.target)) return\n\n\tstate.isShow = false\n}\n\nwatch(() => props.modelValue, newValue => {\n\tmodelValue.value = newValue\n\tconsole.log(newValue)\n})\n</script>\n\n<template>\n\t<div v-outside=\"onClickOutside\" ref=\"parent\" class=\"select\" @keydown.esc=\"state.isShow = false\">\n\t\t<div class=\"select-head\" @click=\"onClick\">\n\t\t\t<div>\n\t\t\t\t<div v-if=\"!!modelValue.length\" class=\"leading-none space-x-2 space-y-1\">\n\t\t\t\t\t<Badge v-for=\"value in selectedValue\">\n\t\t\t\t\t\t<slot :item=\"value\" name=\"head\" />\n\t\t\t\t\t</Badge>\n\t\t\t\t</div>\n\t\t\t\t<span v-else class=\"text-grey-02\">\n\t\t\t\t\t{{ $props.placeholder }}\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div class=\"relative\">\n\t\t\t\t<transition name=\"fade\">\n\t\t\t\t\t<Loading v-if=\"loading\"></Loading>\n\t\t\t\t\t<i v-else class=\"material-icons\">keyboard_arrow_down</i>\n\t\t\t\t</transition>\n\t\t\t</div>\n\t\t</div>\n\t\t<teleport to=\"body\">\n\t\t\t<transition name=\"fade\">\n\t\t\t\t<div v-show=\"state.isShow\" ref=\"list\" class=\"select-list\">\n\t\t\t\t\t<div class=\"select-options\">\n\t\t\t\t\t\t<div v-for=\"item in $props.items\" class=\"select-option\" :key=\"item\">\n\t\t\t\t\t\t\t<Checkbox v-model=\"modelValue\" :value=\"$props.by ? item[$props.by] : item\" class=\"w-full\" @update:model-value=\"$emit('update:modelValue', modelValue)\">\n\t\t\t\t\t\t\t\t<span class=\"font-normal\">\n\t\t\t\t\t\t\t\t\t<slot :item=\"item\" name=\"option\">\n\t\t\t\t\t\t\t\t\t\t{{ $props.name ? item[$props.name] : item }}\n\t\t\t\t\t\t\t\t\t</slot>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</Checkbox>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</transition>\n\t\t</teleport>\n\t</div>\n</template>\n\n<style lang=\"scss\" scoped>\n.select {\n\t@apply relative;\n}\n\n.select-head {\n\tborder-radius: 0.5rem;\n\tpadding: 0.75rem 1rem;\n\tline-height: 1.5rem;\n\n\t@apply flex justify-between items-center w-full transition duration-300 bg-white border cursor-pointer select-none text-left;\n\tborder-color: #dddddd;\n\n\t&:focus,\n\t&:active {\n\t\t@apply border-teal-04;\n\t}\n}\n\n.select-list {\n\tborder-color: #dddddd;\n\tmax-height: 100vh;\n\tz-index: 2001;\n\tleft: 50%;\n\n\t@apply fixed bg-white border top-16 transform -translate-x-1/2 left-1/2 shadow-2xl rounded-lg;\n\n\t.select-options {\n\t\t@apply overflow-y-auto;\n\n\t\t.select-option {\n\t\t\tborder-color: #dddddd;\n\t\t\tpadding: 0.75rem 1rem;\n\n\t\t\t@apply block gap-2 font-normal w-full border-b text-left m-0;\n\n\t\t\t&:hover,\n\t\t\t&:active,\n\t\t\t&:focus {\n\t\t\t\t@apply bg-grey-lighten cursor-pointer;\n\t\t\t}\n\t\t}\n\t}\n}\n</style>\n","<template>\n  <!-- <div v-if=\"isCustomProduct\">\n    <CustomDeviceForm v-model:data=\"dataCustomDevice\" ref=\"refCustomDeviceForm\" type=\"update\" />\n  </div> -->\n  <!-- <div v-else> -->\n    <Accordion v-if=\"isOriginalSpecs\" label=\"Original Specs\" block>\n      <template v-if=\"dataOriginalSpecs.is_mac == 1\">\n        <div class=\"grid grid-cols-2\">\n          <div>\n            <p class=\"text-black font-normal text-md mb-1\"><span class=\"font-semibold text-grey-04\">Item Name: </span> {{dataOriginalSpecs.product_name || '-'}} </p>\n            <p class=\"text-black font-normal text-md mb-1\"><span class=\"font-semibold text-grey-04\">Processor: </span> {{dataOriginalSpecs.processor || '-'}} </p>\n            <p class=\"text-black font-normal text-md mb-1\"><span class=\"font-semibold text-grey-04\">Hard Drive: </span> {{dataOriginalSpecs.hard_drive || '-'}} </p>\n            <p class=\"text-black font-normal text-md mb-1\"><span class=\"font-semibold text-grey-04\">Memory: </span> {{dataOriginalSpecs.memory || '-'}} </p>\n            <p class=\"text-black font-normal text-md mb-1\"><span class=\"font-semibold text-grey-04\">Graphic Card: </span> {{dataOriginalSpecs.graphics || '-'}} </p>\n          </div>\n          <div>\n            <p class=\"text-black font-normal text-md mb-1\"><span class=\"font-semibold text-grey-04\">Date Added: </span> {{dataOriginalSpecs.created_at || '-'}} </p>\n          </div>\n        </div>\n      </template>\n      <template v-else>\n        <div class=\"grid grid-cols-2\">\n          <div>\n            <p class=\"text-black font-normal text-md mb-1\"><span class=\"font-semibold text-grey-04\">Item Name: </span> {{dataOriginalSpecs.product_name || '-'}} </p>\n          </div>\n          <div>\n            <p class=\"text-black font-normal text-md mb-1\"><span class=\"font-semibold text-grey-04\">Date Added: </span> {{dataOriginalSpecs.created_at || '-'}} </p>\n          </div>\n        </div>\n      </template>\n    </Accordion>\n    <div class=\"block\">\n      <Button\n          v-if=\"isCustomProduct\"\n          @click=\"handleResetCustomProduct\"\n          view=\"smooth\"\n          color=\"teal\"\n          dense\n          type=\"pill\"\n          class=\"mb-6\"\n          >Custom Item\n          <i class=\"material-icons icon-xxs ml-1\">close</i></Button\n        >\n    </div>\n    <div class=\"block my-4\">\n      <!-- <label>Item Name</label>\n      <AutoComplete placeholder=\"Search Item Name\" name=\"product_name\" v-model=\"dataForm.product_id\" :value=\"data?.product_name || ''\" :items=\"devices\" :loading=\"loading.devices\" @change=\"search\" @select=\"select\" :view=\"validation.product_id.$invalid && 'danger' || 'default'\" disabled-item=\"disabled\">\n        <template #default=\"{item}\">\n          <div class=\"flex flex-wrap items-center select-none\">\n            <div class=\"flex items-center gap-x-4\">\n              <div\n                :style=\"{ backgroundImage: `url(${item.data.image})` }\"\n                class=\"h-12 w-12 bg-no-repeat bg-center bg-contain\"\n              />\n              <span class=\"block mr-4\">{{item.text}}</span>\n            </div>\n            <Popover v-if=\"item.value.disabled\" trigger=\"hover\" placement=\"right\" :width=\"260\">\n              <div>This item is not available on {{buybackType === 'instore' ? 'In-Store' : 'Mail-In'}}</div>\n              <template #reference>\n                <i class=\"material-icons text-orange-03 cursor-default\">error</i>\n              </template>\n            </Popover>\n          </div>\n        </template>\n      </AutoComplete> -->\n      <template v-if=\"!isFullCustomProduct\">\n        <DeviceSearch\n          ref=\"refDeviceSearch\"\n          :query=\"stateSearch.product.query\"\n          @update:query=\"(query) => {\n            dataSearch.q = query\n            stateSearch.product.query = query\n          }\"\n          @search=\"handleSearchProduct\"\n          @select=\"handleSelectProduct\"\n          @custom-product=\"handleCustomProduct\"\n          :error=\"validation.category_id.$invalid\"\n          :products=\"products\"\n          :categories=\"categories\"\n          :loading=\"loadingSearch.product\"\n          :show-category-only=\"isCustomProduct\"\n          :is-disabled-custom-product=\"isDisableCustomProduct\"\n        />\n      </template>\n      <small class=\"text-red-base block my-2\" v-for=\"(error, errorIndex) of validation.product_id.$errors\" :key=\"errorIndex\">{{ error.$message }}. </small>\n      <small class=\"text-red-base block my-2\" v-for=\"(error, errorIndex) of validation.category_id.$errors\" :key=\"errorIndex\">{{ error.$message }}. </small>\n    </div>\n    <div v-if=\"isCustomProduct\"  class=\"block my-4\">\n      <Input\n      v-model=\"dataForm.product_name\"\n      :label=\"isFullCustomProduct ? 'Item Name' : 'Custom Item Name'\"\n      type=\"text\"\n      :placeholder=\" isFullCustomProduct ? 'Input item name' : 'Input your custom item name'\"\n      class=\"w-full\" :disabled=\"disabled\"\n      :view=\"validation.product_name.$invalid && 'danger' || 'default'\"  />\n      <small class=\"text-red-base block my-2\" v-for=\"(error, errorIndex) of validation.product_name.$errors\" :key=\"errorIndex\">{{ error.$message }}. </small>\n    </div>\n    <template v-if=\"dataForm.is_mac == 1 && !isCustomProduct\">\n      <div class=\"block my-4\" v-if=\"currentStep >= 2\">\n        <label>Processor</label>\n        <Select v-model=\"dataComputer.processor\" name=\"name\" placeholder=\"Select Processor\" :items=\"items.processor\" :loading=\"loading.processor\" @input=\"selectSpec\" class=\"w-full\" />\n      </div>\n      <div class=\"block my-4\" v-if=\"currentStep >= 3\">\n        <label>Hard Drive</label>\n        <Select v-model=\"dataComputer.hardDrive\" name=\"name\" placeholder=\"Select Hard Drive\" :items=\"items.hardDrive\" :loading=\"loading.hardDrive\" @input=\"selectSpec\" class=\"w-full\" />\n      </div>\n      <div class=\"block my-4\" v-if=\"currentStep >= 4\">\n        <label>Memory</label>\n        <Select v-model=\"dataComputer.memory\" name=\"name\" placeholder=\"Select Memory\" :items=\"items.memory\" :loading=\"loading.memory\" @input=\"selectSpec\" class=\"w-full\" />\n      </div>\n      <div class=\"block my-4\" v-if=\"currentStep >= 5\">\n        <label>Graphics Card</label>\n        <Select v-model=\"dataComputer.graphicsCard\" name=\"name\" placeholder=\"Select Graphics Card\" :items=\"items.graphicsCard\" :loading=\"loading.graphicsCard\" @input=\"selectSpec\" class=\"w-full\" />\n      </div>\n    </template>\n    <DeviceGolfSpec v-if=\"isGolfProduct\" @update-specs=\"handleUpdateGolfSpecs\" :item=\"{ product_id: dataForm.product_id }\" :specs=\"dataGolf\" :steps=\"golfSteps\" />\n    <div v-if=\"isSelected || isCustomProduct\">\n      <div class=\"block my-4\" v-if=\"!hide?.imei_sn && !multiImei && dataForm.imei_required\">\n        <Input v-model=\"dataForm.imei_sn\" label=\"IMEI/SN\" class=\"w-full\" @keypress.space.prevent :disabled=\"disabled\"/>\n      </div>\n      <div class=\"block my-4\">\n        <!-- <Select v-model=\"selectedColor.id\" by=\"id\" name=\"name\" :items=\"colors\" class=\"w-full\" @input=\"selectingColor\" :disabled=\"colors.length < 1\" placeholder=\"Select color\" /> -->\n        <template v-if=\"isCustomColor || isFullCustomProduct\">\n          <label>Color</label>\n          <Input\n            ref=\"refCustomColor\"\n            v-model=\"customColor\"\n            block\n            :placeholder=\"isFullCustomProduct ? 'Input color' : 'Input your custom color'\"\n            :clearable=\"isFullCustomProduct ? false : true\"\n            :clearable-fixed=\"true\"\n            @clear=\"resetCustomColor\"\n          />\n        </template>\n        <template v-else>\n          <ColorSearch\n            :items=\"colorOptions\"\n            :loading=\"loadingSearchColor\"\n            :modelValue=\"data.color?.name || selectedColor.name\"\n            :productId=\"dataForm?.product_id\"\n            :isCustomItem=\"isCustomProduct\"\n            @search=\"doSearch\"\n            @select=\"handleUpdateColor\"\n            @customColor=\"handleCustomColor\"\n          />\n        </template>\n      </div>\n      <div class=\"block my-4\">\n        <template v-if=\"isFullCustomProduct\">\n          <Input\n            v-model=\"dataForm.condition\"\n            block\n            placeholder=\"Input condition\"\n            label=\"Condition\"\n            :view=\"validation.condition.$invalid && 'danger' || 'default'\"\n          />\n          <small\n            class=\"text-red-base block my-2\"\n            v-for=\"(error, errorIndex) of validation.condition.$errors\"\n            :key=\"errorIndex\"\n            >{{ error.$message }}.\n          </small>\n        </template>\n        <template v-else>\n          <label>Condition</label>\n          <BSelect\n          v-loading=\"loadingSearch?.product || loadingConditions\"\n          :model-value=\"selectedCondition\"\n          @update:model-value=\"selectCondition\"\n          by=\"id\"\n          name=\"name\"\n          placeholder=\"Select Condition\"\n          :loading=\"loadingConditions\"\n          :items=\"conditions\"\n          :disabled=\"disabled || isEmptyCondition\"\n          :error=\"validation.condition_id.$invalid\"\n          block\n        >\n        </BSelect>\n      </template>\n      <small\n        class=\"text-red-base block my-2\"\n        v-for=\"(error, errorIndex) of validation.condition_id.$errors\"\n        :key=\"errorIndex\"\n        >{{ error.$message }}.\n      </small>\n        <p class=\"mt-4 text-grey-04\" v-if=\"isEmptyCondition && isFetchedConditions\">No conditions active. Please go to <router-link :to=\"{name: 'settingCondition'}\">Conditions</router-link> and set up your conditions first.</p>\n        <div v-if=\"!isFullCustomProduct\" class=\"mt-6\">\n          <ul>\n            <li v-for=\"(rule, ruleIndex) of sanitizedConditionRules\" :key=\"ruleIndex\">\n              <template v-if=\"ruleIndex === 0\">\n                <p v-html=\"rule\" class=\"font-semibold text-grey-04 mb-4\"></p>\n              </template>\n              <template v-else>\n                <div>\n                  <i class=\"material-icons text-teal-04 text-lg mr-4\">assignment_turned_in</i>\n                  <span class=\"line-text\" v-html=\"rule\"></span>\n                </div>\n              </template>\n            </li>\n          </ul>\n        </div>\n      </div>\n\t\t\t<div v-if=\"conditionStore.$state.getQuestions.result && !!conditionStore.$state.getQuestions.result.length\" class=\"block my-4\">\n\t\t\t\t<Fieldset>\n\t\t\t\t\t<template #label>\n\t\t\t\t\t\tConditional Question\n\t\t\t\t\t</template>\n\t\t\t\t\t<template v-if=\"conditionStore.$state.getQuestions.result.length > 0\">\n\t\t\t\t\t\t<div v-for=\"(conditionQuestion, conditionQuestionIndex) in conditionStore.$state.getQuestions.result\" :key=\"conditionQuestion.id\" class=\"block space-y-1 mb-2\">\n\t\t\t\t\t\t\t<label>{{ conditionQuestion.question }} <span v-if=\"!conditionQuestion.is_required\" class=\"font-normal text-grey-02\">(Optional)</span></label>\n\t\t\t\t\t\t\t<template v-if=\"dataForm.questions[conditionQuestionIndex]\">\n\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\tv-if=\"conditionQuestion.answer_type === 'Single'\"\n\t\t\t\t\t\t\t\t\tv-model=\"dataForm.questions[conditionQuestionIndex].answer\"\n\t\t\t\t\t\t\t\t\t:items=\"conditionQuestion.answers\"\n\t\t\t\t\t\t\t\t\tname=\"answer\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Select Answer\"\n\t\t\t\t\t\t\t\t\tmax-height=\"300px\"\n\t\t\t\t\t\t\t\t\tstyle=\"display: block\"\n\t\t\t\t\t\t\t\t\t@update:model-value=\"onChangeAnswer(conditionQuestion, conditionQuestionIndex)\"\n\t\t\t\t\t\t\t\t\tdisabled-default-option\n\t\t\t\t\t\t\t\t\tblock\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<template #default-option>\n\t\t\t\t\t\t\t\t\t\t<option class=\"select__option\" value=\"\" selected>Choose the answer</option>\n\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t\t<template #option=\"{ item }\">\n\t\t\t\t\t\t\t\t\t\t<option class=\"select__option\" v-html=\"`${item.answer} (${conditionalQuestionShown(item)})`\" :value=\"item\" :key=\"item.id\"/>\n\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t<SelectCheckbox\n\t\t\t\t\t\t\t\t\tv-else\n\t\t\t\t\t\t\t\t\tv-model=\"dataForm.questions[conditionQuestionIndex].answer\"\n\t\t\t\t\t\t\t\t\t:items=\"conditionQuestion.answers\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Choose the answer\"\n\t\t\t\t\t\t\t\t\tname=\"answer\"\n\t\t\t\t\t\t\t\t\t@update:model-value=\"onChangeAnswer(conditionQuestion, conditionQuestionIndex)\">\n\t\t\t\t\t\t\t\t\t<template #head=\"{ item }\">\n\t\t\t\t\t\t\t\t\t\t{{ item.answer }} ({{ conditionalQuestionShown(item) }})\n\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t\t<template #option=\"{ item }\">\n\t\t\t\t\t\t\t\t\t\t{{ item.answer }} ({{ conditionalQuestionShown(item) }})\n\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t</SelectCheckbox>\n\t\t\t\t\t\t\t\t<small v-if=\"validation.questions.$error\" class=\"text-red-base block my-2\" v-for=\"(error, errorIndex) of validation.questions.$each.$response.$errors[conditionQuestionIndex].answer_id\" :key=\"errorIndex\">{{ error.$message }}. </small>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</template>\n\t\t\t\t</Fieldset>\n\t\t\t</div>\n      <div class=\"block my-4\">\n        <label>Payout</label>\n        <Input v-if=\"!hide?.price\" v-model=\"dataForm.price\" :rtl=\"true\" class=\"w-full\" :disabled=\"(disabled && !isFullCustomProduct) || (isEmptyCondition && !isFullCustomProduct) || (isDisabledPrice && !isFullCustomProduct)\" :view=\"validation.price.$invalid && 'danger' || 'default'\" :currency=\"true\" icon icon-block>\n          <template #icon>\n            <Currency only-symbol class=\"text-xl\" />\n          </template>\n        </Input>\n        <small class=\"text-red-base block my-2\" v-for=\"(error, errorIndex) of validation.price.$errors\" :key=\"errorIndex\">{{ error.$message }}. </small>\n      </div>\n      <div class=\"block my-4\">\n        <Input v-model=\"dataForm.qty\" type=\"number\" min=\"1\" @keypress=\"filterNumber\" @change=\"assignImeiSnNotes\" label=\"Qty\" class=\"w-full\" :disabled=\"disabled || (isEmptyCondition && !isFullCustomProduct) || isDeviceScan\" v-if=\"!hide?.qty\" :view=\"validation.qty.$invalid && 'danger' || 'default'\" />\n        <small class=\"text-red-base block my-2\" v-for=\"(error, errorIndex) of validation.qty.$errors\" :key=\"errorIndex\">{{ error.$message }}. </small>\n      </div>\n      <div v-if=\"isFullCustomProduct && !hide?.imei_sn && isEmptyCondition && !hide?.qty ? true : (!isEmptyCondition && !!imeiSnNotes.length && !hide?.imei_sn && multiImei && dataForm.imei_required)\" class=\"block my-4\">\n        <table class=\"table-fixed w-full mt-6 border-b border-grey-01\">\n          <thead>\n            <tr class=\"bg-grey-01\">\n              <th class=\"p-4 text-left\">IMEI/SN</th>\n              <th class=\"p-4 text-left\">Notes</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(item, itemIndex) of imeiSnNotes\" :key=\"itemIndex\">\n              <td class=\"px-2 py-3\">\n                <Input v-model=\"item.imei_sn\" block />\n              </td>\n              <td class=\"px-2 py-3\">\n                <div class=\"flex\">\n                  <Input v-model=\"item.notes\" block :class=\"itemIndex !== 0 && 'mr-4'\" />\n                  <Button v-if=\"itemIndex !== 0\" @click=\"deleteImeiSnNotes(itemIndex)\" color=\"red\" dense view=\"smooth\" ><i class=\"material-icons\">delete</i></Button>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <Button v-if=\"!isDeviceScan\" @click=\"addDeviceQuantity\" class=\"mt-6\" block color=\"teal\" view=\"smooth\"><i class=\"material-icons mr-3\">add</i>Add New Quantity</Button>\n      </div>\n    </div>\n  <!-- </div> -->\n</template>\n\n<script>\nimport { defineComponent, computed, watch, ref, reactive, toRef, onMounted, onUnmounted, nextTick } from 'vue'\nimport { useForm, useSearch, useCondition, useColors } from 'composable/device'\nimport { isDisabledPrice } from 'composable/buyback'\nimport { useSearch as useSearchProduct } from 'composable/product'\nimport { useUser } from 'composable/user'\nimport debounce from 'utils/debounce'\nimport Input from 'bbUi/components/input/input.vue'\nimport Select from 'bbUi/components/select/select.vue'\nimport Select2 from '@/components/Select.vue'\nimport SelectCheckbox from 'components/SelectCheckbox.vue'\nimport Button from 'bbUi/components/button/button.vue'\nimport AutoComplete from 'bbUi/components/auto-complete/auto-complete.vue'\nimport { useVuelidate } from '@vuelidate/core'\nimport { required, numeric, minValue, helpers, requiredIf } from '@vuelidate/validators'\nimport { filterNumber, filterNumberAllowDecimal } from 'utils/number'\nimport { sanitize } from 'utils/dom'\nimport { useCondition as useConditionStore } from 'store/pinia/condition'\nimport Currency from 'components/Currency.vue'\nimport Accordion from 'components/Accordion.vue'\nimport BBTable from 'components/Table/BBTable.vue'\n// import CustomDeviceForm from './CustomForm.vue'\nimport DeviceSearch from 'components/Device/Form/DeviceSearch.vue'\nimport ColorSearch from 'components/ColorSearch.vue'\nimport DeviceGolfSpec from 'components/Device/DeviceGolfSpec.vue'\nimport BSelect from 'components/BSelect/BSelect.vue'\nimport Fieldset from 'bbUi/components/fieldset'\n\nexport default defineComponent({\n  components: {\n    Input,\n    Select,\n\t\tSelect2,\n\t\tSelectCheckbox,\n    Button,\n    AutoComplete,\n    Currency,\n    Accordion,\n    BBTable,\n    // CustomDeviceForm,\n    DeviceSearch,\n    ColorSearch,\n    DeviceGolfSpec,\n    BSelect,\n\t\tFieldset\n  },\n  props: {\n    data: {\n      type: Object,\n      default: () => ({\n        product_name: null,\n        product_id: null,\n        condition_id: null,\n        condition: null,\n        imei_sn: null,\n        is_mac: 0,\n        qty: 1,\n        price: 0,\n        color: null\n      })\n    },\n    dataComputer: {\n      type: Object,\n      default: () => ({\n        processor: null,\n        hardDrive: null,\n        memory: null,\n        graphicsCard: null\n      })\n    },\n    dataGolf: {\n      type: Object\n    },\n    golfSteps: {\n      type: Array,\n      default: () => ([])\n    },\n    device: {\n      type: Object,\n      default: () => ({})\n    },\n    deviceScan: {\n      type: Object,\n      default: undefined\n    },\n    condition: {\n      type: Object,\n      default: () => ({})\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    autoFill: {\n      type: Boolean,\n      default: false\n    },\n    hide: {\n      type: Object,\n      default: () => ({})\n    },\n    originalSpecs: {\n      type: Object,\n      default: () => ({})\n    },\n    multiImei: {\n      type: Boolean,\n      default: false\n    },\n    colors: {\n      type: Object,\n      default: () => ({})\n    },\n    buybackType: {\n      type: String,\n      default: 'instore'\n    },\n    // Bypass buyback type (instore/mailin) validation if value is false\n    // buyback type used to limit devices by buyback type\n    isEditable: {\n      type: Boolean,\n      default: false\n    },\n    withScan: {\n      type: Boolean,\n      default: false\n    },\n    isDisabledCustomProduct: {\n      type: Boolean,\n      default: false\n    },\n    isCustomColor: {\n      type: Boolean,\n      default: false\n    },\n    customColor: {\n      type: String,\n      default: null\n    }\n  },\n  emits: [\n    'update:data',\n    'update:dataComputer',\n    'update:dataGolf',\n    'update:condition',\n    'update:device',\n    'update:colors',\n    'update:isCustomProduct',\n    'update:isCustomColor',\n    'update:customColor'\n  ],\n  setup(props, { emit }) {\n    const { data: dataForm, dataComputer, dataGolf, isDeviceScan, unsetData } = useForm(props.buybackType, props.isEditable)\n    const { data: dataSearch, loading, items, action: actionSearch, devices } = useSearch(props.buybackType, props.isEditable)\n    const { items: conditions, loading: loadingConditions, action: actionConditions, actionCustom: actionCustomConditions, unset: unsetCondition } = useCondition(props.buybackType, props.isEditable)\n    const {\n      state: stateSearch,\n      loading: loadingSearch,\n      searchProduct,\n      unsetProductSearchResult\n    } = useSearchProduct()\n    const { me, isDisableCustomProduct } = useUser()\n\t\tconst conditionStore = useConditionStore()\n    const currentStep = ref(1)\n    const conditionRules = ref(null)\n    const dataOriginalSpecs = toRef(props, 'originalSpecs')\n    const imeiSnNotes = ref([])\n    const { colors, getColors, unset: unsetColor } = useColors()\n    const selectedColor = computed(() => ({\n      id: dataForm.color_id || null,\n      name: (colorOptions || []).find((colorOption) => colorOption.id === dataForm.color_id)?.name || null\n    }))\n    const refCustomDeviceForm = ref(null)\n    const refDeviceSearch = ref(null)\n    const refCustomColor = ref(null)\n    const isFetchedConditions = ref(false)\n    const golfSteps = ref(props.golfSteps)\n    const isGolfProduct = ref(false)\n\n    const colorOptions = reactive([])\n    const loadingSearchColor = ref(false)\n\n    const isFullCustomProduct = ref(false)\n    const doSearch = debounce(async (search) => {\n      try {\n        if (search?.length < 2 && isCustomProduct.value){\n          colorOptions.splice(0, colorOptions.length)\n          return\n        }\n        loadingSearchColor.value = true\n        const response = await getColors({\n          search,\n          product_id: dataForm.product_id\n        })\n\n        colorOptions.splice(0, colorOptions.length, ...response)\n      } catch (error) {\n        console.error('Error fetching colors:', error)\n      } finally {\n        loadingSearchColor.value = false\n      }\n    }, 500)\n\n    const handleCustomColor = async () => {\n      emit('update:isCustomColor', true)\n      await nextTick()\n      refCustomColor.value.focus()\n    }\n\n    const handleUpdateColor = async (selectedColor) => {\n      const { id: colorId } = (selectedColor || {})\n      dataForm.color_id = colorId\n      dataForm.color = selectedColor\n    }\n\n    const assignImeiSnNotes = () => {\n      if(dataForm.qty > 0){\n        const totalImeiNotes = imeiSnNotes.value.length\n        const totalQty = parseInt(dataForm.qty)\n        const isInsertion = totalQty > totalImeiNotes\n        if(isInsertion){\n          const diff = totalQty - totalImeiNotes\n          for(let i=0; i < diff; i++) imeiSnNotes.value.push({\n            imei_sn: '',\n            notes: ''\n          })\n        }else{\n          imeiSnNotes.value = imeiSnNotes.value.splice(0, totalQty)\n        }\n      }\n    }\n\n    const addDeviceQuantity = () => {\n      dataForm.qty = parseInt(dataForm.qty) + 1\n      assignImeiSnNotes()\n    }\n    const deleteImeiSnNotes = (index) => {\n      imeiSnNotes.value.splice(index, 1)\n      dataForm.qty = parseInt(dataForm.qty) - 1\n    }\n\t\tconst questionPrice = (item) => {\n\t\t\tlet price = parseFloat(item.amount_price)\n\n\t\t\tif (item.amount_type === 'Percentage') price = dataForm.condition_price * (price / 100)\n\n\t\t\treturn item.type === 'Mark Down' ? -1 * price : price\n\t\t}\n\t\tconst questionsPriceTotal = () => {\n\t\t\treturn dataForm.questions.reduce((previousValue, currentValue) => {\n\t\t\t\tif (typeof currentValue.answer_id === 'object')\n\t\t\t\t\treturn previousValue + currentValue.answer.reduce((prev, curr) => prev + questionPrice(curr), 0)\n\t\t\t\telse if (!!currentValue.answer_id)\n\t\t\t\t\treturn previousValue + questionPrice(currentValue.answer)\n\n\t\t\t\treturn previousValue\n\t\t\t}, 0)\n\t\t}\n\t\tconst onChangeAnswer = (item, index) => {\n\t\t\tif (dataForm.questions[index].answer) {\n\t\t\t\tif (item.answer_type === 'Single') dataForm.questions[index].answer_id = dataForm.questions[index].answer.id\n\t\t\t\telse dataForm.questions[index].answer_id = dataForm.questions[index].answer.map((answer) => answer.id)\n\t\t\t}\n\t\t\telse dataForm.questions[index].answer_id = undefined\n\n\t\t\tdataForm.price = parseFloat(dataForm.condition_price) + questionsPriceTotal()\n\t\t}\n\n    // Validation\n    const rules = {\n      condition_id: {\n        required: helpers.withMessage(\n          'Condition is required',\n          requiredIf(() => !isFullCustomProduct.value)\n        )\n      },\n      condition: {\n        required: helpers.withMessage(\n          'Condition is required',\n          requiredIf(() => isFullCustomProduct.value)\n        )\n      },\n      product_id: {\n        required: helpers.withMessage(\n          'Item is required',\n          requiredIf(() => !isCustomProduct.value)\n        )\n      },\n      category_id: {\n        required: helpers.withMessage(\n          'Item name is required',\n          requiredIf(() => isCustomProduct.value && !dataForm.category_id && !isFullCustomProduct.value)\n        )\n      },\n      product_name: {\n        required: helpers.withMessage(\n          'Item name is required',\n          requiredIf(() => isCustomProduct.value)\n        )\n      },\n      qty: {\n        required: helpers.withMessage('Quantity is required', required),\n        numeric,\n        minValue: minValue(1)\n      },\n      price: {\n        required: helpers.withMessage('Payout is required', required),\n        numeric,\n        minValue: minValue(0)\n      },\n\t\t\tquestions: {\n\t\t\t\trequired: requiredIf((_, sibling) => sibling.has_question),\n\t\t\t\t$each: helpers.forEach({\n\t\t\t\t\tanswer_id: { required: requiredIf((_, sibling) => sibling.is_required) },\n\t\t\t\t})\n\t\t\t}\n    }\n    const validation = useVuelidate(rules, dataForm, {\n      $lazy: true\n    })\n    const validate = () => {\n      // if(isCustomProduct.value) {\n      //   const isValid = refCustomDeviceForm.value?.validate?.()\n      //   return isValid\n      // }\n      validation.value.$validate()\n      return !validation.value.$invalid\n    }\n\n    const searchDevice = debounce(async() => {\n      await actionSearch()\n    }, 800)\n    const search = async (q) => {\n      dataSearch.q = q\n      searchDevice()\n    }\n\n    const isSelectedProduct = computed(() => (props.withScan && props.deviceScan) || (isCustomProduct.value ? !!dataForm?.category_id : !!dataForm.product_id))\n    const isSelected = computed(() => {\n      if(dataForm.is_mac == 0) return isSelectedProduct.value\n      if(dataForm.is_mac == 1) {\n        if(isCustomProduct.value) return isSelectedProduct.value\n        return isSelectedProduct.value && !!dataComputer.processor && !!dataComputer.hardDrive && !!dataComputer.memory && !!dataComputer.graphicsCard\n      }\n      // return dataForm.is_mac === 0 ? (isSelectedProduct.value) : dataForm.is_mac === 1 ? (isSelectedProduct.value && dataComputer.processor !== null && dataComputer.hardDrive !== null && dataComputer.memory !== null && dataComputer.graphicsCard !== null) : false\n    })\n    const isEmptyCondition = computed(() => conditions.value.length < 1 && !loadingConditions.value)\n    const isCustomProduct = computed({\n      get: () =>  props.data?.is_custom == 1,\n      set: (newValue) => {\n        emit('update:isCustomProduct', newValue)\n      }\n    })\n    const isOriginalSpecs = computed(() => !!Object.keys(dataOriginalSpecs.value).length && !isCustomProduct.value)\n    // const dataCustomDevice = computed({\n    //   get: () => ({\n    //     product_name: dataForm.product_name,\n    //     condition: dataForm.condition,\n    //     price: dataForm.price,\n    //     qty: dataForm.qty,\n    //     imei_sn: dataForm.imei_sn,\n    //     is_mac: 0,\n    //     is_custom: 1\n    //   }),\n    //   set: (newValue) => {\n    //     dataForm.product_name = newValue.product_name\n    //     dataForm.condition = newValue.condition\n    //     dataForm.price = newValue.price\n    //     dataForm.qty = newValue.qty\n    //     dataForm.imei_sn = newValue.imei_sn\n    //     dataForm.is_mac = newValue.is_mac\n    //     dataForm.is_custom = newValue.is_custom\n    //   }\n    // })\n    const sanitizedConditionRules = computed(() => {\n      if(!Array.isArray(conditionRules.value)) return []\n      return conditionRules.value.map((term) => sanitize(term))\n    })\n    const products = computed(() => stateSearch.product.result.products)\n    const categories = computed(() => stateSearch.product.result.categories)\n    const customColor = computed({\n      get: () => props.customColor,\n      set: (newValue) => emit('update:customColor', newValue)\n    })\n    const selectedCondition = computed({\n      get: () => ({\n        id: dataForm.condition_id,\n        name: dataForm.condition\n      })\n    })\n\n    const unsetCustomColor = () => {\n      emit('update:isCustomColor', false)\n      emit('update:customColor', null)\n    }\n    const unsetSelectedColor = () => {\n      selectedColor.value.id = null\n    }\n    const unsetFormData = () => {\n      unsetData(true)\n      unsetCustomColor()\n      unsetSelectedColor()\n    }\n    const resetCustomColor = () => {\n      unsetSelectedColor()\n      unsetCustomColor()\n    }\n    const select = async (item, autofill=false) => {\n      const isCustomProductItem = item?.is_custom == 1\n      const isFullCustom = item?.is_custom == 1 && !item?.category_id\n      if( !autofill ) unsetFormData()\n\n      if (isFullCustom){\n        isFullCustomProduct.value = true\n        return\n      }\n\n\t\t\tconditionStore.$state.getQuestions.result = undefined\n      conditionRules.value = null\n      if(isCustomProductItem) {\n        dataForm.category_id = item.category_id\n        dataForm.category_name = item.name\n      }else {\n        dataForm.product_name = item.product_name\n        dataForm.product_id = item.product_id\n      }\n\n      dataForm.imei_required = item.imei_required\n      dataForm.is_mac = item.is_mac\n      dataForm.is_custom = item?.is_custom || 0\n\n      if(dataForm.is_mac == 1 && !isCustomProductItem) {\n        await Promise.allSettled([\n          actionSearch({\n            product_id: dataForm.product_id,\n            type: 'Processor'\n          }),\n          actionSearch({\n            product_id: dataForm.product_id,\n            type: 'Hard Drive'\n          }),\n          actionSearch({\n            product_id: dataForm.product_id,\n            type: 'Memory'\n          }),\n          actionSearch({\n            product_id: dataForm.product_id,\n            type: 'Graphics Card'\n          })\n        ])\n      }\n\n      if(isCustomProductItem){\n        await actionCustomConditions({\n          category_id: dataForm.category_id,\n          is_mac: dataForm.is_mac\n        })\n      } else {\n        await actionConditions({\n\t\t\t\t\tproduct_id: dataForm.product_id,\n\t\t\t\t\tis_mac: dataForm.is_mac\n\t\t\t\t})\n      }\n      isGolfProduct.value = (item.hasOwnProperty('golf_step') || item.hasOwnProperty('golf_steps')) && !isCustomProductItem\n      if(isGolfProduct.value && !autofill) golfSteps.value = item.golf_step\n      isFetchedConditions.value = true\n      if( autofill ){\n        // autofill condition specs\n        setCondition()\n        if( item.is_mac && !isCustomProductItem ) {\n          setSpec()\n        }\n      }\n      emit('update:device', item)\n    }\n    const selectSpec = async (item, autofill) => {\n        // dataForm.product_id = dataForm.product_id.toString().split('-')[0] + '-' + Object.values(dataComputer).join('-')\n        await actionConditions({\n          product_id: dataForm.product_id,\n          is_mac: dataForm.is_mac,\n          processor: dataComputer.processor?.name || '',\n          memory: dataComputer.memory?.name || '',\n          hdd: dataComputer.hardDrive?.name || '',\n          graphics: dataComputer.graphicsCard?.name || ''\n        })\n        if(autofill) setCondition()\n        if(dataForm.condition_id) updatePrice(dataForm.condition_id)\n    }\n    const setSpec = () => {\n      for( let [key, val] of Object.entries(dataComputer) ){\n        dataComputer[key] = items.hasOwnProperty(key) ? typeof items[key] === 'object' && items[key].filter(hardware => hardware.id == val)[0] || {} : {}\n      }\n    }\n    const setCondition = () => {\n      const currentCondition = conditions.value.length > 0 && conditions.value.filter(condition =>  condition.id === props.data.condition_id || condition.name === props.data.condition)\n      if( currentCondition.length === 1 ) {\n        dataForm.condition_id = currentCondition[0].id\n        dataForm.condition = currentCondition[0].name\n\t\t\t\tdataForm.condition_price = currentCondition[0].price\n        dataForm.price = currentCondition[0].price\n        conditionRules.value = currentCondition[0].rule && JSON.parse(currentCondition[0].rule) || null\n      }\n    }\n    const updatePrice = (conditionId) => {\n      const condition = conditions.value.filter(condition =>  condition.id === conditionId)\n      dataForm.price = condition.length === 1 && condition[0].price || 0\n    }\n    const selectCondition = async (item) => {\n      dataForm.condition_id = item.id\n\t\t\tdataForm.condition_price = item.price\n      dataForm.price = item.price\n      dataForm.condition = item.name\n      conditionRules.value = item.rule && JSON.parse(item.rule) || null\n      emit('update:condition', item)\n\n\t\t\tawait conditionStore.$getQuestions({\n\t\t\t\tid: item.id\n\t\t\t})\n\n\t\t\tdataForm.questions = []\n\t\t\tconditionStore.$state.getQuestions.result.forEach((question) => {\n\t\t\t\tdataForm.questions.push({\n\t\t\t\t\tquestion_id: question.id,\n\t\t\t\t\tanswer_id: undefined,\n\t\t\t\t\tis_required: question.is_required,\n\t\t\t\t\tquestion: question,\n\t\t\t\t\tanswer: undefined,\n\t\t\t\t})\n\t\t\t})\n    }\n\t\tconst conditionalQuestionShown = (item) => {\n\t\t\treturn conditionStore.getConditionalFormat({\n\t\t\t\t...item,\n\t\t\t\tsymbol: me.value.currency_symbol\n\t\t\t})\n\t\t}\n\n    const autoFillForm = async() => {\n      const deviceProductId = props.data.product_id\n      const devicePrice = props.data.price\n      const isMac = props.data.is_mac\n\n      if(isCustomProduct.value){\n        Object.assign(dataForm, {\n          product_id: props.data.product_id || -1,\n          condition_id: -1,\n          is_mac: props.data.is_mac || 0,\n          qty: props.data.qty,\n          price: props.data.price,\n          imei_sn: props.data.imei_sn,\n          buyback_type: props.data.buyback_type,\n          is_editable: props.data.is_editable,\n          product_name: props.data.product_name,\n          condition: props.data.condition,\n          is_custom: 1,\n          color: props.data.color || null,\n          color_id: props.data.color_id || null,\n          is_custom_color: props.data.is_custom_color || null,\n          custom_color: props.data.custom_color || null,\n          category_name: props.data.category_name || null,\n          category_id: props.data.category_id || null,\n          notes: props.data.notes\n        })\n        stateSearch.product.query = props.data.category_name || ''\n        await searchProduct()\n      }else{\n        stateSearch.product.query = props.data.product_name || ''\n        Object.assign(dataForm, props.data)\n        await searchProduct()\n      }\n\n      if( isMac && props.data.is_custom == 0 ){\n        const [productId, processor, memory, hardDrive, graphicsCard] = deviceProductId.split('-')\n        Object.assign(dataForm, {\n          ...props.data\n        })\n        Object.assign(dataComputer, {\n          processor,\n          hardDrive,\n          memory,\n          graphicsCard\n        })\n        dataForm.product_id = productId\n        await search(props.data.product_name)\n        await select(dataForm, true)\n        await selectSpec(null, true)\n      }else{\n        await select(dataForm, true)\n      }\n      if (props.data.color) {\n        dataForm.color = props.data.color\n        dataForm.color_id = props.data.color_id\n      }\n      if(props.dataGolf){\n        Object.entries(props.dataGolf || {}).forEach(([key, spec]) => {\n          if(dataGolf.hasOwnProperty(key)) dataGolf[key] = {\n            selected: spec.selected || null,\n            is_custom: spec.is_custom || false\n          }\n        })\n      }\n      Object.assign(dataForm, {\n        price: devicePrice\n      })\n\n\t\t\tawait conditionStore.$getQuestions({\n\t\t\t\tid: dataForm.condition_id\n\t\t\t})\n\n\t\t\tdataForm.questions = []\n\t\t\tconditionStore.$state.getQuestions.result.forEach((question) => {\n\t\t\t\tdataForm.questions.push({\n\t\t\t\t\tquestion_id: question.id,\n\t\t\t\t\tanswer_id: undefined,\n\t\t\t\t\tis_required: question.is_required,\n\t\t\t\t\tquestion: question,\n\t\t\t\t\tanswer: undefined,\n\t\t\t\t})\n\t\t\t})\n\n\t\t\tif (props.data.questions_temp && props.data.questions_temp.length > 0) {\n\t\t\t\tdataForm.questions_temp.forEach((question) => {\n\t\t\t\t\tconst tempAnswerIds = question.answers ? question.answers.map((a) => a.answer_id) : [question.answer_id]\n\t\t\t\t\tconst selectedQuestion = conditionStore.$state.getQuestions.result.find((q) => q.id === question.question_id)\n\t\t\t\t\tconst selectedAnswer = selectedQuestion.answers.filter((a) => tempAnswerIds.includes(a.id))\n\t\t\t\t\tconst questionTemp = {\n\t\t\t\t\t\tquestion_id: question.question_id,\n\t\t\t\t\t\tanswer_id: selectedQuestion.answer_type === 'Single' ? question.answer_id : selectedAnswer.map((a) => a.id),\n\t\t\t\t\t\tis_required: selectedQuestion.is_required,\n\t\t\t\t\t\tquestion: selectedQuestion,\n\t\t\t\t\t\tanswer: selectedQuestion.answer_type === 'Single' ? selectedAnswer[0] : selectedAnswer,\n\t\t\t\t\t}\n\t\t\t\t\tconst index = dataForm.questions.findIndex((q) => q.question_id === questionTemp.question_id)\n\n\t\t\t\t\tdataForm.questions[index] = questionTemp\n\t\t\t\t})\n\t\t\t}\n    }\n    const handleSearchProduct = debounce(async () => {\n      await searchProduct({ query: stateSearch.product.query, buyback_type: props.buybackType })\n    }, 500)\n    const handleSelectProduct = (item) => {\n      stateSearch.product.query = item?.product_name || item?.name || ''\n      select(item)\n    }\n    const unsetCustomProductOptions = () => {\n      unsetCondition()\n      unsetColor()\n      isFetchedConditions.value = false\n    }\n    const handleCustomProduct = () => {\n      dataForm.is_custom = 1\n      isCustomProduct.value = 1\n      isFullCustomProduct.value = true\n      stateSearch.product.query = null\n      if (props.withScan && stateSearch.product.query) {\n        stateSearch.product.query = props.deviceScan.Name\n        handleSearchProduct()\n        debounce(() => { refDeviceSearch.value.isCollapse = true }, 500)()\n      } else {\n        stateSearch.product.query = ''\n      }\n\n      unsetProductSearchResult()\n      unsetCustomProductOptions()\n    }\n    const handleResetCustomProduct = () => {\n      dataForm.is_custom = 0\n      isCustomProduct.value = 0\n      isFullCustomProduct.value = false\n      if (props.withScan && props.deviceScan) {\n        stateSearch.product.query = props.deviceScan.Name\n        handleSearchProduct()\n        debounce(() => { refDeviceSearch.value.isCollapse = true }, 500)()\n      } else {\n        stateSearch.product.query = ''\n        unsetProductSearchResult()\n      }\n\n      unsetFormData()\n    }\n    const handleUpdateGolfSpecs = (specs) => {\n      Object.entries((specs || {})).forEach(([key, spec]) => {\n        if(dataGolf.hasOwnProperty(key)) {\n          dataGolf[key].selected = spec.selected\n          dataGolf[key].is_custom = spec.is_custom\n        }\n      })\n    }\n\n    const initializeColors = async () => {\n      try {\n        if (dataForm.is_custom){\n          colorOptions.splice(0, colorOptions.length)\n          return\n        }\n        loadingSearchColor.value = true;\n        const response = await getColors({\n          product_id: dataForm.product_id\n        });\n\n        colorOptions.splice(0, colorOptions.length, ...response);\n      } catch (error) {\n        console.error('Error fetching initial colors:', error);\n      } finally {\n        loadingSearchColor.value = false;\n      }\n    };\n\n    watch(() => ({dataComputer, dataForm}), () => {\n      if(dataForm.product_id) currentStep.value = dataForm.is_mac &&  2 || 6\n      if(dataForm.is_mac){\n        if(dataComputer.processor) currentStep.value = 3\n        if(dataComputer.hardDrive) currentStep.value = 4\n        if(dataComputer.memory) currentStep.value = 5\n        if(dataComputer.graphicsCard) currentStep.value = 6\n      }\n      if(dataForm.condition_id) currentStep.value = 7\n      emit('update:data', dataForm)\n      emit('update:dataComputer', dataComputer)\n    }, {\n      deep: true\n    })\n\n    watch(dataGolf, () => {\n      emit('update:dataGolf', {...dataGolf})\n    })\n\n    watch(() => imeiSnNotes.value, (imeiSnNotes) => {\n      if(!!props.multiImei){\n        const imeiSn = imeiSnNotes.map(item => item.imei_sn)\n        const notes = imeiSnNotes.map(item => item.notes)\n        dataForm.imei_sn = JSON.stringify(imeiSn)\n        dataForm.notes = JSON.stringify(notes)\n      }\n    }, {\n      deep: true\n    })\n\n    watch(() => currentStep.value, async (currentStep) => {\n      if (currentStep === 6 || currentStep === 7) {\n        emit('update:colors', colors)\n      }\n    })\n\n    watch(() => props.golfSteps, (steps) => golfSteps.value = steps)\n\n    watch(\n      () => [dataForm.product_id, dataForm.is_custom],\n      ([newProductId, newIsCustom]) => {\n        if (newProductId || newIsCustom) {\n          initializeColors();\n        } else {\n          colorOptions.splice(0, colorOptions.length);\n        }\n      }\n    );\n\n    onMounted(async () => {\n      stateSearch.product.query = ''\n      if (dataForm.product_id) {\n        initializeColors();\n      }\n      if (dataForm.category_id && !props.autoFill){\n        isFullCustomProduct.value = true\n      }\n      if( props.autoFill ) autoFillForm()\n      if( props.multiImei ) assignImeiSnNotes()\n    })\n    onUnmounted(() => {\n      unsetProductSearchResult()\n\t\t\tconditionStore.$state.getQuestions.result = undefined\n    })\n\n    const selectingColor = (newSelectedColor) => {\n      selectedColor.value = newSelectedColor\n      dataForm.color = {...newSelectedColor}\n      dataForm.color_id = selectedColor.value.id\n    }\n\n    return {\n      isFetchedConditions,\n      golfSteps,\n      isGolfProduct,\n      stateSearch,\n      loadingSearch,\n      products,\n      categories,\n      customColor,\n      selectedCondition,\n      isDeviceScan,\n      isDisabledPrice,\n      refCustomDeviceForm,\n      refDeviceSearch,\n      assignImeiSnNotes,\n      imeiSnNotes,\n      dataOriginalSpecs,\n      dataForm,\n      dataComputer,\n      dataGolf,\n      dataSearch,\n      devices,\n      loading,\n      loadingConditions,\n      items,\n      conditions,\n      isSelected,\n      isEmptyCondition,\n      isOriginalSpecs,\n      isCustomProduct,\n      isDisableCustomProduct,\n      sanitizedConditionRules,\n      // dataCustomDevice,\n      search,\n      validation,\n      currentStep,\n      conditionRules,\n      select,\n      selectSpec,\n      selectCondition,\n      unsetData,\n      validate,\n      filterNumberAllowDecimal,\n      filterNumber,\n      addDeviceQuantity,\n      deleteImeiSnNotes,\n      colors,\n      selectedColor,\n      selectingColor,\n      handleSearchProduct,\n      handleSelectProduct,\n      handleCustomProduct,\n      handleResetCustomProduct,\n      handleUpdateGolfSpecs,\n      resetCustomColor,\n      doSearch,\n      handleUpdateColor,\n      colorOptions,\n      loadingSearchColor,\n      handleCustomColor,\n      initializeColors,\n      refCustomColor,\n      isFullCustomProduct,\n\t\t\tconditionStore,\n\t\t\tconditionalQuestionShown,\n\t\t\tonChangeAnswer\n    }\n  }\n})\n</script>\n<style lang=\"scss\" scoped>\n.line-text {\n  line-height: 2rem;\n}\n</style>\n"],"names":["useCondition","defineStore","state","getQuestions","isLoading","result","getters","actions","[object Object]","payload","priceShown","amount_price","type","amount_type","parseInt","toString","symbol","response","request","url","id","method","this","$state","cancelTokenSearch","ref","reactive","search","product","query","products","categories","loading","useSearch","searchProduct","unsetResult","unsetProductSearchResult","async","buyback_type","callback","value","cancel","axios","CancelToken","source","store","dispatch","q","cancelToken","token","Promise","all","items","Object","keys","forEach","key","push","category_name","isFunction","then","catch","err","console","error","useSearchProduct","props","__props","modelValue","elParent","useTemplateRef","elList","state2","isShow","selectedValue","computed","by","filter","selected","includes","onClick","nextTick","e","left","parentLeft","top","parentTop","height","parentHeight","width","parentWidth","getBoundingClientRect","sheetHeight","viewportHeight","window","innerHeight","calculatedSheetPositionY","calculatedSheetPositionX","scrollX","style","calculateSheetPosition","onClickOutside","ev","_b","_a","contains","target","watch","newValue","log","_sfc_main","defineComponent","components","Input","Select","Select2","SelectCheckbox","Button","AutoComplete","Currency","Accordion","BBTable","DeviceSearch","ColorSearch","DeviceGolfSpec","BSelect","Fieldset","data","default","product_name","product_id","condition_id","condition","imei_sn","is_mac","qty","price","color","dataComputer","processor","hardDrive","memory","graphicsCard","dataGolf","golfSteps","Array","device","deviceScan","disabled","Boolean","autoFill","hide","originalSpecs","multiImei","colors","buybackType","String","isEditable","withScan","isDisabledCustomProduct","isCustomColor","customColor","emits","emit","dataForm","isDeviceScan","unsetData","useForm","dataSearch","action","actionSearch","devices","conditions","loadingConditions","actionConditions","actionCustom","actionCustomConditions","unset","unsetCondition","stateSearch","loadingSearch","me","isDisableCustomProduct","useUser","conditionStore","useConditionStore","currentStep","conditionRules","dataOriginalSpecs","toRef","imeiSnNotes","getColors","unsetColor","useColors","selectedColor","color_id","name","colorOptions","find","colorOption","refCustomDeviceForm","refDeviceSearch","refCustomColor","isFetchedConditions","isGolfProduct","loadingSearchColor","isFullCustomProduct","doSearch","debounce","search2","length","isCustomProduct","splice","assignImeiSnNotes","totalImeiNotes","totalQty","diff","i","notes","questionPrice","item","parseFloat","condition_price","rules","required","helpers","withMessage","requiredIf","category_id","numeric","minValue","questions","_","sibling","has_question","$each","answer_id","is_required","validation","useVuelidate","$lazy","searchDevice","isSelectedProduct","isSelected","isEmptyCondition","get","is_custom","set","isOriginalSpecs","sanitizedConditionRules","isArray","map","term","sanitize","selectedCondition","unsetCustomColor","unsetSelectedColor","unsetFormData","select","autofill","isCustomProductItem","isFullCustom","imei_required","allSettled","hasOwnProperty","golf_step","setCondition","setSpec","selectSpec","hdd","_c","graphics","_d","updatePrice","val","entries","hardware","currentCondition","rule","JSON","parse","conditionId","condition2","handleSearchProduct","initializeColors","deep","__spreadValues","imeiSnNotes2","imeiSn","stringify","currentStep2","steps","newProductId","newIsCustom","onMounted","deviceProductId","devicePrice","isMac","assign","is_editable","is_custom_color","custom_color","productId","split","spec","$getQuestions","question","question_id","answer","questions_temp","tempAnswerIds","answers","a","selectedQuestion","selectedAnswer","questionTemp","answer_type","index","findIndex","autoFillForm","onUnmounted","isDisabledPrice","selectCondition","validate","$validate","$invalid","filterNumberAllowDecimal","filterNumber","addDeviceQuantity","deleteImeiSnNotes","selectingColor","newSelectedColor","handleSelectProduct","handleCustomProduct","Name","isCollapse","handleResetCustomProduct","handleUpdateGolfSpecs","specs","resetCustomColor","handleUpdateColor","selectedColor2","colorId","handleCustomColor","focus","conditionalQuestionShown","getConditionalFormat","currency_symbol","onChangeAnswer","reduce","previousValue","currentValue","prev","curr","_hoisted_2","class","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_20","_hoisted_29","_hoisted_30","_hoisted_33","_hoisted_34","_hoisted_35","_openBlock","_createElementBlock","_Fragment","label","_withCtx","_ctx","_hoisted_1","_createElementVNode","_cache","_hoisted_7","_hoisted_8","_createCommentVNode","view","dense","_createTextVNode","_hoisted_12","onUpdate:query","onSearch","onSelect","onCustomProduct","show-category-only","_renderList","$errors","errorIndex","_hoisted_13","_createVNode","_component_Input","onUpdate:modelValue","$event","placeholder","_hoisted_14","_component_Select","onInput","_hoisted_15","_hoisted_16","_hoisted_17","onUpdateSpecs","_hoisted_18","_hoisted_19","onKeypress","_withKeys","_withModifiers","block","clearable","clearable-fixed","isCustomItem","_hoisted_21","_withDirectives","_component_BSelect","model-value","to","_hoisted_23","ruleIndex","innerHTML","_hoisted_25","_hoisted_27","conditionQuestion","conditionQuestionIndex","_toDisplayString","max-height","display","disabled-default-option","$error","$response","rtl","currency","icon","_component_Currency","only-symbol","_hoisted_31","min","onChange","_g","_h","_i","_hoisted_32","itemIndex","_hoisted_36"],"mappings":"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"}