{"version":3,"file":"index.11ff27c0.js","sources":["../../src/composable/setting/customerPortal.js","../../src/components/CustomerPortal/CustomerDomain/DomainSelection.vue","../../src/components/CustomerPortal/CustomerDomain/DomainRecords.vue","../../src/views/setting/customer-portal/settings/domain/index.vue","../../src/views/setting/customer-portal/settings/general/language.vue","../../src/views/setting/customer-portal/settings/general/index.vue","../../src/views/setting/customer-portal/settings/revised-offer/index.vue","../../src/views/setting/customer-portal/index.vue"],"sourcesContent":["import { reactive, computed, ref, watch } from 'vue'\nimport { required, url } from '@vuelidate/validators'\nimport { helpers } from '@vuelidate/validators'\nimport { isFunction } from 'utils/is'\nimport store from 'store'\nimport { ElMessage } from 'element-plus'\n\nconst isIncompleteData = (data) => {\n  return (\n    Object.entries(data).filter(\n      ([_, itemValue]) =>\n        itemValue === undefined || itemValue === '' || itemValue === null\n    ).length > 0\n  )\n}\n\nexport const useCustomDomain = () => {\n  const { getCustomerDomain } = useCustomerDomain()\n\n  const loading = computed(\n    () => store.state.setting.customerPortal.loading.customDomain\n  )\n  const form = reactive({\n    domain: null\n  })\n  const formValidationRules = reactive({\n    domain: {\n      required: helpers.withMessage('Domain name is required', required),\n      url: helpers.withMessage('Invalid domain name', () => {\n        if (form.domain) {\n          if (form.domain && form.domain[form.domain.length - 1] === '.')\n            return false\n        }\n        return psl.isValid(form.domain)\n      })\n    }\n  })\n  const isVerifiedCustomDomain = computed(\n    () => store.getters['setting/customerPortal/isVerifiedCustomDomain']\n  )\n  const isSSLProcessing = computed(\n    () => store.getters['setting/customerPortal/isSSLProcessing']\n  )\n  const defaultDomain = computed(() => store.state.setting.customerPortal.customerDomain.defaultDomain)\n  const domainOptions = computed(() => [\n    {\n      id: 1,\n      title: 'Custom Subdomain',\n      description: 'Set your own custom subdomain for the customer portal.',\n      icon: '/icon/menu-icon/domain.svg',\n      selected: isCustomDomain.value,\n      isActive: isVerifiedCustomDomain.value\n    },\n    {\n      id: 2,\n      title: `Use Reusely hosted customer portal`,\n      description: `The customer portal uses <b>${defaultDomain.value}</b> as the default subdomain. Your logo will appear in the top right corner by default so customers clearly know it's you.`,\n      icon: '/icon/menu-icon/reusely.svg',\n      selected: !isCustomDomain.value,\n      isActive: !(isCustomDomain.value && isVerifiedCustomDomain.value)\n    }\n  ])\n  const isIncompleteForm = computed(() => isIncompleteData(form))\n  const isCustomDomain = computed(\n    () => store.getters['setting/customerPortal/isCustomDomain']\n  )\n  const submitForm = async (callback = () => {}) => {\n    try {\n      store.commit('setting/customerPortal/SET_LOADING_CUSTOM_DOMAIN', true)\n      await store.dispatch('setting/customerPortal/customDomain')\n      await getCustomerDomain()\n      isFunction(callback) && callback(null)\n    } catch (err) {\n      isFunction(callback) && callback(err)\n    } finally {\n      store.commit('setting/customerPortal/SET_LOADING_CUSTOM_DOMAIN', false)\n    }\n  }\n  const verifyCustomDomain = async (callback = () => {}) => {\n    try {\n      store.commit(\n        'setting/customerPortal/SET_LOADING_VERIFY_CUSTOM_DOMAIN',\n        true\n      )\n      const result = await store.dispatch(\n        'setting/customerPortal/verifyCustomDomain'\n      )\n      const isVerified = result === 'Verified'\n      await getCustomerDomain()\n      isFunction(callback) && callback(null, isVerified)\n    } catch (err) {\n      isFunction(callback) && callback(err, false)\n    } finally {\n      store.commit(\n        'setting/customerPortal/SET_LOADING_VERIFY_CUSTOM_DOMAIN',\n        false\n      )\n    }\n  }\n  const resetCustomDomain = async (callback = () => {}) => {\n    try {\n      store.commit(\n        'setting/customerPortal/SET_LOADING_RESET_CUSTOM_DOMAIN',\n        true\n      )\n      await store.dispatch('setting/customerPortal/resetCustomDomain')\n      await getCustomerDomain()\n      isFunction(callback) && callback(null)\n    } catch (err) {\n      isFunction(callback) && callback(err)\n    } finally {\n      store.commit(\n        'setting/customerPortal/SET_LOADING_RESET_CUSTOM_DOMAIN',\n        false\n      )\n    }\n  }\n  watch(\n    () => form,\n    (formData) => {\n      store.commit('setting/customerPortal/SET_CUSTOM_DOMAIN', { ...formData })\n    },\n    {\n      deep: true\n    }\n  )\n  return {\n    loading,\n    form,\n    formValidationRules,\n    domainOptions,\n    isIncompleteForm,\n    isCustomDomain,\n    isVerifiedCustomDomain,\n    isSSLProcessing,\n    submitForm,\n    verifyCustomDomain,\n    resetCustomDomain\n  }\n}\n\nexport const useCustomerDomain = () => {\n  const loading = computed(\n    () => store.state.setting.customerPortal.loading.customerDomain\n  )\n  const customerDomain = computed(\n    () => store.state.setting.customerPortal.customerDomain.domain\n  )\n  const dnsRecords = computed(\n    () => store.state.setting.customerPortal.customerDomain.dnsRecords\n  )\n  const customerPortalLogin = computed(\n    () => store.state.setting.customerPortal.customerDomain.customerPortalLogin\n  )\n  const customerPortalFavicon = computed(\n    () =>\n      store.state.setting.customerPortal.customerDomain.customerPortalFavicon\n  )\n  const defaultDomain = computed(\n    () => store.state.setting.customerPortal.customerDomain.defaultDomain\n  )\n  const uploadIcon = async (payload) => {\n    try {\n      store.commit('setting/customerPortal/SET_LOADING_CUSTOMER_DOMAIN', true)\n      await store.dispatch('setting/customerPortal/uploadIcon', payload)\n      ElMessage({\n        type: 'success',\n        message: 'Favicon changed'\n      })\n    } finally {\n      store.commit('setting/customerPortal/SET_LOADING_CUSTOMER_DOMAIN', false)\n    }\n  }\n  const getCustomerDomain = async () => {\n    try {\n      store.commit('setting/customerPortal/SET_LOADING_CUSTOMER_DOMAIN', true)\n      await store.dispatch('setting/customerPortal/getCustomerDomain')\n    } finally {\n      store.commit('setting/customerPortal/SET_LOADING_CUSTOMER_DOMAIN', false)\n    }\n  }\n  return {\n    loading,\n    customerDomain,\n    dnsRecords,\n    customerPortalLogin,\n    customerPortalFavicon,\n    defaultDomain,\n    uploadIcon,\n    getCustomerDomain\n  }\n}\n\nexport const useGeneral = () => {\n  const languages = computed(() => store.state.languages)\n  const language = computed({\n    get: () => store.state.setting.customerPortal.general.language,\n    set: (lang) => {\n      if (!lang) return\n      store.commit('setting/customerPortal/SET_LANGUAGE', lang)\n    }\n  })\n  const loading = computed(\n    () => store.state.setting.customerPortal.loading.general\n  )\n\n  const getLanguages = async (callback = () => {}) => {\n    try {\n      store.commit('setting/customerPortal/SET_LOADING_LANGUAGE', true)\n      await store.dispatch('getLanguages')\n      isFunction(callback) && callback(null)\n    } catch (err) {\n      isFunction(callback) && callback(err)\n    } finally {\n      store.commit('setting/customerPortal/SET_LOADING_LANGUAGE', false)\n    }\n  }\n  const updateLanguage = async (\n    language = { code: null, name: null },\n    callback = () => {}\n  ) => {\n    try {\n      store.commit('setting/customerPortal/SET_LOADING_LANGUAGE', true)\n      await store.dispatch('setting/customerPortal/updateLanguage', {\n        customer_portal_lang_code: language.code,\n        customer_portal_lang_name: language.name\n      })\n      isFunction(callback) && callback(null)\n    } catch (err) {\n      isFunction(callback) && callback(err)\n    } finally {\n      store.commit('setting/customerPortal/SET_LOADING_LANGUAGE', false)\n    }\n  }\n  return {\n    languages,\n    language,\n    loading,\n    getLanguages,\n    updateLanguage\n  }\n}\n","<template>\n  <div>\n    <div class=\"domain-selection\">\n      <div\n        v-for=\"(domainOption, domainOptionIndex) of domainOptions\"\n        :key=\"domainOptionIndex\"\n        @click=\"handleSelectDomainOption(domainOption)\"\n        :class=\"[\n          'domain-option',\n          domainOption.selected ? 'domain-option--selected' : '',\n          disabled ? 'domain-option--disabled' : ''\n        ]\"\n      >\n        <div\n          class=\"domain-option__icon\"\n          :style=\"`-webkit-mask-image: url('${domainOption.icon}')`\"\n        ></div>\n        <div class=\"domain-option__content\">\n          <div class=\"domain-option__header\">\n            <div class=\"domain-option__title\">\n              <slot v-bind=\"{ option: domainOption }\" name=\"title\">\n                <span>\n                  {{ domainOption.title }}\n                </span>\n              </slot>\n            </div>\n          </div>\n          <div class=\"domain-option__description\">\n            <slot v-bind=\"{ option: domainOption }\" name=\"description\">\n              <p>\n                {{ domainOption.description }}\n              </p>\n            </slot>\n          </div>\n        </div>\n        <div class=\"domain-option__status\">\n          <div v-if=\"domainOption.isActive\" class=\"domain-option__badge\">\n            Active\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport { defineComponent, ref, watch } from 'vue'\nimport { isWhiteLabel } from 'composable/whitelabel'\n\nexport default defineComponent({\n  name: 'CustomerPortalDomainSelection',\n  props: {\n    options: {\n      type: Array,\n      default: () => []\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    defaultDomain: {\n      type: String,\n      default: 'sell.reusely.com'\n    }\n  },\n  emits: ['select'],\n  setup(props, { emit }) {\n    const domainOptions = ref([\n      {\n        id: 1,\n        title: 'Custom Subdomain',\n        description: 'Set your own custom subdomain for the customer portal.',\n        icon: '/icon/menu-icon/domain.svg',\n        selected: false,\n        isActive: false\n      },\n      {\n        id: 2,\n        title: `Use reusely hoster customer portal`,\n        description: `The customer portal uses <b>${props.defaultDomain}</b> as the default subdomain. Your logo will appear in the top right corner by default so customers clearly know it's you.`,\n        icon: '/icon/menu-icon/reusely.svg',\n        selected: false,\n        isActive: false\n      }\n    ])\n    const handleSelectDomainOption = (domainOption) => {\n      if (props.disabled) return\n      emit('select', domainOption)\n    }\n    watch(\n      () => props.options,\n      (options) => (domainOptions.value = options),\n      {\n        immediate: true\n      }\n    )\n    return {\n      domainOptions,\n      isWhiteLabel,\n      handleSelectDomainOption\n    }\n  }\n})\n</script>\n<style lang=\"scss\" scoped>\n.domain-selection {\n  @apply grid lg:grid-cols-2 grid-cols-1 gap-6;\n}\n.domain-option {\n  $self: &;\n  @apply transition duration-300 flex flex-auto px-4 py-4 border border-grey-01 rounded-lg cursor-pointer;\n  &:hover {\n    &#{$self}--selected {\n      @apply border-teal-04;\n      #{$self}__title {\n        @apply text-teal-04;\n      }\n      #{$self}__icon {\n        @apply bg-teal-04;\n      }\n    }\n    &#{$self}--disabled {\n      @apply border-grey-02 cursor-not-allowed;\n      #{$self}__title {\n        @apply text-grey-03;\n      }\n      #{$self}__icon {\n        @apply bg-grey-02;\n      }\n      #{$self}__description {\n        @apply text-grey-03;\n      }\n    }\n  }\n  &--selected {\n    @apply border-teal-04;\n    #{$self}__icon {\n      @apply bg-teal-04;\n    }\n  }\n  &--disabled {\n    @apply bg-grey-lighten border-grey-02;\n    #{$self}__title {\n      @apply text-grey-03;\n    }\n    #{$self}__icon {\n      @apply bg-grey-02;\n    }\n    #{$self}__description {\n      @apply text-grey-03;\n    }\n  }\n  &__content {\n    @apply w-full mx-4;\n  }\n  &__icon {\n    @apply w-20 h-20 inline-block bg-grey-03 mx-4;\n    mask-position: center;\n    mask-repeat: no-repeat;\n    mask-size: contain;\n  }\n  &__icon,\n  &__status,\n  &__content {\n    @apply my-4;\n  }\n  &__title {\n    @apply font-semibold;\n    font-size: 1rem;\n  }\n  &__description {\n    @apply my-2;\n    font-size: 1rem;\n  }\n  &__badge {\n    @apply bg-teal-lighten rounded-full px-3 py-2 text-sm text-teal-04;\n  }\n}\n</style>\n","<template>\n  <Table :data=\"domainRecords\">\n    <TableColumn label=\"Type\">\n      <template #default=\"{ row }\">\n        <p>{{ row.type }}</p>\n      </template>\n    </TableColumn>\n    <TableColumn label=\"Name\">\n      <template #default=\"{ row }\">\n        <div class=\"flex flex-wrap items-center\">\n          <p class=\"mr-2\">{{ row.name }}</p>\n          <i @click=\"copy(row.name)\" class=\"material-icons text-teal-04\"\n            >file_copy</i\n          >\n        </div>\n      </template>\n    </TableColumn>\n    <TableColumn label=\"Value\">\n      <template #default=\"{ row }\">\n        <div class=\"flex flex-wrap items-center\">\n          <p class=\"mr-2\">{{ row.value }}</p>\n          <i @click=\"copy(row.value)\" class=\"material-icons text-teal-04\"\n            >file_copy</i\n          >\n        </div>\n      </template>\n    </TableColumn>\n    <TableColumn label=\"Status\">\n      <template #default=\"{ row }\">\n        <Badge color=\"orange\">\n          {{ row.status }}\n        </Badge>\n      </template>\n    </TableColumn>\n  </Table>\n</template>\n<script>\nimport { defineComponent, ref, watch } from 'vue'\n\nimport copy from 'utils/copy'\n\nimport Badge from 'bbUi/components/badge/badge.vue'\n\nexport default defineComponent({\n  name: 'CustomerPortalDomainRecords',\n  components: {\n    Badge\n  },\n  props: {\n    records: {\n      type: Array,\n      default: () => []\n    }\n  },\n  setup(props) {\n    const domainRecords = ref([])\n    watch(\n      () => props.records,\n      (records) => {\n        domainRecords.value = records\n      },\n      {\n        immediate: true\n      }\n    )\n    return {\n      domainRecords,\n      copy\n    }\n  }\n})\n</script>\n<style lang=\"scss\" scoped></style>\n","<template>\n  <div>\n    <Card>\n      <template #header>\n        <h2 class=\"text-xl\">Customer Portal Subdomain</h2>\n      </template>\n      <template #default>\n        <div>\n          <Alert\n            v-if=\"isSSLProcessing\"\n            color=\"orange\"\n            view=\"smooth\"\n            class=\"my-5\"\n            dense\n          >\n            <div class=\"items-center h-full\">\n              <p class=\"text-lg\">\n                {{\n                  isCustomDomain\n                    ? `We are verifying your custom portal subdomain, we will send you an\n              email once it's verified`\n                    : `Your custom subdomain is being removed, it can take 5 - 10 minutes until it's completely removed then you are able to switch back to the custom subdomain.`\n                }}\n              </p>\n            </div>\n            <template #left>\n              <span class=\"material-icons text-4xl\">info</span>\n            </template>\n          </Alert>\n          <DomainSelection\n            @select=\"handleSelectDomainOption\"\n            :options=\"domainOptions\"\n            :disabled=\"isSSLProcessing\"\n            :default-domain=\"defaultDomain\"\n          >\n            <template #title=\"{ option }\">\n              <div class=\"flex items-center flex-wrap\">\n                <span whitelabel=\"text-replace\" data-label=\"domain custom alert\">\n                  {{\n                    option.id === 1 && isCustomDomain\n                      ? customerDomain\n                      : option.title\n                  }}\n                </span>\n                <div v-if=\"!isProPlan && option.id === 1\" class=\"block py-1 px-4 bg-green-04 text-white rounded-full ml-4 font-medium\">\n                  <p>Pro</p>\n                </div>\n              </div>\n              <Button\n                v-if=\"option.id === 1 && isCustomDomain\"\n                @click=\"handleCustomDomain(customerDomain)\"\n                class=\"mx-2\"\n                color=\"teal\"\n                view=\"smooth\"\n                dense\n                :disabled=\"isSSLProcessing\"\n              >\n                <i class=\"material-icons\">edit</i>\n              </Button>\n            </template>\n            <template #description=\"{ option }\">\n              <p v-html=\"option.description\"></p>\n              <div\n                v-if=\"\n                  option.id === 1 && isCustomDomain && !isVerifiedCustomDomain\n                \"\n                class=\"flex items-center bg-orange-lighten text-orange-04 rounded-lg p-2 my-4\"\n              >\n                <div class=\"pl-2 self-start\">\n                  <i class=\"material-icons\">info</i>\n                </div>\n                <div whitelabel=\"text-replace\" data-label=\"domain custom alert\" class=\"flex-auto mx-2\">\n                  Your custom subdomain is not verified yet. You will continue\n                  to use Reusely hosted customer portal until it is fully\n                  verified.\n                </div>\n              </div>\n            </template>\n          </DomainSelection>\n          <Transition name=\"slide-fade\">\n            <Fieldset\n              v-if=\"isCustomDomain && !isVerifiedCustomDomain\"\n              class=\"my-6 min-w-0\"\n            >\n              <template #label>\n                <span>Copy Your Records</span>\n              </template>\n              <template #default>\n                <div v-loading=\"loadingCustomerDomain\">\n                  <h2 class=\"text-xl\">\n                    Follow these instructions to add your subdomain\n                  </h2>\n                  <div class=\"my-6\">\n                    <div\n                      v-for=\"(\n                        instruction, instructionIndex\n                      ) of domainVerificationInstructions\"\n                      :key=\"instructionIndex\"\n                      class=\"flex my-4\"\n                    >\n                      <div class=\"w-6 md:w-10 select-none\">\n                        <div\n                          class=\"w-8 md:w-10 h-8 md:h-10 bg-teal-04 rounded-full flex items-center justify-center font-medium text-white\"\n                        >\n                          {{ instructionIndex + 1 }}\n                        </div>\n                      </div>\n                      <div class=\"flex-auto px-6 md:py-2\">\n                        <p class=\"font-semibold\">{{ instruction }}</p>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"md:pl-16 p-0\">\n                    <DomainRecords :records=\"dnsRecords\" />\n                    <div class=\"w-max\">\n                      <Button\n                        @click=\"verifyCustomDomain(handleVerifyCustomDomain)\"\n                        :loading=\"loadingCustomDomain.verify\"\n                        class=\"my-4\"\n                        view=\"smooth\"\n                        color=\"teal\"\n                        :disabled=\"isSSLProcessing\"\n                        >Verify</Button\n                      >\n                    </div>\n                  </div>\n                </div>\n              </template>\n            </Fieldset>\n          </Transition>\n          <Transition name=\"slide-fade\">\n            <Fieldset class=\"rounded-lg mt-4\">\n              <template #label>\n                <span class=\"text-grey-03\">Customer Portal Link</span>\n              </template>\n              <template #default>\n                <div class=\"-mx-4 -my-4 px-6 py-6\">\n                  <Alert\n                    v-if=\"isCustomDomain && !isVerifiedCustomDomain\"\n                    color=\"orange\"\n                    view=\"smooth\"\n                    :style=\"{ padding: '0.5rem' }\"\n                    dense\n                  >\n                    <div class=\"flex items-center gap-x-2\">\n                      <span class=\"material-icons text-3xl\">info</span>\n                      <p whitelabel=\"text-replace\" data-label=\"domain custom alert\" class=\"text-sm\">\n                        Your custom domain is not verified yet. You will continue to use Reusely hosted customer portal until it is fully verified.\n                      </p>\n                    </div>\n                  </Alert>\n                  <p class=\"py-4\">Share this link on your site or send directly to your customers.</p>\n                  <div class=\"flex items-center gap-x-4 gap-y-4 md:gap-y-0 flex-wrap\">\n                    <Input v-model=\"link\" disabled class=\"w-96\" />\n                    <Tooltip v-if=\"showCopied\" placement=\"top\">\n                      <template #content>\n                        <span>Copied</span>\n                      </template>\n                      <template #default>\n                        <Button color=\"teal\">\n                          <span class=\"material-symbols-outlined text-3xl\">content_copy</span>\n                        </Button>\n                      </template>\n                    </Tooltip>\n                    <Button v-else color=\"teal\" @click=\"handleCopyLinkLogin(link)\">\n                      <span class=\"material-symbols-outlined text-3xl\">content_copy</span>\n                    </Button>\n                    <Button color=\"teal\" @click=\"handleOpenLoginPortal\">\n                      <span class=\"material-icons text-3xl\">open_in_new</span>\n                    </Button>\n                  </div>\n                </div>\n              </template>\n            </Fieldset>\n          </Transition>\n\n        </div>\n      </template>\n    </Card>\n    <Modal v-model=\"modalConfirmChangeDomain\" hide-footer hide-header size=\"xs\">\n      <template #default>\n        <div class=\"flex flex-col items-center my-8\">\n          <img\n            class=\"h-36\"\n            src=\"@/assets/icon/attention-warning.svg\"\n            alt=\"Warning\"\n          />\n          <h3 class=\"text-center text-xl my-12\">Change Subdomain</h3>\n          <div>\n            <Button\n              @click=\"handleChangeDomain()\"\n              color=\"orange\"\n              view=\"outlined\"\n              class=\"mx-2\"\n              :loading=\"loadingCustomDomain.reset\"\n              >Yes, Change It</Button\n            >\n            <Button\n              @click=\"modalConfirmChangeDomain = false\"\n              :disabled=\"loadingCustomDomain.reset\"\n              color=\"teal\"\n              view=\"smooth\"\n              class=\"mx-2\"\n              >Cancel</Button\n            >\n          </div>\n        </div>\n      </template>\n    </Modal>\n    <form @submit.prevent=\"handleSubmitCustomDomain\">\n      <Modal\n        v-model=\"modalCustomDomain\"\n        :title=\"customDomainModalTitle\"\n        size=\"xs\"\n      >\n        <template #default>\n          <div class=\"grid grid-cols-1\">\n            <div class=\"bg-grey-lighten text-grey-04 rounded-lg mb-6 px-6\">\n              <p class=\"my-4 leading-loose\">\n                <b>Example:</b> if your root domain is\n                <span class=\"bg-grey-darken text-orange-04 px-4 py-2 rounded-lg\"\n                  >example.com</span\n                >\n              </p>\n              <p class=\"my-4 leading-loose\">\n                you can create a subdomain like\n                <span class=\"bg-grey-darken text-orange-04 px-4 py-2 rounded-lg\"\n                  >newpage.example.com</span\n                >\n              </p>\n            </div>\n            <div>\n              <Input\n                v-model=\"customDomainForm.domain\"\n                placeholder=\"Your subdomain name\"\n                label=\"Subdomain Name\"\n                block\n                :view=\"\n                  customDomainValidation.domain.$invalid ? 'danger' : 'default'\n                \"\n              />\n              <small\n                class=\"text-red-base block my-2\"\n                v-for=\"(error, errorIndex) of customDomainValidation.domain\n                  .$errors\"\n                :key=\"errorIndex\"\n                >{{ error.$message }}.\n              </small>\n            </div>\n          </div>\n        </template>\n        <template #footer>\n          <div class=\"flex justify-between items-center\">\n            <a\n              class=\"text-red-04 hover:text-red-02\"\n              @click.prevent=\"handleResetCustomDomain\"\n              >Cancel</a\n            >\n            <Button\n              @click=\"handleSubmitCustomDomain\"\n              :disabled=\"isIncompleteCustomDomainForm\"\n              :loading=\"loadingCustomDomain.add\"\n              color=\"teal\"\n              view=\"smooth\"\n              >Save</Button\n            >\n          </div>\n        </template>\n      </Modal>\n    </form>\n  </div>\n</template>\n<script>\nimport { defineComponent, ref, nextTick, computed, watch } from 'vue'\nimport { useRoute } from 'vue-router'\nimport { content } from 'constants/whiteLabels'\n\nimport {\n  useCustomDomain,\n  useCustomerDomain\n} from 'composable/setting/customerPortal'\nimport { usePaywall } from 'composable/paywall'\nimport { useUser } from 'composable/user'\n\nimport copyText from 'utils/copy'\nimport { useVuelidate } from '@vuelidate/core'\n\nimport Card from 'bbUi/components/card/card.vue'\nimport Modal from 'bbUi/components/modal/modal.vue'\nimport Button from 'bbUi/components/button/button.vue'\nimport Input from 'bbUi/components/input/input.vue'\nimport Fieldset from 'bbUi/components/fieldset/fieldset.vue'\nimport Alert from 'bbUi/components/alert/alert.vue'\n\nimport DomainSelection from 'components/CustomerPortal/CustomerDomain/DomainSelection.vue'\nimport DomainRecords from 'components/CustomerPortal/CustomerDomain/DomainRecords.vue'\nimport InputFile from 'components/InputFile.vue'\nimport { ElMessage } from 'element-plus'\n\nexport default defineComponent({\n  name: 'settingCustomerPortalCustomerDomain',\n  components: {\n    Card,\n    Modal,\n    Button,\n    Input,\n    InputFile,\n    Fieldset,\n    DomainSelection,\n    DomainRecords,\n    Alert\n  },\n  async setup() {\n    const modalConfirmChangeDomain = ref(false)\n    const modalConfirmType = ref(null) // 1 = Custom domain, 2 = Reusely domain\n    const modalCustomDomain = ref(false)\n    const isEditCustomDomain = ref(false)\n    const showCopied = ref(false)\n    const timerCopied = ref(undefined)\n    const link = ref(isWhiteLabel.value ? content[window.whiteLabel.company].setting_domain_link : 'sell.reusely.com')\n    const favicon = ref(null)\n    const route = useRoute()\n\n    const {\n      loading: loadingCustomDomain,\n      form: customDomainForm,\n      formValidationRules: customDomainFormValidationRules,\n      isIncompleteForm: isIncompleteCustomDomainForm,\n      isCustomDomain,\n      isVerifiedCustomDomain,\n      isSSLProcessing,\n      domainOptions,\n      submitForm: submitCustomDomain,\n      verifyCustomDomain,\n      resetCustomDomain\n    } = useCustomDomain()\n    const {\n      loading: loadingCustomerDomain,\n      customerDomain,\n      dnsRecords,\n      customerPortalLogin,\n      defaultDomain,\n      getCustomerDomain\n    } = useCustomerDomain()\n    const { open: openPaywall } = usePaywall()\n    const { isProPlan } = useUser()\n\n    watch(() => customerPortalLogin.value, () => {\n      link.value = customerPortalLogin.value\n    }, { immediate: true })\n    watch(() => showCopied.value, (val) => {\n      if (!val) clearTimeout(timerCopied.value)\n    })\n\n    const customDomainModalTitle = computed(() =>\n      isEditCustomDomain.value\n        ? 'Edit Custom Subdomain'\n        : 'Add Custom Subdomain'\n    )\n\n    const customDomainValidation = useVuelidate(\n      customDomainFormValidationRules,\n      customDomainForm,\n      {\n        $lazy: true\n      }\n    )\n    const handleOpenLoginPortal = () => {\n      window.open(link.value.includes('https://') ? link.value : `https://${link.value}`)\n    }\n    const handleSelectDomainOption = async (domainOption) => {\n      if (domainOption.selected) return\n\n      modalConfirmChangeDomain.value = true\n      modalConfirmType.value = domainOption.id\n    }\n    const handleCustomDomain = (defaultDomainName = null) => {\n      modalCustomDomain.value = true\n      if (defaultDomainName) {\n        isEditCustomDomain.value = true\n        customDomainForm.domain = defaultDomainName\n      }\n    }\n    const handleResetCustomDomain = async () => {\n      modalCustomDomain.value = false\n      customDomainForm.domain = null\n      isEditCustomDomain.value = false\n      await nextTick()\n      customDomainValidation.value.$reset()\n    }\n    const validateCustomDomain = () => {\n      customDomainValidation.value.$validate()\n      return !customDomainValidation.value.$invalid\n    }\n    const handleSubmitCustomDomain = async () => {\n      if (!isProPlan.value){\n        openPaywall({\n          title: 'Custom Domain',\n          description: 'Use your own custom domain for the customer portal to ensure your buyback program is fully white-labeled to match your brands look and feel.',\n          image_url: '/images/paywall/paywall-custom-domain.svg'\n        })\n        return\n      }\n      if (loadingCustomDomain.value.add) return\n      const isValid = validateCustomDomain()\n      if (!isValid) return\n      await submitCustomDomain((err) => {\n        if (err) return\n        handleResetCustomDomain()\n      })\n    }\n    const handleVerifyCustomDomain = (err, isVerified) => {\n      if (err) return\n      if (isVerified) {\n        ElMessage({\n          type: 'success',\n          message: 'Your custom subdomain is verified'\n        })\n      } else {\n        ElMessage({\n          type: 'warning',\n          message: 'Your custom subdomain is not verified yet'\n        })\n      }\n    }\n    const handleChangeDomain = async () => {\n      const isCustomDomain = modalConfirmType.value === 1\n      const isReuselyDomain = modalConfirmType.value === 2\n      if (isCustomDomain) {\n        handleCustomDomain()\n      } else if (isReuselyDomain) {\n        await resetCustomDomain()\n      }\n      modalConfirmChangeDomain.value = false\n      modalConfirmType.value = null\n    }\n    const domainVerificationInstructions = [\n      'Sign in to your domain provider',\n      'Go to your DNS settings',\n      'Add the following records to your DNS settings:'\n    ]\n    const handleCopyLinkLogin = (text) => {\n      showCopied.value = true\n      copyText(text)\n      timerCopied.value = setTimeout(() => {\n        showCopied.value = false\n      }, 2000)\n    }\n\n    await Promise.all([getCustomerDomain()])\n\n    return {\n      link,\n      showCopied,\n      favicon,\n      loadingCustomDomain,\n      loadingCustomerDomain,\n      modalConfirmChangeDomain,\n      modalCustomDomain,\n      modalConfirmType,\n      customDomainModalTitle,\n      isWhiteLabel,\n      customDomainForm,\n      customerDomain,\n      dnsRecords,\n      customerPortalLogin,\n      defaultDomain,\n      copyText,\n      handleCopyLinkLogin,\n      handleSelectDomainOption,\n      handleCustomDomain,\n      handleResetCustomDomain,\n      customDomainValidation,\n      handleSubmitCustomDomain,\n      isIncompleteCustomDomainForm,\n      isCustomDomain,\n      isVerifiedCustomDomain,\n      isSSLProcessing,\n      isProPlan,\n      domainOptions,\n      domainVerificationInstructions,\n      verifyCustomDomain,\n      handleOpenLoginPortal,\n      handleVerifyCustomDomain,\n      handleChangeDomain\n    }\n  }\n})\n</script>\n<style lang=\"scoped\"></style>\n","<template>\n  <Fieldset class=\"rounded-lg\">\n    <template #label>\n      <span class=\"text-grey-03\">Language</span>\n    </template>\n    <template #default>\n      <Select\n        @change=\"handleUpdate\"\n        :loading=\"loading\"\n        :modelValue=\"modelValue\"\n        :items=\"languages\"\n        max-height=\"250px\"\n        placeholder=\"Choose any language\"\n        block\n        searchable\n      ></Select>\n    </template>\n  </Fieldset>\n</template>\n<script>\nimport { defineComponent, computed } from 'vue'\n\nimport Select from 'components/Select.vue'\nimport Fieldset from 'bbUi/components/fieldset/fieldset.vue'\n\nimport { isObject } from 'utils/is'\n\nexport default defineComponent({\n  components: {\n    Fieldset,\n    Select\n  },\n  props: {\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    lang: {\n      type: Array,\n      default: () => []\n    },\n    label: {\n      type: String,\n      default: 'name'\n    },\n    value: {\n      type: String,\n      default: 'value'\n    },\n    modelValue: {\n      type: String,\n      default: ''\n    }\n  },\n  emits: ['update:modelValue'],\n  setup(props, { emit }) {\n    const languages = computed(() =>\n      props.lang.map((lang) =>\n        isObject(lang)\n          ? {\n              name: lang[props.label] || null,\n              value: lang[props.value] || null\n            }\n          : {\n              name: lang,\n              value: lang\n            }\n      )\n    )\n    const handleUpdate = (value) => emit('update:modelValue', value)\n    return {\n      languages,\n      handleUpdate\n    }\n  }\n})\n</script>\n","<template>\n  <div>\n    <Card>\n      <template #header>\n        <h2 class=\"text-xl\">Customer Portal Settings</h2>\n      </template>\n      <template #default>\n        <Transition name=\"slide-fade\">\n          <Language\n            :modelValue=\"language\"\n            @update:modelValue=\"handleUpdateLanguage\"\n            :lang=\"formattedLanguages\"\n            label=\"name\"\n            value=\"code\"\n            :loading=\"loadingGeneral.language\"\n          />\n        </Transition>\n        <Transition name=\"slide-fade\">\n          <Fieldset class=\"rounded-lg mt-4\">\n            <template #label>\n              <span class=\"text-grey-03\">Browser Icon (Favicon)</span>\n            </template>\n            <template #default>\n              <div class=\"-mx-4 -my-4 px-6 py-6\">\n                <div class=\"w-full\">\n                  <InputFile\n                    :file=\"favicon\"\n                    :loading=\"loadingCustomerDomain\"\n                    :button-action=\"false\"\n                    @input=\"handleUpload\"\n                  >\n                    <template #suggestedLabel>\n                      <span class=\"mt-6\">\n                        <b>Suggested:</b> 64x64px ; <b>File</b>: PNG ;\n                        <b>Max</b> 250KB\n                      </span>\n                    </template>\n                  </InputFile>\n                </div>\n              </div>\n            </template>\n          </Fieldset>\n        </Transition>\n      </template>\n    </Card>\n  </div>\n</template>\n<script>\nimport { defineComponent, ref, computed, watch } from 'vue'\nimport {\n  useGeneral,\n  useCustomerDomain\n} from 'composable/setting/customerPortal'\nimport debounce from 'utils/debounce'\n\nimport { ElMessage } from 'element-plus'\n\nimport Card from 'bbUi/components/card/card.vue'\nimport Fieldset from 'bbUi/components/fieldset/fieldset.vue'\nimport InputFile from 'components/InputFile.vue'\nimport Select from 'components/Select.vue'\n\nimport Language from './language.vue'\n\nexport default defineComponent({\n  components: {\n    Card,\n    Fieldset,\n    InputFile,\n    Select,\n    Language\n  },\n  async setup() {\n    const {\n      customerPortalFavicon,\n      loading: loadingCustomerDomain,\n      uploadIcon\n    } = useCustomerDomain()\n    const {\n      language,\n      languages,\n      loading: loadingGeneral,\n      getLanguages,\n      updateLanguage\n    } = useGeneral()\n    const favicon = ref(null)\n\n    const formattedLanguages = computed(() =>\n      languages.value.map((lang) => ({\n        code: lang.code,\n        name: `${lang.name} - (${lang.code.toUpperCase()})`\n      }))\n    )\n\n    const handleUpload = async (file) => {\n      favicon.value = file\n      let formData = new FormData()\n      formData.append('favicon', file === null ? 0 : file)\n      await uploadIcon(formData)\n    }\n    const handleUpdateLanguage = debounce(async (lang) => {\n      language.value = lang.value\n      await updateLanguage(\n        {\n          code: lang.value,\n          name: lang.name.split(' -')[0]\n        },\n        (err) => {\n          if (err) return\n          ElMessage({\n            type: 'success',\n            message: 'Customer portal language updated'\n          })\n        }\n      )\n    }, 500)\n\n    watch(\n      () => customerPortalFavicon.value,\n      (fav) => {\n        favicon.value = fav\n      },\n      {\n        immediate: true\n      }\n    )\n\n    await Promise.allSettled([getLanguages()])\n\n    return {\n      customerPortalFavicon,\n      favicon,\n      loadingCustomerDomain,\n      loadingGeneral,\n      language,\n      handleUpload,\n      handleUpdateLanguage,\n      formattedLanguages\n    }\n  }\n})\n</script>\n","<template>\n\t<div>\n\t\t<Card>\n\t\t\t<template #header>\n\t\t\t\t<h2 class=\"text-xl\">Customer Portal Revised Offer</h2>\n\t\t\t</template>\n\t\t\t<template #default>\n\t\t\t\t<Tab\n\t\t\t\t\tv-if=\"location == 'both'\"\n\t\t\t\t\t:modelValue=\"data.all.type\"\n\t\t\t\t\t:items=\"revisedOfferTypes\"\n\t\t\t\t\tname=\"name\"\n\t\t\t\t\tby=\"value\"\n\t\t\t\t\t@update:modelValue=\"handleUpdateEmailTemplateType\"\n\t\t\t\t\tcomponent>\n\t\t\t\t\t<template #title=\"scope\">\n\t\t\t\t\t\t<div class=\"flex items-center justify-center gap-4\">\n\t\t\t\t\t\t\t{{ scope.item.name }}\n\t\t\t\t\t\t\t<div \n\t\t\t\t\t\t\t\tv-if=\"scope.item.value === 'easy-offer'\" \n\t\t\t\t\t\t\t\tclass=\"px-3 py-1 -ml-2 bg-teal-04 text-white rounded-full flex items-center justify-center box-border text-xs\">\n\t\t\t\t\t\t\t\t\tAPI\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</template>\n\t\t\t\t</Tab>\n\t\t\t\t<div\n\t\t\t\t\tv-else-if=\"revisedOfferTypes.length\"\n\t\t\t\t\tclass=\"border-b border-grey-01 mb-6 flex items-center\">\n\t\t\t\t\t<div class=\"p-2 border-b-4 border-teal-04 text-teal-04 font-bold cursor-pointer\">\n\t\t\t\t\t\t{{ revisedOfferTypes[0].name }}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"flex items-center mb-4\">\n\t\t\t\t\t<div class=\"flex-auto\"></div>\n\t\t\t\t</div>\n\t\t\t\t<Table v-loading=\"loading.all\" :data=\"revisedOffers.all.data\" class=\"mb-6\">\n\t\t\t\t\t<TableColumn prop=\"name\" label=\"Title\" />\n\t\t\t\t\t<TableColumn prop=\"desc\" label=\"Description\" />\n\t\t\t\t\t<TableColumn label=\"\" align=\"right\">\n\t\t\t\t\t\t<template #default=\"scope\">\n\t\t\t\t\t\t\t<Dropdown trigger=\"click\" placement=\"bottom-end\" hide-on-click class=\"mr-8\">\n\t\t\t\t\t\t\t\t<Button class=\"btn-action\" color=\"teal\" view=\"outlined\" dense icon>\n\t\t\t\t\t\t\t\t\t<span class=\"material-icons\">more_horiz</span>\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<template #dropdown>\n\t\t\t\t\t\t\t\t<DropdownMenu class=\"py-1\">\n\t\t\t\t\t\t\t\t\t<DropdownItem class=\"text-base\" @click=\"editTemplate(scope.row)\">\n\t\t\t\t\t\t\t\t\t<span class=\"material-icons mr-2\">edit</span> Edit\n\t\t\t\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t\t\t\t\t<DropdownItem class=\"text-base\" @click=\"handlePreviewRevisedOffer(scope.row.id, scope.row.name)\">\n\t\t\t\t\t\t\t\t\t<span class=\"material-icons mr-2\">visibility</span> Preview\n\t\t\t\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t\t\t\t</DropdownMenu>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</TableColumn>\n\t\t\t\t</Table>\n\t\t\t\t<Pagination v-model:page=\"data.all.page\" v-model:limit=\"data.all.limit\" :data=\"state.all\" />\n\t\t\t</template>\n\t\t</Card>\n\t</div>\n\t<RevisedOfferPreview\n\t\tv-model:show=\"isPreviewRevisedOffer\"\n\t\t:body=\"previewedRevisedOffer\"\n\t\t:type=\"data.type\"\n\t\ttitle=\"Preview Text\"\n\t\trender-type=\"direct\" />\n</template>\n\n<script>\nimport { computed, defineComponent } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { deepClone } from 'utils/deep-clone'\nimport { useRevisedOffer } from 'composable/setting/revisedOffer'\n\nimport Card from 'bbUi/components/card/card.vue'\nimport Tab from 'bbUi/components/tab/tab.vue'\nimport Button from 'bbUi/components/button/button.vue'\nimport Pagination from 'components/Pagination.vue'\nimport Checkbox from 'bbUi/components/checkbox'\nimport RevisedOfferPreview from 'components/RevisedOffer/RevisedOfferPreview.vue'\n\nexport default defineComponent({\n\tcomponents: { RevisedOfferPreview, Checkbox, Pagination, Button, Card, Tab },\n\tasync setup() {\n\t\tconst router = useRouter()\n\t\tconst {\n\t\t\tstate,\n\t\t\tdata,\n\t\t\tloading,\n\t\t\tisMailIn,\n\t\t\tpreviewedRevisedOffer,\n\t\t\tisPreviewRevisedOffer,\n\t\t\trevisedOfferTypes,\n\t\t\tlocation,\n\t\t\tactionAll,\n\t\t\tactionPreviewRevisedOffer\n\t\t} = useRevisedOffer()\n\t\tconst revisedOffers = computed(() => deepClone(state.value))\n\n\t\tconst editTemplate = row => {\n\t\t\trouter.push({\n\t\t\t\tname: 'settingCustomerPortalTemplateRevisedOffer',\n\t\t\t\tparams: {\n\t\t\t\t\ttemplateId: row.id,\n\t\t\t\t\ttype: row.type\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tconst handleUpdateEmailTemplateType = newData => {\n\t\t\tdata.all.type = newData\n\t\t}\n\t\tconst handlePreviewRevisedOffer = async (id, name) => {\n\t\t\tdata.type = name\n\n\t\t\tawait actionPreviewRevisedOffer(id)\n\t\t}\n\n\t\tawait Promise.all([actionAll()])\n\n\t\treturn {\n\t\t\tstate,\n\t\t\tdata,\n\t\t\tloading,\n\t\t\tisMailIn,\n\t\t\tpreviewedRevisedOffer,\n\t\t\tisPreviewRevisedOffer,\n\t\t\trevisedOfferTypes,\n\t\t\trevisedOffers,\n\t\t\tlocation,\n\t\t\teditTemplate,\n\t\t\thandleUpdateEmailTemplateType,\n\t\t\thandlePreviewRevisedOffer,\n\t\t}\n\t}\n})\n</script>\n\n<style scoped>\n.btn.btn-outlined.btn-teal.btn-action {\n    border: none !important;\n  }\n</style>\n","<template>\n  <div>\n    <div class=\"flex justify-between items-center mb-8\">\n      <Breadcrumb\n        pageTitle=\"Customer Portal\"\n        :backTo=\"{ name: 'setting' }\"\n        :items=\"breadcrumb\"\n      />\n    </div>\n    <div class=\"grid grid-cols-5 gap-6\">\n      <div class=\"col-span-4 space-y-6\">\n        <Transition name=\"slide-fade\">\n          <KeepAlive>\n            <Suspense>\n              <template #default>\n                <DomainSettings />\n              </template>\n              <template #fallback>\n                <div class=\"w-full flex items-center justify-center\">\n                  <BaseLoading />\n                </div>\n              </template>\n            </Suspense>\n          </KeepAlive>\n        </Transition>\n        <Transition name=\"slide-fade\">\n          <KeepAlive>\n            <Suspense>\n              <template #default>\n                <div>\n                  <RevisedOfferSettings />\n                </div>\n              </template>\n              <template #fallback>\n                <div class=\"w-full flex items-center justify-center\">\n                  <BaseLoading />\n                </div>\n              </template>\n            </Suspense>\n          </KeepAlive>\n        </Transition>\n      </div>\n      <div>\n        <Transition name=\"slide-fade\">\n          <KeepAlive>\n            <Suspense>\n              <template #default>\n                <GeneralSettings />\n              </template>\n              <template #fallback>\n                <div class=\"w-full flex items-center justify-center\">\n                  <BaseLoading />\n                </div>\n              </template>\n            </Suspense>\n          </KeepAlive>\n        </Transition>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport { defineComponent, ref } from 'vue'\n\nimport Breadcrumb from 'components/Breadcrumb.vue'\nimport BaseLoading from 'components/BaseLoading.vue'\nimport DomainSettings from './settings/domain/index.vue'\nimport GeneralSettings from './settings/general/index.vue'\nimport RevisedOfferSettings from './settings/revised-offer/index.vue'\n\nexport default defineComponent({\n  name: 'settingCustomerPortal',\n  components: {\n    BaseLoading,\n    Breadcrumb,\n    DomainSettings,\n    GeneralSettings,\n    RevisedOfferSettings\n  },\n  setup() {\n    const breadcrumb = ref([\n      {\n        text: 'Settings',\n        to: {\n          name: 'setting'\n        }\n      },\n      {\n        text: 'Customer Portal'\n      }\n    ])\n    return {\n      breadcrumb\n    }\n  }\n})\n</script>\n"],"names":["useCustomDomain","getCustomerDomain","useCustomerDomain","loading","computed","store","state","setting","customerPortal","customDomain","form","reactive","domain","formValidationRules","required","helpers","withMessage","url","length","psl","isValid","isVerifiedCustomDomain","getters","isSSLProcessing","defaultDomain","customerDomain","domainOptions","id","title","description","icon","selected","isCustomDomain","value","isActive","isIncompleteForm","isIncompleteData","data","Object","entries","filter","_","itemValue","watch","formData","commit","__spreadValues","deep","submitForm","async","callback","dispatch","isFunction","err","verifyCustomDomain","isVerified","resetCustomDomain","dnsRecords","customerPortalLogin","customerPortalFavicon","uploadIcon","payload","_u","type","message","_sfc_main","defineComponent","name","props","options","Array","default","disabled","Boolean","String","emits","[object Object]","emit","ref","immediate","isWhiteLabel","handleSelectDomainOption","domainOption","_hoisted_2","_hoisted_3","class","_hoisted_4","_hoisted_5","_hoisted_6","key","_cache","$props","$setup","$data","$options","_openBlock","_createElementBlock","_createElementVNode","_hoisted_1","_Fragment","_renderList","_ctx","domainOptionIndex","onClick","$event","$slots","_mergeProps","ref_for","option","_hoisted_7","components","Badge","records","domainRecords","copy","Card","Modal","Button","Input","InputFile","Fieldset","DomainSelection","DomainRecords","_createBlock","_component_Table","_withCtx","_component_TableColumn","label","row","_toDisplayString","color","Alert","modalConfirmChangeDomain","modalConfirmType","modalCustomDomain","isEditCustomDomain","showCopied","timerCopied","link","content","window","whiteLabel","company","setting_domain_link","favicon","useRoute","loadingCustomDomain","customDomainForm","customDomainFormValidationRules","isIncompleteCustomDomainForm","submitCustomDomain","loadingCustomerDomain","open","openPaywall","usePaywall","isProPlan","useUser","val","clearTimeout","customDomainModalTitle","customDomainValidation","useVuelidate","$lazy","handleCustomDomain","defaultDomainName","handleResetCustomDomain","nextTick","$reset","Promise","all","copyText","handleCopyLinkLogin","text","setTimeout","handleSubmitCustomDomain","image_url","add","$validate","$invalid","domainVerificationInstructions","handleOpenLoginPortal","includes","handleVerifyCustomDomain","handleChangeDomain","isCustomDomain2","isReuselyDomain","whitelabel","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_createVNode","header","view","left","_createCommentVNode","_component_DomainSelection","onSelect","dense","data-label","_withDirectives","instruction","instructionIndex","_component_DomainRecords","_component_Button","verify","style","padding","onUpdate:modelValue","hide-footer","hide-header","src","_imports_0","reset","_createTextVNode","_component_Input","modelValue","placeholder","block","openBlock","footer","_hoisted_19","_withModifiers","args","Select","lang","setup","languages","map","isObject","handleUpdate","Language","_component_Fieldset","_component_Select","onChange","items","max-height","language","loadingGeneral","getLanguages","updateLanguage","get","general","set","language2","code","customer_portal_lang_code","customer_portal_lang_name","formattedLanguages","toUpperCase","handleUpdateLanguage","debounce","split","fav","allSettled","handleUpload","file","FormData","append","_component_InputFile","button-action","RevisedOfferPreview","Checkbox","Pagination","Tab","router","useRouter","isMailIn","previewedRevisedOffer","isPreviewRevisedOffer","revisedOfferTypes","location","actionAll","actionPreviewRevisedOffer","useRevisedOffer","revisedOffers","deepClone","editTemplate","push","params","templateId","handleUpdateEmailTemplateType","newData","handlePreviewRevisedOffer","BaseLoading","Breadcrumb","DomainSettings","GeneralSettings","RevisedOfferSettings","by","scope","item","prop","_component_Dropdown","trigger","placement","hide-on-click","_component_DropdownItem","_component_Pagination","onUpdate:page","page","onUpdate:limit","limit","_component_RevisedOfferPreview","onUpdate:show","body","breadcrumb","to","_component_Breadcrumb","pageTitle","backTo","_KeepAlive","_Suspense","fallback"],"mappings":"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"}