{"version":3,"file":"auto-complete.55b1ecae.js","sources":["../../system-design/src/components/auto-complete/auto-complete.vue"],"sourcesContent":["<script>\nimport {\n  defineComponent,\n  h,\n  onDeactivated,\n  ref,\n  watch,\n  resolveDirective,\n  withDirectives,\n  computed\n} from \"vue\"\nimport { addMixinPrefix, objectIndexer } from \"../../util/helpers\"\nimport Input from \"../input\"\n\nexport default defineComponent({\n  name: \"AutoComplete\",\n  mixins: [...addMixinPrefix([], \"auto-complete\")],\n  props: [\n    \"items\",\n    \"value\",\n    \"modelValue\",\n    \"noData\",\n    \"name\",\n    \"by\",\n    \"placeholder\",\n    \"loading\",\n    \"loadingText\",\n    \"clearOnSelect\",\n    \"icon\",\n    \"rounded\",\n    \"flat\",\n    \"disabled\",\n    \"disabled-item\",\n    \"clearable\"\n  ],\n  emits: [\"update:modelValue\", \"select\", \"change\", \"focusIn\", \"focusOut\"],\n  directives: {\n    outsideClick: {\n      beforeMount: (el, binding, vnode) => {\n        binding.event = function (event) {\n          if (!(el == event.target || el.contains(event.target))) {\n            if (binding.value instanceof Function) {\n              binding.value(event)\n            }\n          }\n        }\n        document.addEventListener(\"click\", binding.event)\n        document.addEventListener('scroll', binding.event, true)\n      },\n      unmounted: (el, binding, vnode) => {\n        document.removeEventListener(\"click\", binding.event)\n        document.removeEventListener('scroll', binding.event, true)\n      }\n    }\n  },\n  setup(props, { slots, emit }) {\n    const refInput = ref(null)\n    const inputOffsetTop = ref(null)\n    const selectedItem = ref(props.value) // sheet not updated if not a props\n    const isTriggered = ref(false)\n    const isInitial = ref(true)\n\n    const inputWidth = computed(() => {\n      if(refInput.value){\n        if(refInput.value.$el){\n          return refInput.value.$el.offsetWidth\n        }\n      }\n      return 0\n    })\n\n    const onSelectedItem = (item) => {\n      isTriggered.value = false\n      selectedItem.value = item.text\n      emit(\"update:modelValue\", item.value)\n      emit(\"select\", item.value)\n      if (props.clearOnSelect) selectedItem.value = null\n    }\n    const onInputUpdate = ($event) => {\n      emit(\"change\", $event.target.value)\n      selectedItem.value = $event.target.value\n    }\n    const onInputFocusIn = $event => {\n      emit('focusIn', $event)\n      if(refInput.value){\n        if(refInput.value.$el){\n          inputOffsetTop.value = (refInput.value.$el.getBoundingClientRect().top - refInput.value.$el.offsetParent.getBoundingClientRect().top ) - refInput.value.$el.offsetParent.scrollTop + refInput.value.$el.ownerDocument.defaultView.pageYOffset + 40\n        }\n      }\n      isTriggered.value = true\n    }\n    const onInputFocusOut = ($event) => {\n      if(refInput.value){\n        if(refInput.value.$el) refInput.value.blur()\n      }\n      emit(\"focusOut\", $event)\n      isTriggered.value = false\n    }\n    const onInputClear = () => {\n      selectedItem.value = null\n      emit('change', '')\n      refInput.value.focus()\n    }\n\n    const autoCompleteInput = () => {\n      return h(\n        \"div\",\n        {\n          class: \"auto__complete__input\"\n        },\n        h(Input, {\n          ref: refInput,\n          block: true,\n          value: selectedItem.value,\n          clearable: props.clearable,\n          onInput: onInputUpdate,\n          onFocusIn: onInputFocusIn,\n          onClear: onInputClear,\n          // onFocusOut: onInputFocusOut,\n          placeholder: props.placeholder,\n          icon: true || \"\",\n          disabled: props.disabled\n        })\n      )\n    }\n\n    const parseItem = (item) => {\n      const isItemObject = typeof item === \"object\" && !Array.isArray(item)\n      if (isItemObject) {\n        let itemValue = objectIndexer(item, props.by)\n        let itemText = objectIndexer(item, props.name)\n        return { text: itemText, value: itemValue, data: { ...item } }\n      }\n      return { text: item, value: item }\n    }\n\n    const autoCompleteSheet = () => {\n      let items = []\n      let itemProp = props.items\n\n      if (!itemProp || !itemProp.length) itemProp = []\n\n      let parsedItems = itemProp.map((item) => parseItem(item))\n      // if( selectedItem.value ) parsedItems = parsedItems.filter(item => filterItem(item.text, selectedItem.value))\n\n      for (let item of parsedItems) {\n        const isValidItem = item.text && item.value\n        // if item contains property text and value (valid) then render the item. otherwise, leave it blank\n        if(isValidItem){\n          const isDisabledItem = item.value[props.disabledItem] ? item.value[props.disabledItem] : false\n          items.push(h('div', {\n            class: ['auto__complete__sheet__item', isDisabledItem && '--disabled'], \n            onClick: isDisabledItem ? null : onSelectedItem.bind(this, item) \n            }, \n            slots.default && slots.default({ item: item }) || item.text)\n          )\n        }\n      }\n\n      const sheet = h('div', { class: 'auto__complete__sheet', style: { width: `${inputWidth.value}px`, top: `${inputOffsetTop.value}px` } }, items.length > 0 ? items : h('div', { class: 'auto__complete__sheet__item sheet__item--nodata' }, isInitial ? 'Nothing to show' : props.noData || 'No data available'))\n      isInitial.value = false\n\n      return sheet\n    }\n\n    const loadingSlot = () => {\n      return slots.loading && slots.loading()\n    }\n\n    const autoCompleteLoading = () => {\n      return h(\n        \"div\",\n        { class: \"auto__complete__sheet\", style: { width: `${inputWidth.value}px` } },\n        h(\n          \"div\",\n          { class: \"auto__complete__sheet__item\" },\n          loadingSlot() || props.loadingText || \"Loading ...\"\n        )\n      )\n    }\n\n    const slotIcon = () => {\n      return slots.icon && slots.icon()\n    }\n\n    const autoCompleteIcon = () => {\n      return h(\"div\", { class: \"auto__complete__icon\" }, slotIcon())\n    }\n\n    const unWatch = watch(\n      () => props.value,\n      (newValue) => {\n        selectedItem.value = newValue\n      }\n    )\n\n    onDeactivated(() => unWatch())\n\n    return {\n      autoCompleteInput,\n      autoCompleteSheet,\n      autoCompleteLoading,\n      isTriggered,\n      selectedItem,\n      autoCompleteIcon,\n      slotIcon,\n      onInputFocusOut\n    }\n  },\n  render() {\n    const outsideClick = resolveDirective(\"outside-click\")\n    const childs = [\n      this.autoCompleteInput(),\n      this.autoCompleteIcon(),\n      ( this.$props.loading && this.autoCompleteLoading() ) || \n      ( this.isTriggered && this.autoCompleteSheet() )\n    ]\n    const listClass = [\n      \"auto-complete\",\n      this.$props.flat && \"auto-complete--flat\",\n      this.$props.rounded && \"auto-complete--rounded\",\n      this.slotIcon() && \"auto-complete--icon\",\n      (this.isTriggered && \"--triggered\") || \"\"\n    ]\n\n    return withDirectives(\n      h(\n        \"div\",\n        {\n          class: listClass\n        },\n        childs\n      ),\n      [[outsideClick, this.onInputFocusOut]]\n    )\n  }\n})\n</script>\n"],"names":["_sfc_main","defineComponent","name","mixins","addMixinPrefix","props","emits","directives","outsideClick","beforeMount","el","binding","vnode","event","target","contains","value","Function","document","addEventListener","unmounted","removeEventListener","[object Object]","slots","emit","refInput","ref","inputOffsetTop","selectedItem","isTriggered","isInitial","inputWidth","computed","$el","offsetWidth","onSelectedItem","item","text","clearOnSelect","onInputUpdate","$event","onInputFocusIn","getBoundingClientRect","top","offsetParent","scrollTop","ownerDocument","defaultView","pageYOffset","onInputClear","focus","slotIcon","icon","unWatch","watch","newValue","onDeactivated","autoCompleteInput","h","class","Input","block","clearable","onInput","onFocusIn","onClear","placeholder","disabled","autoCompleteSheet","items","itemProp","length","parsedItems","map","Array","isArray","itemValue","objectIndexer","by","data","__spreadValues","parseItem","isDisabledItem","disabledItem","push","onClick","bind","this","default","sheet","style","width","noData","autoCompleteLoading","loading","loadingText","autoCompleteIcon","onInputFocusOut","blur","resolveDirective","childs","$props","listClass","flat","rounded","withDirectives"],"mappings":"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"}