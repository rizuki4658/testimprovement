{"version":3,"file":"DeviceGolfSpec.596ec2f1.js","sources":["../../src/components/ColorSearch.vue","../../src/components/Device/DeviceGolfSpec.vue"],"sourcesContent":["<template>\n  <div>\n    <BDropdown prevent-toggle block>\n      <template #default>\n        <Input\n          ref=\"elSearchInput\"\n          :model-value=\"isSearching ? searchQuery : modelValue\"\n          @update:model-value=\"handleSearch\"\n          @focus-in=\"handleFocusIn\"\n          :view=\"error ? 'danger' : 'default'\"\n          :label=\"label\"\n          :placeholder=\"placeholder\"\n          :disabled=\"disabled\"\n          block\n          icon\n        >\n          <template #icon>\n            <span class=\"material-icons\">search</span>\n          </template>\n        </Input>\n      </template>\n      <template #dropdown=\"{ collapse }\">\n        <div>\n          <a\n            @click.prevent=\"\n              () => {\n                handleCustomColor()\n                collapse()\n              }\n            \"\n            tabindex=\"1\"\n            class=\"auto-complete-color auto-complete-color__group-item border-b border-grey-01\"\n          >\n            <span class=\"flex items-center flex-wrap\">\n              <i class=\"material-icons mr-2\">add</i>Add Custom Color\n            </span>\n          </a>\n\n          <div class=\"overflow-y-auto\" :style=\"{ maxHeight: '200px' }\">\n            <template v-if=\"items.length > 0\">\n              <p class=\"text-left ml-4 my-4 text-black text-sm font-semibold\">{{ items.length > 1 ? 'Colors' : 'Color' }}</p>\n              <div class=\"auto-complete-color auto-complete-color__group\">\n                <a\n                  v-for=\"item in items\"\n                  :key=\"item.id\"\n                  @click.prevent=\"\n                    () => {\n                      handleSelectItem(item)\n                      collapse()\n                    }\n                  \"\n                  tabindex=\"1\"\n                  class=\"auto-complete-color auto-complete-color__group-item\"\n                >\n                  <div class=\"flex items-center w-full\">\n                    <span>{{ item.name }}</span>\n                  </div>\n                </a>\n              </div>\n            </template>\n            <template v-else-if=\"(!searchQuery || searchQuery?.length < 2) && isCustomItem\">\n              <div class=\"my-8\">\n                <p class=\"text-center text-grey-04\">\n                  minimal 2 characters to search for colors\n                </p>\n              </div>\n            </template>\n            <template v-else>\n              <div class=\"my-8\">\n                <p class=\"text-center text-grey-04\">\n                  {{ loading ? 'Please wait...' : 'No colors found' }}\n                </p>\n              </div>\n            </template>\n          </div>\n        </div>\n      </template>\n    </BDropdown>\n  </div>\n</template>\n\n<script>\nimport { defineComponent, onMounted, onUnmounted, ref, watch } from 'vue'\nimport Input from 'bbUi/components/input/input.vue'\nimport BDropdown from 'components/BDropdown/BDropdown.vue'\n\nexport default defineComponent({\n  name: 'ColorSearch',\n  components: {\n    Input,\n    BDropdown\n  },\n  props: {\n    modelValue: {\n      type: String,\n      default: ''\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    items: {\n      type: Array,\n      default: () => []\n    },\n    error: {\n      type: Boolean,\n      default: false\n    },\n    label: {\n      type: String,\n      default: 'Color'\n    },\n    placeholder: {\n      type: String,\n      default: 'Search Color'\n    },\n    productId: {\n      type: [String, Number],\n      default: null\n    },\n    isCustomItem: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['update:modelValue', 'search', 'select', 'customColor'],\n  setup(props, { emit }) {\n    const elSearchInput = ref(null)\n    const isCollapse = ref(false)\n    const searchQuery = ref(props.modelValue)\n    const isSearching = ref(false)\n\n    watch(\n      () => props.productId,\n      () => {\n        searchQuery.value = ''\n        isSearching.value = false\n      }\n    )\n\n    const closeDropdown = () => {\n      isCollapse.value = false\n    }\n\n    const handleFocusIn = () => {\n      isCollapse.value = true\n      isSearching.value = true\n    }\n\n    const handleSelectItem = (item) => {\n      emit('select', item)\n      emit('update:modelValue', item.name)\n      searchQuery.value = item.name\n      closeDropdown()\n    }\n\n    const handleSearch = (value) => {\n      searchQuery.value = value\n      emit('search', value)\n    }\n\n    const handleCustomColor = () => {\n      emit('customColor')\n      closeDropdown()\n    }\n\n    return {\n      elSearchInput,\n      isCollapse,\n      searchQuery,\n      isSearching,\n      handleSearch,\n      handleSelectItem,\n      handleCustomColor,\n      handleFocusIn\n    }\n  }\n})\n</script>\n\n<style lang=\"scss\">\n.auto-complete-color {\n  &__group-item {\n    @apply flex items-center flex-wrap p-4 w-full text-black;\n    &:hover {\n      @apply text-black bg-grey-lighten;\n    }\n  }\n}\n</style>","<script>\nimport { computed, defineComponent, watch } from 'vue'\nimport { useGolfSpec } from 'composable/device'\n\nimport BSelect from '@/components/BSelect/BSelect.vue'\nimport Input from 'bbUi/components/input/input.vue'\n\nexport default defineComponent({\n  name: 'DeviceGolfSpec',\n  components: {\n    BSelect,\n    Input\n  },\n  props: {\n    item: {\n      type: Object,\n      default: () => ({\n        product_id: undefined\n      })\n    },\n    steps: {\n      type: Array,\n      default: () => []\n    },\n    specs: {\n      type: Object\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['updateSpecs'],\n  setup(props, { emit }) {\n    const {\n      step,\n      steps,\n      specsOptions,\n      specs,\n      loading: loadingSpec,\n      getSpecOptions,\n      setItem,\n      setSteps,\n      setSpec,\n      unsetSpecs,\n      createSelectedSpecOption,\n      setCustomSpec\n    } = useGolfSpec()\n\n    const specsWithCustom = computed(() => {\n      return Object.fromEntries(\n        Object.entries(specs)\n          .map(([key, spec]) => [\n            key,\n            {\n              selected: spec.selected.value,\n              is_custom: spec.is_custom\n            }\n          ])\n          .filter(([_, spec]) => spec.selected !== null)\n      )\n    })\n\n    const handleUpdateSpec = async (key, value) => {\n      if (!key) return\n      setSpec(key, value)\n      emit('updateSpecs', specsWithCustom.value)\n      // await getSpecOptions()\n    }\n    const handleSetCustomSpec = async (key) => {\n      if (!key) return\n      setCustomSpec(key, true)\n    }\n    const handleSetSpecCustomValue = async (key, name, value) => {\n      if (!key || !name) return\n      setSpec(key, {\n        name,\n        value\n      })\n      emit('updateSpecs', specsWithCustom.value)\n    }\n    const handleUnsetCustomSpec = (key) => {\n      if (!key) return\n      setCustomSpec(key, false)\n    }\n\n    watch(\n      () => props.item,\n      async (currentItem, previousItem) => {\n        const isSameProductId =\n          currentItem?.product_id === previousItem?.product_id\n        if (isSameProductId) return\n        const isEmptyProductId = !currentItem?.product_id\n        if (isEmptyProductId) return\n        unsetSpecs()\n        setItem({\n          productId: currentItem.product_id\n        })\n        await getSpecOptions()\n      },\n      {\n        immediate: true\n      }\n    )\n    watch(\n      () => props.steps,\n      (steps) => {\n        setSteps(steps || [])\n      },\n      {\n        immediate: true\n      }\n    )\n    watch(\n      () => props.specs,\n      async () => {\n        for (const [key, spec] of Object.entries(props.specs)) {\n          if (!spec.selected) continue\n          setSpec(key, createSelectedSpecOption(spec.selected), {\n            is_custom: spec.is_custom\n          })\n        }\n      },\n      { deep: true, immediate: true }\n    )\n\n    return {\n      loadingSpec,\n      step,\n      steps,\n      specsOptions,\n      specs,\n      handleUpdateSpec,\n      handleSetCustomSpec,\n      handleSetSpecCustomValue,\n      handleUnsetCustomSpec\n    }\n  }\n})\n</script>\n\n<template>\n  <div class=\"grid grid-cols-1 gap-4\">\n    <div v-for=\"(spec, specIndex) of specsOptions\" :key=\"spec.key\">\n      <label>{{ spec.name }}</label>\n      <template v-if=\"spec.is_custom\">\n        <Input\n          @update:model-value=\"\n            ($ev) => handleSetSpecCustomValue(spec.key, spec.name, $ev)\n          \"\n          :model-value=\"spec.selected.value\"\n          :placeholder=\"`Input your custom ${spec.name}`\"\n          :clearable=\"true\"\n          :clearable-fixed=\"true\"\n          :disabled=\"loadingSpec || loading\"\n          @clear=\"handleUnsetCustomSpec(spec.key)\"\n          block\n        />\n      </template>\n      <template v-else>\n        <BSelect\n          @update:model-value=\"($ev) => handleUpdateSpec(spec.key, $ev)\"\n          :model-value=\"spec.selected\"\n          :items=\"spec.options\"\n          item-key=\"value\"\n          item-name=\"name\"\n          :loading=\"loadingSpec || loading\"\n          :placeholder=\"`Select ${spec.name}`\"\n          block\n        >\n          <template #prepend>\n            <label class=\"p-4\"> Select {{ spec.name }} </label>\n          </template>\n          <template #append>\n            <div>\n              <label class=\"px-5 pt-4 pb-2\">Alternative Options</label>\n              <button\n                v-if=\"!spec.is_custom\"\n                @click=\"handleSetCustomSpec(spec.key)\"\n                class=\"flex items-center gap-2 pt-2 pb-4 px-4 hover:bg-grey-lighten w-full\"\n              >\n                <i class=\"material-icons\">add</i> Add Custom {{ spec.name }}\n              </button>\n            </div>\n          </template>\n        </BSelect>\n      </template>\n    </div>\n  </div>\n</template>\n\n<style scoped lang=\"scss\"></style>\n"],"names":["_sfc_main","defineComponent","name","components","Input","BDropdown","props","modelValue","type","String","default","loading","Boolean","items","Array","error","label","placeholder","productId","Number","isCustomItem","disabled","emits","[object Object]","emit","elSearchInput","ref","isCollapse","searchQuery","isSearching","watch","value","closeDropdown","handleSearch","handleSelectItem","item","handleCustomColor","handleFocusIn","_hoisted_2","class","_hoisted_3","_hoisted_5","key","_openBlock","_createElementBlock","_createVNode","_component_BDropdown","prevent-toggle","_withCtx","_component_Input","model-value","_ctx","onUpdate:modelValue","onFocusIn","view","block","icon","_cache","collapse","tabindex","_createElementVNode","_hoisted_1","_Fragment","_toDisplayString","length","_hoisted_4","_renderList","id","_hoisted_6","_a","_hoisted_7","_hoisted_8","BSelect","Object","product_id","steps","specs","step","specsOptions","loadingSpec","getSpecOptions","setItem","setSteps","setSpec","unsetSpecs","createSelectedSpecOption","setCustomSpec","useGolfSpec","specsWithCustom","computed","fromEntries","entries","map","spec","selected","is_custom","filter","_","async","currentItem","previousItem","immediate","steps2","deep","handleUpdateSpec","handleSetCustomSpec","handleSetSpecCustomValue","handleUnsetCustomSpec","specIndex","clearable","clearable-fixed","onClear","$event","$ev","options","item-key","item-name","prepend","onClick"],"mappings":"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"}