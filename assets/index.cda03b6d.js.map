{"version":3,"file":"index.cda03b6d.js","sources":["../../src/views/integration/Breadcrumb.vue","../../src/views/integration/index.vue","../../src/views/integration/index.js"],"sourcesContent":["<template>\n  <div class=\"flex xl:flex-row flex-col justify-between mb-8 items-center\">\n    <div class=\"lg:flex lg:divide-x lg:divide-grey-01 xl:mb-0 mb-4\">\n      <div class=\"flex lg:pr-4 lg:mb-0 mb-4\">\n        <h5>Add-ons</h5>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { defineComponent } from 'vue'\nimport Button from 'bbUi/components/button/button.vue'\n\nexport default defineComponent({\n  components: {\n    Button\n  },\n  setup() {\n    return {\n\n    }\n  }\n})\n</script>","<template>\n  <div class=\"relative\">\n    <div class=\"p-6\">\n      <h1 class=\"font-bold text-3xl mb-8\">Add-ons</h1>\n      <div class=\"px-6 shadow rounded-lg bg-white mb-8\">\n        <input\n          type=\"text\"\n          v-model=\"search\"\n          class=\"py-5 w-full text-lg\"\n          placeholder=\"Search menu...\"\n          autocomplete=\"none\"\n        />\n      </div>\n      <div class=\"grid xl:grid-cols-4 lg:grid-cols-2 grid-cols-1 gap-4\">\n        <div\n          v-for=\"(integration, integrationIndex) of filteredIntegrations\"\n          :key=\"integrationIndex\"\n          class=\"h-full\"\n        >\n          <Card class=\"h-full\">\n            <div class=\"flex flex-col justify-between h-full py-4\">\n              <div\n                class=\"cursor-pointer\"\n                @click=\"\n                  integration.is_enable == 1 &&\n                    router.push({\n                      name: integration?.route?.componentRouteName || '',\n                      query: { id: integration.id }\n                    })\n                \"\n              >\n                <div class=\"flex items-center flex-wrap justify-between\">\n                  <img\n                    class=\"rounded-md add-on-img\"\n                    :src=\"integration.image\"\n                    :alt=\"`${integration.name} logo`\"\n                  />\n                  <div v-if=\"integration?.pro_badge\" class=\"block py-1 px-4 bg-green-04 text-white rounded-full\">\n                    <p>Pro</p>\n                  </div>\n                </div>\n                <p\n                  v-html=\"integration.desc\"\n                  whitelabel=\"text-replace\"\n                  data-label=\"domain custom alert\"\n                  class=\"text-sm text-grey-04 my-6\"\n                ></p>\n              </div>\n              <div\n                v-if=\"integration.name == 'SellCell'\"\n                class=\"flex justify-between items-center\"\n              >\n                <template v-if=\"integration.name == 'SellCell'\">\n                  <div>\n                    <!-- <Button view=\"smooth\" color=\"blue\" @click=\"showIntercom\" dense>\n                  <span v-if=\"integration.is_enable == 1\">Deactive Add-On</span>\n                  <span v-else>Request Add-On</span>\n                </Button> -->\n                    <Button\n                      class=\"ml-2\"\n                      color=\"teal\"\n                      :to=\"{\n                        name: integration?.route?.componentRouteName || '',\n                        query: { id: integration.id }\n                      }\"\n                      link\n                      dense\n                      >Settings</Button\n                    >\n                  </div>\n                  <Badge\n                    v-if=\"integration.is_enable == 1\"\n                    class=\"whitespace-nowrap\"\n                    color=\"green\"\n                  >\n                    Active</Badge\n                  >\n                </template>\n              </div>\n              <div\n                v-else-if=\"integration.name == 'PublicApi'\"\n                class=\"flex justify-between items-center\"\n              >\n                <div>\n                  <Button\n                    color=\"teal\"\n                    :to=\"{\n                      name: integration?.route?.componentRouteName || '',\n                      query: { id: integration.id }\n                    }\"\n                    link\n                    dense\n                    >API Credentials</Button\n                  >\n                </div>\n                <Button\n                  class=\"whitespace-nowrap\"\n                  color=\"teal\"\n                  @click=\"showPublicApiDocs()\"\n                  dense\n                >\n                  Link to API Docs</Button\n                >\n              </div>\n              <div\n                v-else-if=\"integration.name == 'DataFeed'\"\n                class=\"flex justify-between items-center\"\n              >\n                <template v-if=\"currentPackageId >= 4 || hasForceDatafeed\">\n                  <div>\n                    <Button\n                      color=\"teal\"\n                      :to=\"{\n                        name: integration?.route?.componentRouteName || '',\n                        query: { id: integration.id }\n                      }\"\n                      link\n                      dense\n                      >{{ integration.route.name === 'DataFeed' ? 'Settings' : 'Preview CSV' }}</Button\n                    >\n                  </div>\n                </template>\n                <template v-else>\n                  <Popover width=\"400\" trigger=\"hover\">\n                    <div\n                      class=\"w-full h-full flex justify-center items-center py-2 px-4\"\n                    >\n                      <div\n                        v-loading=\"isLoadingOpenBilling\"\n                        v-if=\"!!integration.package_id?.min\"\n                      >\n                        <span class=\"whitespace-pre-line\"\n                          >Available on\n                          <a href=\"#!\" @click.prevent=\"handleOpenBilling\"\n                            >Enterprise Plan</a\n                          >\n                        </span>\n                      </div>\n                    </div>\n                    <template #reference>\n                      <Button color=\"grey\" :loading=\"isLoadingOpenBilling\" dense\n                        >Preview CSV</Button\n                      >\n                    </template>\n                  </Popover>\n                </template>\n              </div>\n              <div v-else class=\"flex justify-between items-center\">\n                <div>\n                  <Button\n                    v-if=\"\n                      (currentPackageId >= integration.package_id?.min ||\n                        integration.package_id?.equals?.includes(\n                          currentPackageId\n                        )) &&\n                      integration.is_enable\n                    \"\n                    color=\"teal\"\n                    @click=\"handleOpenSettings(integration)\"\n                    dense\n                    >Settings</Button\n                  >\n                </div>\n                <div>\n                  <template\n                    v-if=\"\n                      currentPackageId >= integration.package_id?.min ||\n                      integration.package_id?.equals?.includes(currentPackageId)\n                    \"\n                  >\n                    <template v-if=\"integration?.disabled?.state?.value\">\n                      <Tooltip effect=\"dark\" placement=\"top\">\n                        <template #content>\n                          <div class=\"w-60 flex justify-center items-center\">\n                            <span class=\"whitespace-pre-line\">{{\n                              integration.disabled.state?.message ||\n                              'This action disabled'\n                            }}</span>\n                          </div>\n                        </template>\n                        <template\n                          v-if=\"\n                            integration.name === 'RepairDesk' ||\n                            integration.name === 'WholeCell.io'\n                          \"\n                          #default\n                        >\n                          <Checkbox\n                            v-model=\"integration.is_enable\"\n                            type=\"toggle\"\n                            disabled\n                          />\n                        </template>\n                        <template v-else #default>\n                          <Checkbox type=\"toggle\" disabled />\n                        </template>\n                      </Tooltip>\n                      <!-- <Popover width=\"400\" trigger=\"hover\">\n                    <div class=\"w-full h-full flex justify-center items-center\">\n                      <span class=\"whitespace-pre-line\">{{\n                        integration.disabled.state?.message ||\n                        'This action disabled'\n                      }}</span>\n                    </div>\n                    <template v-if=\"integration.name === 'RepairDesk' || integration.name === 'WholeCell.io'\" #reference>\n                      <Checkbox v-model=\"integration.is_enable\" type=\"toggle\" disabled />\n                    </template>\n                    <template v-else #reference>\n                      <Checkbox type=\"toggle\" disabled />\n                    </template>\n                  </Popover> -->\n                    </template>\n                    <template v-else>\n\t\t\t\t\t\t\t\t\t\t\t<Tooltip v-if=\"integration.is_comming_soon\" effect=\"dark\" placement=\"top\">\n\t\t\t\t\t\t\t\t\t\t\t\t<template #content>\n\t\t\t\t\t\t\t\t\t\t\t\t\tComming Soon\n\t\t\t\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\t\t\t:modelValue=\"integration.is_enable\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t:value=\"1\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t:value-off=\"0\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"toggle\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\t\tv-else\n\t\t\t\t\t\t\t\t\t\t\t\t:modelValue=\"integration.is_enable\"\n\t\t\t\t\t\t\t\t\t\t\t\t:value=\"1\"\n\t\t\t\t\t\t\t\t\t\t\t\t:value-off=\"0\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"toggle\"\n\t\t\t\t\t\t\t\t\t\t\t\t@click.prevent=\"switchStatus(integration)\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n                    </template>\n                  </template>\n                  <template v-else>\n                    <Popover width=\"400\" trigger=\"hover\">\n                      <div\n                        class=\"w-full h-full flex justify-center items-center\"\n                      >\n                        <template v-if=\"!!integration.package_id?.min\">\n                          <span class=\"whitespace-pre-line\"\n                            >Available on\n                            <router-link :to=\"{ name: 'settingPlan' }\">{{\n                              getPackageName(\n                                integration.package_id.min,\n                                integration.name\n                              )\n                            }}</router-link></span\n                          >\n                        </template>\n                      </div>\n                      <template #reference>\n                        <Checkbox type=\"toggle\" disabled />\n                      </template>\n                    </Popover>\n                  </template>\n                </div>\n              </div>\n            </div>\n          </Card>\n        </div>\n      </div>\n    </div>\n    <div>\n      <RouterView v-slot=\"{ Component, route }\">\n        <template v-if=\"Component\">\n          <transition name=\"fade\">\n            <keep-alive>\n              <suspense>\n                <component\n                  :is=\"Component\"\n                  :key=\"route.matched[2].name\"\n                  :integrations=\"filteredIntegrations\"\n                ></component>\n                <template #fallback>\n                  <div\n                    class=\"h-full w-full absolute top-0 flex items-center justify-center\"\n                    style=\"background-color: rgba(0, 0, 0, 0.2)\"\n                  >\n                    <BaseLoading />\n                  </div>\n                </template>\n              </suspense>\n            </keep-alive>\n          </transition>\n        </template>\n      </RouterView>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { defineComponent, ref, watch, computed } from 'vue'\nimport { useAll } from 'composable/integration'\nimport useGHL from 'composable/integration/ghl'\nimport Card from 'bbUi/components/card/card.vue'\nimport Alert from 'bbUi/components/alert/alert.vue'\nimport Checkbox from 'bbUi/components/checkbox/checkbox.vue'\nimport Badge from 'bbUi/components/badge/badge.vue'\nimport Modal from 'bbUi/components/modal/modal.vue'\nimport Input from 'bbUi/components/input/input.vue'\nimport Button from 'bbUi/components/button/button.vue'\n\nimport BaseLoading from 'components/BaseLoading.vue'\n\nimport { ElMessage } from 'element-plus'\nimport { useRouter } from 'vue-router'\nimport { useUser } from 'composable/user'\nimport currentPackages from 'constants/packages'\nimport { deepClone } from 'utils/deep-clone'\nimport { useStore } from 'vuex'\n\nexport default defineComponent({\n  components: {\n    Card,\n    Alert,\n    Checkbox,\n    Badge,\n    Modal,\n    Input,\n    Button,\n    BaseLoading\n  },\n  props: {\n    route: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  async setup(props) {\n    const { state: stateAll, actionAll, actionUpdate } = useAll()\n    const { isUninstalled: _isUninstalledGHL, setUninstall: _setUninstallGHL } = useGHL()\n    const { me, action: actionMe, isProPlan } = useUser()\n    const router = useRouter()\n    const integrations = ref([])\n    const search = ref(null)\n    const currentPackageId = computed(() => me.value.package_id)\n    const registeredRoutes = router.getRoutes().map((route) => route.name)\n    const hasUsingUSPS = me.value.has_using_usps\n    const hasForceDatafeed = me.value?.force_datafeed == 1\n    const isLoadingOpenBilling = ref(false)\n    const store = useStore()\n\n    const componentRoutes = [\n\t\t\t{\n\t\t\t\tname: 'Tremendous',\n\t\t\t\tcomponentRouteName: 'integrationTremendous'\n\t\t\t},\n\t\t\t{\n        name: 'FedEx',\n        componentRouteName: 'integrationFedex'\n      },\n      {\n        name: 'UPS',\n        componentRouteName: 'integrationUps'\n      },\n      {\n        name: 'USPS',\n        componentRouteName: 'integrationUspsTab'\n      },\n      {\n        name: 'RepairDesk',\n        componentRouteName: 'integrationRepairDesk'\n      },\n      {\n        name: 'ShareASale',\n        componentRouteName: 'integrationShareASale'\n      },\n      {\n        name: 'BackMarket',\n        componentRouteName: 'integrationBackMarket'\n      },\n      {\n        name: 'Shopify',\n        componentRouteName: 'integrationShopify'\n      },\n      {\n        name: 'GoogleTagManager',\n        componentRouteName: 'integrationGoogleTagManager'\n      },\n      {\n        name: 'FacebookPixel',\n        componentRouteName: 'integrationFacebookPixel'\n      },\n      {\n        name: 'GoogleAnalytic',\n        componentRouteName: 'integrationGoogleAnalytic'\n      },\n      {\n        name: 'SellCell',\n        componentRouteName: 'integrationSellCell'\n      },\n      {\n        name: 'PhoneCheck',\n        componentRouteName: 'integrationPhoneCheck'\n      },\n      {\n        name: 'PublicApi',\n        componentRouteName: 'integrationPublicAPI'\n      },\n      {\n        name: 'Odoo',\n        componentRouteName: 'integrationOdoo'\n      },\n      {\n        name: 'DataFeed',\n        componentRouteName: 'integrationDataFeed'\n      },\n      {\n        name: 'WholeCell',\n        componentRouteName: 'integrationWholeCell'\n      },\n      {\n        name: 'Shipmondo',\n        componentRouteName: 'integrationShipmondo'\n      },\n      {\n        name: 'Shipengine',\n        componentRouteName: 'integrationShipengine'\n      },\n      {\n        name: 'Easypost',\n        componentRouteName: 'integrationEasypost'\n      },\n      {\n        name: 'Klaviyo',\n        componentRouteName: 'integrationKlaviyo'\n      },\n      {\n        name: 'UPS Direct to Mobile',\n        componentRouteName: 'integrationUpsDirectToMobile'\n      },\n      {\n        name: 'GHL',\n        componentRouteName: 'integrationGHLConfig'\n      }\n    ]\n\n    // Mutate local integration state\n    const mutateIntegrationState = (id, newValue) => {\n      const integrationIndex = integrations.value.findIndex(\n        (integration) => integration.id == id\n      )\n      if (integrationIndex > -1)\n        Object.assign(integrations.value[integrationIndex], newValue)\n      return integrations.value[integrationIndex]\n    }\n\n    const updateStatus = async (selectedIntegration) => {\n      let integration = { ...selectedIntegration }\n      delete integration.package_id\n      delete integration.route\n      await actionUpdate(\n        integration.id,\n        integration,\n        async () => {\n          if (integration.id === 4) await actionMe() // if integration is repairdesk\n          ElMessage({\n            type: 'success',\n            message: 'Integration status updated!'\n          })\n        },\n        () =>\n          mutateIntegrationState(integration.id, {\n            is_enable: 0\n          })\n      )\n    }\n\n    const switchStatus = async (integration) => {\n      if (integration.is_enable == 0 && integration.is_ready == 0) {\n        // When turning on BackMarket, if user current package id not equal to 7, just trigger intercom\n        if (integration.id == 6 && currentPackageId.value !== 7) {\n          setTimeout(\n            () =>\n              mutateIntegrationState(6, {\n                is_enable: 0\n              }),\n            400\n          )\n\n          if (!isShopifyOn.value) {\n            return ElMessage({\n              type: 'error',\n              message: 'Shopify must be enabled to activate BackMarket'\n            })\n          }\n\n          window.CustomerSupport.use('show')\n          return\n        }\n\n        if (integration.id == 14) {\n          integration.is_enable = integration.is_enable == 1 ? 0 : 1\n          await updateStatus(integration)\n          return\n        }\n\n        router.push({\n          name: integration?.route?.componentRouteName || '',\n          query: {\n            id: integration.id\n          }\n        })\n        if (integration.id == 3) {\n          integration.is_enable = integration.is_enable == 1 ? 0 : 1\n          await updateStatus(integration)\n        }\n        return\n      }\n\n      if (integration.is_enable == 0 && integration.is_ready == 1) {\n        // UPS Direct to Mobile\n        if (\n          integration.name.replace(/ /g, '').toLowerCase() ===\n          'upsdirecttomobile'\n        ) {\n          router.push({\n            name: integration?.route?.componentRouteName || '',\n            query: {\n              id: integration.id\n            }\n          })\n          return\n        }\n      }\n\n      integration.is_enable = integration.is_enable == 1 ? 0 : 1\n      await updateStatus(integration)\n      await actionAll()\n\n      // if Shopify is turned off, make sure BackMarket is turned off as well\n      // if (integration.id == 7 && integration.is_enable == 0)\n      //   mutateIntegrationState(6, {\n      //     is_enable: 0\n      //   })\n    }\n\n    const showIntercom = () => {\n      window.CustomerSupport.use('show')\n    }\n\n    const getPackageName = (packageId, integrationName) => {\n      if (\n        [\n          'SellCell',\n          'FacebookPixel',\n          'GoogleTagManager',\n          'GoogleAnalytic',\n          'Odoo',\n          'USPS',\n          'DataFeed'\n        ].includes(integrationName)\n      )\n        return 'Enterprise Plan'\n\n      const selectedPackage =\n        currentPackages.find((eachPackage) => eachPackage.id === packageId) ||\n        null\n      return `${selectedPackage.name} Package` || ''\n    }\n\n    const filteredIntegrations = computed(() => {\n      const result = search.value\n        ? integrations.value.filter(\n            (integration) =>\n              integration.name\n                .toLowerCase()\n                .indexOf(search.value.toLowerCase()) > -1\n          )\n        : integrations.value\n\n      return result\n    })\n\n    const isShopifyOn = computed(\n      () =>\n        integrations.value.find((integration) => integration.id == 7)\n          ?.is_enable == 1 || false\n    )\n    // const multiLabelShippingIntegrationEnabled = computed(() => {\n    //   const multiLabelShippingIntegrationName = [\n    //     'shipmondo',\n    //     'shipengine',\n    //     'easypost'\n    //   ]\n    //   const shippingIntegrationEnabled = integrations.value.filter(\n    //     (integration) =>\n    //       multiLabelShippingIntegrationName.includes(\n    //         integration.name.toLowerCase()\n    //       ) && integration.is_enable == 1\n    //   )\n    //   const hasMultiLabelShippingIntegrationEnabled =\n    //     shippingIntegrationEnabled.length > 0\n    //   if (hasMultiLabelShippingIntegrationEnabled)\n    //     return shippingIntegrationEnabled[0]\n    //   return null\n    // })\n    // const hasMultiLabelShippingIntegrationEnabled = computed(\n    //   () => multiLabelShippingIntegrationEnabled.value !== null\n    // )\n    // const multiLabelShippingIntegrationEnabledName = computed(() =>\n    //   multiLabelShippingIntegrationEnabled.value\n    //     ? multiLabelShippingIntegrationEnabled.value.name\n    //     : ''\n    // )\n    const isDisabledUpsDirectToMobile = computed(() => {\n      const upsDirectToMobileIntegration = integrations.value.find(\n        (integration) =>\n          integration.name.replace(/ /g, '').toLowerCase() ===\n          'upsdirecttomobile'\n      )\n      if (!upsDirectToMobileIntegration) return true\n      return upsDirectToMobileIntegration.is_ready === 0\n    })\n\n    const integrationRules = ref([\n\t\t\t{\n\t\t\t\tname: 'Tremendous',\n\t\t\t},\n      {\n        name: 'RepairDesk', // integration id\n        package_id: {\n          // package id validation\n          min: 1\n        },\n        disabled: {\n          state: computed(() => {\n            const enabledWholeCell =\n              integrations.value.find(\n                (integration) => integration.name === 'WholeCell'\n              )?.is_enable == 1\n            if (enabledWholeCell) {\n              return {\n                value: true,\n                message:\n                  'You can only have one inventory add-on enabled. Please disable the Wholecell.io add-on before enabling RepairDesk.'\n              }\n            }\n            return {\n              value: false,\n              message: ''\n            }\n          })\n        }\n      },\n      {\n        name: 'Shipengine',\n        // disabled: {\n        //   state: computed(() => {\n        //     return {\n        //       value:\n        //         hasMultiLabelShippingIntegrationEnabled.value &&\n        //         multiLabelShippingIntegrationEnabledName.value.toLowerCase() !==\n        //           'shipengine',\n        //       message: `You may only have one multi-label shipping addon enabled at a time. Please disable ${\n        //         multiLabelShippingIntegrationEnabled.value\n        //           ? multiLabelShippingIntegrationEnabled.value.name\n        //           : ''\n        //       } before proceeding.`\n        //     }\n        //   })\n        // }\n      },\n      {\n        name: 'Shipmondo',\n        // disabled: {\n        //   state: computed(() => {\n        //     return {\n        //       value:\n        //         hasMultiLabelShippingIntegrationEnabled.value &&\n        //         multiLabelShippingIntegrationEnabledName.value.toLowerCase() !==\n        //           'shipmondo',\n        //       message: `You may only have one multi-label shipping addon enabled at a time. Please disable ${\n        //         multiLabelShippingIntegrationEnabled.value\n        //           ? multiLabelShippingIntegrationEnabled.value.name\n        //           : ''\n        //       } before proceeding.`\n        //     }\n        //   })\n        // }\n      },\n      {\n        name: 'Easypost',\n        // disabled: {\n        //   state: computed(() => {\n        //     return {\n        //       value:\n        //         hasMultiLabelShippingIntegrationEnabled.value &&\n        //         multiLabelShippingIntegrationEnabledName.value.toLowerCase() !==\n        //           'easypost',\n        //       message: `You may only have one multi-label shipping addon enabled at a time. Please disable ${\n        //         multiLabelShippingIntegrationEnabled.value\n        //           ? multiLabelShippingIntegrationEnabled.value.name\n        //           : ''\n        //       } before proceeding.`\n        //     }\n        //   })\n        // }\n      },\n      {\n        name: 'USPS',\n        package_id: {\n          min: hasUsingUSPS ? 1 : 4\n        }\n      },\n      {\n        name: 'ShareASale',\n        package_id: {\n          min: 4\n        }\n      },\n      {\n        name: 'BackMarket',\n        package_id: {\n          min: 1\n        },\n        // disabled must contain \"state\" key that return at least an object with \"value\" key\n        disabled: {\n          state: computed(() => {\n            const isShopifyDisabled =\n              integrations.value.find(\n                (integration) => integration.name === 'Shopify'\n              )?.is_enable === 0\n            if (isShopifyDisabled) {\n              return {\n                value: true,\n                message: 'Requires Shopify Add-On'\n              }\n            }\n            return {\n              value: false,\n              message: ''\n            }\n          })\n        }\n      },\n      {\n        name: 'Shopify',\n        package_id: {\n          min: 1\n        }\n      },\n      {\n        name: 'GoogleTagManager',\n        package_id: {\n          min: 4\n        }\n      },\n      {\n        name: 'FacebookPixel',\n        package_id: {\n          min: 4\n        }\n      },\n      {\n        name: 'GoogleAnalytic',\n        package_id: {\n          min: 4\n        }\n      },\n      {\n        name: 'DataFeed',\n        package_id: {\n          min: 4\n        },\n        pro_badge: !isProPlan.value\n      },\n      {\n        name: 'PublicApi',\n        pro_badge: !isProPlan.value\n      },\n      {\n        name: 'PhoneCheck',\n        package_id: {\n          min: 4\n        }\n      },\n      {\n        name: 'WholeCell',\n        package_id: {\n          min: 1\n        },\n        disabled: {\n          state: computed(() => {\n            const enableRepaidesk =\n              integrations.value.find(\n                (integration) => integration.name === 'RepairDesk'\n              ).is_enable === 1\n            if (enableRepaidesk) {\n              return {\n                value: true,\n                message:\n                  'You can only have one inventory add-on enabled. Please disable the RepairDesk add-on before enabling WholeCell.io'\n              }\n            }\n            return {\n              value: false,\n              message: ''\n            }\n          })\n        }\n      },\n      {\n        name: 'UPS Direct to Mobile',\n        disabled: {\n          state: computed(() => {\n            return {\n              value: isDisabledUpsDirectToMobile.value,\n              message:\n                'Please ensure that at least one UPS shipping carrier is active'\n            }\n          })\n        }\n      },\n      {\n        name: 'GHL',\n        // disabled: {}\n      }\n    ])\n\n    const showPublicApiDocs = () => {\n      return window.open(\n        'https://public.reusely.com',\n        '_blank',\n        'noreferrer noopener'\n      )\n    }\n\n    const handleOpenBilling = async () => {\n      if (isLoadingOpenBilling.value) return\n      isLoadingOpenBilling.value = true\n      router.push({\n        name: 'settingBilling'\n      })\n      // const response = await store.dispatch('billing/stripePortal')\n      // if (response?.url) location.href = response.url\n      // isLoadingOpenBilling.value = false\n    }\n    const handleOpenSettings = (integration) => {\n      let routeName = ''\n      routeName = integration.route.componentRouteName\n      // switch (integration.id) {\n      //   case 17:\n      //     routeName = 'integrationShipmondoConfig'\n      //     break\n      //   case 18:\n      //     routeName = 'integrationShipengineConfig'\n      //     break\n      //   case 19:\n      //     routeName = 'integrationEasypostConfig'\n      //     break\n      //   case 23:\n      //     routeName = 'integrationTremendousConfig'\n      //     break\n      //   default:\n      //     routeName = integration?.route?.componentRouteName\n      // }\n      if (!routeName) return\n      router.push({\n        name: routeName,\n        query: { id: integration.id }\n      })\n    }\n\n    watch(\n      () => props.route,\n      async (route) => {\n        // enable integration switch\n        if (route.query.enable) {\n          const integrationId = route.query.enable\n          const selectedIntegration = mutateIntegrationState(integrationId, {\n            is_enable: 1\n          })\n          await updateStatus(selectedIntegration)\n          router.push({\n            name: 'integration',\n            query: {}\n          })\n        }\n        // reset integration switch\n        if (route.query.reload) {\n          await actionAll()\n          router.push({\n            name: 'integration',\n            query: {}\n          })\n        }\n      },\n      {\n        deep: true\n      }\n    )\n\n    watch(\n      () => stateAll.value,\n      () => {\n        integrations.value = deepClone(stateAll.value)\n        integrations.value = integrations.value.map((integration) => {\n          const rules = integrationRules.value.find(\n            (rule) => rule.name === integration.name || null\n          )\n          const appliedRules = {\n            package_id: {\n              min: 3,\n              equals: []\n            }\n          }\n\n          if (!!rules) {\n            Object.assign(appliedRules, {\n              ...appliedRules,\n              ...rules\n            })\n          }\n\n          const route = componentRoutes.find(\n            (route) =>\n              route.name === integration.name &&\n              !!registeredRoutes.includes(route.componentRouteName)\n          )\n\n          return {\n            ...integration,\n            ...appliedRules,\n            route: route || null\n          }\n        })\n      },\n      {\n        deep: true,\n        immediate: true\n      }\n    )\n\n    watch(() => _isUninstalledGHL.value, async (value) => {\n      if (!!value) await actionAll()\n    }, {\n      immediate: true,\n      deep: true\n    })\n\n    await actionAll()\n\n    return {\n      stateAll,\n      filteredIntegrations,\n      search,\n      currentPackageId,\n      switchStatus,\n      showIntercom,\n      getPackageName,\n      router,\n      showPublicApiDocs,\n      hasForceDatafeed,\n      isLoadingOpenBilling,\n      handleOpenBilling,\n      handleOpenSettings\n    }\n  }\n})\n</script>\n<style lang=\"scss\" scoped>\n.loading-logo {\n  animation: rotate 0.8s infinite linear;\n}\n@keyframes rotate {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(-360deg);\n  }\n}\n</style>\n","import { defineComponent, h, reactive } from 'vue'\nimport { useSuspense } from 'composable/components'\nimport Breadcrumb from './Breadcrumb.vue'\nimport Index from './index.vue'\nimport { onBeforeRouteUpdate } from 'vue-router'\n\nexport default defineComponent({\n  setup() {\n    const { genSuspense } = useSuspense()\n    const routeUpdate = reactive({})\n    onBeforeRouteUpdate((route) => {\n      Object.assign(routeUpdate, route)\n    })\n    return () => [\n      // h(Breadcrumb),\n      h('div', {}, [\n        genSuspense(h(Index, {\n          route: routeUpdate\n        }))\n      ])\n    ]\n  }\n})"],"names":["defineComponent","components","Button","setup","_sfc_main","Card","Alert","Checkbox","Badge","Modal","Input","BaseLoading","props","route","type","Object","default","[object Object]","state","stateAll","actionAll","actionUpdate","useAll","isUninstalled","_isUninstalledGHL","setUninstall","_setUninstallGHL","useGHL","me","action","actionMe","isProPlan","useUser","router","useRouter","integrations","ref","search","currentPackageId","computed","value","package_id","registeredRoutes","getRoutes","map","name","hasUsingUSPS","has_using_usps","hasForceDatafeed","_a","force_datafeed","isLoadingOpenBilling","useStore","componentRoutes","componentRouteName","mutateIntegrationState","id","newValue","integrationIndex","findIndex","integration","assign","updateStatus","async","selectedIntegration","__spreadValues","_u","message","is_enable","filteredIntegrations","filter","toLowerCase","indexOf","isShopifyOn","_a2","find","isDisabledUpsDirectToMobile","upsDirectToMobileIntegration","replace","is_ready","integrationRules","min","disabled","pro_badge","watch","query","enable","integrationId","push","reload","deep","deepClone","rules","rule","appliedRules","equals","route2","includes","immediate","switchStatus","setTimeout","window","CustomerSupport","use","ElMessage","_b","showIntercom","getPackageName","packageId","integrationName","currentPackages","eachPackage","showPublicApiDocs","open","handleOpenBilling","handleOpenSettings","routeName","_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_6","key","_hoisted_14","_hoisted_16","_hoisted_19","_hoisted_20","_hoisted_23","_openBlock","_createElementBlock","_createElementVNode","_cache","_withDirectives","onUpdate:modelValue","$event","_ctx","placeholder","_Fragment","_renderList","_withCtx","_hoisted_5","onClick","_hoisted_7","src","image","_hoisted_8","_hoisted_9","innerHTML","desc","whitelabel","data-label","_hoisted_11","_createVNode","_component_Button","color","to","link","_hoisted_12","_hoisted_13","_c","width","reference","loading","_hoisted_15","_hoisted_17","_createTextVNode","href","_withModifiers","args","_hoisted_18","_d","_g","_k","_j","effect","_createSlots","fn","_component_Checkbox","modelValue","is_comming_soon","content","value-off","_hoisted_21","_toDisplayString","Component","_createBlock","_KeepAlive","_Suspense","_resolveDynamicComponent","matched","index","genSuspense","useSuspense","routeUpdate","reactive","onBeforeRouteUpdate","h","Index"],"mappings":"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"}