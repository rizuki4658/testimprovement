var t=Object.defineProperty,e=Object.defineProperties,a=Object.getOwnPropertyDescriptors,n=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,i=(e,a,n)=>a in e?t(e,a,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[a]=n,l=(t,e)=>{for(var a in e||(e={}))o.call(e,a)&&i(t,a,e[a]);if(n)for(var a of n(e))s.call(e,a)&&i(t,a,e[a]);return t},c=(t,n)=>e(t,a(n));import{j as r,g as u}from"./vendor.9695fe57.js";import{z as p,s as m,x as d}from"./index.10c203ea.js";const y=r("user",{state:()=>({}),getters:{},actions:{async $loginToken(t){await p({url:"/v1/pos/login/token",method:"post",data:l({},"object"!=typeof t?{token:t}:{token:t.token,company_token:t.company})})}}}),g=r("multipleCompany",{state:()=>({company:{isLoading:!1,result:null,active:null,isGhost:null},companyDetail:{isLoading:!1,modal:!1,result:!1,token:null},unlink:{isLoading:!1,modal:!1}}),getters:{companies:t=>u((()=>{var e,a;return null!=(a=null==(e=null==t?void 0:t.company)?void 0:e.result)?a:[]})),activeCompany:t=>u((()=>{var e,a,n;return null!=(n=null==(a=null==(e=t.company)?void 0:e.active)?void 0:a.name)?n:"Default Company"})),isMultipleAccount:()=>u((()=>!window.location.origin.includes("usedproducts"))),isGhost:t=>u((()=>t.company.isGhost))},actions:{generateStatus(t){if(1==t.subscription_status&&t.trial_end){const e=new Date(Date.now()),a=new Date(t.trial_end),n=Math.abs(a-e),o=Math.ceil(n/864e5);return c(l({},t),{class_alert:"bg-orange-01",class_text:"text-orange-04",class_dot:"bg-orange-04",text:"Trial Ends in",days:o})}return 2==t.subscription_status?c(l({},t),{class_alert:"bg-red-01",class_text:"text-red-04",class_dot:"bg-red-04",text:"Unpaid Billing"}):3==t.subscription_status?c(l({},t),{class_alert:"bg-orange-01",class_text:"text-orange-04",class_dot:"bg-orange-04",text:"Subscribe Cancelled"}):c(l({},t),{class_alert:null,class_text:null,text:null})},generateList(t){return t.filter((t=>t.name&&t)).map((t=>l({},this.generateStatus(t))))},async $getCompanies(t=!1){var e,a,n,o,s,i,l,c,r,u;const p=null!=(s=null==(o=null==(n=null==(a=null==(e=m)?void 0:e.state)?void 0:a.user)?void 0:n.me)?void 0:o.companies)?s:[];p&&!t?this.company.result=this.generateList(p):(await m.dispatch("user/me"),this.company.result=this.generateList(null!=(u=null==(r=null==(c=null==(l=null==(i=m)?void 0:i.state)?void 0:l.user)?void 0:c.me)?void 0:r.companies)?u:[]))},async $getActiveCompany(){var t;const e=d(),a=null!=(t=e.company.form)?t:void 0;a?this.company.active=a:(await e.$getSettingCompanyProfile(),this.company.active=e.company.form)},async $getIsGhost(){var t,e,a,n,o;const s=null!=(o=null==(n=null==(a=null==(e=null==(t=m)?void 0:t.state)?void 0:e.user)?void 0:a.me)?void 0:n.is_ghost)?o:0;this.company.isGhost=!!s},async $getBulkMultipleCompany(){await this.$getCompanies(),await this.$getActiveCompany(),await this.$getIsGhost()},async $getCompany(t){const e=await p({url:"/v1/config/company/show",method:"get",params:c(l({},t),{company_code:this.companyDetail.token})});this.companyDetail.result=e},async $updateMultipleCompany(t){var e,a,n,o;this.company.isLoading=!0,this.company.active.name=t.name;const s=null!=(n=null==(a=null==(e=this.company)?void 0:e.result)?void 0:a.findIndex((t=>t.is_selected)))?n:-1;(null==(o=this.company)?void 0:o.result[s])&&(this.company.result[s].name=t.name),this.company.isLoading=!1},async $unlinkAccount(){this.companyDetail.token&&await p({url:"/v1/config/company/unlink",method:"post",data:{company_code:this.companyDetail.token}})},async $switchCompany(t){const e=y();await e.$loginToken(t)}}});export{g as u};
