{"version":3,"file":"payment.18192fe7.js","sources":["../../src/components/PaymentMethod/BankTransfer.vue","../../src/components/PaymentMethod/Default.vue","../../src/assets/payout-method-arrow.svg","../../src/components/PaymentMethod/Revolut.vue","../../src/constants/payment.js"],"sourcesContent":["<template>\n  <div class=\"mb-5\">\n    <div class=\"block\">\n      <label class=\"font-weight-bold\">Default Data</label>\n    </div>\n    <div class=\"block\">\n      <Select\n        by=\"id\"\n        class=\"w-full\"\n        :items=\"list\"\n        @input=\"setBank\"\n        :placeholder=\"isUseNewBankTransfer ? 'Add New Bank Transfer' : 'Choose Bank Transfer option'\"\n      >\n        <template v-slot:option=\"scope\">\n          <template v-if=\"!scope.item.bank_id && scope.item.is_new_bank\">\n            <option :value=\"scope.item\">Add New Bank Transfer</option>\n          </template>\n          <template v-else-if=\"Array.isArray(scope.item.bank_transfer)\">\n            <option :value=\"scope.item.bank_transfer\">\n              {{\n                scope.item.bank_transfer.map((attr) => attr.value).join(' - ')\n              }}\n            </option>\n          </template>\n        </template>\n      </Select>\n    </div>\n  </div>\n  <template v-if=\"isUseAvailableBankTransfer\">\n    <div\n      v-for=\"attribute in selectedAvailableBankTransfer.bank_transfer\"\n      :key=\"attribute.attribute_name\"\n      class=\"mb-5\"\n    >\n      <Input\n        class=\"w-full\"\n        :modelValue=\"attribute.value\"\n        type=\"text\"\n        :label=\"attribute.name\"\n        :disabled=\"disabled || isDisabled\"\n      />\n    </div>\n  </template>\n  <template v-else-if=\"isUseNewBankTransfer\">\n    <div v-for=\"attribute in defaultAttributes\" class=\"mb-5\">\n      <Input\n        v-model=\"data[attribute.attribute_name]\"\n        type=\"text\"\n        :label=\"attribute.name\"\n        :placeholder=\"attribute.name\"\n        class=\"w-full\"\n        disallow-copy\n        :disabled=\"disabled || isDisabled\"\n        :view=\"\n          (validation[attribute.attribute_name].$invalid && 'danger') ||\n          'default'\n        \"\n      />\n      <small\n        class=\"text-red-base block mt-2\"\n        v-for=\"(error, errorIndex) of validation[attribute.attribute_name]\n          .$errors\"\n        :key=\"errorIndex\"\n        >{{ error.$message }}.\n      </small>\n    </div>\n  </template>\n  <template v-else>\n    <div v-for=\"attribute in attributes\" class=\"mb-5\">\n      <Input\n        v-model=\"data[attribute.attribute_name]\"\n        type=\"text\"\n        :label=\"attribute.name\"\n        class=\"w-full\"\n        disallow-copy\n        :disabled=\"disabled || isDisabled\"\n        :view=\"\n          (validation[attribute.attribute_name].$invalid && 'danger') ||\n          'default'\n        \"\n      />\n      <small\n        class=\"text-red-base block mt-2\"\n        v-for=\"(error, errorIndex) of validation[attribute.attribute_name]\n          .$errors\"\n        :key=\"errorIndex\"\n        >{{ error.$message }}.\n      </small>\n    </div>\n  </template>\n</template>\n\n<script>\nimport { defineComponent, reactive, ref, watch, computed, onMounted } from 'vue'\nimport { useUser } from 'composable/user'\nimport Input from 'bbUi/components/input/input.vue'\nimport Select from 'bbUi/components/select/select.vue'\nimport { useVuelidate } from '@vuelidate/core'\nimport { required } from '@/validations/index'\n\nexport default defineComponent({\n  components: {\n    Input,\n    Select\n  },\n  props: {\n    list: {\n      type: Array,\n      default: () => []\n    },\n    data: {\n      type: Object,\n      default: () => ({\n        tf_full_name: null,\n        tf_routing_number: null,\n        tf_account_number: null,\n        bank_id: null\n      })\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    defaultAttributes: {\n      type: Array,\n      default: []\n    },\n    attributes: {\n      type: Array,\n      default: []\n    }\n  },\n  emits: ['update:data'],\n  setup(props, { emit }) {\n    const { bankTransferConfig, isUseIBAN } = useUser()\n    const data = reactive({\n      payment_method: 'Bank Transfer'\n    })\n    const list = ref([...props.list])\n\n    const rules = computed(() => {\n      // remove validation if use available registered bank transfer option\n      if (isUseAvailableBankTransfer.value) return {}\n      let fieldRules = {}\n\n      if (isUseNewBankTransfer.value) {\n        for (let attribute of props.defaultAttributes) {\n          if (attribute.attribute_name) {\n            fieldRules[attribute.attribute_name] = {}\n            if(attribute.is_required === true) fieldRules[attribute.attribute_name].required = required\n          }\n        }\n      } else {\n        for (let attribute of props.attributes) {\n          if (attribute.attribute_name) {\n            fieldRules[attribute.attribute_name] = {}\n            if(attribute.is_required === true) fieldRules[attribute.attribute_name].required = required\n            \n          }\n        }\n      }\n\n      return fieldRules\n    })\n    const isUseAvailableBankTransfer = computed(() => !!data.bank_id)\n    const isUseNewBankTransfer = computed(() => !!data.is_new_bank)\n    const selectedAvailableBankTransfer = computed(() => {\n      return (\n        list.value.find((bankTransfer) => bankTransfer.id === data.bank_id) ||\n        {}\n      )\n    })\n    const isDisabled = computed(\n      () => !!data.bank_id || isIncompleteBankTransfer.value\n    )\n    const isIncompleteBankTransfer = computed(\n      () => !isUseAvailableBankTransfer.value && !isUseNewBankTransfer.value\n    )\n\n    const validation = useVuelidate(rules, data, {\n      $lazy: true\n    })\n    const validate = () => {\n      if (isIncompleteBankTransfer.value) return false\n      validation.value.$validate()\n      return !validation.value.$invalid\n    }\n    const setBank = (e) => {\n      resetCurrentData()\n      for (const [key, value] of Object.entries(e)) {\n        if (key === 'id') {\n          data.bank_id = value\n          continue\n        }\n        if (key === 'bank_transfer') {\n          for (const attr of value) {\n            if (attr.attribute_name && attr.value) {\n              data[attr.attribute_name] = attr.value\n            }\n          }\n          continue\n        }\n        data[key] = value\n      }\n    }\n    list.value.unshift({\n      bank_id: null,\n      is_new_bank: true\n    })\n\n    const onlyNumber = ($event) => {\n      let keyCode = $event.keyCode ? $event.keyCode : $event.which\n      if ((keyCode < 48 || keyCode > 57) && keyCode !== 46) {\n        $event.preventDefault()\n      }\n    }\n    const resetCurrentData = () => {\n      const bankTransferAttributes = [\n        ...props.attributes,\n        ...props.defaultAttributes,\n        ...(selectedAvailableBankTransfer.value?.bank_transfer || [])\n      ]\n\n      for (let attribute of bankTransferAttributes) {\n        if (Object.keys(data).includes(attribute.attribute_name))\n          delete data[attribute.attribute_name]\n      }\n    }\n\n    onMounted(() => {\n      for (const [dataKey, dataValue] of Object.entries(props.data)) {\n        data[dataKey] = dataValue\n      }\n    })\n\n    watch(\n      () => ({ ...data }),\n      () => {\n        emit('update:data', data)\n      }\n    )\n    watch(\n      () => props.data,\n      () => {\n        for (const [dataKey, dataValue] of Object.entries(props.data)) {\n          if (isIncompleteBankTransfer.value) {\n            if (dataKey === 'bank_transfer') {\n              for (let attribute of props.data.bank_transfer) {\n                data[attribute.attribute_name] = attribute.value\n              }\n              return\n            }\n            data[dataKey] = dataValue\n          }\n        }\n      },\n      {\n        deep: true\n      }\n    )\n\n    return {\n      data,\n      validation,\n      list,\n      isDisabled,\n      selectedAvailableBankTransfer,\n      isUseIBAN,\n      isUseAvailableBankTransfer,\n      isUseNewBankTransfer,\n      isIncompleteBankTransfer,\n      bankTransferConfig,\n      onlyNumber,\n      validate,\n      setBank\n    }\n  }\n})\n</script>\n","<template>\n  <div class=\"mb-5 text-center py-52 flex items-center justify-center relative\">\n    <p class=\"text-md text-grey-03\">How will your customer be paid?</p>\n    <img class=\"absolute left-0 xl:block lg:block left-0 hidden\" src=\"@/assets/payout-method-arrow.svg\" alt=\"select payout method\">\n  </div>\n</template>\n\n<script>\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n  props: {\n    data: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(props, { emit }) {\n    return {\n    }\n  }\n})\n</script>","export default \"__VITE_ASSET__36819bea__\"","<template>\n    <div class=\"mb-5\">\n      <Input v-model=\"data.revtag_or_email_or_phone\" label=\"Revtag, Email or Phone Number\" class=\"w-full\" :disabled=\"disabled\" :view=\"validation.revtag_or_email_or_phone.$invalid && 'danger' || 'default'\" />\n      <small class=\"text-red-base block mt-2\" v-for=\"(error, errorIndex) of validation.revtag_or_email_or_phone.$errors\" :key=\"errorIndex\">{{ error.$message }}. </small>\n    </div>\n  </template>\n  \n  <script>\n  import { defineComponent, reactive, watch } from 'vue'\n  import Input from 'bbUi/components/input/input.vue'\n  import { useVuelidate } from '@vuelidate/core'\n  import { required } from '@/validations/index'\n  \n  export default defineComponent({\n    components: {\n      Input\n    },\n    props: {\n      data: {\n        type: Object,\n        default: () => ({\n          revtag_or_email_or_phone: null\n        })\n      },\n      disabled: {\n        type: Boolean,\n        default: false\n      }\n    },\n    emits: [\n      'update:data'\n    ],\n    setup(props, { emit }) {\n      const data = reactive({...props.data})\n      const rules = {\n        revtag_or_email_or_phone: {\n          required,\n        }\n      }\n      const validation = useVuelidate(rules, data, {\n        $lazy: true\n      })\n      const validate = () => {\n        validation.value.$validate()\n        return !validation.value.$invalid\n      }\n  \n      watch(() => ({...data}), () => {\n        emit('update:data', data)\n      })\n  \n      return {\n        data,\n        validation,\n        validate\n      }\n    }\n  })\n  </script>\n  ","const PAYMENT_ID = {\n\t'CASH': 7,\n\t'STORE_CREDIT': 5,\n\t'VIRTUAL_DEBIT_CARD': 18,\n\t'GIFT_CARD': 19,\n\t'BANK_TRANSFER': 4,\n\t'BILL': 24\n}\n\nexport {\n\tPAYMENT_ID\n}"],"names":["_sfc_main","defineComponent","components","Input","Select","props","list","type","Array","default","data","Object","tf_full_name","tf_routing_number","tf_account_number","bank_id","disabled","Boolean","defaultAttributes","attributes","emits","[object Object]","emit","bankTransferConfig","isUseIBAN","useUser","reactive","payment_method","ref","rules","computed","isUseAvailableBankTransfer","value","fieldRules","isUseNewBankTransfer","attribute","attribute_name","is_required","required","is_new_bank","selectedAvailableBankTransfer","find","bankTransfer","id","isDisabled","isIncompleteBankTransfer","validation","useVuelidate","$lazy","unshift","resetCurrentData","bankTransferAttributes","_a","bank_transfer","keys","includes","onMounted","dataKey","dataValue","entries","watch","__spreadValues","deep","onlyNumber","$event","keyCode","which","preventDefault","validate","$validate","$invalid","setBank","e","key","attr","_hoisted_1","class","_hoisted_4","_hoisted_5","_openBlock","_createElementBlock","_Fragment","_cache","_createElementVNode","_hoisted_2","_createVNode","_component_Select","by","items","_ctx","onInput","_withCtx","scope","item","_hoisted_3","_renderList","_component_Input","modelValue","label","name","onUpdate:modelValue","placeholder","disallow-copy","view","openBlock","_hoisted_6","setup","$props","$setup","$data","$options","src","revtag_or_email_or_phone","$errors","error","errorIndex","PAYMENT_ID","CASH","STORE_CREDIT","VIRTUAL_DEBIT_CARD","GIFT_CARD","BANK_TRANSFER","BILL"],"mappings":"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"}