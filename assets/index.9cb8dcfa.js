var e=Object.defineProperty,a=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,t=(a,l,s)=>l in a?e(a,l,{enumerable:!0,configurable:!0,writable:!0,value:s}):a[l]=s;import{u as o}from"./components.4d38f2db.js";import{k as n,g as r,_ as i,m as d,o as c,t as p,v as u,B as m,D as f,a1 as g,a2 as v,K as b,f as y,a5 as x,O as j,r as k,x as h}from"./vendor.9695fe57.js";import{b as q,j as w,f as C,_ as S,v as _,d as O}from"./index.73ae30fa.js";import{a as P}from"./integration.549dcf93.js";import{u as $}from"./index.f40e4a9e.js";import{r as I}from"./index.54844a74.js";import{P as V}from"./PopoverDark.90c2ba3b.js";import"./LoadingCard.d1cef10f.js";import"./card.0f43ecfb.js";import"./index.6b6f6369.js";const D=n({components:{Button:q,Alert:w,Input:C,PopoverDark:V},async setup(){const{state:e,data:o,actionAll:n,actionUpdate:d,loading:c}=P(),p=r((()=>((e,o)=>{for(var n in o||(o={}))l.call(o,n)&&t(e,n,o[n]);if(a)for(var n of a(o))s.call(o,n)&&t(e,n,o[n]);return e})({},o))),u=$({sellcell_code:{required:I}},p,{$lazy:!0});return await Promise.all([n()]),{state:e,data:o,loading:c,validation:u,update:async(e=(()=>{}))=>{if(!(u.value.$validate(),!u.value.$invalid))return;const a=Object.assign({},{sellcell_code:o.sellcell_code});await d(a,(a=>{if("connection failed"===a.toLowerCase())return i({type:"warning",message:"Invalid SellCell configurations"});i({type:"success",message:"SellCell integration updated!"}),_(e)&&e()}))}}}}),z={class:"my-6"};var A=S(D,[["render",function(e,a,l,s,t,o){const n=d("Input");return c(),p("div",null,[a[1]||(a[1]=u('<div class="my-2"><p> Copy/Paste your SellCell tracking pixel code in the input box below. </p><p>Your tracking code should look like this :</p><code class="my-6 block p-4 bg-grey-lighten rounded-lg"> &lt;<span class="text-red-04">iframe </span><span class="text-green-04">src</span>=<span class="text-blue-04">&quot;https://scdcb.com/p.ashx?a=88&amp;e=189&amp;t=123456789&amp;p=250.00&quot; </span><span class="text-green-04">height</span>=<span class="text-blue-04">&quot;1&quot; </span><span class="text-green-04">width</span>=<span class="text-blue-04">&quot;1&quot; </span><span class="text-green-04">frameborder</span>=<span class="text-blue-04">&quot;0&quot;</span>&gt;&lt;/<span class="text-red-04">iframe</span>&gt; </code></div>',1)),m("div",z,[f(n,{modelValue:e.data.sellcell_code,"onUpdate:modelValue":a[0]||(a[0]=a=>e.data.sellcell_code=a),view:e.validation.sellcell_code.$invalid?"danger":"default",label:"SellCell Tracking Code",placeholder:"SellCell tracking code",block:""},null,8,["modelValue","view"]),(c(!0),p(g,null,v(e.validation.sellcell_code.$errors,((e,a)=>(c(),p("small",{class:"text-red-base block mb-4",key:a},b(e.$message)+". ",1)))),128))])])}]]),B=n({async setup(){const{genSuspense:e}=o(),a=y(null),l=x(),s=j(),t=()=>{a.value.update((()=>{var e;s.push({name:"integration",query:{enable:(null==(e=l.query)?void 0:e.id)||""}})}))},n=k({modelValue:!0,closeTo:{name:"integration",query:{reload:1}},size:"xs",title:"SellCell Settings"}),r=k({default:()=>e(h(A,{ref:a})),footer:()=>{return h(q,{color:"teal",loading:a.value&&(null==(l=null==(e=a.value)?void 0:e.loading)?void 0:l.update),onClick:t},{default:()=>"Save"});var e,l}});return()=>h(O,n,r)}});export{B as default};
