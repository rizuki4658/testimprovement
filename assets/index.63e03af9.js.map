{"version":3,"file":"index.63e03af9.js","sources":["../../src/components/EmailTemplate/StaffNotifications/List/index.vue","../../src/components/EmailTemplate/StaffNotifications/index.vue","../../src/components/EmailTemplate/GeneralNotifications/index.vue","../../src/components/EmailTemplate/DefaultEmailSender.vue","../../src/views/setting/email-template/index.vue","../../../../../../../images/notifications/how-we-format.png","../../src/views/setting/email-template/index.js"],"sourcesContent":["<template>\n  <div class=\"space-y-4\">\n    <Table v-loading=\"loading\" :data=\"data\">\n      <TableColumn prop=\"name\" label=\"Title\" />\n      <TableColumn prop=\"desc\" label=\"Description\" />\n      <TableColumn label=\"Active\" width=\"100\">\n        <template #default=\"scope\">\n          <Checkbox\n            v-model=\"scope.row.is_enable\"\n            type=\"toggle\"\n            :value=\"1\"\n            :value-off=\"0\"\n            :disabled=\"scope.row.loading\"\n            @input=\"handleStatus(scope.row)\"\n          />\n        </template>\n      </TableColumn>\n      <TableColumn label=\"\" align=\"right\">\n        <template #default=\"scope\">\n          <!-- <div class=\"flex items-center justify-center lg:opacity-0 group-hover:opacity-100 transition-opacity\">\n            <Button\n              @click=\"handlePreview(scope.row)\"\n              :loading=\"scope.row.loading\"\n              color=\"teal\"\n              class=\"mr-2\"\n              dense>\n              <span class=\"material-icons text-xl\">visibility</span>\n            </Button>\n            <Button\n              color=\"teal\"\n              class=\"mr-1\"\n              tag=\"a\"\n              link\n              :href=\"`/setting/notifications/staff/${scope.row.id}?type=${type}`\"\n              @click=\"handleEdit(scope.row)\"\n              dense>\n              <span class=\"material-icons text-xl\">edit</span>\n            </Button>\n          </div> -->\n          <Dropdown trigger=\"click\" hide-on-click placement=\"bottom-end\" class=\"mr-8\">\n            <Button :loading=\"scope.row.loading\" color=\"teal\" view=\"outlined\" dense icon>\n              <span class=\"material-icons\">more_horiz</span>\n            </Button>\n            <template #dropdown>\n              <DropdownMenu \n               class=\"py-1 text-sm\"\n               >\n                <DropdownItem class=\"text-base\" @click=\"handlePreview(scope.row)\">\n                  <span class=\"material-icons mr-2\">visibility</span> Preview\n                </DropdownItem>\n                <DropdownItem class=\"text-base\" @click=\"handleEdit(scope.row)\">\n                  <span class=\"material-icons mr-2\">edit</span> Edit\n                </DropdownItem>\n                </DropdownMenu>\n            </template>\n          </Dropdown>\n        </template>\n      </TableColumn>\n    </Table>\n    <!-- <Pagination\n      v-model:page=\"query.page\"\n      v-model:limit=\"query.limit\"\n      :data=\"query\"\n    /> -->\n  </div>\n  <PreviewEmailTemplate\n    v-model:show=\"preview.show\"\n    :body=\"preview.body\"\n    render-type=\"direct\"\n  />\n</template>\n<script>\nimport { defineComponent, watch } from 'vue'\nimport { useStaffNotificationList } from 'composable/setting/emailTemplate'\n\nimport Pagination from 'components/Pagination.vue'\nimport Button from 'bbUi/components/button/button.vue'\nimport Checkbox from 'bbUi/components/checkbox/checkbox.vue'\nimport PreviewEmailTemplate from 'components/EmailTemplate/PreviewEmailTemplate.vue'\n\nexport default defineComponent({\n  name: 'StaffNotificationsList',\n  components: {\n    PreviewEmailTemplate,\n    Pagination,\n    Checkbox,\n    Button\n  },\n  props: {\n    type: {\n      type: String,\n      default: 'mail-in'\n    }\n  },\n  async setup(props, ctx) {\n    const {\n      loading,\n      preview,\n      query,\n      data,\n      handlePreview,\n      handleStatus,\n      handleEdit,\n      handleShow\n    } = useStaffNotificationList()\n\n    watch(() => props.type, async () => {\n      query.value.type = props.type\n      await handleShow()\n    }, {\n      immediate: true\n    })\n\n    await handleShow()\n    // watch(() => query.value, async () => {\n    //   await handleShow()\n    // }, {\n    //   immediate: true,\n    //   deep: true\n    // })\n\n    return {\n      loading,\n      preview,\n      query,\n      data,\n      handlePreview,\n      handleStatus,\n      handleEdit,\n      handleShow\n    }\n  }\n})\n</script>\n\n<style scoped>\n  .btn.btn-outlined.btn-teal {\n        border: none !important;\n    }\n</style>","<template>\n  <div>\n    <Tab\n      :items=\"tabs\"\n      :model-value=\"activeTab\"\n      component\n      name=\"name\"\n      by=\"value\"\n      disabled-items\n      @update:model-value=\"handleActiveTab\"\n    >\n      <template #title=\"scope\">\n        <div class=\"flex items-center justify-center gap-4\">\n          {{ scope.item.name }}\n          <div \n\t\t\t\t\t\tv-if=\"scope.item.value === 'easy-offer'\" \n\t\t\t\t\t\tclass=\"px-3 py-1 -ml-2 bg-teal-04 text-white rounded-full flex items-center justify-center box-border text-xs\">\n\t\t\t\t\t\t\tAPI\n\t\t\t\t\t</div>\n          <Tooltip placement=\"top\">\n            <i class=\"material-icons text-teal-04\">info</i>\n            <template #content>\n              <div class=\"max-w-sm\">\n                <p v-if=\"scope.item.disabled\">\n                  No active\n                  {{ scope.item.value === 'mail-in' ? 'Mail-In' : 'In-Store' }}\n                  locations, so these settings are disabled. They'll be\n                  available once you add one.\n                </p>\n                <p v-else-if=\"scope.item.value === 'mail-in'\">\n                  Get notified each time a lead comes through the widget or\n                  website.\n                </p>\n                <p v-else>\n                  Get notified each time a lead comes through the widget.\n                </p>\n              </div>\n            </template>\n          </Tooltip>\n        </div>\n      </template>\n    </Tab>\n    <StaffNotificationsList :type=\"activeTab\" />\n  </div>\n</template>\n\n<script>\nimport { defineComponent, ref, watch } from 'vue'\n\nimport Tab from 'bbUi/components/tab/tab.vue'\nimport StaffNotificationsList from 'components/EmailTemplate/StaffNotifications/List/index.vue'\n\nexport default defineComponent({\n  name: 'StaffNotifications',\n  components: {\n    Tab,\n    StaffNotificationsList\n  },\n  props: {\n    tabs: {\n      type: Array,\n      default: () => []\n    }\n  },\n  setup(props) {\n    const tabs = ref([])\n    const activeTab = ref()\n\n    const handleActiveTab = (e) => {\n      activeTab.value = e\n    }\n\n    watch(\n      () => props.tabs,\n      () => {\n        tabs.value = props.tabs\n        activeTab.value = Array.isArray(props.tabs)\n          ? props.tabs.find((tab) => !tab.disabled)?.value\n          : undefined\n      },\n      {\n        deep: true,\n        immediate: true\n      }\n    )\n\n    return {\n      tabs,\n      activeTab,\n      handleActiveTab\n    }\n  }\n})\n</script>\n","<template>\n  <Table\n    v-loading=\"loading\"\n    :data=\"data\">\n    <TableColumn prop=\"name\" label=\"Title\" />\n    <TableColumn prop=\"desc\" label=\"Description\" />\n    <!-- <TableColumn label=\"Active\" width=\"100\">\n      <template #default=\"{ row }\">\n        <div>\n          <Checkbox\n            v-model=\"row.is_enable\"\n            type=\"toggle\"\n            :value=\"1\"\n            :value-off=\"0\"\n            :loading=\"row.loading\"\n            :disabled=\"row.loading\"\n            @input=\"handleStatus(row)\"\n          />\n        </div>\n      </template>\n    </TableColumn> -->\n    <TableColumn label=\"\" align=\"right\">\n      <template #default=\"{ row }\">\n        <!-- <div class=\"flex items-center justify-center lg:opacity-0 group-hover:opacity-100 transition-opacity\">\n          <Button\n            color=\"teal\"\n            class=\"mr-2\"\n            dense\n            :loading=\"row.loading\"\n            @click=\"handlePreview(row)\">\n            <span class=\"material-icons text-xl\">visibility</span>\n          </Button>\n          <Button\n            color=\"teal\"\n            class=\"mr-1\"\n            dense\n            @click=\"handleEdit(row)\">\n            <span class=\"material-icons text-xl\">edit</span>\n          </Button>\n        </div> -->\n        <Dropdown trigger=\"click\" hide-on-click placement=\"bottom-end\" class=\"mr-8\">\n          <Button :loading=\"row.loading\" color=\"teal\" view=\"outlined\" dense icon>\n            <span class=\"material-icons\">more_horiz</span>\n          </Button>\n          <template #dropdown>\n            <DropdownMenu class=\"py-1 text-sm\">\n              <DropdownItem class=\"text-base\" @click=\"handlePreview(row)\">\n                <span class=\"material-icons mr-2\">visibility</span> Preview\n              </DropdownItem>\n              <DropdownItem class=\"text-base\" @click=\"handleEdit(row)\">\n                <span class=\"material-icons mr-2\">edit</span> Edit\n              </DropdownItem>\n            </DropdownMenu>\n          </template>\n        </Dropdown>\n      </template>\n    </TableColumn>\n  </Table>\n\n  <PreviewEmailTemplate\n    v-model:show=\"preview\"\n    :body=\"previewTemplate\"\n    render-type=\"direct\"\n  />\n</template>\n\n<script>\nimport { defineComponent, watch } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useGeneralNotification } from 'composable/setting/emailTemplate'\n\nimport Button from 'bbUi/components/button/button.vue'\nimport Checkbox from 'bbUi/components/checkbox/checkbox.vue'\n\nimport PreviewEmailTemplate from 'components/EmailTemplate/PreviewEmailTemplate.vue'\n\nexport default defineComponent({\n  name: 'GeneralNotifications',\n  components: {\n    PreviewEmailTemplate,\n    Checkbox,\n    Button\n  },\n  async setup() {\n    const router = useRouter()\n    const {\n      data,\n      query,\n      loading,\n      preview,\n      previewTemplate,\n      handleShow,\n      handleStatus,\n      handlePreview\n    } = useGeneralNotification()\n\n    const handleEdit = (item) => {\n      const hasPredefinedLink = item.link_to !== null\n\n      if (hasPredefinedLink) {\n        router.push(item.link_to)\n        return\n      }\n\n      router.push({\n        name: 'settingEmailTemplateGeneralForm',\n        params: {\n          id: item.id\n        }\n      })\n    }\n\n    await handleShow()\n    // watch(() => query.value, async () => {\n    //   await handleShow()\n    // }, {\n    //   immediate: true,\n    //   deep: true\n    // })\n\n    return {\n      data,\n      query,\n      loading,\n      preview,\n      previewTemplate,\n      handleShow,\n      handleStatus,\n      handlePreview,\n      handleEdit\n    }\n  }\n})\n</script>\n\n<style scoped>\n  .btn.btn-outlined.btn-teal {\n    border: none !important;\n  }\n</style>","<template>\n  <!-- <div class=\"grid md:grid-cols-2 md:space-x-6 md:space-y-0 space-x-0 space-y-2 mb-6\">\n    <div\n      v-for=\"(option, key) in computedOptions\"\n      :key=\"key\"\n      :class=\"[\n        'border relative',\n        'relative',\n        'hover:shadow rounded-md p-6',\n        'option',\n        !option.active && 'cursor-pointer text-grey-03 hover:text-teal-04 border-grey-02 hover:border-teal-04'\n        || option.active && 'text-teal-04 border-teal-04'\n      ]\"\n      @click=\"itemClick(option)\">\n      <div class=\"flex gap-x-4\">\n        <div class=\"option-icon w-20 h-20 inline-block\" :style=\"`-webkit-mask-image: url('/icon/menu-icon/${option.icon}.svg')`\"></div>\n        <div class=\"flex-1\">\n          <div class=\"mb-4 text-black font-semibold flex items-center gap-x-2\">\n            {{ option.key == 'domain' && data.domain ? `${data.sub_domain && data.sub_domain !== '@' ? data.sub_domain + '.' : ''}${data.domain}`  : option.title }}\n            <Button\n              v-if=\"option.editable\"\n              view=\"smooth\"\n              color=\"teal\"\n              class=\"small\"\n              dense\n              @click.stop=\"handleShowForm\">\n              <i class=\"material-icons\">edit</i>\n            </Button>\n            <div v-if=\"option.active\" class=\"flex-1 text-right\">\n              <div class=\"bg-teal-01 text-sm text-teal-04 rounded-full font-normal inline-block px-3 py-1.5\">\n                Active\n              </div>\n            </div>\n          </div>\n          <p class=\"text-grey-03\" v-html=\"option.desc\" />\n          <template v-if=\"option.alert && !option.active && option.key == 'domain'\">\n            <Alert color=\"orange\" view=\"smooth\" class=\"mt-4\" dense>\n              <div class=\"flex space-x-4 -mx-4 -my-4\">\n                <div>\n                  <i class=\"material-icons\">error</i>\n                </div>\n                <div>\n                  {{ option.alert_text }}\n                </div>\n              </div>\n            </Alert>\n          </template>\n        </div>\n      </div>\n    </div>\n  </div> -->\n  <div class=\"bg-white border rounded-lg p-6 border-grey-02\">\n    <div class=\"flex items-center\">\n      <h3 class=\"text-teal-04 text-xl font-semibold\">{{data.email ? data.email : '-'}}</h3>\n      <!-- Unverified -->\n      <div  v-if=\"computedUnverified && !computedTxtMxStatus\" class=\"flex ml-4 items-center space-x-2 px-4 w-max bg-orange-01 text-orange-04 rounded-full\">\n          <div>\n            <i class=\"material-icons\">info</i>\n          </div>\n          <div>\n            We recommend fully verifying your domain below to ensure a high deliverability rate.\n          </div>\n      </div>\n\n      <!-- Verified -->\n      <div v-if=\"computedUnverified === false && !!data.domain && computedTable.length > 0\" class=\"flex ml-4 items-center rounded-full bg-green-01 px-4 w-max text-green-04\">\n        <i class=\"material-icons\">check_circle</i>\n        <span class=\"font-medium mx-2\">Verified</span>\n      </div>\n\n      <!-- TXT Verified but MX not in mailgun -->\n      <div v-if=\"computedTxtMxStatus\" class=\"flex ml-4 items-center gap-x-4\">\n        <div class=\"flex items-center rounded-full bg-green-01 px-4 w-max text-green-04\">\n          <i class=\"material-icons\">check_circle</i>\n          <span class=\"font-medium mx-2\">Verified</span>\n        </div>\n        <span>-</span>\n        <div class=\"flex items-center rounded-full bg-orange-01 px-4 w-max text-orange-04\">\n          <i class=\"material-icons text-orange-04\">info</i>\n          <span class=\"font-medium mx-2\">MX record are found but not pointing to mailgun.</span>\n        </div>\n      </div>\n    </div>\n    <div>\n      <p class=\"my-2\">\n        Offer status updates and all email notifications will be sent from the email address you provide above and will appear as if they're coming from your domain.\n      </p>\n      <CollapsibleCard class=\"border border-grey-02 rounded-xl bg-off-white drop-shadow-none\">\n        <template #title>\n          <p class=\"font-semibold text-teal-04\">\n            How We Format Your Sender Address for Better Deliverability\n          </p>\n        </template>\n        <template #default>\n          <p class=\"pt-2\">\n            To ensure a high deliverability rate, we will add <b class=\"text-teal-04\">\"sell.\"</b> after the @ in your default sender address under the \"From\" field in outgoing emails. For example, if your default sender address is steve@apple.com, it will\n            appear as steve@<b class=\"text-teal-04\">sell</b>.apple.com to your customers. We also recommend making sure you verify your default sender address by following the steps below if you haven't verified it yet.\n          </p>\n          <img\n            src=\"/images/notifications/how-we-format.png\"\n            alt=\"How We Format Your Sender Address for Better Deliverability\"\n            class=\"h-96 mt-4\"\n          />\n        </template>\n      </CollapsibleCard>\n    </div>\n\n  </div>\n  <div v-if=\"computedShowTable\" class=\"border rounded-md border-grey-02 relative my-8\">\n    <span class=\"absolute -top-4 left-3 bg-white p-1 px-2 font-semibold\">Copy Your Records</span>\n    <div class=\"p-4 pt-6\">\n      <Alert\n        v-if=\"computedUnverified && !computedTxtMxStatus\"\n        color=\"red\"\n        view=\"smooth\"\n        class=\"mt-2 mb-6\"\n        dense>\n        <div class=\"flex space-x-2 -mx-4 -my-4 py-4 px-2\">\n          <div>\n            <i class=\"material-icons\">info</i>\n          </div>\n          <div>\n            DNS record authentication failed. If you've recently added the records, please be aware that propagation could take up to 24 hours. After the 24-hour period, return to this page to check the status and click 'Verify' if one or more records are still showing 'Unverified'.\n          </div>\n        </div>\n      </Alert>\n      <p class=\"mb-4\">You're going to add two TXT records and two MX records to your domain on your domain provider's website. These records will authenticate your domain, allowing us to send emails on your behalf.</p>\n      <ul class=\"list-disc pl-5\">\n        <li\n        class=\"list-decimal\"\n          v-for=\"(instruction, keyIn) in data.instructions\"\n          :key=\"`key_in_${keyIn}`\" v-html=\"instruction\">\n        </li>\n      </ul>\n      <p class=\"mt-6 mb-4\">Now, repeat these steps above for each record type-you need to add four records in total. Once all records are added, click the Verify button.</p>\n      <Alert color=\"grey\" view=\"smooth\" class=\"mb-6\">\n        <div class=\"-mx-4 -my-4 py-4 px-2\">\n          \n          <div>\n            <div class=\"flex items-center gap-x-2\">\n              <i class=\"material-icons\">info</i> <b>Note: </b>If an existing SPF record is already on your domain provider's site, follow the example below to combine multiple SPF records:\n            </div>\n            <div class=\"mt-2\">\n              <span>Example SPF Record</span>:\n              <div class=\"inline-block bg-grey-03 md:ml-2 px-4 py-0.5 rounded-full text-white\">\n                <span class=\"text-orange-03\">v</span>=<span class=\"text-orange-03\">spf1 include</span>:_spf.google.com\n                <span class=\"text-orange-03\">include:</span><span whitelabel=\"text-replace\" data-label=\"email domain\">mail.reusely.com</span> <span class=\"text-orange-04\">~all</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Alert>    \n      <Table class=\"my-8\" v-loading=\"data.loading.all\" :data=\"computedTable\">\n        <TableColumn prop=\"record_type\" label=\"Type\" width=\"100\" />\n        <TableColumn label=\"Name\" width=\"300\">\n          <template #default=\"scope\">\n            <div class=\"flex items-center gap-x-2 flex-wrap\">\n              <span>{{ scope.row.name }}</span>\n              <i\n                class=\"material-icons text-lg text-teal-02\"\n                @click=\"handleCopyText(scope.row.name)\">\n                file_copy\n              </i>\n            </div>\n          </template>\n        </TableColumn>\n        <TableColumn label=\"Value\" min-width=\"400\">\n          <template #default=\"scope\">\n            <div class=\"flex items-center gap-x-2\">\n              <p class=\"truncate\">\n                {{ scope.row.value }}\n              </p>\n              <i\n              class=\"material-icons text-lg text-teal-02\"\n              @click=\"handleCopyText(scope.row.value)\">\n              file_copy\n            </i>\n          </div>\n          </template>\n        </TableColumn>\n        <TableColumn label=\"Priority\">\n          <template #default=\"scope\">\n            <p>{{ scope.row.priority || '-' }}</p>\n          </template>\n        </TableColumn>\n        <TableColumn label=\"Status\" width=\"150\">\n          <template #default=\"scope\">\n            <!-- validation first index start -->\n            <div v-if=\"scope.$index === 0\">\n              <div v-if=\"(!scope.row.is_active && scope.row.valid === 'valid') || scope.row.valid === 'unknown'\" class=\"flex gap-4 items-center\">\n                <div class=\"bg-orange-01 text-sm rounded-full text-orange-04 inline-block px-3 py-1.5\">\n                  {{ 'Unverified' }}\n                </div>\n                <Tooltip placement=\"top\">\n                  <i class=\"material-icons text-teal-02\">info</i>\n                  <template #content>\n                    <div class=\"text-sm\">\n                      No {{ scope.row.record_type }} records found.\n                    </div>\n                  </template>\n                </Tooltip>\n              </div>\n              <div\n              v-else\n               class=\"bg-green-01 text-sm rounded-full text-green-04 inline-block px-3 py-1.5\">\n                {{ 'Verified' }} \n              </div>\n            </div>\n            <!-- validation first index end -->\n             \n            <div v-else>\n              <!-- Unverified -->\n              <div v-if=\"scope.row.valid === 'unknown'\" class=\"flex gap-4 items-center\">\n                <div class=\"bg-orange-01 text-sm rounded-full text-orange-04 inline-block px-3 py-1.5\">\n                  {{ 'Unverified' }}\n                </div>\n                <Tooltip placement=\"top\">\n                  <i class=\"material-icons text-teal-02\">info</i>\n                  <template #content>\n                    <div class=\"text-sm\">\n                      <!-- Verified but not mailgun -->\n                      <p v-if=\"scope.row.record_type === 'MX' && scope.row.valid === 'unknown' && scope.row.cached.length > 0\">\n                        Your domain's MX records are currently directed to a different provider.\n                      </p>\n                      <p v-else>\n                        No {{ scope.row.record_type }} records found.\n                      </p>\n                    </div>\n                  </template>\n                </Tooltip>\n              </div>\n\n              <!-- Verified -->\n              <div\n                v-else\n                class=\"bg-green-01 text-sm rounded-full text-green-04 inline-block px-3 py-1.5\">\n                {{ 'Verified' }}\n              </div>\n            </div>\n          </template>\n        </TableColumn>\n      </Table>\n      <Button color=\"teal\" class=\"mt-4\" @click=\"handleVerify\">Verify</Button>\n    </div>\n  </div >\n  <Modal\n    v-model=\"data.modal.sender\"\n    hide-footer\n    :show-close=\"false\"\n    hide-header\n    size=\"xs\"\n    :close-on-click-modal=\"false\">\n    <template #default>\n      <img\n        width=\"95\"\n        height=\"95\"\n        alt=\"Warning Icon\"\n        class=\"mt-6 mb-8 mx-auto\"\n        src=\"@/assets/icon/attention-orange.svg\"\n      />\n      <h2 class=\"text-center text-base mb-4\">Change Mail Domain?</h2>\n      <p class=\"text-sm text-center mb-8\">Switching to a different Mail Domain will require re-verifying it.</p>\n      <div v-if=\"data.selected\" class=\"flex justify-center items-center gap-x-3\">\n        <Button\n          v-if=\"data.selected.key == 'domain'\"\n          view=\"outlined\"\n          color=\"orange\"\n          @click=\"handleShowForm\">\n          Yes, Change it\n        </Button>\n        <Button\n          v-if=\"data.selected.key == 'temporary'\"\n          view=\"outlined\"\n          color=\"orange\"\n          @click=\"handleReset\">\n          Yes, Change it\n        </Button>\n        <Button view=\"smooth\" color=\"teal\" @click=\"data.modal.sender = false\">Cancel</Button>\n      </div>\n    </template>\n  </Modal>\n  <Modal\n    v-model=\"data.modal.formCustom\"\n    :show-close=\"false\"\n    size=\"xs\"\n    :close-on-click-modal=\"false\"\n    @close=\"handleCloseForm\">\n    <template #header>\n      <h6 class=\"-mx-4\">Change Mail Domain</h6>\n    </template>\n    <template #default>\n      <div v-loading=\"data.loading.all\" class=\"-mx-4\">\n        <div class=\"mb-6\">\n          <label class=\"block\">Email Address</label>\n          <Input v-model=\"data.form.email\" type=\"email\" placeholder=\"Email address\" class=\"block w-full\" />\n          <span\n            v-for=\"(emailError, nEmail) in validate.email.$errors\"\n            :key=\"nEmail\"\n            class=\"text-danger text-sm block my-4\">\n            {{ emailError.$message }}\n          </span>\n        </div>\n        <!-- <div class=\"mb-6\">\n          <label class=\"block\">Domain</label>\n            <div class=\"input-domain\">\n              <Input v-model=\"data.form.sub_domain\" placeholder=\"sell\" style=\"max-width: 100px;\" />\n              <Input v-model=\"data.form.domain\" disabled class=\"block w-full\" />\n            </div>\n            <div class=\"py-4\">\n              <small class=\"text-grey-04\">We highly recommend using a subdomain, but you have an option to use the root domain by adding '@' in the subdomain field.</small>\n            </div>\n          <p\n            v-for=\"(domainError, nDomain) in [...validate.domain.$errors, ...validate.sub_domain.$errors]\"\n            :key=\"nDomain\"\n            class=\"text-danger text-sm\">\n            {{ domainError.$message }}\n          </p>\n        </div> -->\n        <div class=\"mb-6\">\n          <div class=\"flex\">\n            <label class=\"block\">Domain Region</label>\n            <Tooltip  placement=\"top\">\n              <template #content>\n                <div class=\"w-48 text-xs\">\n                  We offer two regions for sending your messages: the US and the EU\n                </div>\n              </template>\n              <i class=\"text-teal-04 material-icons ml-2 cursor-pointer\">info</i>\n            </Tooltip>\n          </div>\n          <RadioGroup v-model=\"data.form.region\">\n            <RadioButton label=\"US\">US</RadioButton>\n            <RadioButton label=\"EU\">EU</RadioButton>\n          </RadioGroup>\n          <span\n            v-for=\"(regionError, nRegion) in validate.region.$errors\"\n            :key=\"nRegion\"\n            class=\"text-danger text-sm block my-4\">\n            {{ regionError.$message }}\n          </span>\n        </div>\n      </div>\n    </template>\n    <template #footer>\n      <div class=\"-mx-4 flex justify-between items-center\">\n        <a\n          href=\"javascript:void(0)\"\n          :class=\"[\n            'hover:text-red-02 mr-8',\n            data.loading.all ? 'text-grey-03' : 'text-red-04'\n          ]\"\n          @click=\"handleCloseForm\">Cancel</a>\n        <Button color=\"teal\" :disabled=\"data.loading.all\" @click=\"handleSaveForm\">Save</Button>\n      </div>\n    </template>\n  </Modal>\n</template>\n\n<script>\nimport { defineComponent, computed, watch } from 'vue'\nimport { ElMessage } from 'element-plus'\nimport  { useEmailServer } from 'composable/setting/emailTemplate'\nimport CollapsibleCard from '../CollapsibleCard.vue'\nimport Button from 'bbUi/components/button/button.vue'\nimport Alert from 'bbUi/components/alert/alert.vue'\nimport Input from 'bbUi/components/input/input.vue'\nimport Modal from 'bbUi/components/modal/modal.vue'\nimport GroupContainer from 'bbUi/components/group-container/group-container.vue'\n// import SVGLoader from 'components/SVGLoader.vue'\n\nexport default defineComponent({\n  name: 'DefaultEmailSender',\n  components: {\n    Alert,\n    Modal,\n    Input,\n    Button,\n    GroupContainer,\n    CollapsibleCard\n    // SVGLoader,\n  },\n  emits: ['select', 'show-form'],\n  async setup(props, { emit }) { \n    const {\n      data,\n      validate,\n      methods\n    } = useEmailServer()\n    const computedTable = computed(() => data.table)\n    const computedUnverified = computed(() => {\n      const records = [...computedTable.value];\n      if (records.length === 0) return false;\n      const firstItem = records[0];\n      if (firstItem.is_active === false || firstItem.valid === 'unknown') {\n        return true;\n      }      \n      const remainingItems = records.slice(1);\n      return remainingItems.some(item => item.valid === 'unknown');\n    })\n    const computedTxtMxStatus = computed(() => {\n      const records = computedTable.value\n      if (!records?.length) return false\n\n      const txtRecords = records.filter(record => record.record_type === 'TXT')\n      const mxRecords = records.filter(record => record.record_type === 'MX')\n      \n      const allTxtValid = txtRecords.every(record => record.valid !== 'unknown')\n      \n      const hasMxUnknownWithCache = mxRecords.some(record => \n        record.valid === 'unknown' && record.cached && record.cached.length > 0\n      )\n      \n      return allTxtValid && hasMxUnknownWithCache\n    })\n    const computedOptions = computed(() => {\n      const table = computedTable.value\n      const unverified = computedUnverified.value\n      return data.options.map((item) => {\n        if (table.length) {\n          return item.key === 'domain'\n          ? ({\n            ...item,\n            active: !unverified,\n            alert: unverified,\n            editable: unverified || (table.length && data.domain)\n          })\n          : ({\n            ...item,\n            active: unverified,\n            alert: false,\n            editable: false\n          })\n        } else return ({ ...item })\n      })\n    })\n    const computedShowTable = computed(() => { \n      if (computedTable.value.length && computedOptions.value[1].active && data.domain) return true\n      return false\n    })\n\n    // const itemClick = (item) => {\n    //   const temporary = computedOptions.value.find(item => item.key == 'temporary')\n    //   if (!item.active) {\n    //     if (item.key == 'domain' && data.domain) return\n    //     if (item.key == 'temporary' && temporary.active) return\n    //     data.selected = item\n    //     data.modal.sender = true\n    //   }\n    //   return item\n    // }\n    const handleShowForm = () => {\n      data.form.email = data.email\n      data.form.domain = data.domain\n      data.form.region = data.continent\n      // data.form.sub_domain = data.sub_domain\n      data.modal.formCustom = true\n      data.modal.sender = false\n      \n      emit('show-form')\n    }\n    const handleSaveForm = async () => {\n      const valid = await validate.value.$validate()\n      if (valid) {\n        await methods.add(data.form, async () => {\n          data.modal.sender = false\n          data.modal.formCustom = false\n          await methods.show()\n        })\n      }\n    }\n    const handleCloseForm = () => {\n      if (data.loading.all) return\n\n      for (let key of Object.keys(data.form)) {\n        data.form[key] = ''\n      }\n      validate.value.$reset()\n      data.modal.sender = false\n      data.modal.formCustom = false\n    }\n    const handleVerify = async () => {\n      await methods.verify(async (res) => {\n        if (res.code && res.code == 400) {\n          data.verifying = true\n        } else data.verifying = false\n        await methods.show()\n      })\n    }\n    const handleCopyText = (text) => {\n      navigator.clipboard.writeText(text).then(() => {\n        ElMessage({\n          type: 'success',\n          message: 'Text copied to clipbord'\n        })\n      })\n    }\n    const handleReset = async () => {\n      await methods.reset(async() => {\n        await methods.show()\n      })\n      data.modal.sender = false\n    }\n\n    watch(\n      () => data.form.email,\n      (value) => {\n        if (value && value.includes('@')) {\n          const splitter = value.split('')\n          const index = splitter.findIndex(item => item == '@')\n          if (index < 0) data.form.domain\n          const result = splitter.splice(index + 1, value.split('').length)\n          data.form.domain = result.join('')\n        }\n      }\n    )\n\n    await methods.show()\n\n    return {\n      data,\n      computedTable,\n      computedOptions,\n      computedShowTable,\n      computedUnverified,\n      computedTxtMxStatus,\n      validate,\n      // itemClick,\n      handleReset,\n      handleVerify,\n      handleCopyText,\n      handleShowForm,\n      handleSaveForm,\n      handleCloseForm,\n    }\n  }\n})\n</script>\n\n<style lang=\"scss\">\n.option-icon {\n  mask-position: center;\n  mask-repeat: no-repeat;\n  mask-size: contain;\n\n  @apply bg-grey-03;\n}\n.option:hover {\n  .option-icon {\n    @apply bg-teal-04;\n  }\n}\n\n.input-domain{\n  @apply flex;\n  .input__container{\n    border-radius: 0;\n    &:first-child{\n      input{\n        border-top-right-radius: 0;\n        border-bottom-right-radius: 0;\n      }\n    }\n    &:last-child{\n      input{\n        border-top-left-radius: 0;\n        border-bottom-left-radius: 0;\n      }\n    }\n  }\n}\n</style>","<template>\n  <div>\n    <div class=\"flex xl:flex-row flex-col justify-between mb-8\">\n      <Breadcrumb\n        pageTitle=\"Notifications\"\n        :backTo=\"{ name: 'setting' }\"\n        :items=\"breadcrumb\"\n      />\n    </div>\n    <Card class=\"mb-6\">\n      <template #header class=\"w-full\">\n        <div class=\"flex justify-between\">\n          <h2 class=\"font-bold text-xl\">Default Sender Address</h2>\n          <Button @click=\"$refs.defaultEmailSender.handleShowForm()\" color=\"teal\" dense>\n            <div class=\"px-2\">\n              <i class=\"material-icons\">edit</i>\n              <span class=\"ml-2\">Edit Email</span>\n            </div>\n          </Button>\n        </div>\n      </template>\n      <template #default>\n        <DefaultEmailSender ref=\"defaultEmailSender\" @show-form=\"handleShowEmailForm\" />\n      </template>\n    </Card>\n    <Card class=\"mb-6\">\n      <template #header>\n        <div class=\"flex justify-between gap-x-2 lg:gap-y-0 gap-y-2 flex-wrap\">\n          <h2 class=\"font-bold text-xl\">Customer Notifications</h2>\n          <div class=\"flex gap-x-2 items-center\">\n            <span class=\"text-sm\">\n              Need more advanced communications? Trigger SMS, email, and more by connecting your Klaviyo account.\n            </span>\n            <Button\n              link\n              dense\n              tag=\"a\"\n              color=\"teal\"\n              target=\"_blank\"\n              referrerpolicy=\"no-referrer\"\n              href=\"https://www.klaviyo.com/\">\n              <div class=\"flex items-center justify-center flex-nowrap gap-x-2 px-2 py-1\">\n                <span class=\"text-sm whitespace-nowrap\">Klaviyo Web App</span>\n                <i class=\"fas fa-external-link-alt\" />\n              </div>\n            </Button>\n          </div>\n        </div>\n      </template>\n      <template #default>\n        <Tab\n          :model-value=\"data.all.type\"\n          @update:model-value=\"handleUpdateEmailTemplateType\"\n          :items=\"emailTemplateTypes\"\n          component\n          name=\"name\"\n          by=\"value\"\n          disabled-items\n        >\n          <template #title=\"scope\">\n            <div class=\"inline-flex items-center gap-2\">\n              <span>{{ scope.item.name }}</span>\n              <div \n                v-if=\"scope.item.value === 'easy-offer'\" \n                class=\"px-3 py-1 bg-teal-04 text-white rounded-full flex items-center justify-center box-border text-xs\">\n                 API\n              </div>\n              <Tooltip :disabled=\"!scope.item?.disabled\" placement=\"top\">\n                <template #content>\n                  <div class=\"max-w-sm\">\n                    <p>\n                      No active\n                      {{\n                        scope.item.value === 'mail-in' ? 'Mail-In' : 'In-Store'\n                      }}\n                      locations, so these settings are disabled. They'll be\n                      available once you add one.\n                    </p>\n                  </div>\n                </template>\n                <template #default>\n                  <i\n                    v-show=\"scope.item.disabled\"\n                    class=\"material-icons text-teal-04\"\n                    >info</i\n                  >\n                </template>\n              </Tooltip>\n            </div>\n          </template>\n        </Tab>\n        <div class=\"flex items-center mb-4\">\n          <div class=\"flex-auto\">\n            <!-- <Input\n              v-model=\"data.all.search\"\n              placeholder=\"Search everything\"\n              block\n              icon\n            >\n              <template #icon>\n                <span class=\"material-icons\">search</span>\n              </template>\n            </Input> -->\n          </div>\n        </div>\n        <Table v-loading=\"loading.all\" :data=\"emailTemplates.all.data\">\n          <TableColumn prop=\"name\" label=\"Title\" />\n          <TableColumn prop=\"desc\" label=\"Description\" />\n          <TableColumn label=\"Active\" width=\"100\">\n            <template #default=\"scope\">\n              <Checkbox\n                v-model=\"scope.row.is_enable\"\n                type=\"toggle\"\n                :value=\"1\"\n                :value-off=\"0\"\n                @input=\"handleUpdateStatus(scope.row)\"\n                :disabled=\"loading.updateStatus.includes(scope.row.id)\"\n              />\n            </template>\n          </TableColumn>\n          <TableColumn label=\"\" align=\"right\">\n            <template #default=\"scope\">\n              <!-- <div\n                class=\"flex items-center justify-center lg:opacity-0 group-hover:opacity-100 transition-opacity\"\n              >\n                <Button\n                  @click=\"handlePreviewEmailTemplate(scope.row.id)\"\n                  :loading=\"loading.preview_email\"\n                  color=\"teal\"\n                  class=\"mr-2\"\n                  dense\n                >\n                  <span class=\"material-icons text-xl\">visibility</span>\n                </Button>\n                <Button\n                  color=\"teal\"\n                  class=\"mr-1\"\n                  tag=\"a\"\n                  link\n                  :href=\"`/setting/notifications/customer/${scope.row.id}?type=${scope.row.type}`\"\n                  @click=\"editTemplate(scope.row)\"\n                  dense>\n                  <span class=\"material-icons text-xl\">edit</span>\n                </Button>\n              </div> -->\n              <Dropdown trigger=\"click\" hide-on-click placement=\"bottom-end\" class=\"mr-8\">\n                <Button :loading=\"loading.preview_email\" color=\"teal\" view=\"outlined\" dense icon>\n                  <span class=\"material-icons\">more_horiz</span>\n                </Button>\n                <template #dropdown>\n                  <DropdownMenu class=\"py-1 text-sm\">\n                    <DropdownItem class=\"text-base\" @click=\"handlePreviewEmailTemplate(scope.row.id)\">\n                      <span class=\"material-icons mr-2\">visibility</span> Preview\n                    </DropdownItem>\n                    <DropdownItem class=\"text-base\" @click=\"editTemplate(scope.row)\">\n                      <span class=\"material-icons mr-2\">edit</span> Edit\n                    </DropdownItem>\n                  </DropdownMenu>\n                </template>\n              </Dropdown>\n            </template>\n          </TableColumn>\n        </Table>\n        <Pagination\n          v-if=\"emailTemplates.all.total > data.all.limit\"\n          class=\"mt-4\"\n          v-model:page=\"data.all.page\"\n          v-model:limit=\"data.all.limit\"\n          :data=\"state.all\"\n        />\n      </template>\n    </Card>\n    <Card class=\"mb-6\">\n      <template #header>\n        <div class=\"font-bold text-xl\">General</div>\n      </template>\n      <template #default>\n        <GeneralNotifications />\n      </template>\n    </Card>\n    <Card class=\"mb-6\">\n      <template #header>\n        <div class=\"font-bold text-xl\">Staff Notifications</div>\n      </template>\n      <StaffNotifications\n        :tabs=\"emailTemplateTypes\"\n      />\n    </Card>\n  </div>\n\n  <Modal\n    v-model=\"modalEmailSender.verification\"\n    title=\"Verify Email Address\"\n    size=\"sm\"\n  >\n    <template #default>\n      <div class=\"text-center mt-4 mb-6\">\n        <h3 class=\"text-2xl mb-2\">Please check your email address</h3>\n        <p>\n          You will receive an activation code within the next few minutes to\n          <span class=\"font-semibold\">{{ dataEmailSender.email }}</span>\n        </p>\n      </div>\n      <div class=\"md:mx-4\">\n        <InputVerificationCode v-model=\"dataEmailSender.code\" />\n      </div>\n      <p class=\"text-center text-grey-03 my-10\">\n        Didn't get a code?,\n        <a href=\"#!\" @click.prevent=\"handleVerifyEmail(true)\"\n          >Click to resend</a\n        >\n      </p>\n    </template>\n    <template #footer>\n      <div class=\"flex justify-between\">\n        <a\n          href=\"#!\"\n          @click.prevent=\"closeModalEmailSender('verification')\"\n          class=\"text-red-04 bg-none hover:text-red-02 py-4 px-6\"\n          >Cancel</a\n        >\n        <Button\n          color=\"teal\"\n          @click.prevent=\"verifyEmail\"\n          :loading=\"loadingEmailSender.verification_check\"\n          >Verify & Save</Button\n        >\n      </div>\n    </template>\n  </Modal>\n  <PreviewEmailTemplate\n    v-model:show=\"isPreviewEmailTemplate\"\n    :body=\"previewedEmailTemplate\"\n    render-type=\"direct\"\n  />\n  <router-view></router-view>\n</template>\n\n<script>\nimport { defineComponent, watch, reactive, ref, computed } from 'vue'\nimport {\n  useCompanyProfile,\n  useEmailTemplate,\n  useEmailTemplateTheme\n} from 'composable/setting'\nimport { useEmailSender } from 'composable/setting/emailTemplate'\nimport { useRouter, useRoute } from 'vue-router'\nimport { useCookie } from 'utils/cookie'\nimport { deepClone } from 'utils/deep-clone'\nimport { ElMessage } from 'element-plus'\nimport { useVuelidate } from '@vuelidate/core'\nimport { helpers } from '@vuelidate/validators'\nimport { required, email } from '@/validations/index'\nimport debounce from 'utils/debounce'\n\nimport Card from 'bbUi/components/card/card.vue'\nimport Input from 'bbUi/components/input/input.vue'\nimport Button from 'bbUi/components/button/button.vue'\nimport Checkbox from 'bbUi/components/checkbox/checkbox.vue'\nimport Alert from 'bbUi/components/alert/alert.vue'\nimport Modal from 'bbUi/components/modal/modal.vue'\nimport Tab from 'bbUi/components/tab/tab.vue'\n\nimport Pagination from 'components/Pagination.vue'\nimport Breadcrumb from 'components/Breadcrumb.vue'\nimport SVGLoader from 'components/SVGLoader.vue'\nimport StaffNotifications from 'components/EmailTemplate/StaffNotifications/index.vue'\nimport GeneralNotifications from 'components/EmailTemplate/GeneralNotifications/index.vue'\nimport PreviewEmailTemplate from 'components/EmailTemplate/PreviewEmailTemplate.vue'\nimport Colorpicker from 'components/Colorpicker.vue'\nimport InputVerificationCode from 'components/InputVerificationCode.vue'\nimport DefaultEmailSender from 'components/EmailTemplate/DefaultEmailSender.vue'\n\nexport default defineComponent({\n  components: {\n    Card,\n    Input,\n    Button,\n    Checkbox,\n    Alert,\n    Modal,\n    Tab,\n    Breadcrumb,\n    Pagination,\n    SVGLoader,\n    GeneralNotifications,\n    PreviewEmailTemplate,\n    Colorpicker,\n    InputVerificationCode,\n    DefaultEmailSender,\n    StaffNotifications\n  },\n  async setup() {\n    const {\n      data: dataCompanyProfile,\n      loading: loadingCompanyProfile,\n      actionShow: actionShowCompanyProfile,\n      actionUpdate: actionUpdateCompanyProfile\n    } = useCompanyProfile()\n    const {\n      state,\n      data,\n      loading,\n      isMailIn,\n      previewedEmailTemplate,\n      isPreviewEmailTemplate,\n      actionAll,\n      actionUpdateStatus,\n      actionPreviewEmailTemplate,\n      location,\n      emailTemplateTypes\n    } = useEmailTemplate()\n    const {\n      formData: formDataEmailTemplateTheme,\n      actionUpdate: actionUpdateEmailTemplateTheme,\n      actionShow: actionShowEmailTemplateTheme,\n      loading: loadingEmailTemplateTheme\n    } = useEmailTemplateTheme('email-template')\n    const {\n      data: dataEmailSender,\n      loading: loadingEmailSender,\n      modal: modalEmailSender,\n      actionVerify: actionVerifyEmailSender,\n      actionVerifyCheck: actionVerifyCheckEmailSender,\n      openModal: openModalEmailSender,\n      closeModal: closeModalEmailSender\n    } = useEmailSender()\n    const refStaffNotificationForm = ref(null)\n    const isReadyStaffNotification = ref(false)\n\n    const router = useRouter()\n    const route = useRoute()\n    const cookie = useCookie()\n\n    const leadsName = ref('')\n    const leads = ref(null)\n\n    const breadcrumb = [\n      {\n        text: 'Settings',\n        to: {\n          name: 'setting'\n        }\n      },\n      {\n        text: 'Notifications'\n      }\n    ]\n    const modal = reactive({\n      // staffNotificationsForm: false\n    })\n    const rules = {\n      email_sender: {\n        required,\n        email: helpers.withMessage(\n          'Email sender is not a valid email address',\n          email\n        )\n      }\n    }\n    const validation = useVuelidate(rules, dataCompanyProfile, {\n      $lazy: true\n    })\n    const emailTemplates = computed(() => deepClone(state.value))\n    const validate = () => {\n      validation.value.$validate()\n      return !validation.value.$invalid\n    }\n    const updateEmailSender = debounce(async () => {\n      const isValid = validate()\n      if (isValid) {\n        await actionUpdateCompanyProfile(() => {\n          ElMessage({\n            type: 'success',\n            message: 'Email sender updated'\n          })\n        })\n      }\n    }, 500)\n    const showStaffForm = (is_online) => {\n      leadsName.value = is_online ? 'Mail-in' : 'In-Store'\n      leads.value = is_online\n      // modal.staffNotificationsForm = true\n    }\n    const editTemplate = (row) => {\n      // Predefined link are links that provided from the backend\n      const hasPredefinedLink = row.link_to !== null\n      if (hasPredefinedLink) {\n        router.push(row.link_to)\n        return\n      }\n      router.push({\n        name: 'settingEmailTemplateCustomerForm',\n        params: { templateId: row.id },\n        query: { type: row.type }\n      })\n    }\n    const handleUpdateStatus = async (emailTemplateData) =>\n      await actionUpdateStatus(\n        emailTemplateData.id,\n        {\n          is_enable: emailTemplateData.is_enable\n        },\n        () => {\n          ElMessage({\n            type: 'success',\n            message: 'Email template status updated'\n          })\n        }\n      )\n    const handlePreviewEmailTemplate = async (id) => {\n      await actionPreviewEmailTemplate(id)\n    }\n    const handleUpdateEmailTemplateTheme = async () =>\n      await actionUpdateEmailTemplateTheme(() => {\n        ElMessage({\n          type: 'success',\n          message: 'Email template theme updated'\n        })\n      })\n    const handleVerifyEmail = async (isResend = false) => {\n      dataEmailSender.email = dataCompanyProfile.email_sender\n        ? dataCompanyProfile.email_sender\n        : ''\n      await actionVerifyEmailSender((err) => {\n        if (!err) openModalEmailSender('verification')\n      })\n      if (isResend) {\n        ElMessage({\n          type: 'success',\n          message: 'Email confirmation was sent, please check  your email'\n        })\n      }\n    }\n    const handleUpdateEmailTemplateType = (newData) => {\n      data.all.type = newData\n    }\n    const verifyEmail = async () => {\n      await actionVerifyCheckEmailSender(() => {\n        closeModalEmailSender('verification')\n        ElMessage({\n          type: 'success',\n          message: 'Email sender verified'\n        })\n      })\n    }\n    const handleUpdateStaffNotification = async () => {\n      if (refStaffNotificationForm.value === null) return\n      await refStaffNotificationForm.value.updateStaffNotification()\n    }\n    \n    const isDisabledStaffNotificationForm = computed(\n      () => isReadyStaffNotification.value === false\n    )\n\n    const handleShowEmailForm = () => {\n      console.log('Show email form triggered from child component')\n    }\n\n    watch(\n      () => ({ ...data.all }),\n      debounce(async () => {\n        cookie.set(`email-notification`, JSON.stringify(data.all))\n        await actionAll()\n      }, 400)\n    )\n\n    const isUseCache = !!route.query.filter\n    if (isUseCache) {\n      try {\n        const cachedQueries = cookie.get('email-notification')\n        if (cachedQueries !== null && typeof cachedQueries === 'object') {\n          Object.assign(data.all, cachedQueries)\n        }\n      } catch (err) {\n        console.warn('Error parsing notifications cache query')\n      }\n    }\n\n    await Promise.all([\n      actionAll(),\n      actionShowCompanyProfile(),\n      actionShowEmailTemplateTheme()\n    ])\n\n    return {\n      refStaffNotificationForm,\n      state,\n      data,\n      dataEmailSender,\n      loadingEmailSender,\n      modalEmailSender,\n      formDataEmailTemplateTheme,\n      loading,\n      loadingEmailTemplateTheme,\n      breadcrumb,\n      dataCompanyProfile,\n      loadingCompanyProfile,\n      validation,\n      emailTemplates,\n      updateEmailSender,\n      modal,\n      leadsName,\n      leads,\n      isMailIn,\n      emailTemplateTypes,\n      previewedEmailTemplate,\n      isPreviewEmailTemplate,\n      openModalEmailSender,\n      closeModalEmailSender,\n      isDisabledStaffNotificationForm,\n      isReadyStaffNotification,\n      editTemplate,\n      handleUpdateStatus,\n      handlePreviewEmailTemplate,\n      handleUpdateEmailTemplateTheme,\n      handleVerifyEmail,\n      handleUpdateEmailTemplateType,\n      verifyEmail,\n      showStaffForm,\n      handleUpdateStaffNotification,\n      handleShowEmailForm,\n      location\n    }\n  }\n})\n</script>\n\n<style scoped>\n  .btn.btn-outlined.btn-teal {\n    border: none !important;\n  }\n</style>\n","export default \"/images/notifications/how-we-format.png\"","import { defineComponent } from 'vue'\nimport { useSuspense } from 'composable/components'\nimport index from './index.vue'\n\nexport default defineComponent({\n  setup() {\n    const { genSuspense } = useSuspense()\n\n    return () => genSuspense(index)\n  }\n})"],"names":["_sfc_main","defineComponent","name","components","PreviewEmailTemplate","Pagination","Checkbox","Button","props","type","String","default","[object Object]","ctx","loading","preview","query","data","handlePreview","handleStatus","handleEdit","handleShow","useStaffNotificationList","watch","async","value","immediate","Tab","StaffNotificationsList","_openBlock","_createElementBlock","_Fragment","_createBlock","_component_Table","_ctx","_withCtx","_createVNode","_component_TableColumn","prop","label","scope","onUpdate:modelValue","$event","row","is_enable","value-off","disabled","_component_Dropdown","trigger","hide-on-click","placement","class","_component_DropdownItem","_cache","_component_Button","color","view","dense","_component_PreviewEmailTemplate","show","onUpdate:show","body","tabs","Array","ref","activeTab","isArray","_a","find","tab","deep","handleActiveTab","e","key","_component_Tab","items","model-value","component","by","disabled-items","title","_createElementVNode","_hoisted_1","_toDisplayString","item","_createCommentVNode","content","_hoisted_3","_hoisted_4","router","useRouter","previewTemplate","useGeneralNotification","link_to","push","params","id","Alert","Modal","Input","GroupContainer","CollapsibleCard","emits","emit","validate","methods","useEmailServer","computedTable","computed","table","computedUnverified","records","length","firstItem","is_active","valid","slice","some","computedTxtMxStatus","txtRecords","filter","record","record_type","mxRecords","allTxtValid","every","hasMxUnknownWithCache","cached","computedOptions","unverified","options","map","__spreadProps","__spreadValues","active","alert","editable","domain","computedShowTable","form","email","includes","splitter","split","index2","findIndex","result","splice","join","handleReset","reset","modal","sender","handleVerify","verify","res","code","verifying","handleCopyText","text","navigator","clipboard","writeText","then","_u","message","handleShowForm","region","continent","formCustom","handleSaveForm","$validate","add","handleCloseForm","all","Object","keys","$reset","_hoisted_2","_hoisted_8","_hoisted_10","_hoisted_12","_hoisted_13","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","Card","Breadcrumb","SVGLoader","GeneralNotifications","Colorpicker","InputVerificationCode","DefaultEmailSender","_hoisted_5","_createTextVNode","src","alt","_hoisted_7","_hoisted_9","_renderList","instructions","instruction","keyIn","_component_Alert","whitelabel","_withDirectives","_hoisted_11","_hoisted_14","_hoisted_17","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","hide-footer","show-close","hide-header","size","width","height","selected","_hoisted_26","close-on-click-modal","header","placeholder","$errors","emailError","nEmail","regionError","nRegion","footer","_hoisted_31","href","args","StaffNotifications","dataCompanyProfile","loadingCompanyProfile","actionShow","actionShowCompanyProfile","actionUpdate","actionUpdateCompanyProfile","useCompanyProfile","state","isMailIn","previewedEmailTemplate","isPreviewEmailTemplate","actionAll","actionUpdateStatus","actionPreviewEmailTemplate","location","emailTemplateTypes","useEmailTemplate","formData","formDataEmailTemplateTheme","actionUpdateEmailTemplateTheme","actionShowEmailTemplateTheme","loadingEmailTemplateTheme","useEmailTemplateTheme","dataEmailSender","loadingEmailSender","modalEmailSender","actionVerify","actionVerifyEmailSender","actionVerifyCheck","actionVerifyCheckEmailSender","openModal","openModalEmailSender","closeModal","closeModalEmailSender","useEmailSender","refStaffNotificationForm","isReadyStaffNotification","route","useRoute","cookie","useCookie","leadsName","leads","reactive","rules","email_sender","required","helpers","withMessage","validation","useVuelidate","$lazy","emailTemplates","deepClone","updateEmailSender","debounce","$invalid","isDisabledStaffNotificationForm","set","JSON","stringify","cachedQueries","get","assign","err","console","warn","Promise","breadcrumb","to","editTemplate","templateId","handleUpdateStatus","emailTemplateData","handlePreviewEmailTemplate","handleUpdateEmailTemplateTheme","handleVerifyEmail","isResend","handleUpdateEmailTemplateType","newData","verifyEmail","showStaffForm","is_online","handleUpdateStaffNotification","updateStaffNotification","handleShowEmailForm","log","_component_Breadcrumb","pageTitle","backTo","onClick","$refs","defaultEmailSender","_component_DefaultEmailSender","link","tag","target","referrerpolicy","_component_Tooltip","onInput","preview_email","total","limit","onUpdate:page","page","onUpdate:limit","_component_Modal","modelValue","verification","_component_InputVerificationCode","_withModifiers","index","genSuspense","useSuspense"],"mappings":"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"}