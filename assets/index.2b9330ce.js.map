{"version":3,"file":"index.2b9330ce.js","sources":["../../src/views/integration/whole-cell/header.vue","../../src/views/integration/whole-cell/index.vue","../../src/views/integration/whole-cell/index.js"],"sourcesContent":["<template>\n  <div class=\"flex items-center gap-x-2\">\n    WholeCell.io\n    <Tooltip>\n      <template #content>\n        <div class=\"w-80\">\n          <span class=\"text-sm\">{{ tooltipContent.title }}:</span>\n          <div class=\"pt-4 pl-4\">\n            <ul class=\"list-disc\">\n              <li\n                v-for=\"(content, n) in tooltipContent.contents\"\n                :key=\"n\"\n                class=\"text-sm leading-6\">\n                {{ content }}\n              </li>\n            </ul>\n          </div>\n        </div>\n      </template>\n      <span class=\"material-icons text-teal-04 text-4xl\">info</span>\n    </Tooltip>\n  </div>\n</template>\n\n<script>\nimport { defineComponent, ref } from 'vue'\n\nexport default defineComponent({\n  name: 'WholeCell Header',\n  setup() {\n    const tooltipContent = ref({\n      title: 'Purchase Orders in WholeCell.io will be mapped with the following information',\n      contents: [\n        'Channel = reusely.com',\n        'Status = completed',\n        'Transaction Number = buyback/offer ID',\n        'Organization = Customer Name',\n        'Purchase Order Date = date offer is completed'\n      ]\n    })\n\n    return {\n      tooltipContent\n    }\n  }\n})\n</script>\n","<template>\n  <Alert view=\"smooth\" color=\"blue\" class=\"mb-4\">\n    <div class=\"flex space-x-4\">\n      <i class=\"material-icons\">info</i>\n      <span>When enabling the Wholecell.io add-on, any product that is added to your inventory will automatically have a Purchase Order generated and moved to your Wholecell.io inventory.</span>\n    </div>\n  </Alert>\n  <Input v-model=\"data.wholecell_name\" :view=\"validation.wholecell_name.$invalid ? 'danger' : 'default'\" class=\"my-4\" label=\"WholeCell.io Name\" placeholder=\"WholeCell.io Name\" block />\n  <small class=\"text-red-base block mb-4\" v-for=\"(error, errorIndex) of validation.wholecell_name.$errors\" :key=\"errorIndex\">{{ error.$message }}. </small>\n  <Input v-model=\"data.wholecell_appid\" :view=\"validation.wholecell_appid.$invalid ? 'danger' : 'default'\" class=\"my-4\" label=\"WholeCell.io APP ID\" placeholder=\"WholeCell.io APP ID\" block />\n  <small class=\"text-red-base block mb-4\" v-for=\"(error, errorIndex) of validation.wholecell_appid.$errors\" :key=\"errorIndex\">{{ error.$message }}. </small>\n  <Input v-model=\"data.wholecell_secret_key\" :view=\"validation.wholecell_secret_key.$invalid ? 'danger' : 'default'\" class=\"my-4\" label=\"WholeCell.io App Secret\" placeholder=\"WholeCell.io App Secret\" block />\n  <small class=\"text-red-base block mb-4\" v-for=\"(error, errorIndex) of validation.wholecell_secret_key.$errors\" :key=\"errorIndex\">{{ error.$message }}. </small>\n  <Button color=\"teal\" @click=\"testConnection\" :loading=\"loadingTestConnection\">Test Connection</Button>\n</template>\n\n<script>\nimport { defineComponent } from 'vue'\nimport { useShowAll, useTestConnection } from 'composable/integration'\nimport { useVuelidate } from '@vuelidate/core'\nimport { required } from '@/validations/index'\nimport Button from 'bbUi/components/button/button.vue'\nimport Alert from 'bbUi/components/alert/alert.vue'\nimport Input from 'bbUi/components/input/input.vue'\nimport { ElMessage } from 'element-plus'\nimport { isFunction } from '@/utils/is'\n\nexport default defineComponent({\n  components: {\n    Button,\n    Alert,\n    Input\n  },\n  async setup(){\n    const { state, data, actionAll, actionUpdate, loading } = useShowAll()\n    const { wholeCell: actionTestConnection, loading: loadingTestConnection } = useTestConnection()\n    const rules = {\n      wholecell_name: { required },\n      wholecell_appid: { required },\n      wholecell_secret_key: { required }\n    }\n    const validation = useVuelidate(rules, data, {\n      $lazy: true\n    })\n    const validate = () => {\n      validation.value.$validate()\n      return !validation.value.$invalid\n    }\n\n    const update = async (callback=()=>{}) => {\n      const isValid = validate()\n      if( !isValid ) return\n      const payload = Object.assign({}, {\n        wholecell_name: data.wholecell_name,\n        wholecell_appid: data.wholecell_appid,\n        wholecell_secret_key: data.wholecell_secret_key\n      })\n      await actionUpdate(payload, (response) => {\n        if( response.toLowerCase() === 'connection failed' ) return ElMessage({\n          type: 'warning',\n          message: 'WholeCell.io connection failed'\n        })\n        ElMessage({\n          type: 'success',\n          message: 'WholeCell.io integration updated!'\n        })\n        isFunction(callback) && callback()\n      })\n    }\n    const testConnection = async () => {\n      const isValid = validate()\n      if( !isValid ) return\n      const payload = {\n        wholecell_name: data.wholecell_name,\n        wholecell_appid: data.wholecell_appid,\n        wholecell_secret_key: data.wholecell_secret_key\n      }\n      await actionTestConnection(payload)\n    }\n\n    await Promise.all([\n      actionAll()\n    ])\n\n    return {\n      state,\n      data,\n      loading,\n      loadingTestConnection,\n      validation,\n      testConnection,\n      update\n    }\n  }\n})\n</script>","import { defineComponent, h, ref, reactive } from 'vue'\nimport { useSuspense } from 'composable/components'\nimport { useRoute, useRouter } from 'vue-router'\nimport Modal from 'bbUi/components/modal/modal.vue'\nimport Button from 'bbUi/components/button/button.vue'\nimport Header from './header.vue'\nimport Index from './index.vue'\n\nexport default defineComponent({\n  async setup() {\n    const { genSuspense } = useSuspense()\n    const refComponent = ref(null)\n    const route = useRoute()\n    const router = useRouter()\n\n    const saveChanges = () => {\n      refComponent.value.update(() => {\n        router.push({\n          name: 'integration',\n          query: {\n            enable: route.query?.id || ''\n          }\n        })\n      })\n    }\n    const genSaveButton = () =>\n      h(\n        Button,\n        {\n          color: 'teal',\n          loading: refComponent.value && refComponent.value?.loading?.update,\n          onClick: saveChanges\n        },\n        {\n          default: () => 'Save'\n        }\n      )\n    const genComponent = () =>\n      genSuspense(\n        h(Index, {\n          ref: refComponent\n        })\n      )\n    const modalProps = reactive({\n      modelValue: true,\n      closeTo: {\n        name: 'integration',\n        query: {\n          reload: 1\n        }\n      },\n      size: 'xs'\n    })\n    const modalSlots = reactive({\n      header: () => genSuspense(h(Header)),\n      default: () => genComponent(),\n      footer: () => genSaveButton()\n    })\n\n    return () => h(Modal, modalProps, modalSlots)\n  }\n})\n"],"names":["_sfc_main","defineComponent","name","setup","tooltipContent","ref","title","contents","_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_cache","_createTextVNode","_createVNode","content","_withCtx","_createElementVNode","_toDisplayString","_ctx","_hoisted_5","_Fragment","_renderList","n","_openBlock","_createElementBlock","key","default","components","Button","Alert","Input","state","data","actionAll","actionUpdate","loading","useShowAll","wholeCell","actionTestConnection","loadingTestConnection","useTestConnection","validation","useVuelidate","wholecell_name","required","wholecell_appid","wholecell_secret_key","$lazy","validate","value","$validate","$invalid","Promise","all","testConnection","async","payload","update","callback","Object","assign","response","toLowerCase","ElMessage","type","message","_u","isFunction","_component_Alert","view","color","_component_Input","modelValue","onUpdate:modelValue","$event","label","placeholder","$errors","error","errorIndex","_component_Button","onClick","index","[object Object]","genSuspense","useSuspense","refComponent","route","useRoute","router","useRouter","saveChanges","push","query","enable","_a","id","modalProps","reactive","closeTo","reload","size","modalSlots","header","h","Header","Index","footer","genSaveButton","_b","Modal"],"mappings":"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"}