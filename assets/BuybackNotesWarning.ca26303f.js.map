{"version":3,"file":"BuybackNotesWarning.ca26303f.js","sources":["../../src/components/Features/Buyback/BuybackNotes/BuybackNotesWarning.vue"],"sourcesContent":["<script setup>\nimport { ref, watch, nextTick, computed, defineEmits } from 'vue'\nimport { useBuybackNotes } from  '@/store/pinia/buyback/notes'\n\nimport Button from 'bbUi/components/button/button.vue'\nimport Checkbox from 'bbUi/components/checkbox/checkbox.vue'\nimport Fieldset from 'bbUi/components/fieldset/fieldset.vue'\n\nconst emits = defineEmits([\n  'proceed'\n])\n\nconst store = useBuybackNotes()\nconst notesContainer = ref()\nconst timer = ref(null)\nconst timerDone = ref(false)\nconst isRead = ref(false)\nconst isScrollAble = ref(false)\nconst countdown = ref(15)\nconst interval = ref(null)\nconst disabled = computed(() => {\n  const canNotCheck = !isRead.value\n    // !timerDone.value ||\n\n  return {\n    checkbox: canNotCheck || !!store.warningNotes.isLoading,\n    button: !store?.warningNotes?.isReviewed || !!store.warningNotes.isLoading\n  }\n})\n// const minutes = computed(() => Math.floor(countdown.value / 15))\n// const seconds = computed(() => countdown.value % 15)\n\nconst startCountdown = () => {\n  countdown.value = 15\n  interval.value = setInterval(() => {\n    if (countdown.value > 0) {\n      countdown.value--\n    } else clearInterval(interval.value)\n  }, 1000)\n}\n\nconst onShow = () => {\n  nextTick(() => {\n    if (notesContainer.value) {\n      // clearTimeout(timer.value)\n      // clearInterval(interval.value)\n      isScrollAble.value = true\n      // timerDone.value = false\n      isRead.value = false\n\n      // countdown.value = 15\n      // startCountdown()\n\n      const { scrollHeight, clientHeight } = notesContainer.value\n      if (scrollHeight === clientHeight) {\n        isScrollAble.value = false\n        isRead.value = true\n      }\n      notesContainer.value.addEventListener('scroll', onScroll)\n      // timer.value = setTimeout(() => {\n      //   timerDone.value = true\n      // }, 15000)\n    }\n  })\n}\n\nconst onLoad = async () => {\n  store.warningNotes.page = store.warningNotes.page + 1\n  await store.$getNotesUnread()\n  // clearTimeout(timer.value)\n  // clearInterval(interval.value)\n  // timerDone.value = false\n  isRead.value = false\n\n  // countdown.value = 60\n  // startCountdown()\n\n  // timer.value = setTimeout(() => {\n  //   timerDone.value = true\n  // }, 60000)\n}\n\nconst onCancel = () => {\n  clearTimeout(timer.value)\n  clearInterval(interval.value)\n  if (notesContainer.value) notesContainer.value.removeEventListener('scroll', onScroll)\n  store.warningNotes.modal = false\n  store.warningNotes.isLoading = false\n  store.warningNotes.isReviewed = false\n}\n\nconst onScroll = async (e) => {\n  const el = e.target\n  const { scrollTop, scrollHeight, clientHeight } = el\n\n  const isAtBottom = scrollTop + clientHeight >= scrollHeight - 1\n  // const isAtTop = scrollTop === 0\n  // if (isAtTop) console.log('Scroll On Top')\n\n  if (isAtBottom) {\n    if (\n      store.warningNotes.page < store.warningNotes.lastPage &&\n      !store.warningNotes.isLoading\n    ) {\n      await onLoad()\n    } else {\n      isRead.value = true\n    }\n  } else {\n    isRead.value = false\n  }\n}\n\nconst onProceed = async () => {\n  const isSucceed = await store.$updateNotesUnread()\n  if (isSucceed) {\n    onCancel()\n    emits('proceed')\n  }\n}\n\nwatch(() => store.warningNotes.modal, (val) => {\n  if (val) onShow()\n})\n\n</script>\n\n<template>\n  <Teleport to=\"body\">\n    <Transition name=\"fade\">\n      <div\n        v-show=\"store.warningNotes.modal\"\n        :class=\"[\n          'bg-black bg-opacity-10',\n          'fixed inset-0 flex items-center',\n          'justify-center transition-all',\n          'ease-in-out duration-300'\n        ]\"\n        :style=\"{\n          zIndex: store.warningNotes.modal ? 1001 : 0\n        }\">\n        <div\n          :class=\"[\n            'max-w-5xl bg-white rounded-xl p-16',\n            'w-full flex flex-col gap-y-8 border border-grey-01',\n            'shadow border-opacity-50 text-teal-base'\n          ]\"\n          :style=\"{\n            maxHeight: `calc(100vh - 4rem)`\n          }\">\n          <div class=\"flex-shrink-0\">\n            <div class=\"space-y-8\">\n              <img\n                width=\"95\"\n                height=\"95\"\n                alt=\"Warning Icon\"\n                src=\"@/assets/icon/attention-orange.svg\"\n                class=\"mx-auto\"\n              />\n              <p class=\"text-2xl font-medium text-center\">The Offer Contains Internal Notes</p>\n            </div>\n          </div>\n          <div\n            ref=\"notesContainer\"\n            :class=\"[\n              'flex-1',\n              'overflow-y-auto'\n            ]\">\n            <div class=\"space-y-4\">\n              <div\n                v-for=\"(item, n) in store.warningNotes.notes\"\n                :key=\"n\">\n                <Fieldset\n                  v-if=\"item.order_notes.length\"\n                  class=\"rounded-md\">\n                  <template #label>\n                    <div class=\"flex items-center gap-x-3\">\n                      <p class=\"font-medium text-grey-03\">{{ item.box_id }}</p>\n                      <div\n                        v-if=\"item.order_notes?.length\"\n                        class=\"rounded-full bg-grey-03 px-3.5 py-0.5 text-white text-sm font-semibold\">\n                        {{ item.order_notes.length }}\n                      </div>\n                    </div>\n                  </template>\n                  <div class=\"space-y-6\">\n                    <div\n                      v-for=\"(note, m) in item.order_notes\"\n                      :key=\"`${n}_${m}`\"\n                      class=\"space-y-2\">\n                      <p class=\"text-sm text-grey-02\">By\n                        <span class=\"capitalize\">\n                          {{ note?.first_name }} {{ note?.last_name }}\n                        </span>\n                        - {{ note.created_at }}\n                      </p>\n                      <p class=\"text-grey-04\">{{ note.note }}</p>\n                    </div>\n                  </div>\n                </Fieldset>\n              </div>\n            </div>\n          </div>\n          <div\n            v-loading=\"store.warningNotes.isLoading\"\n            class=\"flex-shrink-0\">\n            <div class=\"space-y-8\">\n              <div class=\"inline-flex gap-x-4 items-center\">\n                <Tooltip placement=\"top-start\" :disabled=\"!disabled.checkbox\">\n                  <template #content>\n                    <div>\n                      Read the notes first to change the offer status.\n                    </div>\n                  </template>\n                  <template #default>\n                    <div>\n                      <Checkbox\n                        v-model=\"store.warningNotes.isReviewed\"\n                        :disabled=\"disabled.checkbox\"\n                      />\n                    </div>\n                  </template>\n                </Tooltip>\n                <div>\n                  <p :class=\"disabled.checkbox ? 'text-grey-01 cursor-not-allowed' : 'text-grey-03'\">\n                    I have reviewed the internal notes associated with this offer.\n                  </p>\n                </div>\n              </div>\n              <div class=\"flex items-center justify-center gap-x-4\">\n                <Button color=\"teal\" :disabled=\"disabled.button\" @click=\"onProceed\">Proceed</Button>\n                <Button color=\"teal\" view=\"smooth\" @click=\"onCancel\">Cancel</Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Transition>\n  </Teleport>\n</template>\n"],"names":["emits","__emit","store","useBuybackNotes","notesContainer","ref","timer","isRead","isScrollAble","interval","disabled","computed","checkbox","value","warningNotes","isLoading","button","_a","isReviewed","onCancel","clearTimeout","clearInterval","removeEventListener","onScroll","modal","async","e","el","target","scrollTop","scrollHeight","clientHeight","page","lastPage","$getNotesUnread","onLoad","onProceed","$updateNotesUnread","watch","val","nextTick","addEventListener"],"mappings":"+gCAQA,MAAMA,EAAQC,EAIRC,EAAQC,IACRC,EAAiBC,IACjBC,EAAQD,EAAI,MACIA,GAAA,GACtB,MAAME,EAASF,GAAI,GACbG,EAAeH,GAAI,GACHA,EAAA,IACtB,MAAMI,EAAWJ,EAAI,MACfK,EAAWC,GAAS,WAIjB,MAAA,CACLC,UAJmBL,EAAOM,SAICX,EAAMY,aAAaC,UAC9CC,SAAS,OAAOC,EAAA,MAAAf,OAAA,EAAAA,EAAAY,uBAAcI,eAAgBhB,EAAMY,aAAaC,cAwD/DI,EAAW,KACfC,aAAad,EAAMO,OACnBQ,cAAcZ,EAASI,OACnBT,EAAeS,OAAsBT,EAAAS,MAAMS,oBAAoB,SAAUC,GAC7ErB,EAAMY,aAAaU,OAAQ,EAC3BtB,EAAMY,aAAaC,WAAY,EAC/Bb,EAAMY,aAAaI,YAAa,GAG5BK,EAAWE,MAAOC,IACtB,MAAMC,EAAKD,EAAEE,QACPC,UAAEA,EAAWC,aAAAA,EAAAC,aAAcA,GAAiBJ,EAE/BE,EAAYE,GAAgBD,EAAe,EAM1D5B,EAAMY,aAAakB,KAAO9B,EAAMY,aAAamB,WAC5C/B,EAAMY,aAAaC,eApCXU,WACbvB,EAAMY,aAAakB,KAAO9B,EAAMY,aAAakB,KAAO,QAC9C9B,EAAMgC,kBAIZ3B,EAAOM,OAAQ,GAgCLsB,GAEN5B,EAAOM,OAAQ,EAGjBN,EAAOM,OAAQ,GAIbuB,GAAYX,gBACQvB,EAAMmC,uBAE5BlB,IACMnB,EAAA,oBAIVsC,GAAM,IAAMpC,EAAMY,aAAaU,QAAQe,IACjCA,GAhFJC,GAAS,KACP,GAAIpC,EAAeS,MAAO,CAGxBL,EAAaK,OAAQ,EAErBN,EAAOM,OAAQ,EAKT,MAAAiB,aAAEA,EAAcC,aAAAA,GAAiB3B,EAAeS,MAClDiB,IAAiBC,IACnBvB,EAAaK,OAAQ,EACrBN,EAAOM,OAAQ,GAEFT,EAAAS,MAAM4B,iBAAiB,SAAUlB"}