{"version":3,"file":"index.a898cb0a.js","sources":["../../src/store/pinia/integration.js","../../src/views/integration/tremendous/callback/index.vue"],"sourcesContent":["import { defineStore } from 'pinia'\nimport request from 'utils/request'\n\nexport const useIntegration = defineStore('integration', {\n\tstate: () => {\n\t\treturn {\n\t\t\tget: {\n\t\t\t\tisLoading: false,\n\t\t\t\tresult: undefined\n\t\t\t},\n\t\t\tgetAll: {\n\t\t\t\tisLoading: false,\n\t\t\t\tresult: undefined\n\t\t\t},\n\t\t\tupdate: {\n\t\t\t\tisLoading: false\n\t\t\t}\n\t\t}\n\t},\n\tgetters: {},\n\tactions: {\n\t\tasync $get(payload) {\n\t\t\tconst response = await request({\n\t\t\t\turl: `/v1/pos/integrations/${payload.id}`,\n\t\t\t\tmethod: 'get'\n\t\t\t})\n\n\t\t\tthis.$state.get.result = response\n\n\t\t\treturn response\n\t\t},\n\t\tasync $getAll(payload) {\n\t\t\tconst response = await request({\n\t\t\t\turl: `/v1/pos/integrations`,\n\t\t\t\tmethod: 'get'\n\t\t\t})\n\n\t\t\tthis.$state.getAll.result = response\n\n\t\t\treturn response\n\t\t},\n\t\tasync $update(payload) {\n\t\t\treturn await request({\n\t\t\t\turl: `/v1/pos/integrations/${payload.id}`,\n\t\t\t\tmethod: 'put',\n\t\t\t\tdata: payload.data\n\t\t\t})\n\t\t}\n\t}\n})\n","<script setup async>\nimport { useRoute, useRouter } from 'vue-router'\nimport { useAll } from '@/composable/integration'\nimport { useIntegration } from '@/store/pinia/integration'\nimport { useIntegrationTremendous } from '@/store/pinia/integration/tremendeous'\n\nimport BaseLoading from '@/components/BaseLoading.vue'\n\nconst route = useRoute()\nconst router = useRouter()\nconst integrationStore = useIntegration()\nconst integrationTremendousStore = useIntegrationTremendous()\nconst { getIntegrationByName, enableIntegrationByName } = useAll()\n\nawait integrationTremendousStore\n\t.$claimToken({\n\t\tdata: {\n\t\t\tcode: route.query.code\n\t\t}\n\t})\n\t.then(async () => {\n\t\tconst tremendous = getIntegrationByName('tremendous')\n\n\t\tawait integrationStore.$update({\n\t\t\tid: tremendous.id,\n\t\t\tdata: {\n\t\t\t\tis_enable: 1\n\t\t\t}\n\t\t})\n\t\tawait integrationTremendousStore.$get()\n\n\t\tenableIntegrationByName('tremendous')\n\n\t\tawait router.push({\n\t\t\tname: 'integrationTremendousCampaignTemplate'\n\t\t})\n\t})\n\t// .catch(error => {\n\t// \tconsole.log(error)\n\t// \tElMessage({\n\t// \t\ttype: 'error',\n\t// \t\tmessage: error.response.data.errors.error_description\n\t// \t})\n\t// \trouter.push({\n\t// \t\tname: 'integrationTremendousConnect'\n\t// \t})\n\t// })\n</script>\n\n<template>\n\t<BaseLoading />\n</template>\n"],"names":["useIntegration","defineStore","state","get","isLoading","result","getAll","update","getters","actions","[object Object]","payload","response","request","url","id","method","this","$state","$update","data","route","useRoute","router","useRouter","integrationStore","integrationTremendousStore","useIntegrationTremendous","getIntegrationByName","enableIntegrationByName","useAll","__temp","__restore","_withAsyncContext","async","$claimToken","code","query","then","tremendous","is_enable","$get","push","name"],"mappings":"oNAGO,MAAMA,EAAiBC,EAAY,cAAe,CACxDC,MAAO,KACC,CACNC,IAAK,CACJC,WAAW,EACXC,YAAQ,GAETC,OAAQ,CACPF,WAAW,EACXC,YAAQ,GAETE,OAAQ,CACPH,WAAW,KAIdI,QAAS,GACTC,QAAS,CAAAC,WACGC,GACJ,MAAAC,QAAiBC,EAAQ,CAC9BC,IAAK,wBAAwBH,EAAQI,KACrCC,OAAQ,QAKF,OAFFC,KAAAC,OAAOf,IAAIE,OAASO,EAElBA,GAAAF,cAEMC,GACP,MAAAC,QAAiBC,EAAQ,CAC9BC,IAAK,uBACLE,OAAQ,QAKF,OAFFC,KAAAC,OAAOZ,OAAOD,OAASO,EAErBA,GAAAO,cAEMR,SACAE,EAAQ,CACpBC,IAAK,wBAAwBH,EAAQI,KACrCC,OAAQ,MACRI,KAAMT,EAAQS,mDCrClB,MAAMC,EAAQC,IACRC,EAASC,IACTC,EAAmBzB,IACnB0B,EAA6BC,KAC7BC,qBAAEA,0BAAsBC,GAA4BC,WAEpDC,EAAAC,GAAAC,GAAAC,SAAAR,EACJS,YAAY,CACZf,KAAM,CACLgB,KAAMf,EAAMgB,MAAMD,QAGnBE,MAAKJ,UACL,MAAMK,EAAaX,EAAqB,oBAElCH,EAAiBN,QAAQ,CAC9BJ,GAAIwB,EAAWxB,GACfK,KAAM,CACLoB,UAAW,WAGPd,EAA2Be,OAETZ,EAAA,oBAElBN,EAAOmB,KAAK,CACjBC,KAAM"}