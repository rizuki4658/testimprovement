{"version":3,"file":"InputPhone.1335d16b.js","sources":["../../node_modules/libphonenumber-js/examples.mobile.json.js","../../src/components/InputPhone.vue"],"sourcesContent":["// This file is a workaround for a bug in web browsers' \"native\"\n// ES6 importing system which is uncapable of importing \"*.json\" files.\n// https://github.com/catamphetamine/libphonenumber-js/issues/239\nexport default {\"AC\":\"40123\",\"AD\":\"312345\",\"AE\":\"501234567\",\"AF\":\"701234567\",\"AG\":\"2684641234\",\"AI\":\"2642351234\",\"AL\":\"672123456\",\"AM\":\"77123456\",\"AO\":\"923123456\",\"AR\":\"91123456789\",\"AS\":\"6847331234\",\"AT\":\"664123456\",\"AU\":\"412345678\",\"AW\":\"5601234\",\"AX\":\"412345678\",\"AZ\":\"401234567\",\"BA\":\"61123456\",\"BB\":\"2462501234\",\"BD\":\"1812345678\",\"BE\":\"470123456\",\"BF\":\"70123456\",\"BG\":\"43012345\",\"BH\":\"36001234\",\"BI\":\"79561234\",\"BJ\":\"0195123456\",\"BL\":\"690001234\",\"BM\":\"4413701234\",\"BN\":\"7123456\",\"BO\":\"71234567\",\"BQ\":\"3181234\",\"BR\":\"11961234567\",\"BS\":\"2423591234\",\"BT\":\"17123456\",\"BW\":\"71123456\",\"BY\":\"294911911\",\"BZ\":\"6221234\",\"CA\":\"5062345678\",\"CC\":\"412345678\",\"CD\":\"991234567\",\"CF\":\"70012345\",\"CG\":\"061234567\",\"CH\":\"781234567\",\"CI\":\"0123456789\",\"CK\":\"71234\",\"CL\":\"221234567\",\"CM\":\"671234567\",\"CN\":\"13123456789\",\"CO\":\"3211234567\",\"CR\":\"83123456\",\"CU\":\"51234567\",\"CV\":\"9911234\",\"CW\":\"95181234\",\"CX\":\"412345678\",\"CY\":\"96123456\",\"CZ\":\"601123456\",\"DE\":\"15123456789\",\"DJ\":\"77831001\",\"DK\":\"34412345\",\"DM\":\"7672251234\",\"DO\":\"8092345678\",\"DZ\":\"551234567\",\"EC\":\"991234567\",\"EE\":\"51234567\",\"EG\":\"1001234567\",\"EH\":\"650123456\",\"ER\":\"7123456\",\"ES\":\"612345678\",\"ET\":\"911234567\",\"FI\":\"412345678\",\"FJ\":\"7012345\",\"FK\":\"51234\",\"FM\":\"3501234\",\"FO\":\"211234\",\"FR\":\"612345678\",\"GA\":\"06031234\",\"GB\":\"7400123456\",\"GD\":\"4734031234\",\"GE\":\"555123456\",\"GF\":\"694201234\",\"GG\":\"7781123456\",\"GH\":\"231234567\",\"GI\":\"57123456\",\"GL\":\"221234\",\"GM\":\"3012345\",\"GN\":\"601123456\",\"GP\":\"690001234\",\"GQ\":\"222123456\",\"GR\":\"6912345678\",\"GT\":\"51234567\",\"GU\":\"6713001234\",\"GW\":\"955012345\",\"GY\":\"6091234\",\"HK\":\"51234567\",\"HN\":\"91234567\",\"HR\":\"921234567\",\"HT\":\"34101234\",\"HU\":\"201234567\",\"ID\":\"812345678\",\"IE\":\"850123456\",\"IL\":\"502345678\",\"IM\":\"7924123456\",\"IN\":\"8123456789\",\"IO\":\"3801234\",\"IQ\":\"7912345678\",\"IR\":\"9123456789\",\"IS\":\"6111234\",\"IT\":\"3123456789\",\"JE\":\"7797712345\",\"JM\":\"8762101234\",\"JO\":\"790123456\",\"JP\":\"9012345678\",\"KE\":\"712123456\",\"KG\":\"700123456\",\"KH\":\"91234567\",\"KI\":\"72001234\",\"KM\":\"3212345\",\"KN\":\"8697652917\",\"KP\":\"1921234567\",\"KR\":\"1020000000\",\"KW\":\"50012345\",\"KY\":\"3453231234\",\"KZ\":\"7710009998\",\"LA\":\"2023123456\",\"LB\":\"71123456\",\"LC\":\"7582845678\",\"LI\":\"660234567\",\"LK\":\"712345678\",\"LR\":\"770123456\",\"LS\":\"50123456\",\"LT\":\"61234567\",\"LU\":\"628123456\",\"LV\":\"21234567\",\"LY\":\"912345678\",\"MA\":\"650123456\",\"MC\":\"612345678\",\"MD\":\"62112345\",\"ME\":\"67622901\",\"MF\":\"690001234\",\"MG\":\"321234567\",\"MH\":\"2351234\",\"MK\":\"72345678\",\"ML\":\"65012345\",\"MM\":\"92123456\",\"MN\":\"88123456\",\"MO\":\"66123456\",\"MP\":\"6702345678\",\"MQ\":\"696201234\",\"MR\":\"22123456\",\"MS\":\"6644923456\",\"MT\":\"96961234\",\"MU\":\"52512345\",\"MV\":\"7712345\",\"MW\":\"991234567\",\"MX\":\"2221234567\",\"MY\":\"123456789\",\"MZ\":\"821234567\",\"NA\":\"811234567\",\"NC\":\"751234\",\"NE\":\"93123456\",\"NF\":\"381234\",\"NG\":\"8021234567\",\"NI\":\"81234567\",\"NL\":\"612345678\",\"NO\":\"40612345\",\"NP\":\"9841234567\",\"NR\":\"5551234\",\"NU\":\"8884012\",\"NZ\":\"211234567\",\"OM\":\"92123456\",\"PA\":\"61234567\",\"PE\":\"912345678\",\"PF\":\"87123456\",\"PG\":\"70123456\",\"PH\":\"9051234567\",\"PK\":\"3012345678\",\"PL\":\"512345678\",\"PM\":\"551234\",\"PR\":\"7872345678\",\"PS\":\"599123456\",\"PT\":\"912345678\",\"PW\":\"6201234\",\"PY\":\"961456789\",\"QA\":\"33123456\",\"RE\":\"692123456\",\"RO\":\"712034567\",\"RS\":\"601234567\",\"RU\":\"9123456789\",\"RW\":\"720123456\",\"SA\":\"512345678\",\"SB\":\"7421234\",\"SC\":\"2510123\",\"SD\":\"911231234\",\"SE\":\"701234567\",\"SG\":\"81234567\",\"SH\":\"51234\",\"SI\":\"31234567\",\"SJ\":\"41234567\",\"SK\":\"912123456\",\"SL\":\"25123456\",\"SM\":\"66661212\",\"SN\":\"701234567\",\"SO\":\"71123456\",\"SR\":\"7412345\",\"SS\":\"977123456\",\"ST\":\"9812345\",\"SV\":\"70123456\",\"SX\":\"7215205678\",\"SY\":\"944567890\",\"SZ\":\"76123456\",\"TA\":\"8999\",\"TC\":\"6492311234\",\"TD\":\"63012345\",\"TG\":\"90112345\",\"TH\":\"812345678\",\"TJ\":\"917123456\",\"TK\":\"7290\",\"TL\":\"77212345\",\"TM\":\"66123456\",\"TN\":\"20123456\",\"TO\":\"7715123\",\"TR\":\"5012345678\",\"TT\":\"8682911234\",\"TV\":\"901234\",\"TW\":\"912345678\",\"TZ\":\"621234567\",\"UA\":\"501234567\",\"UG\":\"712345678\",\"US\":\"2015550123\",\"UY\":\"94231234\",\"UZ\":\"912345678\",\"VA\":\"3123456789\",\"VC\":\"7844301234\",\"VE\":\"4121234567\",\"VG\":\"2843001234\",\"VI\":\"3406421234\",\"VN\":\"912345678\",\"VU\":\"5912345\",\"WF\":\"821234\",\"WS\":\"7212345\",\"XK\":\"43201234\",\"YE\":\"712345678\",\"YT\":\"639012345\",\"ZA\":\"711234567\",\"ZM\":\"955123456\",\"ZW\":\"712345678\"}","<template>\n  <label v-if=\"label\" class=\"block\">{{ label }}</label>\n  <label v-else :for=\"name\">\n    <slot name=\"label\"></slot>\n  </label>\n  <div\n    :class=\"[\n      'input-phone',\n      'relative',\n      'w-max',\n      'max-w-full',\n      isBlock,\n      isDisabled\n    ]\"\n  >\n    <div class=\"input-phone__country-wrapper rounded-lg\">\n      <SelectCountry\n        :selected=\"country\"\n        class=\"input-phone w-full\"\n        @select=\"handleSelectCountry\"\n        @change=\"handleCountryChange\"\n        :disabled=\"disabled\"\n        :countries=\"countries\"\n        :static-position=\"staticPosition\"\n        :placement=\"placement\"\n        rounded\n        phone\n      >\n        <template #selected=\"scoped\">\n          <img\n            :src=\"`/flag/${scoped.data.country_code?.toLowerCase()}.svg`\"\n            width=\"16\"\n            class=\"mr-2\"\n          />\n          <span>{{ scoped.data.country_code }}</span>\n          <span class=\"text-grey-02 mx-1\">+{{ scoped.data.phone_code }}</span>\n        </template>\n        <template #option=\"scoped\">\n          <div class=\"mr-4 flex items-center\">\n            <i\n              v-if=\"scoped.data.selected\"\n              class=\"material-icons mr-4 text-teal-04\"\n              >check_circle</i\n            >\n            <img\n              :src=\"`/flag/${scoped.data.country.country_code?.toLowerCase()}.svg`\"\n              width=\"18\"\n            />\n          </div>\n          <div>\n            {{ scoped.data.country.nicename }}\n            <span class=\"text-grey-02\"\n              >+{{ scoped.data.country.phone_code }}</span\n            >\n          </div>\n        </template>\n      </SelectCountry>\n    </div>\n    <input\n      :id=\"name\"\n      :name=\"name\"\n      :autocomplete=\"autocomplete ? 'phone' : 'none'\"\n      v-model=\"phoneFormat\"\n      :placeholder=\"phonePlaceholder\"\n      type=\"text\"\n      class=\"input-phone__phone-number w-full flex-1\"\n      :disabled=\"disabled\"\n      @keypress=\"handleKeypress\"\n    />\n  </div>\n</template>\n\n<script>\nimport { computed, defineComponent, onMounted, ref, watch } from 'vue'\nimport { useUser } from 'composable/user'\nimport examples from 'libphonenumber-js/examples.mobile.json'\n\nimport {\n  getExampleNumber,\n  parsePhoneNumber,\n  getCountries,\n  getPhoneCode,\n  getCountryCallingCode,\n  isValidPhoneNumber,\n  AsYouType\n} from 'libphonenumber-js'\nimport Button from 'bbUi/components/button/button.vue'\nimport SelectCountry from 'components/SelectCountry.vue'\n\nexport default defineComponent({\n  name: 'InputPhone',\n  components: {\n    Button,\n    SelectCountry\n  },\n  props: {\n    modelValue: {\n      type: String,\n      default: ''\n    },\n    country: {\n      type: String,\n      default: 'US'\n    },\n    block: {\n      type: Boolean,\n      default: false\n    },\n    label: {\n      type: String,\n      default: ''\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    countryAutofillSetting: {\n      type: Boolean,\n      default: false\n    },\n    value: {\n      type: String,\n      default: ''\n    },\n    autocomplete: {\n      type: Boolean,\n      default: false\n    },\n    staticPosition: {\n      type: Boolean,\n      default: false\n    },\n    placement: {\n      type: String,\n      default: 'bottom'\n    },\n    name: {\n      type: String,\n      default: 'name-input-phone'\n    }\n  },\n  emits: ['update:modelValue', 'validation'],\n  setup(props, { emit }) {\n    const { me } = useUser()\n    const phoneValue = ref(props.modelValue)\n    const rawPhoneValue = ref('')\n    const country = ref(props.country)\n    const isValid = ref(false)\n    const displayCountryName = new Intl.DisplayNames(['en'], { type: 'region' })\n    const countries = getCountries().map((countryCode) => ({\n      country_code: countryCode,\n      nicename: displayCountryName.of(countryCode),\n      iso3: '',\n      phone_code: getPhoneCode(countryCode)\n    }))\n\n    if (props.countryAutofillSetting) {\n      country.value = countries\n        .map((country) => country.country_code)\n        .includes(me.value.country_code)\n        ? me.value.country_code\n        : 'US'\n    }\n\n    const phonePlaceholder = computed(() => {\n      const phoneNumber = getExampleNumber(country.value, examples)\n      return phoneNumber.formatNational()\n    })\n    const phoneFormat = computed({\n      set(newVal) {\n        rawPhoneValue.value = newVal\n        const asYouType = new AsYouType({ defaultCountry: country.value })\n        asYouType.input(newVal || '')\n        phoneValue.value = asYouType.getNumber()?.formatInternational() || ''\n      },\n      get() {\n        const asYouType = new AsYouType({\n          defaultCountry: country.value\n        })\n        asYouType.input(phoneValue.value || '')\n        const nationalNumber = asYouType.getNumber()?.nationalNumber || ''\n        return new AsYouType({\n          defaultCountry: country.value\n        }).input(nationalNumber || rawPhoneValue.value)\n      }\n    })\n    const isBlock = computed(() => (props.block && '--block') || '')\n    const isDisabled = computed(() => (props.disabled && '--disabled') || '')\n\n    watch(\n      () => phoneValue.value,\n      (newNumber) => {\n        const isValidPhone = isValidPhoneNumber(newNumber || '')\n        isValid.value = isValidPhone\n        try {\n          const newCountryCode = parsePhoneNumber(newNumber || '').country\n          if (newCountryCode) {\n            country.value = newCountryCode\n            isValid.value = isValidPhoneNumber(newNumber || '')\n          }\n        } catch (err) {\n          if (!country.value && props.countryAutofillSetting) {\n            country.value = countries\n              .map((country) => country.country_code)\n              .includes(me.value.country_code)\n              ? me.value.country_code\n              : 'US'\n          }\n          isValid.value = false\n        }\n        emit('update:modelValue', newNumber)\n        emit('validation', isValidPhone)\n      }\n    )\n    watch(\n      () => props.modelValue,\n      (newValue) => {\n        rawPhoneValue.value = ''\n        phoneValue.value = newValue\n      }\n    )\n    onMounted(() => {\n      const phoneNumber = props.modelValue\n      try {\n        const countryCode = parsePhoneNumber(phoneNumber || '').country\n        if (countryCode) {\n          phoneValue.value = phoneNumber\n          country.value = countryCode\n          isValid.value = isValidPhoneNumber(phoneNumber || '')\n        }\n      } catch {\n        if (phoneNumber) {\n          const defaultCountryCode = getCountryCallingCode(country.value)\n          phoneValue.value = `+${defaultCountryCode}${phoneNumber || ''}`\n          isValid.value = isValidPhoneNumber(phoneValue.value || '')\n        }\n      }\n    })\n\n    const handleSelectCountry = () => {\n      phoneValue.value = ''\n    }\n    const handleCountryChange = (selectedCountry) => {\n      country.value = selectedCountry.country_code\n    }\n    const handleKeypress = (ev) => {\n      const isNumberKeyCode = ev.keyCode >= 48 && ev.keyCode <= 57\n      if (!isNumberKeyCode) ev.preventDefault()\n    }\n\n    return {\n      country,\n      isValid,\n      phoneValue,\n      phoneFormat,\n      phonePlaceholder,\n      isBlock,\n      isDisabled,\n      handleSelectCountry,\n      handleCountryChange,\n      handleKeypress,\n      countries\n    }\n  }\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.input-phone {\n  @apply flex items-center;\n  &.--block {\n    @apply w-full;\n  }\n  .input-phone__country,\n  .input-phone__phone-number {\n    @apply rounded-br-lg rounded-tr-lg;\n    border: 1px solid #DDDDDD;\n    border-left: none;\n    padding: 0.75rem 1rem;\n  }\n}\n</style>\n"],"names":["examples","AC","AD","AE","AF","AG","AI","AL","AM","AO","AR","AS","AT","AU","AW","AX","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BL","BM","BN","BO","BQ","BR","BS","BT","BW","BY","BZ","CA","CC","CD","CF","CG","CH","CI","CK","CL","CM","CN","CO","CR","CU","CV","CW","CX","CY","CZ","DE","DJ","DK","DM","DO","DZ","EC","EE","EG","EH","ER","ES","ET","FI","FJ","FK","FM","FO","FR","GA","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GT","GU","GW","GY","HK","HN","HR","HT","HU","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","ME","MF","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PR","PS","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SD","SE","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","SS","ST","SV","SX","SY","SZ","TA","TC","TD","TG","TH","TJ","TK","TL","TM","TN","TO","TR","TT","TV","TW","TZ","UA","UG","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","XK","YE","YT","ZA","ZM","ZW","_sfc_main","defineComponent","name","components","Button","SelectCountry","props","modelValue","type","String","default","country","block","Boolean","label","disabled","countryAutofillSetting","value","autocomplete","staticPosition","placement","emits","[object Object]","emit","me","useUser","phoneValue","ref","rawPhoneValue","isValid","displayCountryName","Intl","DisplayNames","countries","getCountries","map","countryCode","country_code","nicename","of","iso3","phone_code","getPhoneCode","country2","includes","phonePlaceholder","computed","getExampleNumber","formatNational","phoneFormat","newVal","asYouType","AsYouType","defaultCountry","input","_a","getNumber","formatInternational","nationalNumber","isBlock","isDisabled","watch","newNumber","isValidPhone","isValidPhoneNumber","newCountryCode","parsePhoneNumber","err","newValue","onMounted","phoneNumber","defaultCountryCode","getCountryCallingCode","handleSelectCountry","handleCountryChange","selectedCountry","handleKeypress","ev","keyCode","preventDefault","key","_hoisted_2","_hoisted_4","_hoisted_5","class","_hoisted_8","_openBlock","_createElementBlock","_Fragment","_hoisted_1","_toDisplayString","_ctx","_hoisted_3","_createVNode","_component_SelectCountry","selected","onSelect","onChange","static-position","rounded","_withCtx","scoped","_createElementVNode","src","data","toLowerCase","width","option","_hoisted_6","_createCommentVNode","_createTextVNode","_withDirectives","id","onUpdate:modelValue","_cache","$event","placeholder"],"mappings":"yTAGA,IAAeA,EAAA,CAACC,GAAK,QAAQC,GAAK,SAASC,GAAK,YAAYC,GAAK,YAAYC,GAAK,aAAaC,GAAK,aAAaC,GAAK,YAAYC,GAAK,WAAWC,GAAK,YAAYC,GAAK,cAAcC,GAAK,aAAaC,GAAK,YAAYC,GAAK,YAAYC,GAAK,UAAUC,GAAK,YAAYC,GAAK,YAAYC,GAAK,WAAWC,GAAK,aAAaC,GAAK,aAAaC,GAAK,YAAYC,GAAK,WAAWC,GAAK,WAAWC,GAAK,WAAWC,GAAK,WAAWC,GAAK,aAAaC,GAAK,YAAYC,GAAK,aAAaC,GAAK,UAAUC,GAAK,WAAWC,GAAK,UAAUC,GAAK,cAAcC,GAAK,aAAaC,GAAK,WAAWC,GAAK,WAAWC,GAAK,YAAYC,GAAK,UAAUC,GAAK,aAAaC,GAAK,YAAYC,GAAK,YAAYC,GAAK,WAAWC,GAAK,YAAYC,GAAK,YAAYC,GAAK,aAAaC,GAAK,QAAQC,GAAK,YAAYC,GAAK,YAAYC,GAAK,cAAcC,GAAK,aAAaC,GAAK,WAAWC,GAAK,WAAWC,GAAK,UAAUC,GAAK,WAAWC,GAAK,YAAYC,GAAK,WAAWC,GAAK,YAAYC,GAAK,cAAcC,GAAK,WAAWC,GAAK,WAAWC,GAAK,aAAaC,GAAK,aAAaC,GAAK,YAAYC,GAAK,YAAYC,GAAK,WAAWC,GAAK,aAAaC,GAAK,YAAYC,GAAK,UAAUC,GAAK,YAAYC,GAAK,YAAYC,GAAK,YAAYC,GAAK,UAAUC,GAAK,QAAQC,GAAK,UAAUC,GAAK,SAASC,GAAK,YAAYC,GAAK,WAAWC,GAAK,aAAaC,GAAK,aAAaC,GAAK,YAAYC,GAAK,YAAYC,GAAK,aAAaC,GAAK,YAAYC,GAAK,WAAWC,GAAK,SAASC,GAAK,UAAUC,GAAK,YAAYC,GAAK,YAAYC,GAAK,YAAYC,GAAK,aAAaC,GAAK,WAAWC,GAAK,aAAaC,GAAK,YAAYC,GAAK,UAAUC,GAAK,WAAWC,GAAK,WAAWC,GAAK,YAAYC,GAAK,WAAWC,GAAK,YAAYC,GAAK,YAAYC,GAAK,YAAYC,GAAK,YAAYC,GAAK,aAAaC,GAAK,aAAaC,GAAK,UAAUC,GAAK,aAAaC,GAAK,aAAaC,GAAK,UAAUC,GAAK,aAAaC,GAAK,aAAaC,GAAK,aAAaC,GAAK,YAAYC,GAAK,aAAaC,GAAK,YAAYC,GAAK,YAAYC,GAAK,WAAWC,GAAK,WAAWC,GAAK,UAAUC,GAAK,aAAaC,GAAK,aAAaC,GAAK,aAAaC,GAAK,WAAWC,GAAK,aAAaC,GAAK,aAAaC,GAAK,aAAaC,GAAK,WAAWC,GAAK,aAAaC,GAAK,YAAYC,GAAK,YAAYC,GAAK,YAAYC,GAAK,WAAWC,GAAK,WAAWC,GAAK,YAAYC,GAAK,WAAWC,GAAK,YAAYC,GAAK,YAAYC,GAAK,YAAYC,GAAK,WAAWC,GAAK,WAAWC,GAAK,YAAYC,GAAK,YAAYC,GAAK,UAAUC,GAAK,WAAWC,GAAK,WAAWC,GAAK,WAAWC,GAAK,WAAWC,GAAK,WAAWC,GAAK,aAAaC,GAAK,YAAYC,GAAK,WAAWC,GAAK,aAAaC,GAAK,WAAWC,GAAK,WAAWC,GAAK,UAAUC,GAAK,YAAYC,GAAK,aAAaC,GAAK,YAAYC,GAAK,YAAYC,GAAK,YAAYC,GAAK,SAASC,GAAK,WAAWC,GAAK,SAASC,GAAK,aAAaC,GAAK,WAAWC,GAAK,YAAYC,GAAK,WAAWC,GAAK,aAAaC,GAAK,UAAUC,GAAK,UAAUC,GAAK,YAAYC,GAAK,WAAWC,GAAK,WAAWC,GAAK,YAAYC,GAAK,WAAWC,GAAK,WAAWC,GAAK,aAAaC,GAAK,aAAaC,GAAK,YAAYC,GAAK,SAASC,GAAK,aAAaC,GAAK,YAAYC,GAAK,YAAYC,GAAK,UAAUC,GAAK,YAAYC,GAAK,WAAWC,GAAK,YAAYC,GAAK,YAAYC,GAAK,YAAYC,GAAK,aAAaC,GAAK,YAAYC,GAAK,YAAYC,GAAK,UAAUC,GAAK,UAAUC,GAAK,YAAYC,GAAK,YAAYC,GAAK,WAAWC,GAAK,QAAQC,GAAK,WAAWC,GAAK,WAAWC,GAAK,YAAYC,GAAK,WAAWC,GAAK,WAAWC,GAAK,YAAYC,GAAK,WAAWC,GAAK,UAAUC,GAAK,YAAYC,GAAK,UAAUC,GAAK,WAAWC,GAAK,aAAaC,GAAK,YAAYC,GAAK,WAAWC,GAAK,OAAOC,GAAK,aAAaC,GAAK,WAAWC,GAAK,WAAWC,GAAK,YAAYC,GAAK,YAAYC,GAAK,OAAOC,G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"}