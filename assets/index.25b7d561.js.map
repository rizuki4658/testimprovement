{"version":3,"file":"index.25b7d561.js","sources":["../../src/components/ChartConversion.vue","../../src/views/report/conversions-rate/index.vue","../../src/views/report/conversions-rate/index.js"],"sourcesContent":["<template>\n  <div id=\"tooltip-comparison\" class=\"tooltip-comparison\">\n    <small class=\"tooltip-comparison__date\">\n      <slot name=\"tooltip-compare-date\" v-bind=\"comparedData\">\n        <small v-if=\"!!comparedData.data.length\">{{\n          comparedData.data[0]?.date_compared\n        }}</small>\n      </slot>\n    </small>\n    <table class=\"tooltip-comparison-data\">\n      <tr v-for=\"(data, dataIndex) of comparedData.data\" :key=\"dataIndex\">\n        <td>\n          <div\n            class=\"tooltip-comparison-data__label-color\"\n            :style=\"{ backgroundColor: data.color }\"\n          ></div>\n        </td>\n        <td class=\"px-2\">{{ data.source_name }}</td>\n        <td class=\"px-2\">\n          {{ Number(data.current_percentage || 0).toFixed(2) }}%\n        </td>\n        <td>\n          <div\n            :class=\"[\n              'flex',\n              'items-center',\n              'tooltip-comparison-data__trend-label',\n              data.trend === 'dec' && '--down',\n              data.trend === 'inc' && '--up'\n            ]\"\n          >\n            <span>{{ Number(data.percentage || 0).toFixed(0) }}%</span>\n            <i\n              v-if=\"data.trend !== 'eql'\"\n              class=\"material-icons icon-xs ml-1\"\n              >{{ data.trend === 'inc' ? 'arrow_upward' : 'arrow_downward' }}</i\n            >\n          </div>\n        </td>\n      </tr>\n    </table>\n  </div>\n  <div class=\"relative\">\n    <!-- <Button class=\"mt-3\" color=\"teal\" view=\"smooth\" dense @click=\"resetZoom\">Reset Zoom</Button> -->\n    <canvas ref=\"chartRef\" height=\"80\" id=\"charts\"></canvas>\n  </div>\n</template>\n\n<script>\nimport Chart from 'chart.js/auto'\nimport zoomPlugin from 'chartjs-plugin-zoom'\nimport { onMounted, reactive, ref, watch } from 'vue'\nimport { useUser } from 'composable/user'\nimport Button from 'bbUi/components/button/button.vue'\n\nexport default {\n  components: {\n    Button\n  },\n  props: {\n    labels: {\n      type: Array,\n      default: () => []\n    },\n    datasets: {\n      type: Array,\n      default: () => []\n    },\n    type: {\n      default: 'line',\n      type: String\n    },\n    xKey: {\n      type: String,\n      default: ''\n    },\n    yKey: {\n      type: String,\n      default: 'data'\n    },\n    compareKey: {\n      type: String,\n      default: 'comparation'\n    }\n  },\n  setup(props) {\n    const chartRef = ref(null)\n    const { me } = useUser()\n\n    const chartState = {\n      chart: null,\n      props: { ...props }\n    }\n\n    const comparedData = reactive({\n      data: []\n    })\n\n    const getOrCreateTooltip = (chart) => {\n      let tooltipEl = chart.canvas.parentNode.querySelector('div')\n\n      if (!tooltipEl) {\n        tooltipEl = document.createElement('div')\n        tooltipEl.style.background = 'rgba(255, 255, 255, 1)'\n        tooltipEl.style.border = 'solid 1px rgba(0,0,0,0.1)'\n        tooltipEl.style.borderRadius = '10px'\n        tooltipEl.style.boxShadow = '-1px 5px 9px -2px #4a4a4a47'\n        tooltipEl.style.color = 'black'\n        tooltipEl.style.opacity = 1\n        tooltipEl.style.pointerEvents = 'none'\n        tooltipEl.style.position = 'absolute'\n        tooltipEl.style.transform = 'translate(-50%, 0)'\n        tooltipEl.style.transition = 'all .1s ease'\n\n        const table = document.createElement('table')\n        table.style.margin = '0px'\n\n        tooltipEl.appendChild(table)\n        chart.canvas.parentNode.appendChild(tooltipEl)\n      }\n\n      return tooltipEl\n    }\n\n    const externalTooltipHandler = (context) => {\n      // Tooltip Element\n      const { chart, tooltip } = context\n      const tooltipEl = getOrCreateTooltip(chart)\n\n      // Hide if no tooltip\n      if (tooltip.opacity === 0) {\n        tooltipEl.style.opacity = 0\n        return\n      }\n\n      // Set Text\n      if (tooltip.body) {\n        const titleLines = tooltip.title || []\n        // const bodyLines = tooltip.body.map(b => b.lines);\n\n        const tableHead = document.createElement('thead')\n\n        titleLines.forEach((title) => {\n          const tr = document.createElement('tr')\n          tr.style.borderWidth = 0\n\n          const th = document.createElement('th')\n          th.style.borderWidth = 0\n          const text = document.createTextNode(title)\n\n          th.appendChild(text)\n          tr.appendChild(th)\n          tableHead.appendChild(tr)\n        })\n\n        // Empty data\n        comparedData.data = []\n\n        for (let data of tooltip.dataPoints) {\n          const { dataIndex, dataset } = data\n          const comparable = dataset.data[dataIndex][props.compareKey]\n          const comparablePercentage = comparable.value\n          const currentPercentage = dataset.data[dataIndex][props.yKey]\n          const dateCompared = dataset.data[dataIndex].compare_label\n          const trend = comparable.status\n\n          comparedData.data.push({\n            source_name: dataset.label,\n            current_percentage: currentPercentage,\n            percentage: comparablePercentage,\n            color: dataset.borderColor,\n            trend: trend,\n            date_compared: dateCompared\n          })\n        }\n\n        const tooltipComparison = document.getElementById('tooltip-comparison')\n        if (tooltipComparison) {\n          tooltipComparison.classList.add('--show')\n          tooltipEl.appendChild(tooltipComparison)\n        }\n      }\n\n      const { offsetLeft: positionX, offsetTop: positionY } = chart.canvas\n\n      // Display, position, and set styles for font\n      tooltipEl.style.opacity = 1\n      tooltipEl.style.left =\n        chart.canvas.offsetWidth - tooltip.caretX < 300\n          ? positionX +\n            tooltip.caretX -\n            Math.abs(200 - (chart.canvas.offsetWidth - tooltip.caretX)) +\n            'px'\n          : positionX + tooltip.caretX + 100 + 'px'\n      tooltipEl.style.top = positionY + tooltip.caretY + 'px'\n      tooltipEl.style.font = tooltip.options.bodyFont.string\n      tooltipEl.style.padding = 16 + 'px ' + 16 + 'px'\n      tooltipEl.style.zIndex = 999\n    }\n\n    const render = (labels = [], datasets = []) => {\n      if (chartState.chart) {\n        return chartState.chart.update('reset')\n      }\n\n      var gradient = document\n        .getElementById('charts')\n        .getContext('2d')\n        .createLinearGradient(0, 0, 0, 400)\n      gradient.addColorStop(0, '#4ED3BB')\n      gradient.addColorStop(0.5, '#4ED3BB')\n      gradient.addColorStop(1, '#FFFFFF')\n\n      Chart.register(zoomPlugin)\n      Chart.defaults.font.family = \"'Poppins'\"\n      return (chartState.chart = new Chart(chartRef.value.getContext('2d'), {\n        type: chartState.props.type,\n        responsive: false,\n        maintainAspectRatio: false,\n        options: {\n          elements: {\n            point: {\n              radius: 8\n            }\n          },\n          plugins: {\n            legend: {\n              display: false\n            },\n            tooltip: {\n              enabled: false,\n              position: 'nearest',\n              mode: 'index',\n              external: externalTooltipHandler\n            }\n          },\n          scales: {\n            y: {\n              ticks: {\n                callback: (value) => {\n                  return `${value}%`\n                }\n              }\n            }\n          }\n        },\n        data: {\n          labels: labels,\n          datasets: datasets\n        }\n      }))\n    }\n\n    const destroy = () => {\n      if (chartState.chart) {\n        chartState.chart.destroy()\n        chartState.chart = null\n      }\n    }\n\n    watch(\n      () => ({\n        data: props.datasets\n      }),\n      () => {\n        destroy()\n        render(props.labels, props.datasets)\n      },\n      {\n        deep: true\n      }\n    )\n\n    onMounted(() => render(props.labels, props.datasets))\n\n    return {\n      chartRef,\n      comparedData\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.tooltip-comparison {\n  @apply w-80;\n  visibility: hidden;\n  &.--show {\n    visibility: visible;\n  }\n  .tooltip-comparison__date {\n    @apply text-grey-04 mb-4 block;\n  }\n}\n\n.tooltip-comparison-data {\n  .tooltip-comparison-data__label-color {\n    @apply w-2 h-2 p-1 box-content bg-grey-01 rounded-full my-1 mr-2;\n  }\n  .tooltip-comparison-data__trend-label {\n    &.--up {\n      @apply text-green-04;\n    }\n    &.--down {\n      @apply text-red-04;\n    }\n  }\n}\n</style>\n","<template>\n  <div class=\"flex xl:flex-row flex-col justify-between mb-8\">\n    <Breadcrumb\n      pageTitle=\"Conversion and Mail-In Rate\"\n      :backTo=\"{ name: 'report' }\"\n      :items=\"breadcrumb\"\n    />\n  </div>\n  <Card class=\"mb-8\">\n    <div class=\"flex justify-between items-center\">\n      <div>\n        <Tab\n          v-model=\"conversionRateChartFilters.is_mailin\"\n          color=\"teal\"\n          by=\"value\"\n          :items=\"[\n            { name: 'Conversion Rate', value: 0 },\n            { name: 'Mail-In Rate', value: 1 }\n          ]\"\n          component\n        />\n      </div>\n      <div>\n        <GroupContainer>\n          <Dropdown trigger=\"click\" size=\"medium\">\n            <Button\n              color=\"white\"\n              view=\"outlined\"\n              class=\"flex-auto dropdown dropdown-arrow\"\n              ><i class=\"material-icons mr-2\">date_range</i\n              >{{\n                selectedDateRangeOptionChartIndex !== null\n                  ? chartDateRangeOptions[selectedDateRangeOptionChartIndex]\n                      .name\n                  : 'Date Range'\n              }}</Button\n            >\n            <template #dropdown>\n              <DropdownMenu>\n                <div\n                  class=\"px-6 py-4 mb-2 border-b border-grey-01 border-dotted\"\n                >\n                  <small v-if=\"selectedDateRangeOptionChartIndex !== null\">{{\n                    chartDateRangeOptions[selectedDateRangeOptionChartIndex]\n                      .name\n                  }}</small>\n                  <small v-else>Date Range</small>\n                  <p class=\"mt-2\">\n                    {{ formatDatabase(conversionRateChartFilters.from) }} -\n                    {{ formatDatabase(conversionRateChartFilters.to) }}\n                  </p>\n                </div>\n                <DropdownItem\n                  v-for=\"(dateRange, dateRangeIndex) of chartDateRangeOptions\"\n                  :key=\"dateRangeIndex\"\n                  @click=\"handleSelectDateRangeOptionChart(dateRangeIndex)\"\n                  class=\"flex items-center\"\n                >\n                  <i\n                    v-if=\"dateRangeIndex === selectedDateRangeOptionChartIndex\"\n                    class=\"material-icons text-teal-04\"\n                    >check_circle</i\n                  >\n                  {{ dateRange.name }}\n                </DropdownItem>\n                <div\n                  @click=\"chartDatePickerFocus\"\n                  class=\"px-6 py-4 border-t border-grey-01 border-dotted mt-4 cursor-pointer select-none hover:bg-grey-lighten\"\n                >\n                  <DatePicker\n                    style=\"position: absolute; color: rgba(0, 0, 0, 0)\"\n                    @update:model-value=\"chartDatePickerSelected\"\n                    v-bind=\"datePickerOptions\"\n                    type=\"daterange\"\n                    ref=\"refChartDatePicker\"\n                    class=\"hide-picker\"\n                  />\n                  Custom date ranges\n                </div>\n              </DropdownMenu>\n            </template>\n          </Dropdown>\n          <Dropdown trigger=\"click\" size=\"medium\" :hide-on-click=\"false\">\n            <Button\n              :loading=\"loading.chartFilters\"\n              color=\"white\"\n              view=\"outlined\"\n              class=\"flex-auto dropdown dropdown-arrow\"\n              >Source</Button\n            >\n            <template #dropdown>\n              <DropdownMenu>\n                <DropdownItem\n                  v-for=\"(\n                    sourceOption, sourceOptionIndex\n                  ) of stateConversionRateChartFilters?.source || []\"\n                  :key=\"sourceOptionIndex\"\n                >\n                  <Checkbox\n                    v-model=\"conversionRateChartFilters.source\"\n                    :value=\"sourceOption\"\n                    color=\"teal\"\n                    >{{ sourceOption }}</Checkbox\n                  >\n                </DropdownItem>\n              </DropdownMenu>\n            </template>\n          </Dropdown>\n          <Dropdown\n            v-if=\"conversionRateChartFilters.is_mailin == 0\"\n            trigger=\"click\"\n            size=\"medium\"\n            :hide-on-click=\"false\"\n          >\n            <Button\n              :loading=\"loading.chartFilters\"\n              color=\"white\"\n              view=\"outlined\"\n              class=\"flex-auto dropdown dropdown-arrow\"\n              >Item</Button\n            >\n            <template #dropdown>\n              <DropdownMenu>\n                <DropdownItem\n                  v-for=\"(\n                    deviceOption, deviceOptionIndex\n                  ) of stateConversionRateChartFilters?.device || []\"\n                  :key=\"deviceOptionIndex\"\n                >\n                  <Checkbox\n                    v-model=\"conversionRateChartFilters.device\"\n                    :value=\"deviceOption.device\"\n                    color=\"teal\"\n                    >{{ deviceOption.device }}</Checkbox\n                  >\n                </DropdownItem>\n              </DropdownMenu>\n            </template>\n          </Dropdown>\n          <Dropdown\n            v-if=\"conversionRateChartFilters.is_mailin == 0\"\n            trigger=\"click\"\n            size=\"medium\"\n            :hide-on-click=\"false\"\n          >\n            <Button\n              :loading=\"loading.chartFilters\"\n              color=\"white\"\n              view=\"outlined\"\n              class=\"flex-auto dropdown dropdown-arrow\"\n              >Model</Button\n            >\n            <template #dropdown>\n              <DropdownMenu>\n                <div\n                  v-if=\"stateConversionRateChartFilters?.model?.length > 0\"\n                  class=\"p-4\"\n                >\n                  <TreeCheckbox\n                    v-model=\"conversionRateChartFilters.model\"\n                    :items=\"stateConversionRateChartFilters?.model || []\"\n                    by=\"name\"\n                    name=\"name\"\n                  >\n                    <template #default=\"{ item }\"\n                      ><span class=\"font-normal\">{{\n                        item.name\n                      }}</span></template\n                    >\n                  </TreeCheckbox>\n                </div>\n                <div class=\"px-4 py-2\" v-else>\n                  <span>Choose device first</span>\n                </div>\n              </DropdownMenu>\n            </template>\n          </Dropdown>\n        </GroupContainer>\n      </div>\n    </div>\n    <div v-loading=\"loading.chart\">\n      <ChartConversion\n        :datasets=\"datasets\"\n        :labels=\"sourceLabels\"\n      ></ChartConversion>\n    </div>\n  </Card>\n  <Card>\n    <div class=\"flex justify-between\">\n      <div class=\"flex-grow mr-2\">\n        <Input\n          v-model=\"conversionRateFilters.search\"\n          placeholder=\"Search Everything\"\n          block\n          icon\n        >\n          <template #icon>\n            <span class=\"material-icons\">search</span>\n          </template>\n        </Input>\n      </div>\n      <div class=\"flex-grow-0\">\n        <GroupContainer>\n          <Dropdown trigger=\"click\" size=\"medium\" :hide-on-click=\"false\">\n            <Button\n              :loading=\"loading.filters\"\n              color=\"white\"\n              view=\"outlined\"\n              class=\"flex-auto dropdown dropdown-arrow\"\n              >Source</Button\n            >\n            <template #dropdown>\n              <DropdownMenu>\n                <DropdownItem\n                  v-for=\"(\n                    sourceOption, sourceOptionIndex\n                  ) of stateConversionRateFilters?.source || []\"\n                  :key=\"sourceOptionIndex\"\n                >\n                  <Checkbox\n                    v-model=\"conversionRateFilters.source\"\n                    :value=\"sourceOption\"\n                    color=\"teal\"\n                    >{{ sourceOption }}</Checkbox\n                  >\n                </DropdownItem>\n              </DropdownMenu>\n            </template>\n          </Dropdown>\n          <Dropdown trigger=\"click\" size=\"medium\">\n            <Button\n              color=\"white\"\n              view=\"outlined\"\n              class=\"flex-auto dropdown dropdown-arrow\"\n              ><i class=\"material-icons mr-2\">date_range</i\n              >{{\n                selectedDateRangeOptionIndex !== null\n                  ? dateRangeOptions[selectedDateRangeOptionIndex].name\n                  : 'Date Range'\n              }}</Button\n            >\n            <template #dropdown>\n              <DropdownMenu>\n                <div\n                  class=\"px-6 py-4 mb-2 border-b border-grey-01 border-dotted\"\n                >\n                  <small v-if=\"selectedDateRangeOptionIndex !== null\">{{\n                    dateRangeOptions[selectedDateRangeOptionIndex].name\n                  }}</small>\n                  <small v-else>Date Range</small>\n                  <p class=\"mt-2\">\n                    {{ formatDatabase(conversionRateFilters.from) }} -\n                    {{ formatDatabase(conversionRateFilters.to) }}\n                  </p>\n                </div>\n                <DropdownItem\n                  v-for=\"(dateRange, dateRangeIndex) of dateRangeOptions\"\n                  :key=\"dateRangeIndex\"\n                  @click=\"handleSelectDateRangeOption(dateRangeIndex)\"\n                  class=\"flex items-center\"\n                >\n                  <i\n                    v-if=\"dateRangeIndex === selectedDateRangeOptionIndex\"\n                    class=\"material-icons text-teal-04\"\n                    >check_circle</i\n                  >\n                  {{ dateRange.name }}\n                </DropdownItem>\n                <div\n                  @click=\"datePickerFocus\"\n                  class=\"px-6 py-4 border-t border-grey-01 border-dotted mt-4 cursor-pointer select-none hover:bg-grey-lighten\"\n                >\n                  <DatePicker\n                    style=\"position: absolute; color: rgba(0, 0, 0, 0)\"\n                    @update:model-value=\"datePickerSelected\"\n                    v-bind=\"datePickerOptions\"\n                    type=\"daterange\"\n                    ref=\"refDatePicker\"\n                    class=\"hide-picker\"\n                  />\n                  Custom date ranges\n                </div>\n              </DropdownMenu>\n            </template>\n          </Dropdown>\n        </GroupContainer>\n      </div>\n    </div>\n    <div class=\"my-4\">\n      <Table\n        v-loading=\"loading.all\"\n        ref=\"refConversionRateTable\"\n        :data=\"stateDevices\"\n        @expand-change=\"handleExpandChange\"\n        :row-key=\"handleRowKey\"\n      >\n        <TableColumn type=\"expand\">\n          <template #default=\"scope\">\n            <div\n              v-loading=\"loading.device.show.includes(scope.row.device)\"\n              class=\"py-4\"\n            >\n              <div v-if=\"scope.row.detail?.sources\" class=\"w-full\">\n                <small class=\"mb-4 block text-grey-03\">{{\n                  scope.row.detail.compare_label\n                }}</small>\n                <div class=\"conversion-source flex flex-col items-center w-96\">\n                  <div\n                    v-for=\"(source, sourceIndex) of scope.row.detail.sources\"\n                    :key=\"sourceIndex\"\n                    class=\"flex flex-wrap w-full\"\n                  >\n                    <div class=\"flex-grow-0\">\n                      <div\n                        class=\"conversion-source__label-color\"\n                        :style=\"{ backgroundColor: stringToHex(source.name) }\"\n                      ></div>\n                    </div>\n                    <div class=\"flex-grow px-6 w-20 break-words\">\n                      {{ source.name }}\n                    </div>\n                    <div class=\"flex-grow-0\">\n                      <div\n                        :class=\"[\n                          'flex',\n                          'items-center',\n                          'conversion-source__trend-label',\n                          source.detail.comparation.status === 'dec' && '--down',\n                          source.detail.comparation.status === 'inc' && '--up'\n                        ]\"\n                      >\n                        <span class=\"text-black mr-2\">{{ Number(source.detail.data || 0).toFixed(2) }}%</span>\n                        <span>{{ Number(source.detail.comparation.value || 0).toFixed(2) }}%</span>\n                        <i\n                          v-if=\"source.detail.comparation.status !== 'eql'\"\n                          class=\"material-icons icon-xs ml-1\"\n                          >{{\n                            source.detail.comparation.status === 'inc'\n                              ? 'arrow_upward'\n                              : 'arrow_downward'\n                          }}</i\n                        >\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </template>\n        </TableColumn>\n        <TableColumn label=\"Item\" prop=\"device\" />\n        <TableColumn label=\"Average Conversion Rate\">\n          <template #default=\"scope\">\n            {{ Number(scope.row.average_rate || 0).toFixed(2) }}%\n          </template>\n        </TableColumn>\n        <TableColumn label=\"Source\" #default=\"scope\">\n          <Badge class=\"whitespace-nowrap\" color=\"orange\">\n            <div class=\"flex items-center p-1\">\n              {{ scope.row.source }} Resources\n            </div>\n          </Badge>\n        </TableColumn>\n      </Table>\n      <Pagination\n        v-model:page=\"conversionRateFilters.page\"\n        v-model:limit=\"conversionRateFilters.limit\"\n        :data=\"stateConversionRateChart\"\n      />\n    </div>\n  </Card>\n</template>\n\n<script>\nimport { computed, defineComponent, watch, ref } from 'vue'\nimport { formatDatabase } from 'utils/date'\nimport { deepClone } from 'utils/deep-clone'\nimport { stringToHex } from 'utils/string'\nimport debounce from 'utils/debounce'\nimport { useConversionRate } from 'composable/report'\nimport Card from 'bbUi/components/card/card.vue'\nimport Checkbox from 'bbUi/components/checkbox/checkbox.vue'\nimport Input from 'bbUi/components/input/input.vue'\nimport Alert from 'bbUi/components/alert/alert.vue'\nimport Button from 'bbUi/components/button/button.vue'\nimport Pagination from 'components/Pagination.vue'\nimport Badge from 'bbUi/components/badge/badge.vue'\nimport Tab from 'bbUi/components/tab/tab.vue'\nimport Breadcrumb from 'components/Breadcrumb.vue'\nimport GroupContainer from 'bbUi/components/group-container/group-container.vue'\nimport Currency from 'components/Currency.vue'\nimport ChartConversion from 'components/ChartConversion.vue'\nimport TreeCheckbox from 'components/TreeCheckbox.vue'\nimport moment from 'moment'\n\nexport default defineComponent({\n  components: {\n    Card,\n    Checkbox,\n    Input,\n    Alert,\n    Button,\n    Badge,\n    Tab,\n    Breadcrumb,\n    Pagination,\n    GroupContainer,\n    Currency,\n    ChartConversion,\n    TreeCheckbox\n  },\n  async setup(props, { emit }) {\n    const {\n      loading,\n      stateConversionRateChart,\n      stateConversionRateDevices,\n      stateConversionRateChartFilters,\n      stateConversionRateFilters,\n      conversionRateFilters,\n      conversionRateChartFilters,\n      dateRangeOptions,\n      chartDateRangeOptions,\n      datePickerOptions,\n      refDatePicker,\n      selectedDateRangeOptionIndex,\n      setSelectedDateRangeOption,\n      datePickerFocus,\n      datePickerSelected,\n      selectedDateRangeOptionChartIndex,\n      refChartDatePicker,\n      setSelectedDateRangeOptionChart,\n      chartDatePickerFocus,\n      chartDatePickerSelected,\n      actionConversionRateChart,\n      actionConversionRateDevices,\n      actionConversionRateDeviceShow,\n      actionConversionRateChartFilters,\n      actionConversionRateFilters\n    } = useConversionRate()\n    const refConversionRateTable = ref(null)\n    const conversionRateSourceOptions = [\n      {\n        name: 'Flipsy',\n        value: 'flipsy'\n      },\n      {\n        name: 'Google',\n        value: 'google'\n      }\n    ]\n\n    const breadcrumb = [\n      {\n        text: 'Reports',\n        to: {\n          name: 'report'\n        }\n      },\n      {\n        text: 'Conversion and Mail-In Rate'\n      }\n    ]\n    const stateDevices = ref([])\n    const sourceLabels = computed(() =>\n      deepClone(stateConversionRateChart.value.label)\n    )\n    const datasets = computed(() => {\n      const sourceDatasets = Object.entries(\n        deepClone(stateConversionRateChart.value.data)\n      )\n      return sourceDatasets.map((data) => {\n        const [sourceName, dataset] = data\n        const mappedDataset = dataset.map((data) => {\n          return {\n            ...data,\n            y: data?.data,\n            x: data.label\n          }\n        })\n        return {\n          label: `${sourceName} Conversion Rate`,\n          borderColor: stringToHex(sourceName),\n          data: mappedDataset,\n          tension: 0.4\n        }\n      })\n    })\n    const handleSelectDateRangeOption = (optionIndex) => {\n      setSelectedDateRangeOption(optionIndex)\n    }\n    const handleSelectDateRangeOptionChart = (optionIndex) => {\n      setSelectedDateRangeOptionChart(optionIndex)\n    }\n    const handleExpandChange = debounce(async (expandedRow) => {\n      const { device: deviceName, detail, array_sources: arraySources } = expandedRow\n      const isFetchingData = loading.device.show.includes(deviceName)\n      if (isFetchingData || !!detail) return null\n      const matchedIndex = stateDevices.value.findIndex(\n        (data) => data.device === deviceName\n      )\n      if (matchedIndex === -1) return null\n      await actionConversionRateDeviceShow(deviceName, arraySources, (conversionSources) => {\n        stateDevices.value[matchedIndex].detail = {\n          compare_label: conversionSources.compare_label,\n          sources: Object.entries(conversionSources.data).map((source) => {\n            const [sourceName, sourceData] = source\n            return {\n              name: sourceName,\n              detail: sourceData\n            }\n          })\n        }\n      })\n    }, 500)\n    const handleRowKey = (row) => {\n      return row.device\n    }\n    const unexpandRows = () => {\n      refConversionRateTable.value.layout.store.states.expandRows.value = []\n    }\n\n    watch(\n      () => conversionRateChartFilters,\n      debounce(async () => {\n        await actionConversionRateChart()\n      }, 500),\n      {\n        deep: true\n      }\n    )\n    watch(\n      () => conversionRateFilters,\n      debounce(async () => {\n        unexpandRows()\n        await actionConversionRateDevices()\n      }, 500),\n      {\n        deep: true\n      }\n    )\n    watch(\n      () => stateConversionRateDevices,\n      (newData) => {\n        stateDevices.value = deepClone(newData.value.data).map((data) => ({\n          ...data,\n          detail: null\n        }))\n      },\n      {\n        deep: true\n      }\n    )\n    watch(\n      () => ({\n        device: conversionRateChartFilters.device\n      }),\n      debounce(async () => {\n        await actionConversionRateChartFilters()\n      }, 500),\n      {\n        deep: true\n      }\n    )\n    watch(\n      () => conversionRateChartFilters.is_mailin,\n      () => {\n        conversionRateChartFilters.device = []\n        conversionRateChartFilters.model = []\n      }\n    )\n    watch(() => ({search: conversionRateFilters.search, from: conversionRateFilters.from, to: conversionRateFilters.to, source: conversionRateFilters.source}), () => {\n      conversionRateFilters.page = 1\n    }, {\n      deep: true\n    })\n\n    actionConversionRateDevices()\n    actionConversionRateChartFilters()\n    actionConversionRateFilters()\n      \n    await actionConversionRateChart()\n\n    return {\n      refConversionRateTable,\n      refDatePicker,\n      refChartDatePicker,\n      stateConversionRateChart,\n      stateConversionRateChartFilters,\n      stateConversionRateFilters,\n      stateDevices,\n      conversionRateSourceOptions,\n      breadcrumb,\n      sourceLabels,\n      datasets,\n      loading,\n      dateRangeOptions,\n      chartDateRangeOptions,\n      selectedDateRangeOptionIndex,\n      selectedDateRangeOptionChartIndex,\n      datePickerOptions,\n      conversionRateFilters,\n      conversionRateChartFilters,\n      handleSelectDateRangeOption,\n      handleSelectDateRangeOptionChart,\n      datePickerFocus,\n      datePickerSelected,\n      chartDatePickerFocus,\n      chartDatePickerSelected,\n      formatDatabase,\n      moment,\n      handleExpandChange,\n      handleRowKey,\n      stringToHex\n    }\n  }\n})\n</script>\n\n<style lang=\"scss\">\n.conversion-source {\n  .conversion-source__label-color {\n    @apply w-2 h-2 p-1 box-content bg-grey-01 rounded-full;\n  }\n  .conversion-source__trend-label {\n    &.--up {\n      @apply text-green-04;\n    }\n    &.--down {\n      @apply text-red-04;\n    }\n  }\n}\n</style>\n","import { defineComponent } from 'vue'\nimport { useSuspense } from 'composable/components'\nimport index from './index.vue'\n\nexport default defineComponent({\n  setup() {\n    const { genSuspense } = useSuspense()\n    return () => genSuspense(index)\n  }\n})"],"names":["_hoisted_1","id","_hoisted_3","key","_hoisted_4","class","_hoisted_5","ref","height","_sfc_main","defineComponent","components","Card","Checkbox","Input","Alert","Button","Badge","Tab","Breadcrumb","Pagination","GroupContainer","Currency","ChartConversion","props","labels","type","Array","default","datasets","String","xKey","yKey","compareKey","[object Object]","chartRef","useUser","chartState","chart","__spreadValues","comparedData","reactive","data","externalTooltipHandler","context","tooltip","tooltipEl","canvas","parentNode","querySelector","document","createElement","style","background","border","borderRadius","boxShadow","color","opacity","pointerEvents","position","transform","transition","table","margin","appendChild","getOrCreateTooltip","body","titleLines","title","tableHead","forEach","tr","borderWidth","th","text","createTextNode","dataPoints","dataIndex","dataset","comparable","comparablePercentage","value","currentPercentage","dateCompared","compare_label","trend","status","push","source_name","label","current_percentage","percentage","borderColor","date_compared","tooltipComparison","getElementById","classList","add","offsetLeft","positionX","offsetTop","positionY","left","offsetWidth","caretX","Math","abs","top","caretY","font","options","bodyFont","string","padding","zIndex","render","update","gradient","getContext","createLinearGradient","addColorStop","Chart","register","zoomPlugin","defaults","family","responsive","maintainAspectRatio","elements","point","radius","plugins","legend","display","enabled","mode","external","scales","y","ticks","callback","watch","destroy","deep","onMounted","_openBlock","_createElementBlock","_Fragment","_createElementVNode","_hoisted_2","_ctx","$slots","_normalizeProps","_guardReactiveProps","$setup","length","_renderList","_toDisplayString","_hoisted_6","Number","toFixed","TreeCheckbox","emit","loading","stateConversionRateChart","stateConversionRateDevices","stateConversionRateChartFilters","stateConversionRateFilters","conversionRateFilters","conversionRateChartFilters","dateRangeOptions","chartDateRangeOptions","datePickerOptions","refDatePicker","selectedDateRangeOptionIndex","setSelectedDateRangeOption","datePickerFocus","datePickerSelected","selectedDateRangeOptionChartIndex","refChartDatePicker","setSelectedDateRangeOptionChart","chartDatePickerFocus","chartDatePickerSelected","actionConversionRateChart","actionConversionRateDevices","actionConversionRateDeviceShow","actionConversionRateChartFilters","actionConversionRateFilters","useConversionRate","refConversionRateTable","stateDevices","sourceLabels","computed","deepClone","Object","entries","map","sourceName","mappedDataset","data2","__spreadProps","x","stringToHex","tension","handleExpandChange","debounce","async","expandedRow","device","deviceName","detail","array_sources","arraySources","show","includes","matchedIndex","findIndex","conversionSources","sources","source","sourceData","name","layout","store","states","expandRows","newData","is_mailin","model","search","from","to","page","conversionRateSourceOptions","breadcrumb","handleSelectDateRangeOption","optionIndex","handleSelectDateRangeOptionChart","formatDatabase","moment","handleRowKey","row","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_16","_hoisted_19","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_createVNode","_component_Breadcrumb","pageTitle","backTo","_withCtx","_component_Tab","modelValue","onUpdate:modelValue","_cache","$event","by","_component_Dropdown","trigger","dateRange","dateRangeIndex","_createBlock","_component_DropdownItem","onClick","args","_component_DatePicker","_mergeProps","_component_Button","view","_createTextVNode","size","_a","sourceOption","sourceOptionIndex","_component_Checkbox","chartFilters","deviceOption","deviceOptionIndex","_createCommentVNode","_b","_hoisted_8","_component_TreeCheckbox","items","_c","item","_hoisted_10","_component_ChartConversion","_component_Input","placeholder","block","icon","filters","_hoisted_14","_withDirectives","_component_Table","onExpandChange","_component_TableColumn","scope","_hoisted_20","_hoisted_21","sourceIndex","comparation","_hoisted_27","_component_Badge","_component_Pagination","onUpdate:page","limit","onUpdate:limit","index","genSuspense","useSuspense"],"mappings":"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"}